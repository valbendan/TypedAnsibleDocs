{
  "community.fortios.faz_device": {
    "doc": {
      "description": "Add or remove a device or list of devices to FortiAnalyzer Device Manager. ADOM Capable.",
      "has_action": false,
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "device_ip": {
          "aliases": [],
          "description": "The IP of the device being added to FortiAnalyzer.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "device_password": {
          "aliases": [],
          "description": "The password of the device being added to FortiAnalyzer.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "device_serial": {
          "aliases": [],
          "description": "The serial number of the device being added to FortiAnalyzer.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "device_unique_name": {
          "aliases": [],
          "description": "The desired \"friendly\" name of the device being added to FortiAnalyzer.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "device_username": {
          "aliases": [],
          "description": "The username of the device being added to FortiAnalyzer.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "faz_quota": {
          "aliases": [],
          "description": "Specifies the quota for the device in FAZ",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mgmt_mode": {
          "aliases": [],
          "description": "Management Mode of the device you are adding.",
          "type": "str",
          "required": true,
          "choices": [
            "unreg",
            "fmg",
            "faz",
            "fmgfaz"
          ],
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Add or delete devices. Or promote unregistered devices that are in the FortiAnalyzer \"waiting pool\"",
          "default": "add",
          "type": "str",
          "required": false,
          "choices": [
            "add",
            "delete",
            "promote"
          ],
          "suboptions": {}
        },
        "os_minor_vers": {
          "aliases": [],
          "description": "Minor OS rev of the device.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "os_type": {
          "aliases": [],
          "description": "The os type of the device being added (default 0).",
          "type": "str",
          "required": true,
          "choices": [
            "unknown",
            "fos",
            "fsw",
            "foc",
            "fml",
            "faz",
            "fwb",
            "fch",
            "fct",
            "log",
            "fmg",
            "fsa",
            "fdd",
            "fac"
          ],
          "suboptions": {}
        },
        "os_ver": {
          "aliases": [],
          "description": "Major OS rev of the device",
          "type": "str",
          "required": true,
          "choices": [
            "unknown",
            "0.0",
            "1.0",
            "2.0",
            "3.0",
            "4.0",
            "5.0",
            "6.0"
          ],
          "suboptions": {}
        },
        "platform_str": {
          "aliases": [],
          "description": "Required for determine the platform for VM platforms. ie FortiGate-VM64",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Add or remove device"
    },
    "examples": "\n- name: DISCOVER AND ADD DEVICE A PHYSICAL FORTIGATE\n  community.fortios.faz_device:\n    adom: \"root\"\n    device_username: \"admin\"\n    device_password: \"admin\"\n    device_ip: \"10.10.24.201\"\n    device_unique_name: \"FGT1\"\n    device_serial: \"FGVM000000117994\"\n    state: \"present\"\n    mgmt_mode: \"faz\"\n    os_type: \"fos\"\n    os_ver: \"5.0\"\n    minor_rev: 6\n\n\n- name: DISCOVER AND ADD DEVICE A VIRTUAL FORTIGATE\n  community.fortios.faz_device:\n    adom: \"root\"\n    device_username: \"admin\"\n    device_password: \"admin\"\n    device_ip: \"10.10.24.202\"\n    device_unique_name: \"FGT2\"\n    mgmt_mode: \"faz\"\n    os_type: \"fos\"\n    os_ver: \"5.0\"\n    minor_rev: 6\n    state: \"present\"\n    platform_str: \"FortiGate-VM64\"\n\n- name: DELETE DEVICE FGT01\n  community.fortios.faz_device:\n    adom: \"root\"\n    device_unique_name: \"ansible-fgt01\"\n    mode: \"delete\"\n\n- name: DELETE DEVICE FGT02\n  community.fortios.faz_device:\n    adom: \"root\"\n    device_unique_name: \"ansible-fgt02\"\n    mode: \"delete\"\n\n- name: PROMOTE FGT01 IN FAZ BY IP\n  community.fortios.faz_device:\n    adom: \"root\"\n    device_password: \"fortinet\"\n    device_ip: \"10.7.220.151\"\n    device_username: \"ansible\"\n    mgmt_mode: \"faz\"\n    mode: \"promote\"\n\n\n- name: PROMOTE FGT02 IN FAZ\n  community.fortios.faz_device:\n    adom: \"root\"\n    device_password: \"fortinet\"\n    device_unique_name: \"ansible-fgt02\"\n    device_username: \"ansible\"\n    mgmt_mode: \"faz\"\n    mode: \"promote\"\n\n"
  },
  "community.fortios.fmgr_device": {
    "doc": {
      "description": "Add or remove a device or list of devices from FortiManager Device Manager using JSON RPC API.",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": true,
          "suboptions": {}
        },
        "blind_add": {
          "aliases": [],
          "description": "When adding a device, module will check if it exists, and skip if it does.\nIf enabled, this option will stop the module from checking if it already exists, and blindly add the device.",
          "default": "disable",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "device_ip": {
          "aliases": [],
          "description": "The IP of the device being added to FortiManager. Supports both IPv4 and IPv6.",
          "required": false,
          "suboptions": {}
        },
        "device_password": {
          "aliases": [],
          "description": "The password of the device being added to FortiManager.",
          "required": false,
          "suboptions": {}
        },
        "device_serial": {
          "aliases": [],
          "description": "The serial number of the device being added to FortiManager.",
          "required": false,
          "suboptions": {}
        },
        "device_unique_name": {
          "aliases": [],
          "description": "The desired \"friendly\" name of the device being added to FortiManager.",
          "required": false,
          "suboptions": {}
        },
        "device_username": {
          "aliases": [],
          "description": "The username of the device being added to FortiManager.",
          "required": false,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "The desired mode of the specified object.",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "delete"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Add or remove device from FortiManager."
    },
    "examples": "\n- name: DISCOVER AND ADD DEVICE FGT1\n  community.fortios.fmgr_device:\n    adom: \"root\"\n    device_username: \"admin\"\n    device_password: \"admin\"\n    device_ip: \"10.10.24.201\"\n    device_unique_name: \"FGT1\"\n    device_serial: \"FGVM000000117994\"\n    mode: \"add\"\n    blind_add: \"enable\"\n\n- name: DISCOVER AND ADD DEVICE FGT2\n  community.fortios.fmgr_device:\n    adom: \"root\"\n    device_username: \"admin\"\n    device_password: \"admin\"\n    device_ip: \"10.10.24.202\"\n    device_unique_name: \"FGT2\"\n    device_serial: \"FGVM000000117992\"\n    mode: \"delete\"\n"
  },
  "community.fortios.fmgr_device_config": {
    "doc": {
      "description": "Edit device configurations from FortiManager Device Manager using JSON RPC API.",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "device_hostname": {
          "aliases": [],
          "description": "The device's new hostname.",
          "required": false,
          "suboptions": {}
        },
        "device_unique_name": {
          "aliases": [],
          "description": "The unique device's name that you are editing. A.K.A. Friendly name of the device in FortiManager.",
          "required": true,
          "suboptions": {}
        },
        "install_config": {
          "aliases": [],
          "description": "Tells FMGR to attempt to install the config after making it.",
          "default": "disable",
          "required": false,
          "suboptions": {}
        },
        "interface": {
          "aliases": [],
          "description": "The interface/port number you are editing.",
          "required": false,
          "suboptions": {}
        },
        "interface_allow_access": {
          "aliases": [],
          "description": "Specify what protocols are allowed on the interface, comma-separated list (see examples).",
          "required": false,
          "suboptions": {}
        },
        "interface_ip": {
          "aliases": [],
          "description": "The IP and subnet of the interface/port you are editing.",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Edit device configurations"
    },
    "examples": "\n- name: CHANGE HOSTNAME\n  community.fortios.fmgr_device_config:\n    device_hostname: \"ChangedbyAnsible\"\n    device_unique_name: \"FGT1\"\n\n- name: EDIT INTERFACE INFORMATION\n  community.fortios.fmgr_device_config:\n    adom: \"root\"\n    device_unique_name: \"FGT2\"\n    interface: \"port3\"\n    interface_ip: \"10.1.1.1/24\"\n    interface_allow_access: \"ping, telnet, https\"\n\n- name: INSTALL CONFIG\n  community.fortios.fmgr_device_config:\n    adom: \"root\"\n    device_unique_name: \"FGT1\"\n    install_config: \"enable\"\n"
  },
  "community.fortios.fmgr_device_group": {
    "doc": {
      "description": "Add or edit device groups and assign devices to device groups FortiManager Device Manager using JSON RPC API.",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "grp_desc": {
          "aliases": [],
          "description": "The description of the device group.",
          "required": false,
          "suboptions": {}
        },
        "grp_members": {
          "aliases": [],
          "description": "A comma separated list of device names or device groups to be added as members to the device group.\nIf Group Members are defined, and mode=\"delete\", only group members will be removed.\nIf you want to delete a group itself, you must omit this parameter from the task in playbook.",
          "required": false,
          "suboptions": {}
        },
        "grp_name": {
          "aliases": [],
          "description": "The name of the device group.",
          "required": false,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.\nAllows use of soft-adds instead of overwriting existing values",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete",
            "update"
          ],
          "suboptions": {}
        },
        "vdom": {
          "aliases": [],
          "description": "The VDOM of the Fortigate you want to add, must match the device in FMGR. Usually root.",
          "default": "root",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Alter FortiManager device groups."
    },
    "examples": "\n- name: CREATE DEVICE GROUP\n  community.fortios.fmgr_device_group:\n    grp_name: \"TestGroup\"\n    grp_desc: \"CreatedbyAnsible\"\n    adom: \"ansible\"\n    mode: \"add\"\n\n- name: CREATE DEVICE GROUP 2\n  community.fortios.fmgr_device_group:\n    grp_name: \"AnsibleGroup\"\n    grp_desc: \"CreatedbyAnsible\"\n    adom: \"ansible\"\n    mode: \"add\"\n\n- name: ADD DEVICES TO DEVICE GROUP\n  community.fortios.fmgr_device_group:\n    mode: \"add\"\n    grp_name: \"TestGroup\"\n    grp_members: \"FGT1,FGT2\"\n    adom: \"ansible\"\n    vdom: \"root\"\n\n- name: REMOVE DEVICES TO DEVICE GROUP\n  community.fortios.fmgr_device_group:\n    mode: \"delete\"\n    grp_name: \"TestGroup\"\n    grp_members: \"FGT1,FGT2\"\n    adom: \"ansible\"\n\n- name: DELETE DEVICE GROUP\n  community.fortios.fmgr_device_group:\n    grp_name: \"AnsibleGroup\"\n    grp_desc: \"CreatedbyAnsible\"\n    mode: \"delete\"\n    adom: \"ansible\"\n"
  },
  "community.fortios.fmgr_device_provision_template": {
    "doc": {
      "description": "Allows the editing and assignment of device provisioning templates in FortiManager.",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "admin_enable_fortiguard": {
          "aliases": [],
          "description": "Enables FortiGuard security updates to their default settings.",
          "required": false,
          "choices": [
            "none",
            "direct",
            "this-fmg"
          ],
          "suboptions": {}
        },
        "admin_fortianalyzer_target": {
          "aliases": [],
          "description": "Configures faz target.",
          "required": false,
          "suboptions": {}
        },
        "admin_fortiguard_target": {
          "aliases": [],
          "description": "Configures fortiguard target.\nadmin_enable_fortiguard must be set to \"direct\".",
          "required": false,
          "suboptions": {}
        },
        "admin_gui_theme": {
          "aliases": [],
          "description": "Changes the admin gui theme.",
          "required": false,
          "choices": [
            "green",
            "red",
            "blue",
            "melongene",
            "mariner"
          ],
          "suboptions": {}
        },
        "admin_http_port": {
          "aliases": [],
          "description": "Non-SSL admin gui port number.",
          "required": false,
          "suboptions": {}
        },
        "admin_https_port": {
          "aliases": [],
          "description": "SSL admin gui port number.",
          "required": false,
          "suboptions": {}
        },
        "admin_https_redirect": {
          "aliases": [],
          "description": "Enables or disables https redirect from http.",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "admin_language": {
          "aliases": [],
          "description": "Sets the admin gui language.",
          "required": false,
          "choices": [
            "english",
            "simch",
            "japanese",
            "korean",
            "spanish",
            "trach",
            "french",
            "portuguese"
          ],
          "suboptions": {}
        },
        "admin_switch_controller": {
          "aliases": [],
          "description": "Enables or disables the switch controller.",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "admin_timeout": {
          "aliases": [],
          "description": "Admin timeout in minutes.",
          "required": false,
          "suboptions": {}
        },
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "required": true,
          "suboptions": {}
        },
        "delete_provisioning_template": {
          "aliases": [],
          "description": "If specified, all other options are ignored. The specified provisioning template will be deleted.",
          "required": false,
          "suboptions": {}
        },
        "device_unique_name": {
          "aliases": [],
          "description": "The unique device's name that you are editing.",
          "required": true,
          "suboptions": {}
        },
        "dns_primary_ipv4": {
          "aliases": [],
          "description": "primary ipv4 dns forwarder.",
          "required": false,
          "suboptions": {}
        },
        "dns_secondary_ipv4": {
          "aliases": [],
          "description": "secondary ipv4 dns forwarder.",
          "required": false,
          "suboptions": {}
        },
        "dns_suffix": {
          "aliases": [],
          "description": "Sets the local dns domain suffix.",
          "required": false,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.\nAllows use of soft-adds instead of overwriting existing values.",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete",
            "update"
          ],
          "suboptions": {}
        },
        "ntp_auth": {
          "aliases": [],
          "description": "Enables or disables ntp authentication.",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "ntp_auth_pwd": {
          "aliases": [],
          "description": "Sets the ntp auth password.",
          "required": false,
          "suboptions": {}
        },
        "ntp_server": {
          "aliases": [],
          "description": "Only used with custom ntp_type -- specifies IP of server to sync to -- comma separated ip addresses for multiples.",
          "required": false,
          "suboptions": {}
        },
        "ntp_status": {
          "aliases": [],
          "description": "Enables or disables ntp.",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "ntp_sync_interval": {
          "aliases": [],
          "description": "Sets the interval in minutes for ntp sync.",
          "required": false,
          "suboptions": {}
        },
        "ntp_type": {
          "aliases": [],
          "description": "Enables fortiguard servers or custom servers are the ntp source.",
          "required": false,
          "choices": [
            "fortiguard",
            "custom"
          ],
          "suboptions": {}
        },
        "ntp_v3": {
          "aliases": [],
          "description": "Enables or disables ntpv3 (default is ntpv4).",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "provision_targets": {
          "aliases": [],
          "description": "The friendly names of devices in FortiManager to assign the provisioning template to. CSV separated list.",
          "required": true,
          "suboptions": {}
        },
        "provisioning_template": {
          "aliases": [],
          "description": "The provisioning template you want to apply (default = default).",
          "required": true,
          "suboptions": {}
        },
        "smtp_conn_sec": {
          "aliases": [],
          "description": "defines the ssl level for smtp.",
          "required": false,
          "choices": [
            "none",
            "starttls",
            "smtps"
          ],
          "suboptions": {}
        },
        "smtp_password": {
          "aliases": [],
          "description": "SMTP password.",
          "required": false,
          "suboptions": {}
        },
        "smtp_port": {
          "aliases": [],
          "description": "SMTP port number.",
          "required": false,
          "suboptions": {}
        },
        "smtp_replyto": {
          "aliases": [],
          "description": "SMTP reply to address.",
          "required": false,
          "suboptions": {}
        },
        "smtp_server": {
          "aliases": [],
          "description": "SMTP server ipv4 address.",
          "required": false,
          "suboptions": {}
        },
        "smtp_source_ipv4": {
          "aliases": [],
          "description": "SMTP source ip address.",
          "required": false,
          "suboptions": {}
        },
        "smtp_username": {
          "aliases": [],
          "description": "SMTP auth username.",
          "required": false,
          "suboptions": {}
        },
        "smtp_validate_cert": {
          "aliases": [],
          "description": "Enables or disables valid certificate checking for smtp.",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "snmp_status": {
          "aliases": [],
          "description": "Enables or disables SNMP globally.",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "snmp_v2c_id": {
          "aliases": [],
          "description": "Primary key for the snmp community. this must be unique!",
          "required": false,
          "suboptions": {}
        },
        "snmp_v2c_name": {
          "aliases": [],
          "description": "Specifies the v2c community name.",
          "required": false,
          "suboptions": {}
        },
        "snmp_v2c_query_hosts_ipv4": {
          "aliases": [],
          "description": "- IPv4 addresses or subnets that are allowed to query SNMP v2c, comma separated (\"10.7.220.59 255.255.255.0, 10.7.220.0 255.255.255.0\").\n",
          "required": false,
          "suboptions": {}
        },
        "snmp_v2c_query_port": {
          "aliases": [],
          "description": "Sets the snmp v2c community query port.",
          "required": false,
          "suboptions": {}
        },
        "snmp_v2c_query_status": {
          "aliases": [],
          "description": "Enables or disables the v2c community specified for queries.",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "snmp_v2c_status": {
          "aliases": [],
          "description": "Enables or disables the v2c community specified.",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "snmp_v2c_trap_hosts_ipv4": {
          "aliases": [],
          "description": "- IPv4 addresses of the hosts that should get SNMP v2c traps, comma separated, must include mask (\"10.7.220.59 255.255.255.255, 10.7.220.60 255.255.255.255\").\n",
          "required": false,
          "suboptions": {}
        },
        "snmp_v2c_trap_port": {
          "aliases": [],
          "description": "Sets the snmp v2c community trap port.",
          "required": false,
          "suboptions": {}
        },
        "snmp_v2c_trap_src_ipv4": {
          "aliases": [],
          "description": "Source ip the traps should come from IPv4.",
          "required": false,
          "suboptions": {}
        },
        "snmp_v2c_trap_status": {
          "aliases": [],
          "description": "Enables or disables the v2c community specified for traps.",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "snmpv3_auth_proto": {
          "aliases": [],
          "description": "SNMPv3 auth protocol.",
          "required": false,
          "choices": [
            "md5",
            "sha"
          ],
          "suboptions": {}
        },
        "snmpv3_auth_pwd": {
          "aliases": [],
          "description": "SNMPv3 auth pwd __ currently not encrypted! ensure this file is locked down permissions wise!",
          "required": false,
          "suboptions": {}
        },
        "snmpv3_name": {
          "aliases": [],
          "description": "SNMPv3 user name.",
          "required": false,
          "suboptions": {}
        },
        "snmpv3_notify_hosts": {
          "aliases": [],
          "description": "List of ipv4 hosts to send snmpv3 traps to. Comma separated IPv4 list.",
          "required": false,
          "suboptions": {}
        },
        "snmpv3_priv_proto": {
          "aliases": [],
          "description": "SNMPv3 priv protocol.",
          "required": false,
          "choices": [
            "aes",
            "des",
            "aes256",
            "aes256cisco"
          ],
          "suboptions": {}
        },
        "snmpv3_priv_pwd": {
          "aliases": [],
          "description": "SNMPv3 priv pwd currently not encrypted! ensure this file is locked down permissions wise!",
          "required": false,
          "suboptions": {}
        },
        "snmpv3_queries": {
          "aliases": [],
          "description": "Allow snmpv3_queries.",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "snmpv3_query_port": {
          "aliases": [],
          "description": "SNMPv3 query port.",
          "required": false,
          "suboptions": {}
        },
        "snmpv3_security_level": {
          "aliases": [],
          "description": "SNMPv3 security level.",
          "required": false,
          "choices": [
            "no-auth-no-priv",
            "auth-no-priv",
            "auth-priv"
          ],
          "suboptions": {}
        },
        "snmpv3_source_ip": {
          "aliases": [],
          "description": "SNMPv3 source ipv4 address for traps.",
          "required": false,
          "suboptions": {}
        },
        "snmpv3_status": {
          "aliases": [],
          "description": "SNMPv3 user is enabled or disabled.",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "snmpv3_trap_rport": {
          "aliases": [],
          "description": "SNMPv3 trap remote port.",
          "required": false,
          "suboptions": {}
        },
        "snmpv3_trap_status": {
          "aliases": [],
          "description": "SNMPv3 traps is enabled or disabled.",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "syslog_certificate": {
          "aliases": [],
          "description": "Certificate used to communicate with Syslog server if encryption on.",
          "required": false,
          "suboptions": {}
        },
        "syslog_enc_algorithm": {
          "aliases": [],
          "description": "Enable/disable reliable syslogging with TLS encryption.\nchoice | high | SSL communication with high encryption algorithms.\nchoice | low | SSL communication with low encryption algorithms.\nchoice | disable | Disable SSL communication.\nchoice | high-medium | SSL communication with high and medium encryption algorithms.",
          "default": "disable",
          "required": false,
          "choices": [
            "high",
            "low",
            "disable",
            "high-medium"
          ],
          "suboptions": {}
        },
        "syslog_facility": {
          "aliases": [],
          "description": "Remote syslog facility.\nchoice | kernel | Kernel messages.\nchoice | user | Random user-level messages.\nchoice | mail | Mail system.\nchoice | daemon | System daemons.\nchoice | auth | Security/authorization messages.\nchoice | syslog | Messages generated internally by syslog.\nchoice | lpr | Line printer subsystem.\nchoice | news | Network news subsystem.\nchoice | uucp | Network news subsystem.\nchoice | cron | Clock daemon.\nchoice | authpriv | Security/authorization messages (private).\nchoice | ftp | FTP daemon.\nchoice | ntp | NTP daemon.\nchoice | audit | Log audit.\nchoice | alert | Log alert.\nchoice | clock | Clock daemon.\nchoice | local0 | Reserved for local use.\nchoice | local1 | Reserved for local use.\nchoice | local2 | Reserved for local use.\nchoice | local3 | Reserved for local use.\nchoice | local4 | Reserved for local use.\nchoice | local5 | Reserved for local use.\nchoice | local6 | Reserved for local use.\nchoice | local7 | Reserved for local use.",
          "default": "syslog",
          "required": false,
          "choices": [
            "kernel",
            "user",
            "mail",
            "daemon",
            "auth",
            "syslog",
            "lpr",
            "news",
            "uucp",
            "cron",
            "authpriv",
            "ftp",
            "ntp",
            "audit",
            "alert",
            "clock",
            "local0",
            "local1",
            "local2",
            "local3",
            "local4",
            "local5",
            "local6",
            "local7"
          ],
          "suboptions": {}
        },
        "syslog_filter": {
          "aliases": [],
          "description": "Sets the logging level for syslog.",
          "required": false,
          "choices": [
            "emergency",
            "alert",
            "critical",
            "error",
            "warning",
            "notification",
            "information",
            "debug"
          ],
          "suboptions": {}
        },
        "syslog_mode": {
          "aliases": [],
          "description": "Remote syslog logging over UDP/Reliable TCP.\nchoice | udp | Enable syslogging over UDP.\nchoice | legacy-reliable | Enable legacy reliable syslogging by RFC3195 (Reliable Delivery for Syslog).\nchoice | reliable | Enable reliable syslogging by RFC6587 (Transmission of Syslog Messages over TCP).",
          "default": "udp",
          "required": false,
          "choices": [
            "udp",
            "legacy-reliable",
            "reliable"
          ],
          "suboptions": {}
        },
        "syslog_port": {
          "aliases": [],
          "description": "Syslog port that will be set.",
          "required": false,
          "suboptions": {}
        },
        "syslog_server": {
          "aliases": [],
          "description": "Server the syslogs will be sent to.",
          "required": false,
          "suboptions": {}
        },
        "syslog_status": {
          "aliases": [],
          "description": "Enables or disables syslogs.",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages Device Provisioning Templates in FortiManager."
    },
    "examples": "\n- name: SET SNMP SYSTEM INFO\n  community.fortios.fmgr_device_provision_template:\n    provisioning_template: \"default\"\n    snmp_status: \"enable\"\n    mode: \"set\"\n\n- name: SET SNMP SYSTEM INFO ANSIBLE ADOM\n  community.fortios.fmgr_device_provision_template:\n    provisioning_template: \"default\"\n    snmp_status: \"enable\"\n    mode: \"set\"\n    adom: \"ansible\"\n\n- name: SET SNMP SYSTEM INFO different template (SNMPv2)\n  community.fortios.fmgr_device_provision_template:\n    provisioning_template: \"ansibleTest\"\n    snmp_status: \"enable\"\n    mode: \"set\"\n    adom: \"ansible\"\n    snmp_v2c_query_port: \"162\"\n    snmp_v2c_trap_port: \"161\"\n    snmp_v2c_status: \"enable\"\n    snmp_v2c_trap_status: \"enable\"\n    snmp_v2c_query_status: \"enable\"\n    snmp_v2c_name: \"ansibleV2c\"\n    snmp_v2c_id: \"1\"\n    snmp_v2c_trap_src_ipv4: \"10.7.220.41\"\n    snmp_v2c_trap_hosts_ipv4: \"10.7.220.59 255.255.255.255, 10.7.220.60 255.255.255.255\"\n    snmp_v2c_query_hosts_ipv4: \"10.7.220.59 255.255.255.255, 10.7.220.0 255.255.255.0\"\n\n- name: SET SNMP SYSTEM INFO different template (SNMPv3)\n  community.fortios.fmgr_device_provision_template:\n    provisioning_template: \"ansibleTest\"\n    snmp_status: \"enable\"\n    mode: \"set\"\n    adom: \"ansible\"\n    snmpv3_auth_proto: \"sha\"\n    snmpv3_auth_pwd: \"fortinet\"\n    snmpv3_name: \"ansibleSNMPv3\"\n    snmpv3_notify_hosts: \"10.7.220.59,10.7.220.60\"\n    snmpv3_priv_proto: \"aes256\"\n    snmpv3_priv_pwd: \"fortinet\"\n    snmpv3_queries: \"enable\"\n    snmpv3_query_port: \"161\"\n    snmpv3_security_level: \"auth_priv\"\n    snmpv3_source_ip: \"0.0.0.0\"\n    snmpv3_status: \"enable\"\n    snmpv3_trap_rport: \"162\"\n    snmpv3_trap_status: \"enable\"\n\n- name: SET SYSLOG INFO\n  community.fortios.fmgr_device_provision_template:\n    provisioning_template: \"ansibleTest\"\n    mode: \"set\"\n    adom: \"ansible\"\n    syslog_server: \"10.7.220.59\"\n    syslog_port: \"514\"\n    syslog_mode: \"disable\"\n    syslog_status: \"enable\"\n    syslog_filter: \"information\"\n\n- name: SET NTP TO FORTIGUARD\n  community.fortios.fmgr_device_provision_template:\n    provisioning_template: \"ansibleTest\"\n    mode: \"set\"\n    adom: \"ansible\"\n    ntp_status: \"enable\"\n    ntp_sync_interval: \"60\"\n    type: \"fortiguard\"\n\n- name: SET NTP TO CUSTOM SERVER\n  community.fortios.fmgr_device_provision_template:\n    provisioning_template: \"ansibleTest\"\n    mode: \"set\"\n    adom: \"ansible\"\n    ntp_status: \"enable\"\n    ntp_sync_interval: \"60\"\n    ntp_type: \"custom\"\n    ntp_server: \"10.7.220.32,10.7.220.1\"\n    ntp_auth: \"enable\"\n    ntp_auth_pwd: \"fortinet\"\n    ntp_v3: \"disable\"\n\n- name: SET ADMIN GLOBAL SETTINGS\n  community.fortios.fmgr_device_provision_template:\n    provisioning_template: \"ansibleTest\"\n    mode: \"set\"\n    adom: \"ansible\"\n    admin_https_redirect: \"enable\"\n    admin_https_port: \"4433\"\n    admin_http_port: \"8080\"\n    admin_timeout: \"30\"\n    admin_language: \"english\"\n    admin_switch_controller: \"enable\"\n    admin_gui_theme: \"blue\"\n    admin_enable_fortiguard: \"direct\"\n    admin_fortiguard_target: \"10.7.220.128\"\n    admin_fortianalyzer_target: \"10.7.220.61\"\n\n- name: SET CUSTOM SMTP SERVER\n  community.fortios.fmgr_device_provision_template:\n    provisioning_template: \"ansibleTest\"\n    mode: \"set\"\n    adom: \"ansible\"\n    smtp_username: \"ansible\"\n    smtp_password: \"fortinet\"\n    smtp_port: \"25\"\n    smtp_replyto: \"ansible@do-not-reply.com\"\n    smtp_conn_sec: \"starttls\"\n    smtp_server: \"10.7.220.32\"\n    smtp_source_ipv4: \"0.0.0.0\"\n    smtp_validate_cert: \"disable\"\n\n- name: SET DNS SERVERS\n  community.fortios.fmgr_device_provision_template:\n    provisioning_template: \"ansibleTest\"\n    mode: \"set\"\n    adom: \"ansible\"\n    dns_suffix: \"ansible.local\"\n    dns_primary_ipv4: \"8.8.8.8\"\n    dns_secondary_ipv4: \"4.4.4.4\"\n\n- name: SET PROVISIONING TEMPLATE DEVICE TARGETS IN FORTIMANAGER\n  community.fortios.fmgr_device_provision_template:\n    provisioning_template: \"ansibleTest\"\n    mode: \"set\"\n    adom: \"ansible\"\n    provision_targets: \"FGT1, FGT2\"\n\n- name: DELETE ENTIRE PROVISIONING TEMPLATE\n  community.fortios.fmgr_device_provision_template:\n    delete_provisioning_template: \"ansibleTest\"\n    mode: \"delete\"\n    adom: \"ansible\"\n\n"
  },
  "community.fortios.fmgr_fwobj_address": {
    "doc": {
      "description": "Allows for the management of IPv4, IPv6, and multicast address objects within FortiManager.",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "allow_routing": {
          "aliases": [],
          "description": "Enable/disable use of this address in the static route configuration.",
          "default": "disable",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "associated_interface": {
          "aliases": [],
          "description": "Associated interface name.",
          "required": false,
          "suboptions": {}
        },
        "cache_ttl": {
          "aliases": [],
          "description": "Minimal TTL of individual IP addresses in FQDN cache. Only applies when type = wildcard-fqdn.",
          "required": false,
          "suboptions": {}
        },
        "color": {
          "aliases": [],
          "description": "Color of the object in FortiManager GUI.\nTakes integers 1-32",
          "default": "22",
          "required": false,
          "suboptions": {}
        },
        "comment": {
          "aliases": [],
          "description": "Comment for the object in FortiManager.",
          "required": false,
          "suboptions": {}
        },
        "country": {
          "aliases": [],
          "description": "Country name. Required if type = geographic.",
          "required": false,
          "suboptions": {}
        },
        "end_ip": {
          "aliases": [],
          "description": "End IP. Only used when ipv4 = iprange.",
          "required": false,
          "suboptions": {}
        },
        "fqdn": {
          "aliases": [],
          "description": "Fully qualified domain name.",
          "required": false,
          "suboptions": {}
        },
        "group_members": {
          "aliases": [],
          "description": "Address group member. If this is defined w/out group_name, the operation will fail.",
          "required": false,
          "suboptions": {}
        },
        "group_name": {
          "aliases": [],
          "description": "Address group name. If this is defined in playbook task, all other options are ignored.",
          "required": false,
          "suboptions": {}
        },
        "ipv4": {
          "aliases": [],
          "description": "Type of IPv4 Object.\nMust not be specified with either multicast or IPv6 parameters.",
          "required": false,
          "choices": [
            "ipmask",
            "iprange",
            "fqdn",
            "wildcard",
            "geography",
            "wildcard-fqdn",
            "group"
          ],
          "suboptions": {}
        },
        "ipv4addr": {
          "aliases": [],
          "description": "IP and network mask. If only defining one IP use this parameter. (i.e. 10.7.220.30/255.255.255.255)\nCan also define subnets (i.e. 10.7.220.0/255.255.255.0)\nAlso accepts CIDR (i.e. 10.7.220.0/24)\nIf Netmask is omitted after IP address, /32 is assumed.\nWhen multicast is set to Broadcast Subnet the ipv4addr parameter is used to specify the subnet.",
          "required": false,
          "suboptions": {}
        },
        "ipv6": {
          "aliases": [],
          "description": "Puts module into IPv6 mode.\nMust not be specified with either ipv4 or multicast parameters.",
          "required": false,
          "choices": [
            "ip",
            "iprange",
            "group"
          ],
          "suboptions": {}
        },
        "ipv6addr": {
          "aliases": [],
          "description": "IPv6 address in full. (i.e. 2001:0db8:85a3:0000:0000:8a2e:0370:7334)",
          "required": false,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete"
          ],
          "suboptions": {}
        },
        "multicast": {
          "aliases": [],
          "description": "Manages Multicast Address Objects.\nSets either a Multicast IP Range or a Broadcast Subnet.\nMust not be specified with either ipv4 or ipv6 parameters.\nWhen set to Broadcast Subnet the ipv4addr parameter is used to specify the subnet.\nCan create IPv4 Multicast Objects (multicastrange and broadcastmask options -- uses start/end-ip and ipv4addr).",
          "required": false,
          "choices": [
            "multicastrange",
            "broadcastmask",
            "ip6"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Friendly Name Address object name in FortiManager.",
          "required": false,
          "suboptions": {}
        },
        "obj_id": {
          "aliases": [],
          "description": "Object ID for NSX.",
          "required": false,
          "suboptions": {}
        },
        "start_ip": {
          "aliases": [],
          "description": "Start IP. Only used when ipv4 = iprange.",
          "required": false,
          "suboptions": {}
        },
        "visibility": {
          "aliases": [],
          "description": "Enable/disable address visibility.",
          "default": "enable",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "wildcard": {
          "aliases": [],
          "description": "IP address and wildcard netmask. Required if ipv4 = wildcard.",
          "required": false,
          "suboptions": {}
        },
        "wildcard_fqdn": {
          "aliases": [],
          "description": "Wildcard FQDN. Required if ipv4 = wildcard-fqdn.",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Allows the management of firewall objects in FortiManager"
    },
    "examples": "\n- name: ADD IPv4 IP ADDRESS OBJECT\n  community.fortios.fmgr_fwobj_address:\n    ipv4: \"ipmask\"\n    ipv4addr: \"10.7.220.30/32\"\n    name: \"ansible_v4Obj\"\n    comment: \"Created by Ansible\"\n    color: \"6\"\n\n- name: ADD IPv4 IP ADDRESS OBJECT MORE OPTIONS\n  community.fortios.fmgr_fwobj_address:\n    ipv4: \"ipmask\"\n    ipv4addr: \"10.7.220.34/32\"\n    name: \"ansible_v4Obj_MORE\"\n    comment: \"Created by Ansible\"\n    color: \"6\"\n    allow_routing: \"enable\"\n    cache_ttl: \"180\"\n    associated_interface: \"port1\"\n    obj_id: \"123\"\n\n- name: ADD IPv4 IP ADDRESS SUBNET OBJECT\n  community.fortios.fmgr_fwobj_address:\n    ipv4: \"ipmask\"\n    ipv4addr: \"10.7.220.0/255.255.255.128\"\n    name: \"ansible_subnet\"\n    comment: \"Created by Ansible\"\n    mode: \"set\"\n\n- name: ADD IPv4 IP ADDRESS RANGE OBJECT\n  community.fortios.fmgr_fwobj_address:\n    ipv4: \"iprange\"\n    start_ip: \"10.7.220.1\"\n    end_ip: \"10.7.220.125\"\n    name: \"ansible_range\"\n    comment: \"Created by Ansible\"\n\n- name: ADD IPv4 IP ADDRESS WILDCARD OBJECT\n  community.fortios.fmgr_fwobj_address:\n    ipv4: \"wildcard\"\n    wildcard: \"10.7.220.30/255.255.255.255\"\n    name: \"ansible_wildcard\"\n    comment: \"Created by Ansible\"\n\n- name: ADD IPv4 IP ADDRESS WILDCARD FQDN OBJECT\n  community.fortios.fmgr_fwobj_address:\n    ipv4: \"wildcard-fqdn\"\n    wildcard_fqdn: \"*.myds.com\"\n    name: \"Synology myds DDNS service\"\n    comment: \"Created by Ansible\"\n\n- name: ADD IPv4 IP ADDRESS FQDN OBJECT\n  community.fortios.fmgr_fwobj_address:\n    ipv4: \"fqdn\"\n    fqdn: \"ansible.com\"\n    name: \"ansible_fqdn\"\n    comment: \"Created by Ansible\"\n\n- name: ADD IPv4 IP ADDRESS GEO OBJECT\n  community.fortios.fmgr_fwobj_address:\n    ipv4: \"geography\"\n    country: \"usa\"\n    name: \"ansible_geo\"\n    comment: \"Created by Ansible\"\n\n- name: ADD IPv6 ADDRESS\n  community.fortios.fmgr_fwobj_address:\n    ipv6: \"ip\"\n    ipv6addr: \"2001:0db8:85a3:0000:0000:8a2e:0370:7334\"\n    name: \"ansible_v6Obj\"\n    comment: \"Created by Ansible\"\n\n- name: ADD IPv6 ADDRESS RANGE\n  community.fortios.fmgr_fwobj_address:\n    ipv6: \"iprange\"\n    start_ip: \"2001:0db8:85a3:0000:0000:8a2e:0370:7334\"\n    end_ip: \"2001:0db8:85a3:0000:0000:8a2e:0370:7446\"\n    name: \"ansible_v6range\"\n    comment: \"Created by Ansible\"\n\n- name: ADD IPv4 IP ADDRESS GROUP\n  community.fortios.fmgr_fwobj_address:\n    ipv4: \"group\"\n    group_name: \"ansibleIPv4Group\"\n    group_members: \"ansible_fqdn, ansible_wildcard, ansible_range\"\n\n- name: ADD IPv6 IP ADDRESS GROUP\n  community.fortios.fmgr_fwobj_address:\n    ipv6: \"group\"\n    group_name: \"ansibleIPv6Group\"\n    group_members: \"ansible_v6Obj, ansible_v6range\"\n\n- name: ADD MULTICAST RANGE\n  community.fortios.fmgr_fwobj_address:\n    multicast: \"multicastrange\"\n    start_ip: \"224.0.0.251\"\n    end_ip: \"224.0.0.251\"\n    name: \"ansible_multicastrange\"\n    comment: \"Created by Ansible\"\n\n- name: ADD BROADCAST SUBNET\n  community.fortios.fmgr_fwobj_address:\n    multicast: \"broadcastmask\"\n    ipv4addr: \"10.7.220.0/24\"\n    name: \"ansible_broadcastSubnet\"\n    comment: \"Created by Ansible\"\n"
  },
  "community.fortios.fmgr_fwobj_ippool": {
    "doc": {
      "description": "Allows users to add/edit/delete IP Pool Objects.",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "arp_intf": {
          "aliases": [],
          "description": "Select an interface from available options that will reply to ARP requests. (If blank, any is selected).",
          "required": false,
          "suboptions": {}
        },
        "arp_reply": {
          "aliases": [],
          "description": "Enable/disable replying to ARP requests when an IP Pool is added to a policy (default = enable).\nchoice | disable | Disable ARP reply.\nchoice | enable | Enable ARP reply.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "associated_interface": {
          "aliases": [],
          "description": "Associated interface name.",
          "required": false,
          "suboptions": {}
        },
        "block_size": {
          "aliases": [],
          "description": "Number of addresses in a block (64 to 4096, default = 128).",
          "required": false,
          "suboptions": {}
        },
        "comments": {
          "aliases": [],
          "description": "Comment.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameter.ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_arp_intf": {
          "aliases": [],
          "description": "Dynamic Mapping clone of original suffixed parameter.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_arp_reply": {
          "aliases": [],
          "description": "Dynamic Mapping clone of original suffixed parameter.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_associated_interface": {
          "aliases": [],
          "description": "Dynamic Mapping clone of original suffixed parameter.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_block_size": {
          "aliases": [],
          "description": "Dynamic Mapping clone of original suffixed parameter.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_comments": {
          "aliases": [],
          "description": "Dynamic Mapping clone of original suffixed parameter.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_endip": {
          "aliases": [],
          "description": "Dynamic Mapping clone of original suffixed parameter.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_num_blocks_per_user": {
          "aliases": [],
          "description": "Dynamic Mapping clone of original suffixed parameter.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_pba_timeout": {
          "aliases": [],
          "description": "Dynamic Mapping clone of original suffixed parameter.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_permit_any_host": {
          "aliases": [],
          "description": "Dynamic Mapping clone of original suffixed parameter.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_source_endip": {
          "aliases": [],
          "description": "Dynamic Mapping clone of original suffixed parameter.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_source_startip": {
          "aliases": [],
          "description": "Dynamic Mapping clone of original suffixed parameter.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_startip": {
          "aliases": [],
          "description": "Dynamic Mapping clone of original suffixed parameter.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_type": {
          "aliases": [],
          "description": "Dynamic Mapping clone of original suffixed parameter.",
          "required": false,
          "choices": [
            "overload",
            "one-to-one",
            "fixed-port-range",
            "port-block-allocation"
          ],
          "suboptions": {}
        },
        "endip": {
          "aliases": [],
          "description": "Final IPv4 address (inclusive) in the range for the address pool (format xxx.xxx.xxx.xxx, Default| 0.0.0.0).",
          "required": false,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.\nAllows use of soft-adds instead of overwriting existing values",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete",
            "update"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "IP pool name.",
          "required": false,
          "suboptions": {}
        },
        "num_blocks_per_user": {
          "aliases": [],
          "description": "Number of addresses blocks that can be used by a user (1 to 128, default = 8).",
          "required": false,
          "suboptions": {}
        },
        "pba_timeout": {
          "aliases": [],
          "description": "Port block allocation timeout (seconds).",
          "required": false,
          "suboptions": {}
        },
        "permit_any_host": {
          "aliases": [],
          "description": "Enable/disable full cone NAT.\nchoice | disable | Disable full cone NAT.\nchoice | enable | Enable full cone NAT.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "source_endip": {
          "aliases": [],
          "description": "Final IPv4 address (inclusive) in the range of the source addresses to be translated (format xxx.xxx.xxx.xxx, Default| 0.0.0.0).",
          "required": false,
          "suboptions": {}
        },
        "source_startip": {
          "aliases": [],
          "description": "First IPv4 address (inclusive) in the range of the source addresses to be translated (format xxx.xxx.xxx.xxx, Default| 0.0.0.0).",
          "required": false,
          "suboptions": {}
        },
        "startip": {
          "aliases": [],
          "description": "First IPv4 address (inclusive) in the range for the address pool (format xxx.xxx.xxx.xxx, Default| 0.0.0.0).",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "IP pool type (overload, one-to-one, fixed port range, or port block allocation).\nchoice | overload | IP addresses in the IP pool can be shared by clients.\nchoice | one-to-one | One to one mapping.\nchoice | fixed-port-range | Fixed port range.\nchoice | port-block-allocation | Port block allocation.",
          "required": false,
          "choices": [
            "overload",
            "one-to-one",
            "fixed-port-range",
            "port-block-allocation"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Allows the editing of IP Pool Objects within FortiManager."
    },
    "examples": "\n- name: ADD FMGR_FIREWALL_IPPOOL Overload\n  community.fortios.fmgr_fwobj_ippool:\n    mode: \"add\"\n    adom: \"ansible\"\n    name: \"Ansible_pool4_overload\"\n    comments: \"Created by ansible\"\n    type: \"overload\"\n\n    # OPTIONS FOR ALL MODES\n    startip: \"10.10.10.10\"\n    endip: \"10.10.10.100\"\n    arp_reply: \"enable\"\n\n- name: ADD FMGR_FIREWALL_IPPOOL one-to-one\n  community.fortios.fmgr_fwobj_ippool:\n    mode: \"add\"\n    adom: \"ansible\"\n    name: \"Ansible_pool4_121\"\n    comments: \"Created by ansible\"\n    type: \"one-to-one\"\n\n    # OPTIONS FOR ALL MODES\n    startip: \"10.10.20.10\"\n    endip: \"10.10.20.100\"\n    arp_reply: \"enable\"\n\n- name: ADD FMGR_FIREWALL_IPPOOL FIXED PORT RANGE\n  community.fortios.fmgr_fwobj_ippool:\n    mode: \"add\"\n    adom: \"ansible\"\n    name: \"Ansible_pool4_fixed_port\"\n    comments: \"Created by ansible\"\n    type: \"fixed-port-range\"\n\n    # OPTIONS FOR ALL MODES\n    startip: \"10.10.40.10\"\n    endip: \"10.10.40.100\"\n    arp_reply: \"enable\"\n    # FIXED PORT RANGE OPTIONS\n    source_startip: \"192.168.20.1\"\n    source_endip: \"192.168.20.20\"\n\n- name: ADD FMGR_FIREWALL_IPPOOL PORT BLOCK ALLOCATION\n  community.fortios.fmgr_fwobj_ippool:\n    mode: \"add\"\n    adom: \"ansible\"\n    name: \"Ansible_pool4_port_block_allocation\"\n    comments: \"Created by ansible\"\n    type: \"port-block-allocation\"\n\n    # OPTIONS FOR ALL MODES\n    startip: \"10.10.30.10\"\n    endip: \"10.10.30.100\"\n    arp_reply: \"enable\"\n    # PORT BLOCK ALLOCATION OPTIONS\n    block_size: \"128\"\n    num_blocks_per_user: \"1\"\n"
  },
  "community.fortios.fmgr_fwobj_ippool6": {
    "doc": {
      "description": "Allows users to add/edit/delete IPv6 Pool Objects.",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "comments": {
          "aliases": [],
          "description": "Comment.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_comments": {
          "aliases": [],
          "description": "Dynamic Mapping clone of original suffixed parameter.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_endip": {
          "aliases": [],
          "description": "Dynamic Mapping clone of original suffixed parameter.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_startip": {
          "aliases": [],
          "description": "Dynamic Mapping clone of original suffixed parameter.",
          "required": false,
          "suboptions": {}
        },
        "endip": {
          "aliases": [],
          "description": "Final IPv6 address (inclusive) in the range for the address pool.",
          "required": false,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.\nAllows use of soft-adds instead of overwriting existing values",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete",
            "update"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "IPv6 IP pool name.",
          "required": false,
          "suboptions": {}
        },
        "startip": {
          "aliases": [],
          "description": "First IPv6 address (inclusive) in the range for the address pool.",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Allows the editing of IP Pool Objects within FortiManager."
    },
    "examples": "\n- name: ADD FMGR_FIREWALL_IPPOOL6\n  fmgr_firewall_ippool6:\n    mode: \"add\"\n    adom: \"ansible\"\n    startip:\n    name: \"IPv6 IPPool\"\n    endip:\n    comments: \"Created by Ansible\"\n\n- name: DELETE FMGR_FIREWALL_IPPOOL6\n  fmgr_firewall_ippool6:\n    mode: \"delete\"\n    adom: \"ansible\"\n    name: \"IPv6 IPPool\"\n"
  },
  "community.fortios.fmgr_fwobj_service": {
    "doc": {
      "description": "Manages FortiManager Firewall Service Objects.",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "-The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "app_category": {
          "aliases": [],
          "description": "Application category ID.",
          "required": false,
          "suboptions": {}
        },
        "app_service_type": {
          "aliases": [],
          "description": "Application service type.",
          "required": false,
          "suboptions": {}
        },
        "application": {
          "aliases": [],
          "description": "Application ID.",
          "required": false,
          "suboptions": {}
        },
        "category": {
          "aliases": [],
          "description": "Service category.",
          "required": false,
          "suboptions": {}
        },
        "check_reset_range": {
          "aliases": [],
          "description": "Enable disable RST check.",
          "required": false,
          "suboptions": {}
        },
        "color": {
          "aliases": [],
          "description": "GUI icon color.",
          "default": "22",
          "required": false,
          "suboptions": {}
        },
        "comment": {
          "aliases": [],
          "description": "Comment.",
          "required": false,
          "suboptions": {}
        },
        "custom_type": {
          "aliases": [],
          "description": "Tells module what kind of custom service to be added.",
          "default": "all",
          "required": false,
          "choices": [
            "tcp_udp_sctp",
            "icmp",
            "icmp6",
            "ip",
            "http",
            "ftp",
            "connect",
            "socks_tcp",
            "socks_udp",
            "all"
          ],
          "suboptions": {}
        },
        "explicit_proxy": {
          "aliases": [],
          "description": "Enable/disable explicit web proxy service.",
          "default": "disable",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "fqdn": {
          "aliases": [],
          "description": "Fully qualified domain name.",
          "default": "",
          "required": false,
          "suboptions": {}
        },
        "group_member": {
          "aliases": [],
          "description": "Comma-Seperated list of members' names.",
          "required": false,
          "suboptions": {}
        },
        "group_name": {
          "aliases": [],
          "description": "Name of the Service Group.",
          "required": false,
          "suboptions": {}
        },
        "icmp_code": {
          "aliases": [],
          "description": "ICMP code.",
          "required": false,
          "suboptions": {}
        },
        "icmp_type": {
          "aliases": [],
          "description": "ICMP type.",
          "required": false,
          "suboptions": {}
        },
        "iprange": {
          "aliases": [],
          "description": "Start IP-End IP.",
          "default": "0.0.0.0",
          "required": false,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Custom service name.",
          "required": false,
          "suboptions": {}
        },
        "object_type": {
          "aliases": [],
          "description": "Tells module if we are adding a custom service, category, or group.",
          "required": false,
          "choices": [
            "custom",
            "group",
            "category"
          ],
          "suboptions": {}
        },
        "protocol": {
          "aliases": [],
          "description": "Protocol type.",
          "required": false,
          "suboptions": {}
        },
        "protocol_number": {
          "aliases": [],
          "description": "IP protocol number.",
          "required": false,
          "suboptions": {}
        },
        "sctp_portrange": {
          "aliases": [],
          "description": "Multiple SCTP port ranges. Comma separated list of destination ports to add (i.e. '443,80').\nSyntax is <destPort:sourcePort>\nIf no sourcePort is defined, it assumes all of them.\nRanges can be defined with a hyphen -\nExamples -- '443' (destPort 443 only)  '443:1000-2000' (destPort 443 from source ports 1000-2000).\nString multiple together in same quotes, comma separated. ('443:1000-2000, 80:1000-2000').",
          "required": false,
          "suboptions": {}
        },
        "session_ttl": {
          "aliases": [],
          "description": "Session TTL (300 - 604800, 0 = default).",
          "default": "0",
          "required": false,
          "suboptions": {}
        },
        "tcp_halfclose_timer": {
          "aliases": [],
          "description": "TCP half close timeout (1 - 86400 sec, 0 = default).",
          "default": "0",
          "required": false,
          "suboptions": {}
        },
        "tcp_halfopen_timer": {
          "aliases": [],
          "description": "TCP half close timeout (1 - 86400 sec, 0 = default).",
          "default": "0",
          "required": false,
          "suboptions": {}
        },
        "tcp_portrange": {
          "aliases": [],
          "description": "Comma separated list of destination ports to add (i.e. '443,80').\nSyntax is <destPort:sourcePort>\nIf no sourcePort is defined, it assumes all of them.\nRanges can be defined with a hyphen -\nExamples -- '443' (destPort 443 only)  '443:1000-2000' (destPort 443 from source ports 1000-2000).\nString multiple together in same quotes, comma separated. ('443:1000-2000, 80:1000-2000').",
          "required": false,
          "suboptions": {}
        },
        "tcp_timewait_timer": {
          "aliases": [],
          "description": "TCP half close timeout (1 - 300 sec, 0 = default).",
          "default": "0",
          "required": false,
          "suboptions": {}
        },
        "udp_idle_timer": {
          "aliases": [],
          "description": "TCP half close timeout (0 - 86400 sec, 0 = default).",
          "default": "0",
          "required": false,
          "suboptions": {}
        },
        "udp_portrange": {
          "aliases": [],
          "description": "Comma separated list of destination ports to add (i.e. '443,80').\nSyntax is <destPort:sourcePort>\nIf no sourcePort is defined, it assumes all of them.\nRanges can be defined with a hyphen -\nExamples -- '443' (destPort 443 only)  '443:1000-2000' (destPort 443 from source ports 1000-2000).\nString multiple together in same quotes, comma separated. ('443:1000-2000, 80:1000-2000').",
          "required": false,
          "suboptions": {}
        },
        "visibility": {
          "aliases": [],
          "description": "Enable/disable service visibility.",
          "default": "enable",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages FortiManager Firewall Service Objects."
    },
    "examples": "\n- name: ADD A CUSTOM SERVICE FOR TCP/UDP/SCP\n  community.fortios.fmgr_fwobj_service:\n    adom: \"ansible\"\n    name: \"ansible_custom_service\"\n    object_type: \"custom\"\n    custom_type: \"tcp_udp_sctp\"\n    tcp_portrange: \"443\"\n    udp_portrange: \"51\"\n    sctp_portrange: \"100\"\n\n- name: ADD A CUSTOM SERVICE FOR TCP/UDP/SCP WITH SOURCE RANGES AND MULTIPLES\n  community.fortios.fmgr_fwobj_service:\n    adom: \"ansible\"\n    name: \"ansible_custom_serviceWithSource\"\n    object_type: \"custom\"\n    custom_type: \"tcp_udp_sctp\"\n    tcp_portrange: \"443:2000-1000,80-82:10000-20000\"\n    udp_portrange: \"51:100-200,162:200-400\"\n    sctp_portrange: \"100:2000-2500\"\n\n- name: ADD A CUSTOM SERVICE FOR ICMP\n  community.fortios.fmgr_fwobj_service:\n    adom: \"ansible\"\n    name: \"ansible_custom_icmp\"\n    object_type: \"custom\"\n    custom_type: \"icmp\"\n    icmp_type: \"8\"\n    icmp_code: \"3\"\n\n- name: ADD A CUSTOM SERVICE FOR ICMP6\n  community.fortios.fmgr_fwobj_service:\n    adom: \"ansible\"\n    name: \"ansible_custom_icmp6\"\n    object_type: \"custom\"\n    custom_type: \"icmp6\"\n    icmp_type: \"5\"\n    icmp_code: \"1\"\n\n- name: ADD A CUSTOM SERVICE FOR IP - GRE\n  community.fortios.fmgr_fwobj_service:\n    adom: \"ansible\"\n    name: \"ansible_custom_icmp6\"\n    object_type: \"custom\"\n    custom_type: \"ip\"\n    protocol_number: \"47\"\n\n- name: ADD A CUSTOM PROXY FOR ALL WITH SOURCE RANGES AND MULTIPLES\n  community.fortios.fmgr_fwobj_service:\n    adom: \"ansible\"\n    name: \"ansible_custom_proxy_all\"\n    object_type: \"custom\"\n    custom_type: \"all\"\n    explicit_proxy: \"enable\"\n    tcp_portrange: \"443:2000-1000,80-82:10000-20000\"\n    iprange: \"www.ansible.com\"\n"
  },
  "community.fortios.fmgr_fwobj_vip": {
    "doc": {
      "description": "Manages Virtual IP objects in FortiManager for IPv4",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "arp_reply": {
          "aliases": [],
          "description": "Enable to respond to ARP requests for this virtual IP address. Enabled by default.\nchoice | disable | Disable ARP reply.\nchoice | enable | Enable ARP reply.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "color": {
          "aliases": [],
          "description": "Color of icon on the GUI.",
          "required": false,
          "suboptions": {}
        },
        "comment": {
          "aliases": [],
          "description": "Comment.",
          "required": false,
          "suboptions": {}
        },
        "dns_mapping_ttl": {
          "aliases": [],
          "description": "DNS mapping TTL (Set to zero to use TTL in DNS response, default = 0).",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_arp_reply": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | enable |",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_color": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_comment": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_dns_mapping_ttl": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_extaddr": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_extintf": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_extip": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_extport": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_gratuitous_arp_interval": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_http_cookie_age": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_http_cookie_domain": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_http_cookie_domain_from_host": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | enable |",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_http_cookie_generation": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_http_cookie_path": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_http_cookie_share": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | same-ip |",
          "required": false,
          "choices": [
            "disable",
            "same-ip"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_http_ip_header": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | enable |",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_http_ip_header_name": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_http_multiplex": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | enable |",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_https_cookie_secure": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | enable |",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ldb_method": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | static |\nchoice | round-robin |\nchoice | weighted |\nchoice | least-session |\nchoice | least-rtt |\nchoice | first-alive |\nchoice | http-host |",
          "required": false,
          "choices": [
            "static",
            "round-robin",
            "weighted",
            "least-session",
            "least-rtt",
            "first-alive",
            "http-host"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_mapped_addr": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_mappedip": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_mappedport": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_max_embryonic_connections": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_monitor": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_nat_source_vip": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | enable |",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_outlook_web_access": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | enable |",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_persistence": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | none |\nchoice | http-cookie |\nchoice | ssl-session-id |",
          "required": false,
          "choices": [
            "none",
            "http-cookie",
            "ssl-session-id"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_portforward": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | enable |",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_portmapping_type": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | 1-to-1 |\nchoice | m-to-n |",
          "required": false,
          "choices": [
            "1-to-1",
            "m-to-n"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_protocol": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | tcp |\nchoice | udp |\nchoice | sctp |\nchoice | icmp |",
          "required": false,
          "choices": [
            "tcp",
            "udp",
            "sctp",
            "icmp"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_realservers_client_ip": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_realservers_healthcheck": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | enable |\nchoice | vip |",
          "required": false,
          "choices": [
            "disable",
            "enable",
            "vip"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_realservers_holddown_interval": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_realservers_http_host": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_realservers_ip": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_realservers_max_connections": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_realservers_monitor": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_realservers_port": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_realservers_seq": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_realservers_status": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | active |\nchoice | standby |\nchoice | disable |",
          "required": false,
          "choices": [
            "active",
            "standby",
            "disable"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_realservers_weight": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_server_type": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | http |\nchoice | https |\nchoice | ssl |\nchoice | tcp |\nchoice | udp |\nchoice | ip |\nchoice | imaps |\nchoice | pop3s |\nchoice | smtps |",
          "required": false,
          "choices": [
            "http",
            "https",
            "ssl",
            "tcp",
            "udp",
            "ip",
            "imaps",
            "pop3s",
            "smtps"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_service": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_src_filter": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_srcintf_filter": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_ssl_algorithm": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | high |\nchoice | medium |\nchoice | low |\nchoice | custom |",
          "required": false,
          "choices": [
            "high",
            "medium",
            "low",
            "custom"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_certificate": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_ssl_cipher_suites_cipher": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | TLS-RSA-WITH-RC4-128-MD5 |\nchoice | TLS-RSA-WITH-RC4-128-SHA |\nchoice | TLS-RSA-WITH-DES-CBC-SHA |\nchoice | TLS-RSA-WITH-3DES-EDE-CBC-SHA |\nchoice | TLS-RSA-WITH-AES-128-CBC-SHA |\nchoice | TLS-RSA-WITH-AES-256-CBC-SHA |\nchoice | TLS-RSA-WITH-AES-128-CBC-SHA256 |\nchoice | TLS-RSA-WITH-AES-256-CBC-SHA256 |\nchoice | TLS-RSA-WITH-CAMELLIA-128-CBC-SHA |\nchoice | TLS-RSA-WITH-CAMELLIA-256-CBC-SHA |\nchoice | TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256 |\nchoice | TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256 |\nchoice | TLS-RSA-WITH-SEED-CBC-SHA |\nchoice | TLS-RSA-WITH-ARIA-128-CBC-SHA256 |\nchoice | TLS-RSA-WITH-ARIA-256-CBC-SHA384 |\nchoice | TLS-DHE-RSA-WITH-DES-CBC-SHA |\nchoice | TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA |\nchoice | TLS-DHE-RSA-WITH-AES-128-CBC-SHA |\nchoice | TLS-DHE-RSA-WITH-AES-256-CBC-SHA |\nchoice | TLS-DHE-RSA-WITH-AES-128-CBC-SHA256 |\nchoice | TLS-DHE-RSA-WITH-AES-256-CBC-SHA256 |\nchoice | TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA |\nchoice | TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA |\nchoice | TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256 |\nchoice | TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256 |\nchoice | TLS-DHE-RSA-WITH-SEED-CBC-SHA |\nchoice | TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256 |\nchoice | TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384 |\nchoice | TLS-ECDHE-RSA-WITH-RC4-128-SHA |\nchoice | TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA |\nchoice | TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA |\nchoice | TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA |\nchoice | TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256 |\nchoice | TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256 |\nchoice | TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256 |\nchoice | TLS-DHE-RSA-WITH-AES-128-GCM-SHA256 |\nchoice | TLS-DHE-RSA-WITH-AES-256-GCM-SHA384 |\nchoice | TLS-DHE-DSS-WITH-AES-128-CBC-SHA |\nchoice | TLS-DHE-DSS-WITH-AES-256-CBC-SHA |\nchoice | TLS-DHE-DSS-WITH-AES-128-CBC-SHA256 |\nchoice | TLS-DHE-DSS-WITH-AES-128-GCM-SHA256 |\nchoice | TLS-DHE-DSS-WITH-AES-256-CBC-SHA256 |\nchoice | TLS-DHE-DSS-WITH-AES-256-GCM-SHA384 |\nchoice | TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256 |\nchoice | TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256 |\nchoice | TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384 |\nchoice | TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384 |\nchoice | TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA |\nchoice | TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256 |\nchoice | TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256 |\nchoice | TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384 |\nchoice | TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384 |\nchoice | TLS-RSA-WITH-AES-128-GCM-SHA256 |\nchoice | TLS-RSA-WITH-AES-256-GCM-SHA384 |\nchoice | TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA |\nchoice | TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA |\nchoice | TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256 |\nchoice | TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256 |\nchoice | TLS-DHE-DSS-WITH-SEED-CBC-SHA |\nchoice | TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256 |\nchoice | TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384 |\nchoice | TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256 |\nchoice | TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384 |\nchoice | TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256 |\nchoice | TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384 |\nchoice | TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA |\nchoice | TLS-DHE-DSS-WITH-DES-CBC-SHA |",
          "required": false,
          "choices": [
            "TLS-RSA-WITH-RC4-128-MD5",
            "TLS-RSA-WITH-RC4-128-SHA",
            "TLS-RSA-WITH-DES-CBC-SHA",
            "TLS-RSA-WITH-3DES-EDE-CBC-SHA",
            "TLS-RSA-WITH-AES-128-CBC-SHA",
            "TLS-RSA-WITH-AES-256-CBC-SHA",
            "TLS-RSA-WITH-AES-128-CBC-SHA256",
            "TLS-RSA-WITH-AES-256-CBC-SHA256",
            "TLS-RSA-WITH-CAMELLIA-128-CBC-SHA",
            "TLS-RSA-WITH-CAMELLIA-256-CBC-SHA",
            "TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256",
            "TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256",
            "TLS-RSA-WITH-SEED-CBC-SHA",
            "TLS-RSA-WITH-ARIA-128-CBC-SHA256",
            "TLS-RSA-WITH-ARIA-256-CBC-SHA384",
            "TLS-DHE-RSA-WITH-DES-CBC-SHA",
            "TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA",
            "TLS-DHE-RSA-WITH-AES-128-CBC-SHA",
            "TLS-DHE-RSA-WITH-AES-256-CBC-SHA",
            "TLS-DHE-RSA-WITH-AES-128-CBC-SHA256",
            "TLS-DHE-RSA-WITH-AES-256-CBC-SHA256",
            "TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA",
            "TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA",
            "TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256",
            "TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256",
            "TLS-DHE-RSA-WITH-SEED-CBC-SHA",
            "TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256",
            "TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384",
            "TLS-ECDHE-RSA-WITH-RC4-128-SHA",
            "TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA",
            "TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA",
            "TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA",
            "TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256",
            "TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256",
            "TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256",
            "TLS-DHE-RSA-WITH-AES-128-GCM-SHA256",
            "TLS-DHE-RSA-WITH-AES-256-GCM-SHA384",
            "TLS-DHE-DSS-WITH-AES-128-CBC-SHA",
            "TLS-DHE-DSS-WITH-AES-256-CBC-SHA",
            "TLS-DHE-DSS-WITH-AES-128-CBC-SHA256",
            "TLS-DHE-DSS-WITH-AES-128-GCM-SHA256",
            "TLS-DHE-DSS-WITH-AES-256-CBC-SHA256",
            "TLS-DHE-DSS-WITH-AES-256-GCM-SHA384",
            "TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256",
            "TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256",
            "TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384",
            "TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384",
            "TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA",
            "TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256",
            "TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256",
            "TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384",
            "TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384",
            "TLS-RSA-WITH-AES-128-GCM-SHA256",
            "TLS-RSA-WITH-AES-256-GCM-SHA384",
            "TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA",
            "TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA",
            "TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256",
            "TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256",
            "TLS-DHE-DSS-WITH-SEED-CBC-SHA",
            "TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256",
            "TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384",
            "TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256",
            "TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384",
            "TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256",
            "TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384",
            "TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA",
            "TLS-DHE-DSS-WITH-DES-CBC-SHA"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_cipher_suites_versions": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nFLAG Based Options. Specify multiple in list form.\nflag | ssl-3.0 |\nflag | tls-1.0 |\nflag | tls-1.1 |\nflag | tls-1.2 |",
          "required": false,
          "choices": [
            "ssl-3.0",
            "tls-1.0",
            "tls-1.1",
            "tls-1.2"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_client_fallback": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | enable |",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_client_renegotiation": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | deny |\nchoice | allow |\nchoice | secure |",
          "required": false,
          "choices": [
            "deny",
            "allow",
            "secure"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_client_session_state_max": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_ssl_client_session_state_timeout": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_ssl_client_session_state_type": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | time |\nchoice | count |\nchoice | both |",
          "required": false,
          "choices": [
            "disable",
            "time",
            "count",
            "both"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_dh_bits": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | 768 |\nchoice | 1024 |\nchoice | 1536 |\nchoice | 2048 |\nchoice | 3072 |\nchoice | 4096 |",
          "required": false,
          "choices": [
            "768",
            "1024",
            "1536",
            "2048",
            "3072",
            "4096"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_hpkp": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | enable |\nchoice | report-only |",
          "required": false,
          "choices": [
            "disable",
            "enable",
            "report-only"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_hpkp_age": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_ssl_hpkp_backup": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_ssl_hpkp_include_subdomains": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | enable |",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_hpkp_primary": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_ssl_hpkp_report_uri": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_ssl_hsts": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | enable |",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_hsts_age": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_ssl_hsts_include_subdomains": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | enable |",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_http_location_conversion": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | enable |",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_http_match_host": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | enable |",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_max_version": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | ssl-3.0 |\nchoice | tls-1.0 |\nchoice | tls-1.1 |\nchoice | tls-1.2 |",
          "required": false,
          "choices": [
            "ssl-3.0",
            "tls-1.0",
            "tls-1.1",
            "tls-1.2"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_min_version": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | ssl-3.0 |\nchoice | tls-1.0 |\nchoice | tls-1.1 |\nchoice | tls-1.2 |",
          "required": false,
          "choices": [
            "ssl-3.0",
            "tls-1.0",
            "tls-1.1",
            "tls-1.2"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_mode": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | half |\nchoice | full |",
          "required": false,
          "choices": [
            "half",
            "full"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_pfs": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | require |\nchoice | deny |\nchoice | allow |",
          "required": false,
          "choices": [
            "require",
            "deny",
            "allow"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_send_empty_frags": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | enable |",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_server_algorithm": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | high |\nchoice | low |\nchoice | medium |\nchoice | custom |\nchoice | client |",
          "required": false,
          "choices": [
            "high",
            "low",
            "medium",
            "custom",
            "client"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_server_max_version": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | ssl-3.0 |\nchoice | tls-1.0 |\nchoice | tls-1.1 |\nchoice | tls-1.2 |\nchoice | client |",
          "required": false,
          "choices": [
            "ssl-3.0",
            "tls-1.0",
            "tls-1.1",
            "tls-1.2",
            "client"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_server_min_version": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | ssl-3.0 |\nchoice | tls-1.0 |\nchoice | tls-1.1 |\nchoice | tls-1.2 |\nchoice | client |",
          "required": false,
          "choices": [
            "ssl-3.0",
            "tls-1.0",
            "tls-1.1",
            "tls-1.2",
            "client"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_ssl_server_session_state_max": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_ssl_server_session_state_timeout": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.",
          "required": false,
          "suboptions": {}
        },
        "dynamic_mapping_ssl_server_session_state_type": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | time |\nchoice | count |\nchoice | both |",
          "required": false,
          "choices": [
            "disable",
            "time",
            "count",
            "both"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_type": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | static-nat |\nchoice | load-balance |\nchoice | server-load-balance |\nchoice | dns-translation |\nchoice | fqdn |",
          "required": false,
          "choices": [
            "static-nat",
            "load-balance",
            "server-load-balance",
            "dns-translation",
            "fqdn"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_weblogic_server": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | enable |",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dynamic_mapping_websphere_server": {
          "aliases": [],
          "description": "Dynamic Mapping Version of Suffixed Option Name. Sub-Table. Same Descriptions as Parent.\nchoice | disable |\nchoice | enable |",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "extaddr": {
          "aliases": [],
          "description": "External FQDN address name.",
          "required": false,
          "suboptions": {}
        },
        "extintf": {
          "aliases": [],
          "description": "Interface connected to the source network that receives the packets that will be forwarded to the destination\nnetwork.",
          "required": false,
          "suboptions": {}
        },
        "extip": {
          "aliases": [],
          "description": "IP address or address range on the external interface that you want to map to an address or address range on t\nhe destination network.",
          "required": false,
          "suboptions": {}
        },
        "extport": {
          "aliases": [],
          "description": "Incoming port number range that you want to map to a port number range on the destination network.",
          "required": false,
          "suboptions": {}
        },
        "gratuitous_arp_interval": {
          "aliases": [],
          "description": "Enable to have the VIP send gratuitous ARPs. 0=disabled. Set from 5 up to 8640000 seconds to enable.",
          "required": false,
          "suboptions": {}
        },
        "http_cookie_age": {
          "aliases": [],
          "description": "Time in minutes that client web browsers should keep a cookie. Default is 60 seconds. 0 = no time limit.",
          "required": false,
          "suboptions": {}
        },
        "http_cookie_domain": {
          "aliases": [],
          "description": "Domain that HTTP cookie persistence should apply to.",
          "required": false,
          "suboptions": {}
        },
        "http_cookie_domain_from_host": {
          "aliases": [],
          "description": "Enable/disable use of HTTP cookie domain from host field in HTTP.\nchoice | disable | Disable use of HTTP cookie domain from host field in HTTP (use http-cooke-domain setting).\nchoice | enable | Enable use of HTTP cookie domain from host field in HTTP.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "http_cookie_generation": {
          "aliases": [],
          "description": "Generation of HTTP cookie to be accepted. Changing invalidates all existing cookies.",
          "required": false,
          "suboptions": {}
        },
        "http_cookie_path": {
          "aliases": [],
          "description": "Limit HTTP cookie persistence to the specified path.",
          "required": false,
          "suboptions": {}
        },
        "http_cookie_share": {
          "aliases": [],
          "description": "Control sharing of cookies across virtual servers. same-ip means a cookie from one virtual server can be used\nby another. Disable stops cookie sharing.\nchoice | disable | Only allow HTTP cookie to match this virtual server.\nchoice | same-ip | Allow HTTP cookie to match any virtual server with same IP.",
          "required": false,
          "choices": [
            "disable",
            "same-ip"
          ],
          "suboptions": {}
        },
        "http_ip_header": {
          "aliases": [],
          "description": "For HTTP multiplexing, enable to add the original client IP address in the XForwarded-For HTTP header.\nchoice | disable | Disable adding HTTP header.\nchoice | enable | Enable adding HTTP header.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "http_ip_header_name": {
          "aliases": [],
          "description": "For HTTP multiplexing, enter a custom HTTPS header name. The orig client IP address is added to this header.\nIf empty, X-Forwarded-For is used.",
          "required": false,
          "suboptions": {}
        },
        "http_multiplex": {
          "aliases": [],
          "description": "Enable/disable HTTP multiplexing.\nchoice | disable | Disable HTTP session multiplexing.\nchoice | enable | Enable HTTP session multiplexing.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "https_cookie_secure": {
          "aliases": [],
          "description": "Enable/disable verification that inserted HTTPS cookies are secure.\nchoice | disable | Do not mark cookie as secure, allow sharing between an HTTP and HTTPS connection.\nchoice | enable | Mark inserted cookie as secure, cookie can only be used for HTTPS a connection.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ldb_method": {
          "aliases": [],
          "description": "Method used to distribute sessions to real servers.\nchoice | static | Distribute to server based on source IP.\nchoice | round-robin | Distribute to server based round robin order.\nchoice | weighted | Distribute to server based on weight.\nchoice | least-session | Distribute to server with lowest session count.\nchoice | least-rtt | Distribute to server with lowest Round-Trip-Time.\nchoice | first-alive | Distribute to the first server that is alive.\nchoice | http-host | Distribute to server based on host field in HTTP header.",
          "required": false,
          "choices": [
            "static",
            "round-robin",
            "weighted",
            "least-session",
            "least-rtt",
            "first-alive",
            "http-host"
          ],
          "suboptions": {}
        },
        "mapped_addr": {
          "aliases": [],
          "description": "Mapped FQDN address name.",
          "required": false,
          "suboptions": {}
        },
        "mappedip": {
          "aliases": [],
          "description": "IP address or address range on the destination network to which the external IP address is mapped.",
          "required": false,
          "suboptions": {}
        },
        "mappedport": {
          "aliases": [],
          "description": "Port number range on the destination network to which the external port number range is mapped.",
          "required": false,
          "suboptions": {}
        },
        "max_embryonic_connections": {
          "aliases": [],
          "description": "Maximum number of incomplete connections.",
          "required": false,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.\nAllows use of soft-adds instead of overwriting existing values",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete",
            "update"
          ],
          "suboptions": {}
        },
        "monitor": {
          "aliases": [],
          "description": "Name of the health check monitor to use when polling to determine a virtual server's connectivity status.",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Virtual IP name.",
          "required": false,
          "suboptions": {}
        },
        "nat_source_vip": {
          "aliases": [],
          "description": "Enable to prevent unintended servers from using a virtual IP.\nDisable to use the actual IP address of the server as the source address.\nchoice | disable | Do not force to NAT as VIP.\nchoice | enable | Force to NAT as VIP.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "outlook_web_access": {
          "aliases": [],
          "description": "Enable to add the Front-End-Https header for Microsoft Outlook Web Access.\nchoice | disable | Disable Outlook Web Access support.\nchoice | enable | Enable Outlook Web Access support.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "persistence": {
          "aliases": [],
          "description": "Configure how to make sure that clients connect to the same server every time they make a request that is part\nof the same session.\nchoice | none | None.\nchoice | http-cookie | HTTP cookie.\nchoice | ssl-session-id | SSL session ID.",
          "required": false,
          "choices": [
            "none",
            "http-cookie",
            "ssl-session-id"
          ],
          "suboptions": {}
        },
        "portforward": {
          "aliases": [],
          "description": "Enable/disable port forwarding.\nchoice | disable | Disable port forward.\nchoice | enable | Enable port forward.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "portmapping_type": {
          "aliases": [],
          "description": "Port mapping type.\nchoice | 1-to-1 | One to one.\nchoice | m-to-n | Many to many.",
          "required": false,
          "choices": [
            "1-to-1",
            "m-to-n"
          ],
          "suboptions": {}
        },
        "protocol": {
          "aliases": [],
          "description": "Protocol to use when forwarding packets.\nchoice | tcp | TCP.\nchoice | udp | UDP.\nchoice | sctp | SCTP.\nchoice | icmp | ICMP.",
          "required": false,
          "choices": [
            "tcp",
            "udp",
            "sctp",
            "icmp"
          ],
          "suboptions": {}
        },
        "realservers": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "realservers_client_ip": {
          "aliases": [],
          "description": "Only clients in this IP range can connect to this real server.",
          "required": false,
          "suboptions": {}
        },
        "realservers_healthcheck": {
          "aliases": [],
          "description": "Enable to check the responsiveness of the real server before forwarding traffic.\nchoice | disable | Disable per server health check.\nchoice | enable | Enable per server health check.\nchoice | vip | Use health check defined in VIP.",
          "required": false,
          "choices": [
            "disable",
            "enable",
            "vip"
          ],
          "suboptions": {}
        },
        "realservers_holddown_interval": {
          "aliases": [],
          "description": "Time in seconds that the health check monitor monitors an unresponsive server that should be active.",
          "required": false,
          "suboptions": {}
        },
        "realservers_http_host": {
          "aliases": [],
          "description": "HTTP server domain name in HTTP header.",
          "required": false,
          "suboptions": {}
        },
        "realservers_ip": {
          "aliases": [],
          "description": "IP address of the real server.",
          "required": false,
          "suboptions": {}
        },
        "realservers_max_connections": {
          "aliases": [],
          "description": "Max number of active connections that can be directed to the real server. When reached, sessions are sent to\ntheir real servers.",
          "required": false,
          "suboptions": {}
        },
        "realservers_monitor": {
          "aliases": [],
          "description": "Name of the health check monitor to use when polling to determine a virtual server's connectivity status.",
          "required": false,
          "suboptions": {}
        },
        "realservers_port": {
          "aliases": [],
          "description": "Port for communicating with the real server. Required if port forwarding is enabled.",
          "required": false,
          "suboptions": {}
        },
        "realservers_seq": {
          "aliases": [],
          "description": "Real Server Sequence Number",
          "required": false,
          "suboptions": {}
        },
        "realservers_status": {
          "aliases": [],
          "description": "Set the status of the real server to active so that it can accept traffic.\nOr on standby or disabled so no traffic is sent.\nchoice | active | Server status active.\nchoice | standby | Server status standby.\nchoice | disable | Server status disable.",
          "required": false,
          "choices": [
            "active",
            "standby",
            "disable"
          ],
          "suboptions": {}
        },
        "realservers_weight": {
          "aliases": [],
          "description": "Weight of the real server. If weighted load balancing is enabled, the server with the highest weight gets more\nconnections.",
          "required": false,
          "suboptions": {}
        },
        "server_type": {
          "aliases": [],
          "description": "Protocol to be load balanced by the virtual server (also called the server load balance virtual IP).\nchoice | http | HTTP\nchoice | https | HTTPS\nchoice | ssl | SSL\nchoice | tcp | TCP\nchoice | udp | UDP\nchoice | ip | IP\nchoice | imaps | IMAPS\nchoice | pop3s | POP3S\nchoice | smtps | SMTPS",
          "required": false,
          "choices": [
            "http",
            "https",
            "ssl",
            "tcp",
            "udp",
            "ip",
            "imaps",
            "pop3s",
            "smtps"
          ],
          "suboptions": {}
        },
        "service": {
          "aliases": [],
          "description": "Service name.",
          "required": false,
          "suboptions": {}
        },
        "src_filter": {
          "aliases": [],
          "description": "Source address filter. Each address must be either an IP/subnet (x.x.x.x/n) or a range (x.x.x.x-y.y.y.y).\nSeparate addresses with spaces.",
          "required": false,
          "suboptions": {}
        },
        "srcintf_filter": {
          "aliases": [],
          "description": "Interfaces to which the VIP applies. Separate the names with spaces.",
          "required": false,
          "suboptions": {}
        },
        "ssl_algorithm": {
          "aliases": [],
          "description": "Permitted encryption algorithms for SSL sessions according to encryption strength.\nchoice | high | High encryption. Allow only AES and ChaCha.\nchoice | medium | Medium encryption. Allow AES, ChaCha, 3DES, and RC4.\nchoice | low | Low encryption. Allow AES, ChaCha, 3DES, RC4, and DES.\nchoice | custom | Custom encryption. Use config ssl-cipher-suites to select the cipher suites that are allowed.",
          "required": false,
          "choices": [
            "high",
            "medium",
            "low",
            "custom"
          ],
          "suboptions": {}
        },
        "ssl_certificate": {
          "aliases": [],
          "description": "The name of the SSL certificate to use for SSL acceleration.",
          "required": false,
          "suboptions": {}
        },
        "ssl_cipher_suites": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "ssl_cipher_suites_cipher": {
          "aliases": [],
          "description": "Cipher suite name.\nchoice | TLS-RSA-WITH-RC4-128-MD5 | Cipher suite TLS-RSA-WITH-RC4-128-MD5.\nchoice | TLS-RSA-WITH-RC4-128-SHA | Cipher suite TLS-RSA-WITH-RC4-128-SHA.\nchoice | TLS-RSA-WITH-DES-CBC-SHA | Cipher suite TLS-RSA-WITH-DES-CBC-SHA.\nchoice | TLS-RSA-WITH-3DES-EDE-CBC-SHA | Cipher suite TLS-RSA-WITH-3DES-EDE-CBC-SHA.\nchoice | TLS-RSA-WITH-AES-128-CBC-SHA | Cipher suite TLS-RSA-WITH-AES-128-CBC-SHA.\nchoice | TLS-RSA-WITH-AES-256-CBC-SHA | Cipher suite TLS-RSA-WITH-AES-256-CBC-SHA.\nchoice | TLS-RSA-WITH-AES-128-CBC-SHA256 | Cipher suite TLS-RSA-WITH-AES-128-CBC-SHA256.\nchoice | TLS-RSA-WITH-AES-256-CBC-SHA256 | Cipher suite TLS-RSA-WITH-AES-256-CBC-SHA256.\nchoice | TLS-RSA-WITH-CAMELLIA-128-CBC-SHA | Cipher suite TLS-RSA-WITH-CAMELLIA-128-CBC-SHA.\nchoice | TLS-RSA-WITH-CAMELLIA-256-CBC-SHA | Cipher suite TLS-RSA-WITH-CAMELLIA-256-CBC-SHA.\nchoice | TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256 | Cipher suite TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256.\nchoice | TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256 | Cipher suite TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256.\nchoice | TLS-RSA-WITH-SEED-CBC-SHA | Cipher suite TLS-RSA-WITH-SEED-CBC-SHA.\nchoice | TLS-RSA-WITH-ARIA-128-CBC-SHA256 | Cipher suite TLS-RSA-WITH-ARIA-128-CBC-SHA256.\nchoice | TLS-RSA-WITH-ARIA-256-CBC-SHA384 | Cipher suite TLS-RSA-WITH-ARIA-256-CBC-SHA384.\nchoice | TLS-DHE-RSA-WITH-DES-CBC-SHA | Cipher suite TLS-DHE-RSA-WITH-DES-CBC-SHA.\nchoice | TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA | Cipher suite TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA.\nchoice | TLS-DHE-RSA-WITH-AES-128-CBC-SHA | Cipher suite TLS-DHE-RSA-WITH-AES-128-CBC-SHA.\nchoice | TLS-DHE-RSA-WITH-AES-256-CBC-SHA | Cipher suite TLS-DHE-RSA-WITH-AES-256-CBC-SHA.\nchoice | TLS-DHE-RSA-WITH-AES-128-CBC-SHA256 | Cipher suite TLS-DHE-RSA-WITH-AES-128-CBC-SHA256.\nchoice | TLS-DHE-RSA-WITH-AES-256-CBC-SHA256 | Cipher suite TLS-DHE-RSA-WITH-AES-256-CBC-SHA256.\nchoice | TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA | Cipher suite TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA.\nchoice | TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA | Cipher suite TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA.\nchoice | TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256 | Cipher suite TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256.\nchoice | TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256 | Cipher suite TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256.\nchoice | TLS-DHE-RSA-WITH-SEED-CBC-SHA | Cipher suite TLS-DHE-RSA-WITH-SEED-CBC-SHA.\nchoice | TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256 | Cipher suite TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256.\nchoice | TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384 | Cipher suite TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384.\nchoice | TLS-ECDHE-RSA-WITH-RC4-128-SHA | Cipher suite TLS-ECDHE-RSA-WITH-RC4-128-SHA.\nchoice | TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA | Cipher suite TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA.\nchoice | TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA | Cipher suite TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA.\nchoice | TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA | Cipher suite TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA.\nchoice | TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256 | Cipher suite TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256.\nchoice | TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256 | Cipher suite TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256.\nchoice | TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256 | Cipher suite TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256.\nchoice | TLS-DHE-RSA-WITH-AES-128-GCM-SHA256 | Cipher suite TLS-DHE-RSA-WITH-AES-128-GCM-SHA256.\nchoice | TLS-DHE-RSA-WITH-AES-256-GCM-SHA384 | Cipher suite TLS-DHE-RSA-WITH-AES-256-GCM-SHA384.\nchoice | TLS-DHE-DSS-WITH-AES-128-CBC-SHA | Cipher suite TLS-DHE-DSS-WITH-AES-128-CBC-SHA.\nchoice | TLS-DHE-DSS-WITH-AES-256-CBC-SHA | Cipher suite TLS-DHE-DSS-WITH-AES-256-CBC-SHA.\nchoice | TLS-DHE-DSS-WITH-AES-128-CBC-SHA256 | Cipher suite TLS-DHE-DSS-WITH-AES-128-CBC-SHA256.\nchoice | TLS-DHE-DSS-WITH-AES-128-GCM-SHA256 | Cipher suite TLS-DHE-DSS-WITH-AES-128-GCM-SHA256.\nchoice | TLS-DHE-DSS-WITH-AES-256-CBC-SHA256 | Cipher suite TLS-DHE-DSS-WITH-AES-256-CBC-SHA256.\nchoice | TLS-DHE-DSS-WITH-AES-256-GCM-SHA384 | Cipher suite TLS-DHE-DSS-WITH-AES-256-GCM-SHA384.\nchoice | TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256 | Cipher suite TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256.\nchoice | TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256 | Cipher suite TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256.\nchoice | TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384 | Cipher suite TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384.\nchoice | TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384 | Cipher suite TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384.\nchoice | TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA | Cipher suite TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA.\nchoice | TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256 | Cipher suite TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256.\nchoice | TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256 | Cipher suite TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256.\nchoice | TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384 | Cipher suite TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384.\nchoice | TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384 | Cipher suite TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384.\nchoice | TLS-RSA-WITH-AES-128-GCM-SHA256 | Cipher suite TLS-RSA-WITH-AES-128-GCM-SHA256.\nchoice | TLS-RSA-WITH-AES-256-GCM-SHA384 | Cipher suite TLS-RSA-WITH-AES-256-GCM-SHA384.\nchoice | TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA | Cipher suite TLS-DSS-RSA-WITH-CAMELLIA-128-CBC-SHA.\nchoice | TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA | Cipher suite TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA.\nchoice | TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256 | Cipher suite TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256.\nchoice | TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256 | Cipher suite TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256.\nchoice | TLS-DHE-DSS-WITH-SEED-CBC-SHA | Cipher suite TLS-DHE-DSS-WITH-SEED-CBC-SHA.\nchoice | TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256 | Cipher suite TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256.\nchoice | TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384 | Cipher suite TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384.\nchoice | TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256 | Cipher suite TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256.\nchoice | TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384 | Cipher suite TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384.\nchoice | TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256 | Cipher suite TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC_SHA256.\nchoice | TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384 | Cipher suite TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC_SHA384.\nchoice | TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA | Cipher suite TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA.\nchoice | TLS-DHE-DSS-WITH-DES-CBC-SHA | Cipher suite TLS-DHE-DSS-WITH-DES-CBC-SHA.",
          "required": false,
          "choices": [
            "TLS-RSA-WITH-RC4-128-MD5",
            "TLS-RSA-WITH-RC4-128-SHA",
            "TLS-RSA-WITH-DES-CBC-SHA",
            "TLS-RSA-WITH-3DES-EDE-CBC-SHA",
            "TLS-RSA-WITH-AES-128-CBC-SHA",
            "TLS-RSA-WITH-AES-256-CBC-SHA",
            "TLS-RSA-WITH-AES-128-CBC-SHA256",
            "TLS-RSA-WITH-AES-256-CBC-SHA256",
            "TLS-RSA-WITH-CAMELLIA-128-CBC-SHA",
            "TLS-RSA-WITH-CAMELLIA-256-CBC-SHA",
            "TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256",
            "TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256",
            "TLS-RSA-WITH-SEED-CBC-SHA",
            "TLS-RSA-WITH-ARIA-128-CBC-SHA256",
            "TLS-RSA-WITH-ARIA-256-CBC-SHA384",
            "TLS-DHE-RSA-WITH-DES-CBC-SHA",
            "TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA",
            "TLS-DHE-RSA-WITH-AES-128-CBC-SHA",
            "TLS-DHE-RSA-WITH-AES-256-CBC-SHA",
            "TLS-DHE-RSA-WITH-AES-128-CBC-SHA256",
            "TLS-DHE-RSA-WITH-AES-256-CBC-SHA256",
            "TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA",
            "TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA",
            "TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256",
            "TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256",
            "TLS-DHE-RSA-WITH-SEED-CBC-SHA",
            "TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256",
            "TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384",
            "TLS-ECDHE-RSA-WITH-RC4-128-SHA",
            "TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA",
            "TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA",
            "TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA",
            "TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256",
            "TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256",
            "TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256",
            "TLS-DHE-RSA-WITH-AES-128-GCM-SHA256",
            "TLS-DHE-RSA-WITH-AES-256-GCM-SHA384",
            "TLS-DHE-DSS-WITH-AES-128-CBC-SHA",
            "TLS-DHE-DSS-WITH-AES-256-CBC-SHA",
            "TLS-DHE-DSS-WITH-AES-128-CBC-SHA256",
            "TLS-DHE-DSS-WITH-AES-128-GCM-SHA256",
            "TLS-DHE-DSS-WITH-AES-256-CBC-SHA256",
            "TLS-DHE-DSS-WITH-AES-256-GCM-SHA384",
            "TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256",
            "TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256",
            "TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384",
            "TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384",
            "TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA",
            "TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256",
            "TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256",
            "TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384",
            "TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384",
            "TLS-RSA-WITH-AES-128-GCM-SHA256",
            "TLS-RSA-WITH-AES-256-GCM-SHA384",
            "TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA",
            "TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA",
            "TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256",
            "TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256",
            "TLS-DHE-DSS-WITH-SEED-CBC-SHA",
            "TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256",
            "TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384",
            "TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256",
            "TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384",
            "TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256",
            "TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384",
            "TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA",
            "TLS-DHE-DSS-WITH-DES-CBC-SHA"
          ],
          "suboptions": {}
        },
        "ssl_cipher_suites_versions": {
          "aliases": [],
          "description": "SSL/TLS versions that the cipher suite can be used with.\nFLAG Based Options. Specify multiple in list form.\nflag | ssl-3.0 | SSL 3.0.\nflag | tls-1.0 | TLS 1.0.\nflag | tls-1.1 | TLS 1.1.\nflag | tls-1.2 | TLS 1.2.",
          "required": false,
          "choices": [
            "ssl-3.0",
            "tls-1.0",
            "tls-1.1",
            "tls-1.2"
          ],
          "suboptions": {}
        },
        "ssl_client_fallback": {
          "aliases": [],
          "description": "Enable/disable support for preventing Downgrade Attacks on client connections (RFC 7507).\nchoice | disable | Disable.\nchoice | enable | Enable.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ssl_client_renegotiation": {
          "aliases": [],
          "description": "Allow, deny, or require secure renegotiation of client sessions to comply with RFC 5746.\nchoice | deny | Abort any client initiated SSL re-negotiation attempt.\nchoice | allow | Allow a SSL client to renegotiate.\nchoice | secure | Abort any client initiated SSL re-negotiation attempt that does not use RFC 5746.",
          "required": false,
          "choices": [
            "deny",
            "allow",
            "secure"
          ],
          "suboptions": {}
        },
        "ssl_client_session_state_max": {
          "aliases": [],
          "description": "Maximum number of client to FortiGate SSL session states to keep.",
          "required": false,
          "suboptions": {}
        },
        "ssl_client_session_state_timeout": {
          "aliases": [],
          "description": "Number of minutes to keep client to FortiGate SSL session state.",
          "required": false,
          "suboptions": {}
        },
        "ssl_client_session_state_type": {
          "aliases": [],
          "description": "How to expire SSL sessions for the segment of the SSL connection between the client and the FortiGate.\nchoice | disable | Do not keep session states.\nchoice | time | Expire session states after this many minutes.\nchoice | count | Expire session states when this maximum is reached.\nchoice | both | Expire session states based on time or count, whichever occurs first.",
          "required": false,
          "choices": [
            "disable",
            "time",
            "count",
            "both"
          ],
          "suboptions": {}
        },
        "ssl_dh_bits": {
          "aliases": [],
          "description": "Number of bits to use in the Diffie-Hellman exchange for RSA encryption of SSL sessions.\nchoice | 768 | 768-bit Diffie-Hellman prime.\nchoice | 1024 | 1024-bit Diffie-Hellman prime.\nchoice | 1536 | 1536-bit Diffie-Hellman prime.\nchoice | 2048 | 2048-bit Diffie-Hellman prime.\nchoice | 3072 | 3072-bit Diffie-Hellman prime.\nchoice | 4096 | 4096-bit Diffie-Hellman prime.",
          "required": false,
          "choices": [
            "768",
            "1024",
            "1536",
            "2048",
            "3072",
            "4096"
          ],
          "suboptions": {}
        },
        "ssl_hpkp": {
          "aliases": [],
          "description": "Enable/disable including HPKP header in response.\nchoice | disable | Do not add a HPKP header to each HTTP response.\nchoice | enable | Add a HPKP header to each a HTTP response.\nchoice | report-only | Add a HPKP Report-Only header to each HTTP response.",
          "required": false,
          "choices": [
            "disable",
            "enable",
            "report-only"
          ],
          "suboptions": {}
        },
        "ssl_hpkp_age": {
          "aliases": [],
          "description": "Number of seconds the client should honour the HPKP setting.",
          "required": false,
          "suboptions": {}
        },
        "ssl_hpkp_backup": {
          "aliases": [],
          "description": "Certificate to generate backup HPKP pin from.",
          "required": false,
          "suboptions": {}
        },
        "ssl_hpkp_include_subdomains": {
          "aliases": [],
          "description": "Indicate that HPKP header applies to all subdomains.\nchoice | disable | HPKP header does not apply to subdomains.\nchoice | enable | HPKP header applies to subdomains.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ssl_hpkp_primary": {
          "aliases": [],
          "description": "Certificate to generate primary HPKP pin from.",
          "required": false,
          "suboptions": {}
        },
        "ssl_hpkp_report_uri": {
          "aliases": [],
          "description": "URL to report HPKP violations to.",
          "required": false,
          "suboptions": {}
        },
        "ssl_hsts": {
          "aliases": [],
          "description": "Enable/disable including HSTS header in response.\nchoice | disable | Do not add a HSTS header to each a HTTP response.\nchoice | enable | Add a HSTS header to each HTTP response.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ssl_hsts_age": {
          "aliases": [],
          "description": "Number of seconds the client should honour the HSTS setting.",
          "required": false,
          "suboptions": {}
        },
        "ssl_hsts_include_subdomains": {
          "aliases": [],
          "description": "Indicate that HSTS header applies to all subdomains.\nchoice | disable | HSTS header does not apply to subdomains.\nchoice | enable | HSTS header applies to subdomains.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ssl_http_location_conversion": {
          "aliases": [],
          "description": "Enable to replace HTTP with HTTPS in the reply's Location HTTP header field.\nchoice | disable | Disable HTTP location conversion.\nchoice | enable | Enable HTTP location conversion.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ssl_http_match_host": {
          "aliases": [],
          "description": "Enable/disable HTTP host matching for location conversion.\nchoice | disable | Do not match HTTP host.\nchoice | enable | Match HTTP host in response header.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ssl_max_version": {
          "aliases": [],
          "description": "Highest SSL/TLS version acceptable from a client.\nchoice | ssl-3.0 | SSL 3.0.\nchoice | tls-1.0 | TLS 1.0.\nchoice | tls-1.1 | TLS 1.1.\nchoice | tls-1.2 | TLS 1.2.",
          "required": false,
          "choices": [
            "ssl-3.0",
            "tls-1.0",
            "tls-1.1",
            "tls-1.2"
          ],
          "suboptions": {}
        },
        "ssl_min_version": {
          "aliases": [],
          "description": "Lowest SSL/TLS version acceptable from a client.\nchoice | ssl-3.0 | SSL 3.0.\nchoice | tls-1.0 | TLS 1.0.\nchoice | tls-1.1 | TLS 1.1.\nchoice | tls-1.2 | TLS 1.2.",
          "required": false,
          "choices": [
            "ssl-3.0",
            "tls-1.0",
            "tls-1.1",
            "tls-1.2"
          ],
          "suboptions": {}
        },
        "ssl_mode": {
          "aliases": [],
          "description": "Apply SSL offloading mode\nchoice | half | Client to FortiGate SSL.\nchoice | full | Client to FortiGate and FortiGate to Server SSL.",
          "required": false,
          "choices": [
            "half",
            "full"
          ],
          "suboptions": {}
        },
        "ssl_pfs": {
          "aliases": [],
          "description": "Select the cipher suites that can be used for SSL perfect forward secrecy (PFS).\nchoice | require | Allow only Diffie-Hellman cipher-suites, so PFS is applied.\nchoice | deny | Allow only non-Diffie-Hellman cipher-suites, so PFS is not applied.\nchoice | allow | Allow use of any cipher suite so PFS may or may not be used depending on the cipher suite",
          "required": false,
          "choices": [
            "require",
            "deny",
            "allow"
          ],
          "suboptions": {}
        },
        "ssl_send_empty_frags": {
          "aliases": [],
          "description": "Enable/disable sending empty fragments to avoid CBC IV attacks (SSL 3.0 &amp; TLS 1.0 only).\nchoice | disable | Do not send empty fragments.\nchoice | enable | Send empty fragments.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ssl_server_algorithm": {
          "aliases": [],
          "description": "Permitted encryption algorithms for the server side of SSL full mode sessions according to encryption strength\nchoice | high | High encryption. Allow only AES and ChaCha.\nchoice | low | Low encryption. Allow AES, ChaCha, 3DES, RC4, and DES.\nchoice | medium | Medium encryption. Allow AES, ChaCha, 3DES, and RC4.\nchoice | custom | Custom encryption. Use ssl-server-cipher-suites to select the cipher suites that are allowed.\nchoice | client | Use the same encryption algorithms for both client and server sessions.",
          "required": false,
          "choices": [
            "high",
            "low",
            "medium",
            "custom",
            "client"
          ],
          "suboptions": {}
        },
        "ssl_server_cipher_suites": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "ssl_server_cipher_suites_cipher": {
          "aliases": [],
          "description": "Cipher suite name.\nchoice | TLS-RSA-WITH-RC4-128-MD5 | Cipher suite TLS-RSA-WITH-RC4-128-MD5.\nchoice | TLS-RSA-WITH-RC4-128-SHA | Cipher suite TLS-RSA-WITH-RC4-128-SHA.\nchoice | TLS-RSA-WITH-DES-CBC-SHA | Cipher suite TLS-RSA-WITH-DES-CBC-SHA.\nchoice | TLS-RSA-WITH-3DES-EDE-CBC-SHA | Cipher suite TLS-RSA-WITH-3DES-EDE-CBC-SHA.\nchoice | TLS-RSA-WITH-AES-128-CBC-SHA | Cipher suite TLS-RSA-WITH-AES-128-CBC-SHA.\nchoice | TLS-RSA-WITH-AES-256-CBC-SHA | Cipher suite TLS-RSA-WITH-AES-256-CBC-SHA.\nchoice | TLS-RSA-WITH-AES-128-CBC-SHA256 | Cipher suite TLS-RSA-WITH-AES-128-CBC-SHA256.\nchoice | TLS-RSA-WITH-AES-256-CBC-SHA256 | Cipher suite TLS-RSA-WITH-AES-256-CBC-SHA256.\nchoice | TLS-RSA-WITH-CAMELLIA-128-CBC-SHA | Cipher suite TLS-RSA-WITH-CAMELLIA-128-CBC-SHA.\nchoice | TLS-RSA-WITH-CAMELLIA-256-CBC-SHA | Cipher suite TLS-RSA-WITH-CAMELLIA-256-CBC-SHA.\nchoice | TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256 | Cipher suite TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256.\nchoice | TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256 | Cipher suite TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256.\nchoice | TLS-RSA-WITH-SEED-CBC-SHA | Cipher suite TLS-RSA-WITH-SEED-CBC-SHA.\nchoice | TLS-RSA-WITH-ARIA-128-CBC-SHA256 | Cipher suite TLS-RSA-WITH-ARIA-128-CBC-SHA256.\nchoice | TLS-RSA-WITH-ARIA-256-CBC-SHA384 | Cipher suite TLS-RSA-WITH-ARIA-256-CBC-SHA384.\nchoice | TLS-DHE-RSA-WITH-DES-CBC-SHA | Cipher suite TLS-DHE-RSA-WITH-DES-CBC-SHA.\nchoice | TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA | Cipher suite TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA.\nchoice | TLS-DHE-RSA-WITH-AES-128-CBC-SHA | Cipher suite TLS-DHE-RSA-WITH-AES-128-CBC-SHA.\nchoice | TLS-DHE-RSA-WITH-AES-256-CBC-SHA | Cipher suite TLS-DHE-RSA-WITH-AES-256-CBC-SHA.\nchoice | TLS-DHE-RSA-WITH-AES-128-CBC-SHA256 | Cipher suite TLS-DHE-RSA-WITH-AES-128-CBC-SHA256.\nchoice | TLS-DHE-RSA-WITH-AES-256-CBC-SHA256 | Cipher suite TLS-DHE-RSA-WITH-AES-256-CBC-SHA256.\nchoice | TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA | Cipher suite TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA.\nchoice | TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA | Cipher suite TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA.\nchoice | TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256 | Cipher suite TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256.\nchoice | TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256 | Cipher suite TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256.\nchoice | TLS-DHE-RSA-WITH-SEED-CBC-SHA | Cipher suite TLS-DHE-RSA-WITH-SEED-CBC-SHA.\nchoice | TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256 | Cipher suite TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256.\nchoice | TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384 | Cipher suite TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384.\nchoice | TLS-ECDHE-RSA-WITH-RC4-128-SHA | Cipher suite TLS-ECDHE-RSA-WITH-RC4-128-SHA.\nchoice | TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA | Cipher suite TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA.\nchoice | TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA | Cipher suite TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA.\nchoice | TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA | Cipher suite TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA.\nchoice | TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256 | Cipher suite TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256.\nchoice | TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256 | Suite TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256.\nchoice | TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256 | Cipher suite TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256.\nchoice | TLS-DHE-RSA-WITH-AES-128-GCM-SHA256 | Cipher suite TLS-DHE-RSA-WITH-AES-128-GCM-SHA256.\nchoice | TLS-DHE-RSA-WITH-AES-256-GCM-SHA384 | Cipher suite TLS-DHE-RSA-WITH-AES-256-GCM-SHA384.\nchoice | TLS-DHE-DSS-WITH-AES-128-CBC-SHA | Cipher suite TLS-DHE-DSS-WITH-AES-128-CBC-SHA.\nchoice | TLS-DHE-DSS-WITH-AES-256-CBC-SHA | Cipher suite TLS-DHE-DSS-WITH-AES-256-CBC-SHA.\nchoice | TLS-DHE-DSS-WITH-AES-128-CBC-SHA256 | Cipher suite TLS-DHE-DSS-WITH-AES-128-CBC-SHA256.\nchoice | TLS-DHE-DSS-WITH-AES-128-GCM-SHA256 | Cipher suite TLS-DHE-DSS-WITH-AES-128-GCM-SHA256.\nchoice | TLS-DHE-DSS-WITH-AES-256-CBC-SHA256 | Cipher suite TLS-DHE-DSS-WITH-AES-256-CBC-SHA256.\nchoice | TLS-DHE-DSS-WITH-AES-256-GCM-SHA384 | Cipher suite TLS-DHE-DSS-WITH-AES-256-GCM-SHA384.\nchoice | TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256 | Cipher suite TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256.\nchoice | TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256 | Cipher suite TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256.\nchoice | TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384 | Cipher suite TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384.\nchoice | TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384 | Cipher suite TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384.\nchoice | TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA | Cipher suite TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA.\nchoice | TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256 | Cipher suite TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256.\nchoice | TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256 | Cipher suite TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256.\nchoice | TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384 | Cipher suite TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384.\nchoice | TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384 | Cipher suite TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384.\nchoice | TLS-RSA-WITH-AES-128-GCM-SHA256 | Cipher suite TLS-RSA-WITH-AES-128-GCM-SHA256.\nchoice | TLS-RSA-WITH-AES-256-GCM-SHA384 | Cipher suite TLS-RSA-WITH-AES-256-GCM-SHA384.\nchoice | TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA | Cipher suite TLS-DSS-RSA-WITH-CAMELLIA-128-CBC-SHA.\nchoice | TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA | Cipher suite TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA.\nchoice | TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256 | Cipher suite TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256.\nchoice | TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256 | Cipher suite TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256.\nchoice | TLS-DHE-DSS-WITH-SEED-CBC-SHA | Cipher suite TLS-DHE-DSS-WITH-SEED-CBC-SHA.\nchoice | TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256 | Cipher suite TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256.\nchoice | TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384 | Cipher suite TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384.\nchoice | TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256 | Cipher suite TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256.\nchoice | TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384 | Cipher suite TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384.\nchoice | TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256 | Cipher suite TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC_SHA256.\nchoice | TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384 | Cipher suite TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC_SHA384.\nchoice | TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA | Cipher suite TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA.\nchoice | TLS-DHE-DSS-WITH-DES-CBC-SHA | Cipher suite TLS-DHE-DSS-WITH-DES-CBC-SHA.",
          "required": false,
          "choices": [
            "TLS-RSA-WITH-RC4-128-MD5",
            "TLS-RSA-WITH-RC4-128-SHA",
            "TLS-RSA-WITH-DES-CBC-SHA",
            "TLS-RSA-WITH-3DES-EDE-CBC-SHA",
            "TLS-RSA-WITH-AES-128-CBC-SHA",
            "TLS-RSA-WITH-AES-256-CBC-SHA",
            "TLS-RSA-WITH-AES-128-CBC-SHA256",
            "TLS-RSA-WITH-AES-256-CBC-SHA256",
            "TLS-RSA-WITH-CAMELLIA-128-CBC-SHA",
            "TLS-RSA-WITH-CAMELLIA-256-CBC-SHA",
            "TLS-RSA-WITH-CAMELLIA-128-CBC-SHA256",
            "TLS-RSA-WITH-CAMELLIA-256-CBC-SHA256",
            "TLS-RSA-WITH-SEED-CBC-SHA",
            "TLS-RSA-WITH-ARIA-128-CBC-SHA256",
            "TLS-RSA-WITH-ARIA-256-CBC-SHA384",
            "TLS-DHE-RSA-WITH-DES-CBC-SHA",
            "TLS-DHE-RSA-WITH-3DES-EDE-CBC-SHA",
            "TLS-DHE-RSA-WITH-AES-128-CBC-SHA",
            "TLS-DHE-RSA-WITH-AES-256-CBC-SHA",
            "TLS-DHE-RSA-WITH-AES-128-CBC-SHA256",
            "TLS-DHE-RSA-WITH-AES-256-CBC-SHA256",
            "TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA",
            "TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA",
            "TLS-DHE-RSA-WITH-CAMELLIA-128-CBC-SHA256",
            "TLS-DHE-RSA-WITH-CAMELLIA-256-CBC-SHA256",
            "TLS-DHE-RSA-WITH-SEED-CBC-SHA",
            "TLS-DHE-RSA-WITH-ARIA-128-CBC-SHA256",
            "TLS-DHE-RSA-WITH-ARIA-256-CBC-SHA384",
            "TLS-ECDHE-RSA-WITH-RC4-128-SHA",
            "TLS-ECDHE-RSA-WITH-3DES-EDE-CBC-SHA",
            "TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA",
            "TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA",
            "TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256",
            "TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256",
            "TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256",
            "TLS-DHE-RSA-WITH-AES-128-GCM-SHA256",
            "TLS-DHE-RSA-WITH-AES-256-GCM-SHA384",
            "TLS-DHE-DSS-WITH-AES-128-CBC-SHA",
            "TLS-DHE-DSS-WITH-AES-256-CBC-SHA",
            "TLS-DHE-DSS-WITH-AES-128-CBC-SHA256",
            "TLS-DHE-DSS-WITH-AES-128-GCM-SHA256",
            "TLS-DHE-DSS-WITH-AES-256-CBC-SHA256",
            "TLS-DHE-DSS-WITH-AES-256-GCM-SHA384",
            "TLS-ECDHE-RSA-WITH-AES-128-CBC-SHA256",
            "TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256",
            "TLS-ECDHE-RSA-WITH-AES-256-CBC-SHA384",
            "TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384",
            "TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA",
            "TLS-ECDHE-ECDSA-WITH-AES-128-CBC-SHA256",
            "TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256",
            "TLS-ECDHE-ECDSA-WITH-AES-256-CBC-SHA384",
            "TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384",
            "TLS-RSA-WITH-AES-128-GCM-SHA256",
            "TLS-RSA-WITH-AES-256-GCM-SHA384",
            "TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA",
            "TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA",
            "TLS-DHE-DSS-WITH-CAMELLIA-128-CBC-SHA256",
            "TLS-DHE-DSS-WITH-CAMELLIA-256-CBC-SHA256",
            "TLS-DHE-DSS-WITH-SEED-CBC-SHA",
            "TLS-DHE-DSS-WITH-ARIA-128-CBC-SHA256",
            "TLS-DHE-DSS-WITH-ARIA-256-CBC-SHA384",
            "TLS-ECDHE-RSA-WITH-ARIA-128-CBC-SHA256",
            "TLS-ECDHE-RSA-WITH-ARIA-256-CBC-SHA384",
            "TLS-ECDHE-ECDSA-WITH-ARIA-128-CBC-SHA256",
            "TLS-ECDHE-ECDSA-WITH-ARIA-256-CBC-SHA384",
            "TLS-DHE-DSS-WITH-3DES-EDE-CBC-SHA",
            "TLS-DHE-DSS-WITH-DES-CBC-SHA"
          ],
          "suboptions": {}
        },
        "ssl_server_cipher_suites_priority": {
          "aliases": [],
          "description": "SSL/TLS cipher suites priority.",
          "required": false,
          "suboptions": {}
        },
        "ssl_server_cipher_suites_versions": {
          "aliases": [],
          "description": "SSL/TLS versions that the cipher suite can be used with.\nFLAG Based Options. Specify multiple in list form.\nflag | ssl-3.0 | SSL 3.0.\nflag | tls-1.0 | TLS 1.0.\nflag | tls-1.1 | TLS 1.1.\nflag | tls-1.2 | TLS 1.2.",
          "required": false,
          "choices": [
            "ssl-3.0",
            "tls-1.0",
            "tls-1.1",
            "tls-1.2"
          ],
          "suboptions": {}
        },
        "ssl_server_max_version": {
          "aliases": [],
          "description": "Highest SSL/TLS version acceptable from a server. Use the client setting by default.\nchoice | ssl-3.0 | SSL 3.0.\nchoice | tls-1.0 | TLS 1.0.\nchoice | tls-1.1 | TLS 1.1.\nchoice | tls-1.2 | TLS 1.2.\nchoice | client | Use same value as client configuration.",
          "required": false,
          "choices": [
            "ssl-3.0",
            "tls-1.0",
            "tls-1.1",
            "tls-1.2",
            "client"
          ],
          "suboptions": {}
        },
        "ssl_server_min_version": {
          "aliases": [],
          "description": "Lowest SSL/TLS version acceptable from a server. Use the client setting by default.\nchoice | ssl-3.0 | SSL 3.0.\nchoice | tls-1.0 | TLS 1.0.\nchoice | tls-1.1 | TLS 1.1.\nchoice | tls-1.2 | TLS 1.2.\nchoice | client | Use same value as client configuration.",
          "required": false,
          "choices": [
            "ssl-3.0",
            "tls-1.0",
            "tls-1.1",
            "tls-1.2",
            "client"
          ],
          "suboptions": {}
        },
        "ssl_server_session_state_max": {
          "aliases": [],
          "description": "Maximum number of FortiGate to Server SSL session states to keep.",
          "required": false,
          "suboptions": {}
        },
        "ssl_server_session_state_timeout": {
          "aliases": [],
          "description": "Number of minutes to keep FortiGate to Server SSL session state.",
          "required": false,
          "suboptions": {}
        },
        "ssl_server_session_state_type": {
          "aliases": [],
          "description": "How to expire SSL sessions for the segment of the SSL connection between the server and the FortiGate.\nchoice | disable | Do not keep session states.\nchoice | time | Expire session states after this many minutes.\nchoice | count | Expire session states when this maximum is reached.\nchoice | both | Expire session states based on time or count, whichever occurs first.",
          "required": false,
          "choices": [
            "disable",
            "time",
            "count",
            "both"
          ],
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Configure a static NAT, load balance, server load balance, DNS translation, or FQDN VIP.\nchoice | static-nat | Static NAT.\nchoice | load-balance | Load balance.\nchoice | server-load-balance | Server load balance.\nchoice | dns-translation | DNS translation.\nchoice | fqdn | FQDN Translation",
          "required": false,
          "choices": [
            "static-nat",
            "load-balance",
            "server-load-balance",
            "dns-translation",
            "fqdn"
          ],
          "suboptions": {}
        },
        "weblogic_server": {
          "aliases": [],
          "description": "Enable to add an HTTP header to indicate SSL offloading for a WebLogic server.\nchoice | disable | Do not add HTTP header indicating SSL offload for WebLogic server.\nchoice | enable | Add HTTP header indicating SSL offload for WebLogic server.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "websphere_server": {
          "aliases": [],
          "description": "Enable to add an HTTP header to indicate SSL offloading for a WebSphere server.\nchoice | disable | Do not add HTTP header indicating SSL offload for WebSphere server.\nchoice | enable | Add HTTP header indicating SSL offload for WebSphere server.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages Virtual IPs objects in FortiManager"
    },
    "examples": "\n# BASIC FULL STATIC NAT MAPPING\n- name: EDIT FMGR_FIREWALL_VIP SNAT\n  community.fortios.fmgr_fwobj_vip:\n    name: \"Basic StaticNAT Map\"\n    mode: \"set\"\n    adom: \"ansible\"\n    type: \"static-nat\"\n    extip: \"82.72.192.185\"\n    extintf: \"any\"\n    mappedip: \"10.7.220.25\"\n    comment: \"Created by Ansible\"\n    color: \"17\"\n\n# BASIC PORT PNAT MAPPING\n- name: EDIT FMGR_FIREWALL_VIP PNAT\n  community.fortios.fmgr_fwobj_vip:\n    name: \"Basic PNAT Map Port 10443\"\n    mode: \"set\"\n    adom: \"ansible\"\n    type: \"static-nat\"\n    extip: \"82.72.192.185\"\n    extport: \"10443\"\n    extintf: \"any\"\n    portforward: \"enable\"\n    protocol: \"tcp\"\n    mappedip: \"10.7.220.25\"\n    mappedport: \"443\"\n    comment: \"Created by Ansible\"\n    color: \"17\"\n\n# BASIC DNS TRANSLATION NAT\n- name: EDIT FMGR_FIREWALL_DNST\n  community.fortios.fmgr_fwobj_vip:\n    name: \"Basic DNS Translation\"\n    mode: \"set\"\n    adom: \"ansible\"\n    type: \"dns-translation\"\n    extip: \"192.168.0.1-192.168.0.100\"\n    extintf: \"dmz\"\n    mappedip: \"3.3.3.0/24, 4.0.0.0/24\"\n    comment: \"Created by Ansible\"\n    color: \"12\"\n\n# BASIC FQDN NAT\n- name: EDIT FMGR_FIREWALL_FQDN\n  community.fortios.fmgr_fwobj_vip:\n    name: \"Basic FQDN Translation\"\n    mode: \"set\"\n    adom: \"ansible\"\n    type: \"fqdn\"\n    mapped_addr: \"google-play\"\n    comment: \"Created by Ansible\"\n    color: \"5\"\n\n# DELETE AN ENTRY\n- name: DELETE FMGR_FIREWALL_VIP PNAT\n  community.fortios.fmgr_fwobj_vip:\n    name: \"Basic PNAT Map Port 10443\"\n    mode: \"delete\"\n    adom: \"ansible\"\n"
  },
  "community.fortios.fmgr_fwpol_ipv4": {
    "doc": {
      "description": "Allows the add/delete of Firewall Policies on Packages in FortiManager.",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "action": {
          "aliases": [],
          "description": "Policy action (allow/deny/ipsec).\nchoice | deny | Blocks sessions that match the firewall policy.\nchoice | accept | Allows session that match the firewall policy.\nchoice | ipsec | Firewall policy becomes a policy-based IPsec VPN policy.",
          "required": false,
          "choices": [
            "deny",
            "accept",
            "ipsec"
          ],
          "suboptions": {}
        },
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "app_category": {
          "aliases": [],
          "description": "Application category ID list.",
          "required": false,
          "suboptions": {}
        },
        "app_group": {
          "aliases": [],
          "description": "Application group names.",
          "required": false,
          "suboptions": {}
        },
        "application": {
          "aliases": [],
          "description": "Application ID list.",
          "required": false,
          "suboptions": {}
        },
        "application_list": {
          "aliases": [],
          "description": "Name of an existing Application list.",
          "required": false,
          "suboptions": {}
        },
        "auth_cert": {
          "aliases": [],
          "description": "HTTPS server certificate for policy authentication.",
          "required": false,
          "suboptions": {}
        },
        "auth_path": {
          "aliases": [],
          "description": "Enable/disable authentication-based routing.\nchoice | disable | Disable authentication-based routing.\nchoice | enable | Enable authentication-based routing.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "auth_redirect_addr": {
          "aliases": [],
          "description": "HTTP-to-HTTPS redirect address for firewall authentication.",
          "required": false,
          "suboptions": {}
        },
        "auto_asic_offload": {
          "aliases": [],
          "description": "Enable/disable offloading security profile processing to CP processors.\nchoice | disable | Disable ASIC offloading.\nchoice | enable | Enable auto ASIC offloading.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "av_profile": {
          "aliases": [],
          "description": "Name of an existing Antivirus profile.",
          "required": false,
          "suboptions": {}
        },
        "block_notification": {
          "aliases": [],
          "description": "Enable/disable block notification.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "captive_portal_exempt": {
          "aliases": [],
          "description": "Enable to exempt some users from the captive portal.\nchoice | disable | Disable exemption of captive portal.\nchoice | enable | Enable exemption of captive portal.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "capture_packet": {
          "aliases": [],
          "description": "Enable/disable capture packets.\nchoice | disable | Disable capture packets.\nchoice | enable | Enable capture packets.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "comments": {
          "aliases": [],
          "description": "Comment.",
          "required": false,
          "suboptions": {}
        },
        "custom_log_fields": {
          "aliases": [],
          "description": "Custom fields to append to log messages for this policy.",
          "required": false,
          "suboptions": {}
        },
        "delay_tcp_npu_session": {
          "aliases": [],
          "description": "Enable TCP NPU session delay to guarantee packet order of 3-way handshake.\nchoice | disable | Disable TCP NPU session delay in order to guarantee packet order of 3-way handshake.\nchoice | enable | Enable TCP NPU session delay in order to guarantee packet order of 3-way handshake.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "devices": {
          "aliases": [],
          "description": "Names of devices or device groups that can be matched by the policy.",
          "required": false,
          "suboptions": {}
        },
        "diffserv_forward": {
          "aliases": [],
          "description": "Enable to change packet's DiffServ values to the specified diffservcode-forward value.\nchoice | disable | Disable WAN optimization.\nchoice | enable | Enable WAN optimization.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "diffserv_reverse": {
          "aliases": [],
          "description": "Enable to change packet's reverse (reply) DiffServ values to the specified diffservcode-rev value.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "diffservcode_forward": {
          "aliases": [],
          "description": "Change packet's DiffServ to this value.",
          "required": false,
          "suboptions": {}
        },
        "diffservcode_rev": {
          "aliases": [],
          "description": "Change packet's reverse (reply) DiffServ to this value.",
          "required": false,
          "suboptions": {}
        },
        "disclaimer": {
          "aliases": [],
          "description": "Enable/disable user authentication disclaimer.\nchoice | disable | Disable user authentication disclaimer.\nchoice | enable | Enable user authentication disclaimer.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dlp_sensor": {
          "aliases": [],
          "description": "Name of an existing DLP sensor.",
          "required": false,
          "suboptions": {}
        },
        "dnsfilter_profile": {
          "aliases": [],
          "description": "Name of an existing DNS filter profile.",
          "required": false,
          "suboptions": {}
        },
        "dscp_match": {
          "aliases": [],
          "description": "Enable DSCP check.\nchoice | disable | Disable DSCP check.\nchoice | enable | Enable DSCP check.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dscp_negate": {
          "aliases": [],
          "description": "Enable negated DSCP match.\nchoice | disable | Disable DSCP negate.\nchoice | enable | Enable DSCP negate.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dscp_value": {
          "aliases": [],
          "description": "DSCP value.",
          "required": false,
          "suboptions": {}
        },
        "dsri": {
          "aliases": [],
          "description": "Enable DSRI to ignore HTTP server responses.\nchoice | disable | Disable DSRI.\nchoice | enable | Enable DSRI.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dstaddr": {
          "aliases": [],
          "description": "Destination address and address group names.",
          "required": false,
          "suboptions": {}
        },
        "dstaddr_negate": {
          "aliases": [],
          "description": "When enabled dstaddr specifies what the destination address must NOT be.\nchoice | disable | Disable destination address negate.\nchoice | enable | Enable destination address negate.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "dstintf": {
          "aliases": [],
          "description": "Outgoing (egress) interface.",
          "required": false,
          "suboptions": {}
        },
        "fail_on_missing_dependency": {
          "aliases": [],
          "description": "Normal behavior is to \"skip\" tasks that fail dependency checks, so other tasks can run.\nIf set to \"enabled\" if a failed dependency check happeens, Ansible will exit as with failure instead of skip.",
          "default": "disable",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "firewall_session_dirty": {
          "aliases": [],
          "description": "How to handle sessions if the configuration of this firewall policy changes.\nchoice | check-all | Flush all current sessions accepted by this policy.\nchoice | check-new | Continue to allow sessions already accepted by this policy.",
          "required": false,
          "choices": [
            "check-all",
            "check-new"
          ],
          "suboptions": {}
        },
        "fixedport": {
          "aliases": [],
          "description": "Enable to prevent source NAT from changing a session's source port.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "fsso": {
          "aliases": [],
          "description": "Enable/disable Fortinet Single Sign-On.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "fsso_agent_for_ntlm": {
          "aliases": [],
          "description": "FSSO agent to use for NTLM authentication.",
          "required": false,
          "suboptions": {}
        },
        "global_label": {
          "aliases": [],
          "description": "Label for the policy that appears when the GUI is in Global View mode.",
          "required": false,
          "suboptions": {}
        },
        "groups": {
          "aliases": [],
          "description": "Names of user groups that can authenticate with this policy.",
          "required": false,
          "suboptions": {}
        },
        "gtp_profile": {
          "aliases": [],
          "description": "GTP profile.",
          "required": false,
          "suboptions": {}
        },
        "icap_profile": {
          "aliases": [],
          "description": "Name of an existing ICAP profile.",
          "required": false,
          "suboptions": {}
        },
        "identity_based_route": {
          "aliases": [],
          "description": "Name of identity-based routing rule.",
          "required": false,
          "suboptions": {}
        },
        "inbound": {
          "aliases": [],
          "description": "Policy-based IPsec VPN |  only traffic from the remote network can initiate a VPN.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "internet_service": {
          "aliases": [],
          "description": "Enable/disable use of Internet Services for this policy. If enabled, dstaddr and service are not used.\nchoice | disable | Disable use of Internet Services in policy.\nchoice | enable | Enable use of Internet Services in policy.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "internet_service_custom": {
          "aliases": [],
          "description": "Custom Internet Service name.",
          "required": false,
          "suboptions": {}
        },
        "internet_service_id": {
          "aliases": [],
          "description": "Internet Service ID.",
          "required": false,
          "suboptions": {}
        },
        "internet_service_negate": {
          "aliases": [],
          "description": "When enabled internet-service specifies what the service must NOT be.\nchoice | disable | Disable negated Internet Service match.\nchoice | enable | Enable negated Internet Service match.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "internet_service_src": {
          "aliases": [],
          "description": "Enable/disable use of Internet Services in source for this policy. If enabled, source address is not used.\nchoice | disable | Disable use of Internet Services source in policy.\nchoice | enable | Enable use of Internet Services source in policy.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "internet_service_src_custom": {
          "aliases": [],
          "description": "Custom Internet Service source name.",
          "required": false,
          "suboptions": {}
        },
        "internet_service_src_id": {
          "aliases": [],
          "description": "Internet Service source ID.",
          "required": false,
          "suboptions": {}
        },
        "internet_service_src_negate": {
          "aliases": [],
          "description": "When enabled internet-service-src specifies what the service must NOT be.\nchoice | disable | Disable negated Internet Service source match.\nchoice | enable | Enable negated Internet Service source match.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ippool": {
          "aliases": [],
          "description": "Enable to use IP Pools for source NAT.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ips_sensor": {
          "aliases": [],
          "description": "Name of an existing IPS sensor.",
          "required": false,
          "suboptions": {}
        },
        "label": {
          "aliases": [],
          "description": "Label for the policy that appears when the GUI is in Section View mode.",
          "required": false,
          "suboptions": {}
        },
        "learning_mode": {
          "aliases": [],
          "description": "Enable to allow everything, but log all of the meaningful data for security information gathering.\nchoice | disable | Disable learning mode in firewall policy.\nchoice | enable | Enable learning mode in firewall policy.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "logtraffic": {
          "aliases": [],
          "description": "Enable or disable logging. Log all sessions or security profile sessions.\nchoice | disable | Disable all logging for this policy.\nchoice | all | Log all sessions accepted or denied by this policy.\nchoice | utm | Log traffic that has a security profile applied to it.",
          "required": false,
          "choices": [
            "disable",
            "all",
            "utm"
          ],
          "suboptions": {}
        },
        "logtraffic_start": {
          "aliases": [],
          "description": "Record logs when a session starts and ends.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "match_vip": {
          "aliases": [],
          "description": "Enable to match packets that have had their destination addresses changed by a VIP.\nchoice | disable | Do not match DNATed packet.\nchoice | enable | Match DNATed packet.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "mms_profile": {
          "aliases": [],
          "description": "Name of an existing MMS profile.",
          "required": false,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.\nAllows use of soft-adds instead of overwriting existing values",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete",
            "update"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Policy name.",
          "required": false,
          "suboptions": {}
        },
        "nat": {
          "aliases": [],
          "description": "Enable/disable source NAT.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "natinbound": {
          "aliases": [],
          "description": "Policy-based IPsec VPN |  apply destination NAT to inbound traffic.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "natip": {
          "aliases": [],
          "description": "Policy-based IPsec VPN |  source NAT IP address for outgoing traffic.",
          "required": false,
          "suboptions": {}
        },
        "natoutbound": {
          "aliases": [],
          "description": "Policy-based IPsec VPN |  apply source NAT to outbound traffic.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "np_acceleration": {
          "aliases": [],
          "description": "Enable/disable UTM Network Processor acceleration.\nchoice | disable | Disable UTM Network Processor acceleration.\nchoice | enable | Enable UTM Network Processor acceleration.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ntlm": {
          "aliases": [],
          "description": "Enable/disable NTLM authentication.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ntlm_enabled_browsers": {
          "aliases": [],
          "description": "HTTP-User-Agent value of supported browsers.",
          "required": false,
          "suboptions": {}
        },
        "ntlm_guest": {
          "aliases": [],
          "description": "Enable/disable NTLM guest user access.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "outbound": {
          "aliases": [],
          "description": "Policy-based IPsec VPN |  only traffic from the internal network can initiate a VPN.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "package_name": {
          "aliases": [],
          "description": "The policy package you want to modify",
          "default": "default",
          "required": false,
          "suboptions": {}
        },
        "per_ip_shaper": {
          "aliases": [],
          "description": "Per-IP traffic shaper.",
          "required": false,
          "suboptions": {}
        },
        "permit_any_host": {
          "aliases": [],
          "description": "Accept UDP packets from any host.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "permit_stun_host": {
          "aliases": [],
          "description": "Accept UDP packets from any Session Traversal Utilities for NAT (STUN) host.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "policyid": {
          "aliases": [],
          "description": "Policy ID.",
          "required": false,
          "suboptions": {}
        },
        "poolname": {
          "aliases": [],
          "description": "IP Pool names.",
          "required": false,
          "suboptions": {}
        },
        "profile_group": {
          "aliases": [],
          "description": "Name of profile group.",
          "required": false,
          "suboptions": {}
        },
        "profile_protocol_options": {
          "aliases": [],
          "description": "Name of an existing Protocol options profile.",
          "required": false,
          "suboptions": {}
        },
        "profile_type": {
          "aliases": [],
          "description": "Determine whether the firewall policy allows security profile groups or single profiles only.\nchoice | single | Do not allow security profile groups.\nchoice | group | Allow security profile groups.",
          "required": false,
          "choices": [
            "single",
            "group"
          ],
          "suboptions": {}
        },
        "radius_mac_auth_bypass": {
          "aliases": [],
          "description": "Enable MAC authentication bypass. The bypassed MAC address must be received from RADIUS server.\nchoice | disable | Disable MAC authentication bypass.\nchoice | enable | Enable MAC authentication bypass.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "redirect_url": {
          "aliases": [],
          "description": "URL users are directed to after seeing and accepting the disclaimer or authenticating.",
          "required": false,
          "suboptions": {}
        },
        "replacemsg_override_group": {
          "aliases": [],
          "description": "Override the default replacement message group for this policy.",
          "required": false,
          "suboptions": {}
        },
        "rsso": {
          "aliases": [],
          "description": "Enable/disable RADIUS single sign-on (RSSO).\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "rtp_addr": {
          "aliases": [],
          "description": "Address names if this is an RTP NAT policy.",
          "required": false,
          "suboptions": {}
        },
        "rtp_nat": {
          "aliases": [],
          "description": "Enable Real Time Protocol (RTP) NAT.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "scan_botnet_connections": {
          "aliases": [],
          "description": "Block or monitor connections to Botnet servers or disable Botnet scanning.\nchoice | disable | Do not scan connections to botnet servers.\nchoice | block | Block connections to botnet servers.\nchoice | monitor | Log connections to botnet servers.",
          "required": false,
          "choices": [
            "disable",
            "block",
            "monitor"
          ],
          "suboptions": {}
        },
        "schedule": {
          "aliases": [],
          "description": "Schedule name.",
          "required": false,
          "suboptions": {}
        },
        "schedule_timeout": {
          "aliases": [],
          "description": "Enable to force current sessions to end when the schedule object times out.\nchoice | disable | Disable schedule timeout.\nchoice | enable | Enable schedule timeout.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "send_deny_packet": {
          "aliases": [],
          "description": "Enable to send a reply when a session is denied or blocked by a firewall policy.\nchoice | disable | Disable deny-packet sending.\nchoice | enable | Enable deny-packet sending.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "service": {
          "aliases": [],
          "description": "Service and service group names.",
          "required": false,
          "suboptions": {}
        },
        "service_negate": {
          "aliases": [],
          "description": "When enabled service specifies what the service must NOT be.\nchoice | disable | Disable negated service match.\nchoice | enable | Enable negated service match.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "session_ttl": {
          "aliases": [],
          "description": "TTL in seconds for sessions accepted by this policy (0 means use the system default session TTL).",
          "required": false,
          "suboptions": {}
        },
        "spamfilter_profile": {
          "aliases": [],
          "description": "Name of an existing Spam filter profile.",
          "required": false,
          "suboptions": {}
        },
        "srcaddr": {
          "aliases": [],
          "description": "Source address and address group names.",
          "required": false,
          "suboptions": {}
        },
        "srcaddr_negate": {
          "aliases": [],
          "description": "When enabled srcaddr specifies what the source address must NOT be.\nchoice | disable | Disable source address negate.\nchoice | enable | Enable source address negate.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "srcintf": {
          "aliases": [],
          "description": "Incoming (ingress) interface.",
          "required": false,
          "suboptions": {}
        },
        "ssh_filter_profile": {
          "aliases": [],
          "description": "Name of an existing SSH filter profile.",
          "required": false,
          "suboptions": {}
        },
        "ssl_mirror": {
          "aliases": [],
          "description": "Enable to copy decrypted SSL traffic to a FortiGate interface (called SSL mirroring).\nchoice | disable | Disable SSL mirror.\nchoice | enable | Enable SSL mirror.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ssl_mirror_intf": {
          "aliases": [],
          "description": "SSL mirror interface name.",
          "required": false,
          "suboptions": {}
        },
        "ssl_ssh_profile": {
          "aliases": [],
          "description": "Name of an existing SSL SSH profile.",
          "required": false,
          "suboptions": {}
        },
        "status": {
          "aliases": [],
          "description": "Enable or disable this policy.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "tcp_mss_receiver": {
          "aliases": [],
          "description": "Receiver TCP maximum segment size (MSS).",
          "required": false,
          "suboptions": {}
        },
        "tcp_mss_sender": {
          "aliases": [],
          "description": "Sender TCP maximum segment size (MSS).",
          "required": false,
          "suboptions": {}
        },
        "tcp_session_without_syn": {
          "aliases": [],
          "description": "Enable/disable creation of TCP session without SYN flag.\nchoice | all | Enable TCP session without SYN.\nchoice | data-only | Enable TCP session data only.\nchoice | disable | Disable TCP session without SYN.",
          "required": false,
          "choices": [
            "all",
            "data-only",
            "disable"
          ],
          "suboptions": {}
        },
        "timeout_send_rst": {
          "aliases": [],
          "description": "Enable/disable sending RST packets when TCP sessions expire.\nchoice | disable | Disable sending of RST packet upon TCP session expiration.\nchoice | enable | Enable sending of RST packet upon TCP session expiration.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "traffic_shaper": {
          "aliases": [],
          "description": "Traffic shaper.",
          "required": false,
          "suboptions": {}
        },
        "traffic_shaper_reverse": {
          "aliases": [],
          "description": "Reverse traffic shaper.",
          "required": false,
          "suboptions": {}
        },
        "url_category": {
          "aliases": [],
          "description": "URL category ID list.",
          "required": false,
          "suboptions": {}
        },
        "users": {
          "aliases": [],
          "description": "Names of individual users that can authenticate with this policy.",
          "required": false,
          "suboptions": {}
        },
        "utm_status": {
          "aliases": [],
          "description": "Enable to add one or more security profiles (AV, IPS, etc.) to the firewall policy.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "vlan_cos_fwd": {
          "aliases": [],
          "description": "VLAN forward direction user priority | 255 passthrough, 0 lowest, 7 highest.",
          "required": false,
          "suboptions": {}
        },
        "vlan_cos_rev": {
          "aliases": [],
          "description": "VLAN reverse direction user priority | 255 passthrough, 0 lowest, 7 highest..",
          "required": false,
          "suboptions": {}
        },
        "vlan_filter": {
          "aliases": [],
          "description": "Set VLAN filters.",
          "required": false,
          "suboptions": {}
        },
        "voip_profile": {
          "aliases": [],
          "description": "Name of an existing VoIP profile.",
          "required": false,
          "suboptions": {}
        },
        "vpn_dst_node": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED. This object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.",
          "required": false,
          "suboptions": {}
        },
        "vpn_dst_node_host": {
          "aliases": [],
          "description": "VPN Destination Node Host.",
          "required": false,
          "suboptions": {}
        },
        "vpn_dst_node_seq": {
          "aliases": [],
          "description": "VPN Destination Node Seq.",
          "required": false,
          "suboptions": {}
        },
        "vpn_dst_node_subnet": {
          "aliases": [],
          "description": "VPN Destination Node Seq.",
          "required": false,
          "suboptions": {}
        },
        "vpn_src_node": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED. This object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.",
          "required": false,
          "suboptions": {}
        },
        "vpn_src_node_host": {
          "aliases": [],
          "description": "VPN Source Node Host.",
          "required": false,
          "suboptions": {}
        },
        "vpn_src_node_seq": {
          "aliases": [],
          "description": "VPN Source Node Seq.",
          "required": false,
          "suboptions": {}
        },
        "vpn_src_node_subnet": {
          "aliases": [],
          "description": "VPN Source Node.",
          "required": false,
          "suboptions": {}
        },
        "vpntunnel": {
          "aliases": [],
          "description": "Policy-based IPsec VPN |  name of the IPsec VPN Phase 1.",
          "required": false,
          "suboptions": {}
        },
        "waf_profile": {
          "aliases": [],
          "description": "Name of an existing Web application firewall profile.",
          "required": false,
          "suboptions": {}
        },
        "wanopt": {
          "aliases": [],
          "description": "Enable/disable WAN optimization.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "wanopt_detection": {
          "aliases": [],
          "description": "WAN optimization auto-detection mode.\nchoice | active | Active WAN optimization peer auto-detection.\nchoice | passive | Passive WAN optimization peer auto-detection.\nchoice | off | Turn off WAN optimization peer auto-detection.",
          "required": false,
          "choices": [
            "active",
            "passive",
            "off"
          ],
          "suboptions": {}
        },
        "wanopt_passive_opt": {
          "aliases": [],
          "description": "WAN optimization passive mode options. This option decides what IP address will be used to connect server.\nchoice | default | Allow client side WAN opt peer to decide.\nchoice | transparent | Use address of client to connect to server.\nchoice | non-transparent | Use local FortiGate address to connect to server.",
          "required": false,
          "choices": [
            "default",
            "transparent",
            "non-transparent"
          ],
          "suboptions": {}
        },
        "wanopt_peer": {
          "aliases": [],
          "description": "WAN optimization peer.",
          "required": false,
          "suboptions": {}
        },
        "wanopt_profile": {
          "aliases": [],
          "description": "WAN optimization profile.",
          "required": false,
          "suboptions": {}
        },
        "wccp": {
          "aliases": [],
          "description": "Enable/disable forwarding traffic matching this policy to a configured WCCP server.\nchoice | disable | Disable WCCP setting.\nchoice | enable | Enable WCCP setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "webcache": {
          "aliases": [],
          "description": "Enable/disable web cache.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "webcache_https": {
          "aliases": [],
          "description": "Enable/disable web cache for HTTPS.\nchoice | disable | Disable web cache for HTTPS.\nchoice | enable | Enable web cache for HTTPS.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "webfilter_profile": {
          "aliases": [],
          "description": "Name of an existing Web filter profile.",
          "required": false,
          "suboptions": {}
        },
        "wsso": {
          "aliases": [],
          "description": "Enable/disable WiFi Single Sign On (WSSO).\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Allows the add/delete of Firewall Policies on Packages in FortiManager."
    },
    "examples": "\n- name: ADD VERY BASIC IPV4 POLICY WITH NO NAT (WIDE OPEN)\n  community.fortios.fmgr_fwpol_ipv4:\n    mode: \"set\"\n    adom: \"ansible\"\n    package_name: \"default\"\n    name: \"Basic_IPv4_Policy\"\n    comments: \"Created by Ansible\"\n    action: \"accept\"\n    dstaddr: \"all\"\n    srcaddr: \"all\"\n    dstintf: \"any\"\n    srcintf: \"any\"\n    logtraffic: \"utm\"\n    service: \"ALL\"\n    schedule: \"always\"\n\n- name: ADD VERY BASIC IPV4 POLICY WITH NAT AND MULTIPLE ENTRIES\n  community.fortios.fmgr_fwpol_ipv4:\n    mode: \"set\"\n    adom: \"ansible\"\n    package_name: \"default\"\n    name: \"Basic_IPv4_Policy_2\"\n    comments: \"Created by Ansible\"\n    action: \"accept\"\n    dstaddr: \"google-play\"\n    srcaddr: \"all\"\n    dstintf: \"any\"\n    srcintf: \"any\"\n    logtraffic: \"utm\"\n    service: \"HTTP, HTTPS\"\n    schedule: \"always\"\n    nat: \"enable\"\n    users: \"karen, kevin\"\n\n- name: ADD VERY BASIC IPV4 POLICY WITH NAT AND MULTIPLE ENTRIES AND SEC PROFILES\n  community.fortios.fmgr_fwpol_ipv4:\n    mode: \"set\"\n    adom: \"ansible\"\n    package_name: \"default\"\n    name: \"Basic_IPv4_Policy_3\"\n    comments: \"Created by Ansible\"\n    action: \"accept\"\n    dstaddr: \"google-play, autoupdate.opera.com\"\n    srcaddr: \"corp_internal\"\n    dstintf: \"zone_wan1, zone_wan2\"\n    srcintf: \"zone_int1\"\n    logtraffic: \"utm\"\n    service: \"HTTP, HTTPS\"\n    schedule: \"always\"\n    nat: \"enable\"\n    users: \"karen, kevin\"\n    av_profile: \"sniffer-profile\"\n    ips_sensor: \"default\"\n\n"
  },
  "community.fortios.fmgr_fwpol_package": {
    "doc": {
      "description": "Manages FortiManager Firewall Policies Packages. Policy Packages contain one or more Firewall Policies/Rules and are distritbuted via FortiManager to Fortigates.\nThis module controls the creation/edit/delete/assign of these packages.",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "central_nat": {
          "aliases": [],
          "description": "Central NAT setting.",
          "default": "disable",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "fwpolicy6_implicit_log": {
          "aliases": [],
          "description": "Implicit Log setting for all IPv6 policies in package.",
          "default": "disable",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "fwpolicy_implicit_log": {
          "aliases": [],
          "description": "Implicit Log setting for all IPv4 policies in package.",
          "default": "disable",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "inspection_mode": {
          "aliases": [],
          "description": "Inspection mode setting for the policies flow or proxy.",
          "default": "flow",
          "required": false,
          "choices": [
            "flow",
            "proxy"
          ],
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the FortiManager package or folder.",
          "required": true,
          "suboptions": {}
        },
        "ngfw_mode": {
          "aliases": [],
          "description": "NGFW mode setting for the policies flow or proxy.",
          "default": "profile-based",
          "required": false,
          "choices": [
            "profile-based",
            "policy-based"
          ],
          "suboptions": {}
        },
        "object_type": {
          "aliases": [],
          "description": "Are we managing packages or folders, or installing packages?",
          "required": true,
          "choices": [
            "pkg",
            "folder",
            "install"
          ],
          "suboptions": {}
        },
        "package_folder": {
          "aliases": [],
          "description": "Name of the folder you want to put the package into.",
          "required": false,
          "suboptions": {}
        },
        "parent_folder": {
          "aliases": [],
          "description": "The parent folder name you want to add this object under.",
          "required": false,
          "suboptions": {}
        },
        "scope_members": {
          "aliases": [],
          "description": "The devices or scope that you want to assign this policy package to.",
          "required": false,
          "suboptions": {}
        },
        "scope_members_vdom": {
          "aliases": [],
          "description": "The members VDOM you want to assign the package to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "ssl_ssh_profile": {
          "aliases": [],
          "description": "if policy-based ngfw-mode, refer to firewall ssl-ssh-profile.",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages FortiManager Firewall Policies Packages."
    },
    "examples": "\n- name: CREATE BASIC POLICY PACKAGE\n  community.fortios.fmgr_fwpol_package:\n    adom: \"ansible\"\n    mode: \"add\"\n    name: \"testPackage\"\n    object_type: \"pkg\"\n\n- name: ADD PACKAGE WITH TARGETS\n  community.fortios.fmgr_fwpol_package:\n    mode: \"add\"\n    adom: \"ansible\"\n    name: \"ansibleTestPackage1\"\n    object_type: \"pkg\"\n    inspection_mode: \"flow\"\n    ngfw_mode: \"profile-based\"\n    scope_members: \"seattle-fgt02, seattle-fgt03\"\n\n- name: ADD FOLDER\n  community.fortios.fmgr_fwpol_package:\n    mode: \"add\"\n    adom: \"ansible\"\n    name: \"ansibleTestFolder1\"\n    object_type: \"folder\"\n\n- name: ADD PACKAGE INTO PARENT FOLDER\n  community.fortios.fmgr_fwpol_package:\n    mode: \"set\"\n    adom: \"ansible\"\n    name: \"ansibleTestPackage2\"\n    object_type: \"pkg\"\n    parent_folder: \"ansibleTestFolder1\"\n\n- name: ADD FOLDER INTO PARENT FOLDER\n  community.fortios.fmgr_fwpol_package:\n    mode: \"set\"\n    adom: \"ansible\"\n    name: \"ansibleTestFolder2\"\n    object_type: \"folder\"\n    parent_folder: \"ansibleTestFolder1\"\n\n- name: INSTALL PACKAGE\n  community.fortios.fmgr_fwpol_package:\n    mode: \"set\"\n    adom: \"ansible\"\n    name: \"ansibleTestPackage1\"\n    object_type: \"install\"\n    scope_members: \"seattle-fgt03, seattle-fgt02\"\n\n- name: REMOVE PACKAGE\n  community.fortios.fmgr_fwpol_package:\n    mode: \"delete\"\n    adom: \"ansible\"\n    name: \"ansibleTestPackage1\"\n    object_type: \"pkg\"\n\n- name: REMOVE NESTED PACKAGE\n  community.fortios.fmgr_fwpol_package:\n    mode: \"delete\"\n    adom: \"ansible\"\n    name: \"ansibleTestPackage2\"\n    object_type: \"pkg\"\n    parent_folder: \"ansibleTestFolder1\"\n\n- name: REMOVE NESTED FOLDER\n  community.fortios.fmgr_fwpol_package:\n    mode: \"delete\"\n    adom: \"ansible\"\n    name: \"ansibleTestFolder2\"\n    object_type: \"folder\"\n    parent_folder: \"ansibleTestFolder1\"\n\n- name: REMOVE FOLDER\n  community.fortios.fmgr_fwpol_package:\n    mode: \"delete\"\n    adom: \"ansible\"\n    name: \"ansibleTestFolder1\"\n    object_type: \"folder\"\n"
  },
  "community.fortios.fmgr_ha": {
    "doc": {
      "description": "Change HA state or settings of FortiManager nodes (Standalone/Master/Slave).",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "fmgr_ha_cluster_id": {
          "aliases": [],
          "description": "Sets the ID number of the HA cluster. Defaults to 1.",
          "default": "1",
          "required": false,
          "suboptions": {}
        },
        "fmgr_ha_cluster_pw": {
          "aliases": [],
          "description": "Sets the password for the HA cluster. Only required once. System remembers between HA mode switches.",
          "required": false,
          "suboptions": {}
        },
        "fmgr_ha_file_quota": {
          "aliases": [],
          "description": "Sets the File quota in MB (2048-20480).",
          "default": "4096",
          "required": false,
          "suboptions": {}
        },
        "fmgr_ha_hb_interval": {
          "aliases": [],
          "description": "Sets the heartbeat interval (1-255).",
          "default": "5",
          "required": false,
          "suboptions": {}
        },
        "fmgr_ha_hb_threshold": {
          "aliases": [],
          "description": "Sets heartbeat lost threshold (1-255).",
          "default": "3",
          "required": false,
          "suboptions": {}
        },
        "fmgr_ha_mode": {
          "aliases": [],
          "description": "Sets the role of the FortiManager host for HA.",
          "required": false,
          "choices": [
            "standalone",
            "master",
            "slave"
          ],
          "suboptions": {}
        },
        "fmgr_ha_peer_ipv4": {
          "aliases": [],
          "description": "Sets the IPv4 address of a HA peer.",
          "required": false,
          "suboptions": {}
        },
        "fmgr_ha_peer_ipv6": {
          "aliases": [],
          "description": "Sets the IPv6 address of a HA peer.",
          "required": false,
          "suboptions": {}
        },
        "fmgr_ha_peer_sn": {
          "aliases": [],
          "description": "Sets the HA Peer Serial Number.",
          "required": false,
          "suboptions": {}
        },
        "fmgr_ha_peer_status": {
          "aliases": [],
          "description": "Sets the peer status to enable or disable.",
          "required": false,
          "choices": [
            "enable",
            "disable"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages the High-Availability State of FortiManager Clusters and Nodes."
    },
    "examples": "\n- name: SET FORTIMANAGER HA NODE TO MASTER\n  community.fortios.fmgr_ha:\n    fmgr_ha_mode: \"master\"\n    fmgr_ha_cluster_pw: \"fortinet\"\n    fmgr_ha_cluster_id: \"1\"\n\n- name: SET FORTIMANAGER HA NODE TO SLAVE\n  community.fortios.fmgr_ha:\n    fmgr_ha_mode: \"slave\"\n    fmgr_ha_cluster_pw: \"fortinet\"\n    fmgr_ha_cluster_id: \"1\"\n\n- name: SET FORTIMANAGER HA NODE TO STANDALONE\n  community.fortios.fmgr_ha:\n    fmgr_ha_mode: \"standalone\"\n\n- name: ADD FORTIMANAGER HA PEER\n  community.fortios.fmgr_ha:\n    fmgr_ha_peer_ipv4: \"192.168.1.254\"\n    fmgr_ha_peer_sn: \"FMG-VM1234567890\"\n    fmgr_ha_peer_status: \"enable\"\n\n- name: CREATE CLUSTER ON MASTER\n  community.fortios.fmgr_ha:\n    fmgr_ha_mode: \"master\"\n    fmgr_ha_cluster_pw: \"fortinet\"\n    fmgr_ha_cluster_id: \"1\"\n    fmgr_ha_hb_threshold: \"10\"\n    fmgr_ha_hb_interval: \"15\"\n    fmgr_ha_file_quota: \"2048\"\n"
  },
  "community.fortios.fmgr_provisioning": {
    "doc": {
      "description": "Add model devices on the FortiManager using jsonrpc API and have them pre-configured, so when central management is configured, the configuration is pushed down to the registering devices",
      "has_action": false,
      "options": {
        "adom": {
          "aliases": [],
          "description": "The administrative domain (admon) the configuration belongs to",
          "required": true,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the device to be provisioned.",
          "required": false,
          "suboptions": {}
        },
        "group": {
          "aliases": [],
          "description": "The name of the device group the provisioned device can belong to.",
          "required": false,
          "suboptions": {}
        },
        "host": {
          "aliases": [],
          "description": "The FortiManager's Address.",
          "required": true,
          "suboptions": {}
        },
        "minor_release": {
          "aliases": [],
          "description": "The minor release number such as 6.X.1, as X being the minor release.",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the device to be provisioned.",
          "required": true,
          "suboptions": {}
        },
        "os_type": {
          "aliases": [],
          "description": "The Fortinet OS type to be pushed to the device, such as 'FOS' for FortiOS.",
          "required": true,
          "suboptions": {}
        },
        "os_version": {
          "aliases": [],
          "description": "The Fortinet OS version to be used for the device, such as 5.0 or 6.0.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "The password associated with the username account.",
          "required": false,
          "suboptions": {}
        },
        "patch_release": {
          "aliases": [],
          "description": "The patch release number such as 6.0.X, as X being the patch release.",
          "required": false,
          "suboptions": {}
        },
        "platform": {
          "aliases": [],
          "description": "The platform of the device, such as model number or VM.",
          "required": true,
          "suboptions": {}
        },
        "policy_package": {
          "aliases": [],
          "description": "The name of the policy package to be assigned to the device.",
          "required": true,
          "suboptions": {}
        },
        "serial": {
          "aliases": [],
          "description": "The serial number of the device that will be provisioned.",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "The username to log into the FortiManager",
          "required": true,
          "suboptions": {}
        },
        "vdom": {
          "aliases": [],
          "description": "The virtual domain (vdom) the configuration belongs to",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Provision devices via FortiMananger"
    },
    "examples": "\n- name: Create FGT1 Model Device\n  community.fortios.fmgr_provisioning:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ username }}\"\n    password: \"{{ password }}\"\n    adom: \"root\"\n    vdom: \"root\"\n    policy_package: \"default\"\n    name: \"FGT1\"\n    group: \"Ansible\"\n    serial: \"FGVM000000117994\"\n    platform: \"FortiGate-VM64\"\n    description: \"Provisioned by Ansible\"\n    os_version: '6.0'\n    minor_release: 0\n    patch_release: 0\n    os_type: 'fos'\n\n\n- name: Create FGT2 Model Device\n  community.fortios.fmgr_provisioning:\n    host: \"{{ inventory_hostname }}\"\n    username: \"{{ username }}\"\n    password: \"{{ password }}\"\n    adom: \"root\"\n    vdom: \"root\"\n    policy_package: \"test_pp\"\n    name: \"FGT2\"\n    group: \"Ansible\"\n    serial: \"FGVM000000117992\"\n    platform: \"FortiGate-VM64\"\n    description: \"Provisioned by Ansible\"\n    os_version: '5.0'\n    minor_release: 6\n    patch_release: 0\n    os_type: 'fos'\n\n"
  },
  "community.fortios.fmgr_query": {
    "doc": {
      "description": "Provides information on data objects within FortiManager so that playbooks can perform conditionals.",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "custom_dict": {
          "aliases": [],
          "description": "ADVANCED USERS ONLY! REQUIRES KNOWLEDGE OF FMGR JSON API!\nDICTIONARY JSON FORMAT ONLY -- Custom dictionary/datagram to send to the endpoint.",
          "required": false,
          "suboptions": {}
        },
        "custom_endpoint": {
          "aliases": [],
          "description": "ADVANCED USERS ONLY! REQUIRES KNOWLEDGE OF FMGR JSON API!\nThe HTTP Endpoint on FortiManager you wish to GET from.",
          "required": false,
          "suboptions": {}
        },
        "device_ip": {
          "aliases": [],
          "description": "The IP of the device you want to query.",
          "required": false,
          "suboptions": {}
        },
        "device_serial": {
          "aliases": [],
          "description": "The serial number of the device you want to query.",
          "required": false,
          "suboptions": {}
        },
        "device_unique_name": {
          "aliases": [],
          "description": "The desired \"friendly\" name of the device you want to query.",
          "required": false,
          "suboptions": {}
        },
        "nodes": {
          "aliases": [],
          "description": "A LIST of firewalls in the cluster you want to verify i.e. [\"firewall_A\",\"firewall_B\"].",
          "required": false,
          "suboptions": {}
        },
        "object": {
          "aliases": [],
          "description": "The data object we wish to query (device, package, rule, etc). Will expand choices as improves.",
          "required": true,
          "choices": [
            "device",
            "cluster_nodes",
            "task",
            "custom"
          ],
          "suboptions": {}
        },
        "task_id": {
          "aliases": [],
          "description": "The ID of the task you wish to query status on. If left blank and object = 'task' a list of tasks are returned.",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Query FortiManager data objects for use in Ansible workflows."
    },
    "examples": "\n- name: QUERY FORTIGATE DEVICE BY IP\n  community.fortios.fmgr_query:\n    object: \"device\"\n    adom: \"ansible\"\n    device_ip: \"10.7.220.41\"\n\n- name: QUERY FORTIGATE DEVICE BY SERIAL\n  community.fortios.fmgr_query:\n    adom: \"ansible\"\n    object: \"device\"\n    device_serial: \"FGVM000000117992\"\n\n- name: QUERY FORTIGATE DEVICE BY FRIENDLY NAME\n  community.fortios.fmgr_query:\n    adom: \"ansible\"\n    object: \"device\"\n    device_unique_name: \"ansible-fgt01\"\n\n- name: VERIFY CLUSTER MEMBERS AND STATUS\n  community.fortios.fmgr_query:\n    adom: \"ansible\"\n    object: \"cluster_nodes\"\n    device_unique_name: \"fgt-cluster01\"\n    nodes: [\"ansible-fgt01\", \"ansible-fgt02\", \"ansible-fgt03\"]\n\n- name: GET STATUS OF TASK ID\n  community.fortios.fmgr_query:\n    adom: \"ansible\"\n    object: \"task\"\n    task_id: \"3\"\n\n- name: USE CUSTOM TYPE TO QUERY AVAILABLE SCRIPTS\n  community.fortios.fmgr_query:\n    adom: \"ansible\"\n    object: \"custom\"\n    custom_endpoint: \"/dvmdb/adom/ansible/script\"\n    custom_dict: { \"type\": \"cli\" }\n"
  },
  "community.fortios.fmgr_script": {
    "doc": {
      "description": "Create/edit/delete scripts and execute the scripts on the FortiManager using jsonrpc API",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The administrative domain (admon) the configuration belongs to",
          "required": true,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "The desired mode of the specified object. Execute will run the script.",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "delete",
            "execute",
            "set"
          ],
          "suboptions": {}
        },
        "script_content": {
          "aliases": [],
          "description": "The script content that will be executed.",
          "required": false,
          "suboptions": {}
        },
        "script_description": {
          "aliases": [],
          "description": "The description of the script.",
          "required": false,
          "suboptions": {}
        },
        "script_name": {
          "aliases": [],
          "description": "The name of the script.",
          "required": true,
          "suboptions": {}
        },
        "script_package": {
          "aliases": [],
          "description": "(datasource) Policy package object to run the script against",
          "required": false,
          "suboptions": {}
        },
        "script_scope": {
          "aliases": [],
          "description": "(datasource) The devices that the script will run on, can have both device member and device group member.",
          "required": false,
          "suboptions": {}
        },
        "script_target": {
          "aliases": [],
          "description": "The target of the script to be run.",
          "required": false,
          "suboptions": {}
        },
        "script_type": {
          "aliases": [],
          "description": "The type of script (CLI or TCL).",
          "required": false,
          "suboptions": {}
        },
        "vdom": {
          "aliases": [],
          "description": "The virtual domain (vdom) the configuration belongs to",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Add/Edit/Delete and execute scripts"
    },
    "examples": "\n- name: CREATE SCRIPT\n  community.fortios.fmgr_script:\n    adom: \"root\"\n    script_name: \"TestScript\"\n    script_type: \"cli\"\n    script_target: \"remote_device\"\n    script_description: \"Create by Ansible\"\n    script_content: \"get system status\"\n\n- name: EXECUTE SCRIPT\n  community.fortios.fmgr_script:\n    adom: \"root\"\n    script_name: \"TestScript\"\n    mode: \"execute\"\n    script_scope: \"FGT1,FGT2\"\n\n- name: DELETE SCRIPT\n  community.fortios.fmgr_script:\n    adom: \"root\"\n    script_name: \"TestScript\"\n    mode: \"delete\"\n"
  },
  "community.fortios.fmgr_secprof_appctrl": {
    "doc": {
      "description": "Manage application control security profiles within FortiManager",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "app_replacemsg": {
          "aliases": [],
          "description": "Enable/disable replacement messages for blocked applications.\nchoice | disable | Disable replacement messages for blocked applications.\nchoice | enable | Enable replacement messages for blocked applications.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "comment": {
          "aliases": [],
          "description": "comments",
          "required": false,
          "suboptions": {}
        },
        "deep_app_inspection": {
          "aliases": [],
          "description": "Enable/disable deep application inspection.\nchoice | disable | Disable deep application inspection.\nchoice | enable | Enable deep application inspection.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "entries": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED. This object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, OMIT THE USE OF THIS PARAMETER\nAND USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "entries_action": {
          "aliases": [],
          "description": "Pass or block traffic, or reset connection for traffic from this application.\nchoice | pass | Pass or allow matching traffic.\nchoice | block | Block or drop matching traffic.\nchoice | reset | Reset sessions for matching traffic.",
          "required": false,
          "choices": [
            "pass",
            "block",
            "reset"
          ],
          "suboptions": {}
        },
        "entries_application": {
          "aliases": [],
          "description": "ID of allowed applications.",
          "required": false,
          "suboptions": {}
        },
        "entries_behavior": {
          "aliases": [],
          "description": "Application behavior filter.",
          "required": false,
          "suboptions": {}
        },
        "entries_category": {
          "aliases": [],
          "description": "Category ID list.",
          "required": false,
          "suboptions": {}
        },
        "entries_log": {
          "aliases": [],
          "description": "Enable/disable logging for this application list.\nchoice | disable | Disable logging.\nchoice | enable | Enable logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "entries_log_packet": {
          "aliases": [],
          "description": "Enable/disable packet logging.\nchoice | disable | Disable packet logging.\nchoice | enable | Enable packet logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "entries_parameters_value": {
          "aliases": [],
          "description": "Parameter value.",
          "required": false,
          "suboptions": {}
        },
        "entries_per_ip_shaper": {
          "aliases": [],
          "description": "Per-IP traffic shaper.",
          "required": false,
          "suboptions": {}
        },
        "entries_popularity": {
          "aliases": [],
          "description": "Application popularity filter (1 - 5, from least to most popular).\nFLAG Based Options. Specify multiple in list form.\nflag | 1 | Popularity level 1.\nflag | 2 | Popularity level 2.\nflag | 3 | Popularity level 3.\nflag | 4 | Popularity level 4.\nflag | 5 | Popularity level 5.",
          "required": false,
          "choices": [
            "1",
            "2",
            "3",
            "4",
            "5"
          ],
          "suboptions": {}
        },
        "entries_protocols": {
          "aliases": [],
          "description": "Application protocol filter.",
          "required": false,
          "suboptions": {}
        },
        "entries_quarantine": {
          "aliases": [],
          "description": "Quarantine method.\nchoice | none | Quarantine is disabled.\nchoice | attacker | Block all traffic sent from attacker's IP address.\nThe attacker's IP address is also added to the banned user list. The target's address is not affected.",
          "required": false,
          "choices": [
            "none",
            "attacker"
          ],
          "suboptions": {}
        },
        "entries_quarantine_expiry": {
          "aliases": [],
          "description": "Duration of quarantine. (Format\nRequires quarantine set to attacker.",
          "required": false,
          "suboptions": {}
        },
        "entries_quarantine_log": {
          "aliases": [],
          "description": "Enable/disable quarantine logging.\nchoice | disable | Disable quarantine logging.\nchoice | enable | Enable quarantine logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "entries_rate_count": {
          "aliases": [],
          "description": "Count of the rate.",
          "required": false,
          "suboptions": {}
        },
        "entries_rate_duration": {
          "aliases": [],
          "description": "Duration (sec) of the rate.",
          "required": false,
          "suboptions": {}
        },
        "entries_rate_mode": {
          "aliases": [],
          "description": "Rate limit mode.\nchoice | periodical | Allow configured number of packets every rate-duration.\nchoice | continuous | Block packets once the rate is reached.",
          "required": false,
          "choices": [
            "periodical",
            "continuous"
          ],
          "suboptions": {}
        },
        "entries_rate_track": {
          "aliases": [],
          "description": "Track the packet protocol field.\nchoice | none |\nchoice | src-ip | Source IP.\nchoice | dest-ip | Destination IP.\nchoice | dhcp-client-mac | DHCP client.\nchoice | dns-domain | DNS domain.",
          "required": false,
          "choices": [
            "none",
            "src-ip",
            "dest-ip",
            "dhcp-client-mac",
            "dns-domain"
          ],
          "suboptions": {}
        },
        "entries_risk": {
          "aliases": [],
          "description": "Risk, or impact, of allowing traffic from this application to occur 1 - 5;\n(Low, Elevated, Medium, High, and Critical).",
          "required": false,
          "suboptions": {}
        },
        "entries_session_ttl": {
          "aliases": [],
          "description": "Session TTL (0 = default).",
          "required": false,
          "suboptions": {}
        },
        "entries_shaper": {
          "aliases": [],
          "description": "Traffic shaper.",
          "required": false,
          "suboptions": {}
        },
        "entries_shaper_reverse": {
          "aliases": [],
          "description": "Reverse traffic shaper.",
          "required": false,
          "suboptions": {}
        },
        "entries_sub_category": {
          "aliases": [],
          "description": "Application Sub-category ID list.",
          "required": false,
          "suboptions": {}
        },
        "entries_technology": {
          "aliases": [],
          "description": "Application technology filter.",
          "required": false,
          "suboptions": {}
        },
        "entries_vendor": {
          "aliases": [],
          "description": "Application vendor filter.",
          "required": false,
          "suboptions": {}
        },
        "extended_log": {
          "aliases": [],
          "description": "Enable/disable extended logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.\nAllows use of soft-adds instead of overwriting existing values",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete",
            "update"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "List name.",
          "required": false,
          "suboptions": {}
        },
        "options": {
          "aliases": [],
          "description": "NO DESCRIPTION PARSED ENTER MANUALLY\nFLAG Based Options. Specify multiple in list form.\nflag | allow-dns | Allow DNS.\nflag | allow-icmp | Allow ICMP.\nflag | allow-http | Allow generic HTTP web browsing.\nflag | allow-ssl | Allow generic SSL communication.\nflag | allow-quic | Allow QUIC.",
          "required": false,
          "choices": [
            "allow-dns",
            "allow-icmp",
            "allow-http",
            "allow-ssl",
            "allow-quic"
          ],
          "suboptions": {}
        },
        "other_application_action": {
          "aliases": [],
          "description": "Action for other applications.\nchoice | pass | Allow sessions matching an application in this application list.\nchoice | block | Block sessions matching an application in this application list.",
          "required": false,
          "choices": [
            "pass",
            "block"
          ],
          "suboptions": {}
        },
        "other_application_log": {
          "aliases": [],
          "description": "Enable/disable logging for other applications.\nchoice | disable | Disable logging for other applications.\nchoice | enable | Enable logging for other applications.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "p2p_black_list": {
          "aliases": [],
          "description": "NO DESCRIPTION PARSED ENTER MANUALLY\nFLAG Based Options. Specify multiple in list form.\nflag | skype | Skype.\nflag | edonkey | Edonkey.\nflag | bittorrent | Bit torrent.",
          "required": false,
          "choices": [
            "skype",
            "edonkey",
            "bittorrent"
          ],
          "suboptions": {}
        },
        "replacemsg_group": {
          "aliases": [],
          "description": "Replacement message group.",
          "required": false,
          "suboptions": {}
        },
        "unknown_application_action": {
          "aliases": [],
          "description": "Pass or block traffic from unknown applications.\nchoice | pass | Pass or allow unknown applications.\nchoice | block | Drop or block unknown applications.",
          "required": false,
          "choices": [
            "pass",
            "block"
          ],
          "suboptions": {}
        },
        "unknown_application_log": {
          "aliases": [],
          "description": "Enable/disable logging for unknown applications.\nchoice | disable | Disable logging for unknown applications.\nchoice | enable | Enable logging for unknown applications.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage application control security profiles"
    },
    "examples": "\n  - name: DELETE Profile\n    community.fortios.fmgr_secprof_appctrl:\n      name: \"Ansible_Application_Control_Profile\"\n      comment: \"Created by Ansible Module TEST\"\n      mode: \"delete\"\n\n  - name: CREATE Profile\n    community.fortios.fmgr_secprof_appctrl:\n      name: \"Ansible_Application_Control_Profile\"\n      comment: \"Created by Ansible Module TEST\"\n      mode: \"set\"\n      entries: [{\n                action: \"block\",\n                log: \"enable\",\n                log-packet: \"enable\",\n                protocols: [\"1\"],\n                quarantine: \"attacker\",\n                quarantine-log: \"enable\",\n                },\n                {action: \"pass\",\n                category: [\"2\",\"3\",\"4\"]},\n              ]\n"
  },
  "community.fortios.fmgr_secprof_av": {
    "doc": {
      "description": "Manage security profile groups for FortiManager objects",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "analytics_bl_filetype": {
          "aliases": [],
          "description": "Only submit files matching this DLP file-pattern to FortiSandbox.",
          "required": false,
          "suboptions": {}
        },
        "analytics_db": {
          "aliases": [],
          "description": "Enable/disable using the FortiSandbox signature database to supplement the AV signature databases.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "analytics_max_upload": {
          "aliases": [],
          "description": "Maximum size of files that can be uploaded to FortiSandbox (1 - 395 MBytes, default = 10).",
          "required": false,
          "suboptions": {}
        },
        "analytics_wl_filetype": {
          "aliases": [],
          "description": "Do not submit files matching this DLP file-pattern to FortiSandbox.",
          "required": false,
          "suboptions": {}
        },
        "av_block_log": {
          "aliases": [],
          "description": "Enable/disable logging for AntiVirus file blocking.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "av_virus_log": {
          "aliases": [],
          "description": "Enable/disable AntiVirus logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "comment": {
          "aliases": [],
          "description": "Comment.",
          "required": false,
          "suboptions": {}
        },
        "content_disarm": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "content_disarm_cover_page": {
          "aliases": [],
          "description": "Enable/disable inserting a cover page into the disarmed document.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "content_disarm_detect_only": {
          "aliases": [],
          "description": "Enable/disable only detect disarmable files, do not alter content.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "content_disarm_office_embed": {
          "aliases": [],
          "description": "Enable/disable stripping of embedded objects in Microsoft Office documents.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "content_disarm_office_hylink": {
          "aliases": [],
          "description": "Enable/disable stripping of hyperlinks in Microsoft Office documents.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "content_disarm_office_linked": {
          "aliases": [],
          "description": "Enable/disable stripping of linked objects in Microsoft Office documents.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "content_disarm_office_macro": {
          "aliases": [],
          "description": "Enable/disable stripping of macros in Microsoft Office documents.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "content_disarm_original_file_destination": {
          "aliases": [],
          "description": "Destination to send original file if active content is removed.",
          "required": false,
          "choices": [
            "fortisandbox",
            "quarantine",
            "discard"
          ],
          "suboptions": {}
        },
        "content_disarm_pdf_act_form": {
          "aliases": [],
          "description": "Enable/disable stripping of actions that submit data to other targets in PDF documents.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "content_disarm_pdf_act_gotor": {
          "aliases": [],
          "description": "Enable/disable stripping of links to other PDFs in PDF documents.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "content_disarm_pdf_act_java": {
          "aliases": [],
          "description": "Enable/disable stripping of actions that execute JavaScript code in PDF documents.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "content_disarm_pdf_act_launch": {
          "aliases": [],
          "description": "Enable/disable stripping of links to external applications in PDF documents.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "content_disarm_pdf_act_movie": {
          "aliases": [],
          "description": "Enable/disable stripping of embedded movies in PDF documents.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "content_disarm_pdf_act_sound": {
          "aliases": [],
          "description": "Enable/disable stripping of embedded sound files in PDF documents.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "content_disarm_pdf_embedfile": {
          "aliases": [],
          "description": "Enable/disable stripping of embedded files in PDF documents.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "content_disarm_pdf_hyperlink": {
          "aliases": [],
          "description": "Enable/disable stripping of hyperlinks from PDF documents.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "content_disarm_pdf_javacode": {
          "aliases": [],
          "description": "Enable/disable stripping of JavaScript code in PDF documents.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "extended_log": {
          "aliases": [],
          "description": "Enable/disable extended logging for antivirus.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ftgd_analytics": {
          "aliases": [],
          "description": "Settings to control which files are uploaded to FortiSandbox.",
          "required": false,
          "choices": [
            "disable",
            "suspicious",
            "everything"
          ],
          "suboptions": {}
        },
        "ftp": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "ftp_archive_block": {
          "aliases": [],
          "description": "Select the archive types to block.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "encrypted",
            "corrupted",
            "multipart",
            "nested",
            "mailbomb",
            "unhandled",
            "partiallycorrupted",
            "fileslimit",
            "timeout"
          ],
          "suboptions": {}
        },
        "ftp_archive_log": {
          "aliases": [],
          "description": "Select the archive types to log.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "encrypted",
            "corrupted",
            "multipart",
            "nested",
            "mailbomb",
            "unhandled",
            "partiallycorrupted",
            "fileslimit",
            "timeout"
          ],
          "suboptions": {}
        },
        "ftp_emulator": {
          "aliases": [],
          "description": "Enable/disable the virus emulator.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ftp_options": {
          "aliases": [],
          "description": "Enable/disable FTP AntiVirus scanning, monitoring, and quarantine.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "scan",
            "quarantine",
            "avmonitor"
          ],
          "suboptions": {}
        },
        "ftp_outbreak_prevention": {
          "aliases": [],
          "description": "Enable FortiGuard Virus Outbreak Prevention service.",
          "required": false,
          "choices": [
            "disabled",
            "files",
            "full-archive"
          ],
          "suboptions": {}
        },
        "http": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "http_archive_block": {
          "aliases": [],
          "description": "Select the archive types to block.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "encrypted",
            "corrupted",
            "multipart",
            "nested",
            "mailbomb",
            "unhandled",
            "partiallycorrupted",
            "fileslimit",
            "timeout"
          ],
          "suboptions": {}
        },
        "http_archive_log": {
          "aliases": [],
          "description": "Select the archive types to log.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "encrypted",
            "corrupted",
            "multipart",
            "nested",
            "mailbomb",
            "unhandled",
            "partiallycorrupted",
            "fileslimit",
            "timeout"
          ],
          "suboptions": {}
        },
        "http_content_disarm": {
          "aliases": [],
          "description": "Enable Content Disarm and Reconstruction for this protocol.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "http_emulator": {
          "aliases": [],
          "description": "Enable/disable the virus emulator.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "http_options": {
          "aliases": [],
          "description": "Enable/disable HTTP AntiVirus scanning, monitoring, and quarantine.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "scan",
            "quarantine",
            "avmonitor"
          ],
          "suboptions": {}
        },
        "http_outbreak_prevention": {
          "aliases": [],
          "description": "Enable FortiGuard Virus Outbreak Prevention service.",
          "required": false,
          "choices": [
            "disabled",
            "files",
            "full-archive"
          ],
          "suboptions": {}
        },
        "imap": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "imap_archive_block": {
          "aliases": [],
          "description": "Select the archive types to block.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "encrypted",
            "corrupted",
            "multipart",
            "nested",
            "mailbomb",
            "unhandled",
            "partiallycorrupted",
            "fileslimit",
            "timeout"
          ],
          "suboptions": {}
        },
        "imap_archive_log": {
          "aliases": [],
          "description": "Select the archive types to log.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "encrypted",
            "corrupted",
            "multipart",
            "nested",
            "mailbomb",
            "unhandled",
            "partiallycorrupted",
            "fileslimit",
            "timeout"
          ],
          "suboptions": {}
        },
        "imap_content_disarm": {
          "aliases": [],
          "description": "Enable Content Disarm and Reconstruction for this protocol.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "imap_emulator": {
          "aliases": [],
          "description": "Enable/disable the virus emulator.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "imap_executables": {
          "aliases": [],
          "description": "Treat Windows executable files as viruses for the purpose of blocking or monitoring.",
          "required": false,
          "choices": [
            "default",
            "virus"
          ],
          "suboptions": {}
        },
        "imap_options": {
          "aliases": [],
          "description": "Enable/disable IMAP AntiVirus scanning, monitoring, and quarantine.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "scan",
            "quarantine",
            "avmonitor"
          ],
          "suboptions": {}
        },
        "imap_outbreak_prevention": {
          "aliases": [],
          "description": "Enable FortiGuard Virus Outbreak Prevention service.",
          "required": false,
          "choices": [
            "disabled",
            "files",
            "full-archive"
          ],
          "suboptions": {}
        },
        "inspection_mode": {
          "aliases": [],
          "description": "Inspection mode.",
          "required": false,
          "choices": [
            "proxy",
            "flow-based"
          ],
          "suboptions": {}
        },
        "mapi": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "mapi_archive_block": {
          "aliases": [],
          "description": "Select the archive types to block.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "encrypted",
            "corrupted",
            "multipart",
            "nested",
            "mailbomb",
            "unhandled",
            "partiallycorrupted",
            "fileslimit",
            "timeout"
          ],
          "suboptions": {}
        },
        "mapi_archive_log": {
          "aliases": [],
          "description": "Select the archive types to log.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "encrypted",
            "corrupted",
            "multipart",
            "nested",
            "mailbomb",
            "unhandled",
            "partiallycorrupted",
            "fileslimit",
            "timeout"
          ],
          "suboptions": {}
        },
        "mapi_emulator": {
          "aliases": [],
          "description": "Enable/disable the virus emulator.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "mapi_executables": {
          "aliases": [],
          "description": "Treat Windows executable files as viruses for the purpose of blocking or monitoring.",
          "required": false,
          "choices": [
            "default",
            "virus"
          ],
          "suboptions": {}
        },
        "mapi_options": {
          "aliases": [],
          "description": "Enable/disable MAPI AntiVirus scanning, monitoring, and quarantine.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "scan",
            "quarantine",
            "avmonitor"
          ],
          "suboptions": {}
        },
        "mapi_outbreak_prevention": {
          "aliases": [],
          "description": "Enable FortiGuard Virus Outbreak Prevention service.",
          "required": false,
          "choices": [
            "disabled",
            "files",
            "full-archive"
          ],
          "suboptions": {}
        },
        "mobile_malware_db": {
          "aliases": [],
          "description": "Enable/disable using the mobile malware signature database.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.\nAllows use of soft-adds instead of overwriting existing values",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete",
            "update"
          ],
          "suboptions": {}
        },
        "nac_quar": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "nac_quar_expiry": {
          "aliases": [],
          "description": "Duration of quarantine.",
          "required": false,
          "suboptions": {}
        },
        "nac_quar_infected": {
          "aliases": [],
          "description": "Enable/Disable quarantining infected hosts to the banned user list.",
          "required": false,
          "choices": [
            "none",
            "quar-src-ip"
          ],
          "suboptions": {}
        },
        "nac_quar_log": {
          "aliases": [],
          "description": "Enable/disable AntiVirus quarantine logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Profile name.",
          "required": false,
          "suboptions": {}
        },
        "nntp": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "nntp_archive_block": {
          "aliases": [],
          "description": "Select the archive types to block.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "encrypted",
            "corrupted",
            "multipart",
            "nested",
            "mailbomb",
            "unhandled",
            "partiallycorrupted",
            "fileslimit",
            "timeout"
          ],
          "suboptions": {}
        },
        "nntp_archive_log": {
          "aliases": [],
          "description": "Select the archive types to log.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "encrypted",
            "corrupted",
            "multipart",
            "nested",
            "mailbomb",
            "unhandled",
            "partiallycorrupted",
            "fileslimit",
            "timeout"
          ],
          "suboptions": {}
        },
        "nntp_emulator": {
          "aliases": [],
          "description": "Enable/disable the virus emulator.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "nntp_options": {
          "aliases": [],
          "description": "Enable/disable NNTP AntiVirus scanning, monitoring, and quarantine.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "scan",
            "quarantine",
            "avmonitor"
          ],
          "suboptions": {}
        },
        "nntp_outbreak_prevention": {
          "aliases": [],
          "description": "Enable FortiGuard Virus Outbreak Prevention service.",
          "required": false,
          "choices": [
            "disabled",
            "files",
            "full-archive"
          ],
          "suboptions": {}
        },
        "pop3": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "pop3_archive_block": {
          "aliases": [],
          "description": "Select the archive types to block.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "encrypted",
            "corrupted",
            "multipart",
            "nested",
            "mailbomb",
            "unhandled",
            "partiallycorrupted",
            "fileslimit",
            "timeout"
          ],
          "suboptions": {}
        },
        "pop3_archive_log": {
          "aliases": [],
          "description": "Select the archive types to log.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "encrypted",
            "corrupted",
            "multipart",
            "nested",
            "mailbomb",
            "unhandled",
            "partiallycorrupted",
            "fileslimit",
            "timeout"
          ],
          "suboptions": {}
        },
        "pop3_content_disarm": {
          "aliases": [],
          "description": "Enable Content Disarm and Reconstruction for this protocol.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "pop3_emulator": {
          "aliases": [],
          "description": "Enable/disable the virus emulator.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "pop3_executables": {
          "aliases": [],
          "description": "Treat Windows executable files as viruses for the purpose of blocking or monitoring.",
          "required": false,
          "choices": [
            "default",
            "virus"
          ],
          "suboptions": {}
        },
        "pop3_options": {
          "aliases": [],
          "description": "Enable/disable POP3 AntiVirus scanning, monitoring, and quarantine.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "scan",
            "quarantine",
            "avmonitor"
          ],
          "suboptions": {}
        },
        "pop3_outbreak_prevention": {
          "aliases": [],
          "description": "Enable FortiGuard Virus Outbreak Prevention service.",
          "required": false,
          "choices": [
            "disabled",
            "files",
            "full-archive"
          ],
          "suboptions": {}
        },
        "replacemsg_group": {
          "aliases": [],
          "description": "Replacement message group customized for this profile.",
          "required": false,
          "suboptions": {}
        },
        "scan_mode": {
          "aliases": [],
          "description": "Choose between full scan mode and quick scan mode.",
          "required": false,
          "choices": [
            "quick",
            "full"
          ],
          "suboptions": {}
        },
        "smb": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "smb_archive_block": {
          "aliases": [],
          "description": "Select the archive types to block.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "encrypted",
            "corrupted",
            "multipart",
            "nested",
            "mailbomb",
            "unhandled",
            "partiallycorrupted",
            "fileslimit",
            "timeout"
          ],
          "suboptions": {}
        },
        "smb_archive_log": {
          "aliases": [],
          "description": "Select the archive types to log.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "encrypted",
            "corrupted",
            "multipart",
            "nested",
            "mailbomb",
            "unhandled",
            "partiallycorrupted",
            "fileslimit",
            "timeout"
          ],
          "suboptions": {}
        },
        "smb_emulator": {
          "aliases": [],
          "description": "Enable/disable the virus emulator.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "smb_options": {
          "aliases": [],
          "description": "Enable/disable SMB AntiVirus scanning, monitoring, and quarantine.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "scan",
            "quarantine",
            "avmonitor"
          ],
          "suboptions": {}
        },
        "smb_outbreak_prevention": {
          "aliases": [],
          "description": "Enable FortiGuard Virus Outbreak Prevention service.",
          "required": false,
          "choices": [
            "disabled",
            "files",
            "full-archive"
          ],
          "suboptions": {}
        },
        "smtp": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "smtp_archive_block": {
          "aliases": [],
          "description": "Select the archive types to block.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "encrypted",
            "corrupted",
            "multipart",
            "nested",
            "mailbomb",
            "unhandled",
            "partiallycorrupted",
            "fileslimit",
            "timeout"
          ],
          "suboptions": {}
        },
        "smtp_archive_log": {
          "aliases": [],
          "description": "Select the archive types to log.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "encrypted",
            "corrupted",
            "multipart",
            "nested",
            "mailbomb",
            "unhandled",
            "partiallycorrupted",
            "fileslimit",
            "timeout"
          ],
          "suboptions": {}
        },
        "smtp_content_disarm": {
          "aliases": [],
          "description": "Enable Content Disarm and Reconstruction for this protocol.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "smtp_emulator": {
          "aliases": [],
          "description": "Enable/disable the virus emulator.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "smtp_executables": {
          "aliases": [],
          "description": "Treat Windows executable files as viruses for the purpose of blocking or monitoring.",
          "required": false,
          "choices": [
            "default",
            "virus"
          ],
          "suboptions": {}
        },
        "smtp_options": {
          "aliases": [],
          "description": "Enable/disable SMTP AntiVirus scanning, monitoring, and quarantine.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "scan",
            "quarantine",
            "avmonitor"
          ],
          "suboptions": {}
        },
        "smtp_outbreak_prevention": {
          "aliases": [],
          "description": "Enable FortiGuard Virus Outbreak Prevention service.",
          "required": false,
          "choices": [
            "disabled",
            "files",
            "full-archive"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage security profile"
    },
    "examples": "\n  - name: DELETE Profile\n    community.fortios.fmgr_secprof_av:\n      name: \"Ansible_AV_Profile\"\n      mode: \"delete\"\n\n  - name: CREATE Profile\n    community.fortios.fmgr_secprof_av:\n      name: \"Ansible_AV_Profile\"\n      comment: \"Created by Ansible Module TEST\"\n      mode: \"set\"\n      inspection_mode: \"proxy\"\n      ftgd_analytics: \"everything\"\n      av_block_log: \"enable\"\n      av_virus_log: \"enable\"\n      scan_mode: \"full\"\n      mobile_malware_db: \"enable\"\n      ftp_archive_block: \"encrypted\"\n      ftp_outbreak_prevention: \"files\"\n      ftp_archive_log: \"timeout\"\n      ftp_emulator: \"disable\"\n      ftp_options: \"scan\"\n"
  },
  "community.fortios.fmgr_secprof_dns": {
    "doc": {
      "description": "Manage DNS security profiles in FortiManager",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "block_action": {
          "aliases": [],
          "description": "Action to take for blocked domains.\nchoice | block | Return NXDOMAIN for blocked domains.\nchoice | redirect | Redirect blocked domains to SDNS portal.",
          "type": "str",
          "required": false,
          "choices": [
            "block",
            "redirect"
          ],
          "suboptions": {}
        },
        "block_botnet": {
          "aliases": [],
          "description": "Enable/disable blocking botnet C&C; DNS lookups.\nchoice | disable | Disable blocking botnet C&C; DNS lookups.\nchoice | enable | Enable blocking botnet C&C; DNS lookups.",
          "type": "str",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "comment": {
          "aliases": [],
          "description": "Comment for the security profile to show in the FortiManager GUI.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "domain_filter_domain_filter_table": {
          "aliases": [],
          "description": "DNS domain filter table ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "external_ip_blocklist": {
          "aliases": [],
          "description": "One or more external IP block lists.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ftgd_dns_filters_action": {
          "aliases": [],
          "description": "Action to take for DNS requests matching the category.\nchoice | monitor | Allow DNS requests matching the category and log the result.\nchoice | block | Block DNS requests matching the category.",
          "type": "str",
          "required": false,
          "choices": [
            "monitor",
            "block"
          ],
          "suboptions": {}
        },
        "ftgd_dns_filters_category": {
          "aliases": [],
          "description": "Category number.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ftgd_dns_filters_log": {
          "aliases": [],
          "description": "Enable/disable DNS filter logging for this DNS profile.\nchoice | disable | Disable DNS filter logging.\nchoice | enable | Enable DNS filter logging.",
          "type": "str",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ftgd_dns_options": {
          "aliases": [],
          "description": "FortiGuard DNS filter options.\nFLAG Based Options. Specify multiple in list form.\nflag | error-allow | Allow all domains when FortiGuard DNS servers fail.\nflag | ftgd-disable | Disable FortiGuard DNS domain rating.",
          "type": "str",
          "required": false,
          "choices": [
            "error-allow",
            "ftgd-disable"
          ],
          "suboptions": {}
        },
        "log_all_domain": {
          "aliases": [],
          "description": "Enable/disable logging of all domains visited (detailed DNS logging).\nchoice | disable | Disable logging of all domains visited.\nchoice | enable | Enable logging of all domains visited.",
          "type": "str",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.\nAllows use of soft-adds instead of overwriting existing values.",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete",
            "update"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Profile name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "redirect_portal": {
          "aliases": [],
          "description": "IP address of the SDNS redirect portal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "safe_search": {
          "aliases": [],
          "description": "Enable/disable Google, Bing, and YouTube safe search.\nchoice | disable | Disable Google, Bing, and YouTube safe search.\nchoice | enable | Enable Google, Bing, and YouTube safe search.",
          "type": "str",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sdns_domain_log": {
          "aliases": [],
          "description": "Enable/disable domain filtering and botnet domain logging.\nchoice | disable | Disable domain filtering and botnet domain logging.\nchoice | enable | Enable domain filtering and botnet domain logging.",
          "type": "str",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sdns_ftgd_err_log": {
          "aliases": [],
          "description": "Enable/disable FortiGuard SDNS rating error logging.\nchoice | disable | Disable FortiGuard SDNS rating error logging.\nchoice | enable | Enable FortiGuard SDNS rating error logging.",
          "type": "str",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "youtube_restrict": {
          "aliases": [],
          "description": "Set safe search for YouTube restriction level.\nchoice | strict | Enable strict safe seach for YouTube.\nchoice | moderate | Enable moderate safe search for YouTube.",
          "type": "str",
          "required": false,
          "choices": [
            "strict",
            "moderate"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage DNS security profiles in FortiManager"
    },
    "examples": "\n  - name: DELETE Profile\n    community.fortios.fmgr_secprof_dns:\n      name: \"Ansible_DNS_Profile\"\n      comment: \"Created by Ansible Module TEST\"\n      mode: \"delete\"\n\n  - name: CREATE Profile\n    community.fortios.fmgr_secprof_dns:\n      name: \"Ansible_DNS_Profile\"\n      comment: \"Created by Ansible Module TEST\"\n      mode: \"set\"\n      block_action: \"block\"\n\n\n"
  },
  "community.fortios.fmgr_secprof_ips": {
    "doc": {
      "description": "Managing IPS security profiles in FortiManager",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "block_malicious_url": {
          "aliases": [],
          "description": "Enable/disable malicious URL blocking.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "comment": {
          "aliases": [],
          "description": "Comment.",
          "required": false,
          "suboptions": {}
        },
        "entries": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "entries_action": {
          "aliases": [],
          "description": "Action taken with traffic in which signatures are detected.",
          "required": false,
          "choices": [
            "pass",
            "block",
            "reset",
            "default"
          ],
          "suboptions": {}
        },
        "entries_application": {
          "aliases": [],
          "description": "Applications to be protected. set application ? lists available applications. all includes all applications. other includes all unlisted applications.",
          "required": false,
          "suboptions": {}
        },
        "entries_exempt_ip_dst_ip": {
          "aliases": [],
          "description": "Destination IP address and netmask.",
          "required": false,
          "suboptions": {}
        },
        "entries_exempt_ip_src_ip": {
          "aliases": [],
          "description": "Source IP address and netmask.",
          "required": false,
          "suboptions": {}
        },
        "entries_location": {
          "aliases": [],
          "description": "Protect client or server traffic.",
          "required": false,
          "suboptions": {}
        },
        "entries_log": {
          "aliases": [],
          "description": "Enable/disable logging of signatures included in filter.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "entries_log_attack_context": {
          "aliases": [],
          "description": "Enable/disable logging of attack context| URL buffer, header buffer, body buffer, packet buffer.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "entries_log_packet": {
          "aliases": [],
          "description": "Enable/disable packet logging. Enable to save the packet that triggers the filter. You can download the packets in pcap format for diagnostic use.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "entries_os": {
          "aliases": [],
          "description": "Operating systems to be protected.  all includes all operating systems. other includes all unlisted operating systems.",
          "required": false,
          "suboptions": {}
        },
        "entries_protocol": {
          "aliases": [],
          "description": "Protocols to be examined. set protocol ? lists available protocols. all includes all protocols. other includes all unlisted protocols.",
          "required": false,
          "suboptions": {}
        },
        "entries_quarantine": {
          "aliases": [],
          "description": "Quarantine method.",
          "required": false,
          "choices": [
            "none",
            "attacker"
          ],
          "suboptions": {}
        },
        "entries_quarantine_expiry": {
          "aliases": [],
          "description": "Duration of quarantine.",
          "required": false,
          "suboptions": {}
        },
        "entries_quarantine_log": {
          "aliases": [],
          "description": "Enable/disable quarantine logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "entries_rate_count": {
          "aliases": [],
          "description": "Count of the rate.",
          "required": false,
          "suboptions": {}
        },
        "entries_rate_duration": {
          "aliases": [],
          "description": "Duration (sec) of the rate.",
          "required": false,
          "suboptions": {}
        },
        "entries_rate_mode": {
          "aliases": [],
          "description": "Rate limit mode.",
          "required": false,
          "choices": [
            "periodical",
            "continuous"
          ],
          "suboptions": {}
        },
        "entries_rate_track": {
          "aliases": [],
          "description": "Track the packet protocol field.",
          "required": false,
          "choices": [
            "none",
            "src-ip",
            "dest-ip",
            "dhcp-client-mac",
            "dns-domain"
          ],
          "suboptions": {}
        },
        "entries_rule": {
          "aliases": [],
          "description": "Identifies the predefined or custom IPS signatures to add to the sensor.",
          "required": false,
          "suboptions": {}
        },
        "entries_severity": {
          "aliases": [],
          "description": "Relative severity of the signature, from info to critical. Log messages generated by the signature include the severity.",
          "required": false,
          "suboptions": {}
        },
        "entries_status": {
          "aliases": [],
          "description": "Status of the signatures included in filter. default enables the filter and only use filters with default status of enable. Filters with default status of disable will not be used.",
          "required": false,
          "choices": [
            "disable",
            "enable",
            "default"
          ],
          "suboptions": {}
        },
        "extended_log": {
          "aliases": [],
          "description": "Enable/disable extended logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "filter": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "filter_action": {
          "aliases": [],
          "description": "Action of selected rules.",
          "required": false,
          "choices": [
            "pass",
            "block",
            "default",
            "reset"
          ],
          "suboptions": {}
        },
        "filter_application": {
          "aliases": [],
          "description": "Vulnerable application filter.",
          "required": false,
          "suboptions": {}
        },
        "filter_location": {
          "aliases": [],
          "description": "Vulnerability location filter.",
          "required": false,
          "suboptions": {}
        },
        "filter_log": {
          "aliases": [],
          "description": "Enable/disable logging of selected rules.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "filter_log_packet": {
          "aliases": [],
          "description": "Enable/disable packet logging of selected rules.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "filter_name": {
          "aliases": [],
          "description": "Filter name.",
          "required": false,
          "suboptions": {}
        },
        "filter_os": {
          "aliases": [],
          "description": "Vulnerable OS filter.",
          "required": false,
          "suboptions": {}
        },
        "filter_protocol": {
          "aliases": [],
          "description": "Vulnerable protocol filter.",
          "required": false,
          "suboptions": {}
        },
        "filter_quarantine": {
          "aliases": [],
          "description": "Quarantine IP or interface.",
          "required": false,
          "choices": [
            "none",
            "attacker"
          ],
          "suboptions": {}
        },
        "filter_quarantine_expiry": {
          "aliases": [],
          "description": "Duration of quarantine in minute.",
          "required": false,
          "suboptions": {}
        },
        "filter_quarantine_log": {
          "aliases": [],
          "description": "Enable/disable logging of selected quarantine.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "filter_severity": {
          "aliases": [],
          "description": "Vulnerability severity filter.",
          "required": false,
          "suboptions": {}
        },
        "filter_status": {
          "aliases": [],
          "description": "Selected rules status.",
          "required": false,
          "choices": [
            "disable",
            "enable",
            "default"
          ],
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.\nAllows use of soft-adds instead of overwriting existing values",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete",
            "update"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Sensor name.",
          "required": false,
          "suboptions": {}
        },
        "override": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "override_action": {
          "aliases": [],
          "description": "Action of override rule.",
          "required": false,
          "choices": [
            "pass",
            "block",
            "reset"
          ],
          "suboptions": {}
        },
        "override_exempt_ip_dst_ip": {
          "aliases": [],
          "description": "Destination IP address and netmask.",
          "required": false,
          "suboptions": {}
        },
        "override_exempt_ip_src_ip": {
          "aliases": [],
          "description": "Source IP address and netmask.",
          "required": false,
          "suboptions": {}
        },
        "override_log": {
          "aliases": [],
          "description": "Enable/disable logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "override_log_packet": {
          "aliases": [],
          "description": "Enable/disable packet logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "override_quarantine": {
          "aliases": [],
          "description": "Quarantine IP or interface.",
          "required": false,
          "choices": [
            "none",
            "attacker"
          ],
          "suboptions": {}
        },
        "override_quarantine_expiry": {
          "aliases": [],
          "description": "Duration of quarantine in minute.",
          "required": false,
          "suboptions": {}
        },
        "override_quarantine_log": {
          "aliases": [],
          "description": "Enable/disable logging of selected quarantine.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "override_rule_id": {
          "aliases": [],
          "description": "Override rule ID.",
          "required": false,
          "suboptions": {}
        },
        "override_status": {
          "aliases": [],
          "description": "Enable/disable status of override rule.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "replacemsg_group": {
          "aliases": [],
          "description": "Replacement message group.",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Managing IPS security profiles in FortiManager"
    },
    "examples": "\n  - name: DELETE Profile\n    community.fortios.fmgr_secprof_ips:\n      name: \"Ansible_IPS_Profile\"\n      comment: \"Created by Ansible Module TEST\"\n      mode: \"delete\"\n\n  - name: CREATE Profile\n    community.fortios.fmgr_secprof_ips:\n      name: \"Ansible_IPS_Profile\"\n      comment: \"Created by Ansible Module TEST\"\n      mode: \"set\"\n      block_malicious_url: \"enable\"\n      entries: [{severity: \"high\", action: \"block\", log-packet: \"enable\"}, {severity: \"medium\", action: \"pass\"}]\n"
  },
  "community.fortios.fmgr_secprof_profile_group": {
    "doc": {
      "description": "Manage security profile group which allows you to create a group of security profiles and apply that to a policy.",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "application_list": {
          "aliases": [],
          "description": "Name of an existing Application list.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "av_profile": {
          "aliases": [],
          "description": "Name of an existing Antivirus profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dlp_sensor": {
          "aliases": [],
          "description": "Name of an existing DLP sensor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dnsfilter_profile": {
          "aliases": [],
          "description": "Name of an existing DNS filter profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "icap_profile": {
          "aliases": [],
          "description": "Name of an existing ICAP profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ips_sensor": {
          "aliases": [],
          "description": "Name of an existing IPS sensor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mms_profile": {
          "aliases": [],
          "description": "Name of an existing MMS profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.\nAllows use of soft-adds instead of overwriting existing values.",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete",
            "update"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Profile group name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile_protocol_options": {
          "aliases": [],
          "description": "Name of an existing Protocol options profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "spamfilter_profile": {
          "aliases": [],
          "description": "Name of an existing Spam filter profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssh_filter_profile": {
          "aliases": [],
          "description": "Name of an existing SSH filter profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssl_ssh_profile": {
          "aliases": [],
          "description": "Name of an existing SSL SSH profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "voip_profile": {
          "aliases": [],
          "description": "Name of an existing VoIP profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "waf_profile": {
          "aliases": [],
          "description": "Name of an existing Web application firewall profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "webfilter_profile": {
          "aliases": [],
          "description": "Name of an existing Web filter profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage security profiles within FortiManager"
    },
    "examples": "\n  - name: DELETE Profile\n    community.fortios.fmgr_secprof_profile_group:\n      name: \"Ansible_TEST_Profile_Group\"\n      mode: \"delete\"\n\n  - name: CREATE Profile\n    community.fortios.fmgr_secprof_profile_group:\n      name: \"Ansible_TEST_Profile_Group\"\n      mode: \"set\"\n      av_profile: \"Ansible_AV_Profile\"\n      profile_protocol_options: \"default\"\n"
  },
  "community.fortios.fmgr_secprof_proxy": {
    "doc": {
      "description": "Manage proxy security profiles for FortiGates via FortiManager using the FMG API with playbooks",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "header_client_ip": {
          "aliases": [],
          "description": "Actions to take on the HTTP client-IP header in forwarded requests| forwards (pass), adds, or removes the HTTP\nheader.\nchoice | pass | Forward the same HTTP header.\nchoice | add | Add the HTTP header.\nchoice | remove | Remove the HTTP header.",
          "required": false,
          "choices": [
            "pass",
            "add",
            "remove"
          ],
          "suboptions": {}
        },
        "header_front_end_https": {
          "aliases": [],
          "description": "Action to take on the HTTP front-end-HTTPS header in forwarded requests| forwards (pass), adds, or removes the\nHTTP header.\nchoice | pass | Forward the same HTTP header.\nchoice | add | Add the HTTP header.\nchoice | remove | Remove the HTTP header.",
          "required": false,
          "choices": [
            "pass",
            "add",
            "remove"
          ],
          "suboptions": {}
        },
        "header_via_request": {
          "aliases": [],
          "description": "Action to take on the HTTP via header in forwarded requests| forwards (pass), adds, or removes the HTTP header\n.\nchoice | pass | Forward the same HTTP header.\nchoice | add | Add the HTTP header.\nchoice | remove | Remove the HTTP header.",
          "required": false,
          "choices": [
            "pass",
            "add",
            "remove"
          ],
          "suboptions": {}
        },
        "header_via_response": {
          "aliases": [],
          "description": "Action to take on the HTTP via header in forwarded responses| forwards (pass), adds, or removes the HTTP heade\nr.\nchoice | pass | Forward the same HTTP header.\nchoice | add | Add the HTTP header.\nchoice | remove | Remove the HTTP header.",
          "required": false,
          "choices": [
            "pass",
            "add",
            "remove"
          ],
          "suboptions": {}
        },
        "header_x_authenticated_groups": {
          "aliases": [],
          "description": "Action to take on the HTTP x-authenticated-groups header in forwarded requests| forwards (pass), adds, or remo\nves the HTTP header.\nchoice | pass | Forward the same HTTP header.\nchoice | add | Add the HTTP header.\nchoice | remove | Remove the HTTP header.",
          "required": false,
          "choices": [
            "pass",
            "add",
            "remove"
          ],
          "suboptions": {}
        },
        "header_x_authenticated_user": {
          "aliases": [],
          "description": "Action to take on the HTTP x-authenticated-user header in forwarded requests| forwards (pass), adds, or remove\ns the HTTP header.\nchoice | pass | Forward the same HTTP header.\nchoice | add | Add the HTTP header.\nchoice | remove | Remove the HTTP header.",
          "required": false,
          "choices": [
            "pass",
            "add",
            "remove"
          ],
          "suboptions": {}
        },
        "header_x_forwarded_for": {
          "aliases": [],
          "description": "Action to take on the HTTP x-forwarded-for header in forwarded requests| forwards (pass), adds, or removes the\nHTTP header.\nchoice | pass | Forward the same HTTP header.\nchoice | add | Add the HTTP header.\nchoice | remove | Remove the HTTP header.",
          "required": false,
          "choices": [
            "pass",
            "add",
            "remove"
          ],
          "suboptions": {}
        },
        "headers": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "headers_action": {
          "aliases": [],
          "description": "Action when HTTP the header forwarded.\nchoice | add-to-request | Add the HTTP header to request.\nchoice | add-to-response | Add the HTTP header to response.\nchoice | remove-from-request | Remove the HTTP header from request.\nchoice | remove-from-response | Remove the HTTP header from response.",
          "required": false,
          "choices": [
            "add-to-request",
            "add-to-response",
            "remove-from-request",
            "remove-from-response"
          ],
          "suboptions": {}
        },
        "headers_content": {
          "aliases": [],
          "description": "HTTP header's content.",
          "required": false,
          "suboptions": {}
        },
        "headers_name": {
          "aliases": [],
          "description": "HTTP forwarded header name.",
          "required": false,
          "suboptions": {}
        },
        "log_header_change": {
          "aliases": [],
          "description": "Enable/disable logging HTTP header changes.\nchoice | disable | Disable Enable/disable logging HTTP header changes.\nchoice | enable | Enable Enable/disable logging HTTP header changes.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.\nAllows use of soft-adds instead of overwriting existing values",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete",
            "update"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Profile name.",
          "required": false,
          "suboptions": {}
        },
        "strip_encoding": {
          "aliases": [],
          "description": "Enable/disable stripping unsupported encoding from the request header.\nchoice | disable | Disable stripping of unsupported encoding from the request header.\nchoice | enable | Enable stripping of unsupported encoding from the request header.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage proxy security profiles in FortiManager"
    },
    "examples": "\n  - name: DELETE Profile\n    community.fortios.fmgr_secprof_proxy:\n      name: \"Ansible_Web_Proxy_Profile\"\n      mode: \"delete\"\n\n  - name: CREATE Profile\n    community.fortios.fmgr_secprof_proxy:\n      name: \"Ansible_Web_Proxy_Profile\"\n      mode: \"set\"\n      header_client_ip: \"pass\"\n      header_front_end_https: \"add\"\n      header_via_request: \"remove\"\n      header_via_response: \"pass\"\n      header_x_authenticated_groups: \"add\"\n      header_x_authenticated_user: \"remove\"\n      strip_encoding: \"enable\"\n      log_header_change: \"enable\"\n      header_x_forwarded_for: \"pass\"\n      headers_action: \"add-to-request\"\n      headers_content: \"test\"\n      headers_name: \"test_header\"\n"
  },
  "community.fortios.fmgr_secprof_spam": {
    "doc": {
      "description": "Manage spam filter security profiles within FortiManager via API",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "comment": {
          "aliases": [],
          "description": "Comment.",
          "required": false,
          "suboptions": {}
        },
        "external": {
          "aliases": [],
          "description": "Enable/disable external Email inspection.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "flow_based": {
          "aliases": [],
          "description": "Enable/disable flow-based spam filtering.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "gmail": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "gmail_log": {
          "aliases": [],
          "description": "Enable/disable logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "imap": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "imap_action": {
          "aliases": [],
          "description": "Action for spam email.",
          "required": false,
          "choices": [
            "pass",
            "tag"
          ],
          "suboptions": {}
        },
        "imap_log": {
          "aliases": [],
          "description": "Enable/disable logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "imap_tag_msg": {
          "aliases": [],
          "description": "Subject text or header added to spam email.",
          "required": false,
          "suboptions": {}
        },
        "imap_tag_type": {
          "aliases": [],
          "description": "Tag subject or header for spam email.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "subject",
            "header",
            "spaminfo"
          ],
          "suboptions": {}
        },
        "mapi": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "mapi_action": {
          "aliases": [],
          "description": "Action for spam email.",
          "required": false,
          "choices": [
            "pass",
            "discard"
          ],
          "suboptions": {}
        },
        "mapi_log": {
          "aliases": [],
          "description": "Enable/disable logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.\nAllows use of soft-adds instead of overwriting existing values",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete",
            "update"
          ],
          "suboptions": {}
        },
        "msn_hotmail": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "msn_hotmail_log": {
          "aliases": [],
          "description": "Enable/disable logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Profile name.",
          "required": false,
          "suboptions": {}
        },
        "options": {
          "aliases": [],
          "description": "None\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "bannedword",
            "spamfsip",
            "spamfssubmit",
            "spamfschksum",
            "spamfsurl",
            "spamhelodns",
            "spamraddrdns",
            "spamrbl",
            "spamhdrcheck",
            "spamfsphish",
            "spambwl"
          ],
          "suboptions": {}
        },
        "pop3": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "pop3_action": {
          "aliases": [],
          "description": "Action for spam email.",
          "required": false,
          "choices": [
            "pass",
            "tag"
          ],
          "suboptions": {}
        },
        "pop3_log": {
          "aliases": [],
          "description": "Enable/disable logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "pop3_tag_msg": {
          "aliases": [],
          "description": "Subject text or header added to spam email.",
          "required": false,
          "suboptions": {}
        },
        "pop3_tag_type": {
          "aliases": [],
          "description": "Tag subject or header for spam email.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "subject",
            "header",
            "spaminfo"
          ],
          "suboptions": {}
        },
        "replacemsg_group": {
          "aliases": [],
          "description": "Replacement message group.",
          "required": false,
          "suboptions": {}
        },
        "smtp": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "smtp_action": {
          "aliases": [],
          "description": "Action for spam email.",
          "required": false,
          "choices": [
            "pass",
            "tag",
            "discard"
          ],
          "suboptions": {}
        },
        "smtp_hdrip": {
          "aliases": [],
          "description": "Enable/disable SMTP email header IP checks for spamfsip, spamrbl and spambwl filters.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "smtp_local_override": {
          "aliases": [],
          "description": "Enable/disable local filter to override SMTP remote check result.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "smtp_log": {
          "aliases": [],
          "description": "Enable/disable logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "smtp_tag_msg": {
          "aliases": [],
          "description": "Subject text or header added to spam email.",
          "required": false,
          "suboptions": {}
        },
        "smtp_tag_type": {
          "aliases": [],
          "description": "Tag subject or header for spam email.\nFLAG Based Options. Specify multiple in list form.",
          "required": false,
          "choices": [
            "subject",
            "header",
            "spaminfo"
          ],
          "suboptions": {}
        },
        "spam_bwl_table": {
          "aliases": [],
          "description": "Anti-spam black/white list table ID.",
          "required": false,
          "suboptions": {}
        },
        "spam_bword_table": {
          "aliases": [],
          "description": "Anti-spam banned word table ID.",
          "required": false,
          "suboptions": {}
        },
        "spam_bword_threshold": {
          "aliases": [],
          "description": "Spam banned word threshold.",
          "required": false,
          "suboptions": {}
        },
        "spam_filtering": {
          "aliases": [],
          "description": "Enable/disable spam filtering.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "spam_iptrust_table": {
          "aliases": [],
          "description": "Anti-spam IP trust table ID.",
          "required": false,
          "suboptions": {}
        },
        "spam_log": {
          "aliases": [],
          "description": "Enable/disable spam logging for email filtering.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "spam_log_fortiguard_response": {
          "aliases": [],
          "description": "Enable/disable logging FortiGuard spam response.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "spam_mheader_table": {
          "aliases": [],
          "description": "Anti-spam MIME header table ID.",
          "required": false,
          "suboptions": {}
        },
        "spam_rbl_table": {
          "aliases": [],
          "description": "Anti-spam DNSBL table ID.",
          "required": false,
          "suboptions": {}
        },
        "yahoo_mail": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "yahoo_mail_log": {
          "aliases": [],
          "description": "Enable/disable logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        }
      },
      "short_description": "spam filter profile for FMG"
    },
    "examples": "\n  - name: DELETE Profile\n    community.fortios.fmgr_secprof_spam:\n      name: \"Ansible_Spam_Filter_Profile\"\n      mode: \"delete\"\n\n  - name: Create FMGR_SPAMFILTER_PROFILE\n    community.fortios.fmgr_secprof_spam:\n      host: \"{{ inventory_hostname }}\"\n      username: \"{{ username }}\"\n      password: \"{{ password }}\"\n      mode: \"set\"\n      adom: \"root\"\n      spam_log_fortiguard_response: \"enable\"\n      spam_iptrust_table:\n      spam_filtering: \"enable\"\n      spam_bword_threshold: 10\n      options: [\"bannedword\", \"spamfsip\", \"spamfsurl\", \"spamrbl\", \"spamfsphish\", \"spambwl\"]\n      name: \"Ansible_Spam_Filter_Profile\"\n      flow_based: \"enable\"\n      external: \"enable\"\n      comment: \"Created by Ansible\"\n      gmail_log: \"enable\"\n      spam_log: \"enable\"\n"
  },
  "community.fortios.fmgr_secprof_ssl_ssh": {
    "doc": {
      "description": "Manage SSL and SSH security profiles in FortiManager via the FMG API",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "caname": {
          "aliases": [],
          "description": "CA certificate used by SSL Inspection.",
          "required": false,
          "suboptions": {}
        },
        "comment": {
          "aliases": [],
          "description": "Optional comments.",
          "required": false,
          "suboptions": {}
        },
        "ftps": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "ftps_allow_invalid_server_cert": {
          "aliases": [],
          "description": "When enabled, allows SSL sessions whose server certificate validation failed.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ftps_client_cert_request": {
          "aliases": [],
          "description": "Action based on client certificate request failure.\nchoice | bypass | Bypass.\nchoice | inspect | Inspect.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "bypass",
            "inspect",
            "block"
          ],
          "suboptions": {}
        },
        "ftps_ports": {
          "aliases": [],
          "description": "Ports to use for scanning (1 - 65535, default = 443).",
          "required": false,
          "suboptions": {}
        },
        "ftps_status": {
          "aliases": [],
          "description": "Configure protocol inspection status.\nchoice | disable | Disable.\nchoice | deep-inspection | Full SSL inspection.",
          "required": false,
          "choices": [
            "disable",
            "deep-inspection"
          ],
          "suboptions": {}
        },
        "ftps_unsupported_ssl": {
          "aliases": [],
          "description": "Action based on the SSL encryption used being unsupported.\nchoice | bypass | Bypass.\nchoice | inspect | Inspect.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "bypass",
            "inspect",
            "block"
          ],
          "suboptions": {}
        },
        "ftps_untrusted_cert": {
          "aliases": [],
          "description": "Allow, ignore, or block the untrusted SSL session server certificate.\nchoice | allow | Allow the untrusted server certificate.\nchoice | block | Block the connection when an untrusted server certificate is detected.\nchoice | ignore | Always take the server certificate as trusted.",
          "required": false,
          "choices": [
            "allow",
            "block",
            "ignore"
          ],
          "suboptions": {}
        },
        "https": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "https_allow_invalid_server_cert": {
          "aliases": [],
          "description": "When enabled, allows SSL sessions whose server certificate validation failed.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "https_client_cert_request": {
          "aliases": [],
          "description": "Action based on client certificate request failure.\nchoice | bypass | Bypass.\nchoice | inspect | Inspect.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "bypass",
            "inspect",
            "block"
          ],
          "suboptions": {}
        },
        "https_ports": {
          "aliases": [],
          "description": "Ports to use for scanning (1 - 65535, default = 443).",
          "required": false,
          "suboptions": {}
        },
        "https_status": {
          "aliases": [],
          "description": "Configure protocol inspection status.\nchoice | disable | Disable.\nchoice | certificate-inspection | Inspect SSL handshake only.\nchoice | deep-inspection | Full SSL inspection.",
          "required": false,
          "choices": [
            "disable",
            "certificate-inspection",
            "deep-inspection"
          ],
          "suboptions": {}
        },
        "https_unsupported_ssl": {
          "aliases": [],
          "description": "Action based on the SSL encryption used being unsupported.\nchoice | bypass | Bypass.\nchoice | inspect | Inspect.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "bypass",
            "inspect",
            "block"
          ],
          "suboptions": {}
        },
        "https_untrusted_cert": {
          "aliases": [],
          "description": "Allow, ignore, or block the untrusted SSL session server certificate.\nchoice | allow | Allow the untrusted server certificate.\nchoice | block | Block the connection when an untrusted server certificate is detected.\nchoice | ignore | Always take the server certificate as trusted.",
          "required": false,
          "choices": [
            "allow",
            "block",
            "ignore"
          ],
          "suboptions": {}
        },
        "imaps": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "imaps_allow_invalid_server_cert": {
          "aliases": [],
          "description": "When enabled, allows SSL sessions whose server certificate validation failed.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "imaps_client_cert_request": {
          "aliases": [],
          "description": "Action based on client certificate request failure.\nchoice | bypass | Bypass.\nchoice | inspect | Inspect.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "bypass",
            "inspect",
            "block"
          ],
          "suboptions": {}
        },
        "imaps_ports": {
          "aliases": [],
          "description": "Ports to use for scanning (1 - 65535, default = 443).",
          "required": false,
          "suboptions": {}
        },
        "imaps_status": {
          "aliases": [],
          "description": "Configure protocol inspection status.\nchoice | disable | Disable.\nchoice | deep-inspection | Full SSL inspection.",
          "required": false,
          "choices": [
            "disable",
            "deep-inspection"
          ],
          "suboptions": {}
        },
        "imaps_unsupported_ssl": {
          "aliases": [],
          "description": "Action based on the SSL encryption used being unsupported.\nchoice | bypass | Bypass.\nchoice | inspect | Inspect.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "bypass",
            "inspect",
            "block"
          ],
          "suboptions": {}
        },
        "imaps_untrusted_cert": {
          "aliases": [],
          "description": "Allow, ignore, or block the untrusted SSL session server certificate.\nchoice | allow | Allow the untrusted server certificate.\nchoice | block | Block the connection when an untrusted server certificate is detected.\nchoice | ignore | Always take the server certificate as trusted.",
          "required": false,
          "choices": [
            "allow",
            "block",
            "ignore"
          ],
          "suboptions": {}
        },
        "mapi_over_https": {
          "aliases": [],
          "description": "Enable/disable inspection of MAPI over HTTPS.\nchoice | disable | Disable inspection of MAPI over HTTPS.\nchoice | enable | Enable inspection of MAPI over HTTPS.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.\nAllows use of soft-adds instead of overwriting existing values",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete",
            "update"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name.",
          "required": false,
          "suboptions": {}
        },
        "pop3s": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "pop3s_allow_invalid_server_cert": {
          "aliases": [],
          "description": "When enabled, allows SSL sessions whose server certificate validation failed.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "pop3s_client_cert_request": {
          "aliases": [],
          "description": "Action based on client certificate request failure.\nchoice | bypass | Bypass.\nchoice | inspect | Inspect.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "bypass",
            "inspect",
            "block"
          ],
          "suboptions": {}
        },
        "pop3s_ports": {
          "aliases": [],
          "description": "Ports to use for scanning (1 - 65535, default = 443).",
          "required": false,
          "suboptions": {}
        },
        "pop3s_status": {
          "aliases": [],
          "description": "Configure protocol inspection status.\nchoice | disable | Disable.\nchoice | deep-inspection | Full SSL inspection.",
          "required": false,
          "choices": [
            "disable",
            "deep-inspection"
          ],
          "suboptions": {}
        },
        "pop3s_unsupported_ssl": {
          "aliases": [],
          "description": "Action based on the SSL encryption used being unsupported.\nchoice | bypass | Bypass.\nchoice | inspect | Inspect.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "bypass",
            "inspect",
            "block"
          ],
          "suboptions": {}
        },
        "pop3s_untrusted_cert": {
          "aliases": [],
          "description": "Allow, ignore, or block the untrusted SSL session server certificate.\nchoice | allow | Allow the untrusted server certificate.\nchoice | block | Block the connection when an untrusted server certificate is detected.\nchoice | ignore | Always take the server certificate as trusted.",
          "required": false,
          "choices": [
            "allow",
            "block",
            "ignore"
          ],
          "suboptions": {}
        },
        "rpc_over_https": {
          "aliases": [],
          "description": "Enable/disable inspection of RPC over HTTPS.\nchoice | disable | Disable inspection of RPC over HTTPS.\nchoice | enable | Enable inspection of RPC over HTTPS.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "server_cert": {
          "aliases": [],
          "description": "Certificate used by SSL Inspection to replace server certificate.",
          "required": false,
          "suboptions": {}
        },
        "server_cert_mode": {
          "aliases": [],
          "description": "Re-sign or replace the server's certificate.\nchoice | re-sign | Multiple clients connecting to multiple servers.\nchoice | replace | Protect an SSL server.",
          "required": false,
          "choices": [
            "re-sign",
            "replace"
          ],
          "suboptions": {}
        },
        "smtps": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "smtps_allow_invalid_server_cert": {
          "aliases": [],
          "description": "When enabled, allows SSL sessions whose server certificate validation failed.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "smtps_client_cert_request": {
          "aliases": [],
          "description": "Action based on client certificate request failure.\nchoice | bypass | Bypass.\nchoice | inspect | Inspect.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "bypass",
            "inspect",
            "block"
          ],
          "suboptions": {}
        },
        "smtps_ports": {
          "aliases": [],
          "description": "Ports to use for scanning (1 - 65535, default = 443).",
          "required": false,
          "suboptions": {}
        },
        "smtps_status": {
          "aliases": [],
          "description": "Configure protocol inspection status.\nchoice | disable | Disable.\nchoice | deep-inspection | Full SSL inspection.",
          "required": false,
          "choices": [
            "disable",
            "deep-inspection"
          ],
          "suboptions": {}
        },
        "smtps_unsupported_ssl": {
          "aliases": [],
          "description": "Action based on the SSL encryption used being unsupported.\nchoice | bypass | Bypass.\nchoice | inspect | Inspect.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "bypass",
            "inspect",
            "block"
          ],
          "suboptions": {}
        },
        "smtps_untrusted_cert": {
          "aliases": [],
          "description": "Allow, ignore, or block the untrusted SSL session server certificate.\nchoice | allow | Allow the untrusted server certificate.\nchoice | block | Block the connection when an untrusted server certificate is detected.\nchoice | ignore | Always take the server certificate as trusted.",
          "required": false,
          "choices": [
            "allow",
            "block",
            "ignore"
          ],
          "suboptions": {}
        },
        "ssh": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "ssh_inspect_all": {
          "aliases": [],
          "description": "Level of SSL inspection.\nchoice | disable | Disable.\nchoice | deep-inspection | Full SSL inspection.",
          "required": false,
          "choices": [
            "disable",
            "deep-inspection"
          ],
          "suboptions": {}
        },
        "ssh_ports": {
          "aliases": [],
          "description": "Ports to use for scanning (1 - 65535, default = 443).",
          "required": false,
          "suboptions": {}
        },
        "ssh_ssh_algorithm": {
          "aliases": [],
          "description": "Relative strength of encryption algorithms accepted during negotiation.\nchoice | compatible | Allow a broader set of encryption algorithms for best compatibility.\nchoice | high-encryption | Allow only AES-CTR, AES-GCM ciphers and high encryption algorithms.",
          "required": false,
          "choices": [
            "compatible",
            "high-encryption"
          ],
          "suboptions": {}
        },
        "ssh_ssh_policy_check": {
          "aliases": [],
          "description": "Enable/disable SSH policy check.\nchoice | disable | Disable SSH policy check.\nchoice | enable | Enable SSH policy check.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ssh_ssh_tun_policy_check": {
          "aliases": [],
          "description": "Enable/disable SSH tunnel policy check.\nchoice | disable | Disable SSH tunnel policy check.\nchoice | enable | Enable SSH tunnel policy check.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ssh_status": {
          "aliases": [],
          "description": "Configure protocol inspection status.\nchoice | disable | Disable.\nchoice | deep-inspection | Full SSL inspection.",
          "required": false,
          "choices": [
            "disable",
            "deep-inspection"
          ],
          "suboptions": {}
        },
        "ssh_unsupported_version": {
          "aliases": [],
          "description": "Action based on SSH version being unsupported.\nchoice | block | Block.\nchoice | bypass | Bypass.",
          "required": false,
          "choices": [
            "block",
            "bypass"
          ],
          "suboptions": {}
        },
        "ssl": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "ssl_allow_invalid_server_cert": {
          "aliases": [],
          "description": "When enabled, allows SSL sessions whose server certificate validation failed.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ssl_anomalies_log": {
          "aliases": [],
          "description": "Enable/disable logging SSL anomalies.\nchoice | disable | Disable logging SSL anomalies.\nchoice | enable | Enable logging SSL anomalies.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ssl_client_cert_request": {
          "aliases": [],
          "description": "Action based on client certificate request failure.\nchoice | bypass | Bypass.\nchoice | inspect | Inspect.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "bypass",
            "inspect",
            "block"
          ],
          "suboptions": {}
        },
        "ssl_exempt": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "ssl_exempt_address": {
          "aliases": [],
          "description": "IPv4 address object.",
          "required": false,
          "suboptions": {}
        },
        "ssl_exempt_address6": {
          "aliases": [],
          "description": "IPv6 address object.",
          "required": false,
          "suboptions": {}
        },
        "ssl_exempt_fortiguard_category": {
          "aliases": [],
          "description": "FortiGuard category ID.",
          "required": false,
          "suboptions": {}
        },
        "ssl_exempt_regex": {
          "aliases": [],
          "description": "Exempt servers by regular expression.",
          "required": false,
          "suboptions": {}
        },
        "ssl_exempt_type": {
          "aliases": [],
          "description": "Type of address object (IPv4 or IPv6) or FortiGuard category.\nchoice | fortiguard-category | FortiGuard category.\nchoice | address | Firewall IPv4 address.\nchoice | address6 | Firewall IPv6 address.\nchoice | wildcard-fqdn | Fully Qualified Domain Name with wildcard characters.\nchoice | regex | Regular expression FQDN.",
          "required": false,
          "choices": [
            "fortiguard-category",
            "address",
            "address6",
            "wildcard-fqdn",
            "regex"
          ],
          "suboptions": {}
        },
        "ssl_exempt_wildcard_fqdn": {
          "aliases": [],
          "description": "Exempt servers by wildcard FQDN.",
          "required": false,
          "suboptions": {}
        },
        "ssl_exemptions_log": {
          "aliases": [],
          "description": "Enable/disable logging SSL exemptions.\nchoice | disable | Disable logging SSL exemptions.\nchoice | enable | Enable logging SSL exemptions.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ssl_inspect_all": {
          "aliases": [],
          "description": "Level of SSL inspection.\nchoice | disable | Disable.\nchoice | certificate-inspection | Inspect SSL handshake only.\nchoice | deep-inspection | Full SSL inspection.",
          "required": false,
          "choices": [
            "disable",
            "certificate-inspection",
            "deep-inspection"
          ],
          "suboptions": {}
        },
        "ssl_server": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "ssl_server_ftps_client_cert_request": {
          "aliases": [],
          "description": "Action based on client certificate request failure during the FTPS handshake.\nchoice | bypass | Bypass.\nchoice | inspect | Inspect.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "bypass",
            "inspect",
            "block"
          ],
          "suboptions": {}
        },
        "ssl_server_https_client_cert_request": {
          "aliases": [],
          "description": "Action based on client certificate request failure during the HTTPS handshake.\nchoice | bypass | Bypass.\nchoice | inspect | Inspect.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "bypass",
            "inspect",
            "block"
          ],
          "suboptions": {}
        },
        "ssl_server_imaps_client_cert_request": {
          "aliases": [],
          "description": "Action based on client certificate request failure during the IMAPS handshake.\nchoice | bypass | Bypass.\nchoice | inspect | Inspect.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "bypass",
            "inspect",
            "block"
          ],
          "suboptions": {}
        },
        "ssl_server_ip": {
          "aliases": [],
          "description": "IPv4 address of the SSL server.",
          "required": false,
          "suboptions": {}
        },
        "ssl_server_pop3s_client_cert_request": {
          "aliases": [],
          "description": "Action based on client certificate request failure during the POP3S handshake.\nchoice | bypass | Bypass.\nchoice | inspect | Inspect.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "bypass",
            "inspect",
            "block"
          ],
          "suboptions": {}
        },
        "ssl_server_smtps_client_cert_request": {
          "aliases": [],
          "description": "Action based on client certificate request failure during the SMTPS handshake.\nchoice | bypass | Bypass.\nchoice | inspect | Inspect.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "bypass",
            "inspect",
            "block"
          ],
          "suboptions": {}
        },
        "ssl_server_ssl_other_client_cert_request": {
          "aliases": [],
          "description": "Action based on client certificate request failure during an SSL protocol handshake.\nchoice | bypass | Bypass.\nchoice | inspect | Inspect.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "bypass",
            "inspect",
            "block"
          ],
          "suboptions": {}
        },
        "ssl_unsupported_ssl": {
          "aliases": [],
          "description": "Action based on the SSL encryption used being unsupported.\nchoice | bypass | Bypass.\nchoice | inspect | Inspect.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "bypass",
            "inspect",
            "block"
          ],
          "suboptions": {}
        },
        "ssl_untrusted_cert": {
          "aliases": [],
          "description": "Allow, ignore, or block the untrusted SSL session server certificate.\nchoice | allow | Allow the untrusted server certificate.\nchoice | block | Block the connection when an untrusted server certificate is detected.\nchoice | ignore | Always take the server certificate as trusted.",
          "required": false,
          "choices": [
            "allow",
            "block",
            "ignore"
          ],
          "suboptions": {}
        },
        "untrusted_caname": {
          "aliases": [],
          "description": "Untrusted CA certificate used by SSL Inspection.",
          "required": false,
          "suboptions": {}
        },
        "use_ssl_server": {
          "aliases": [],
          "description": "Enable/disable the use of SSL server table for SSL offloading.\nchoice | disable | Don't use SSL server configuration.\nchoice | enable | Use SSL server configuration.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "whitelist": {
          "aliases": [],
          "description": "Enable/disable exempting servers by FortiGuard whitelist.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage SSL and SSH security profiles in FortiManager"
    },
    "examples": "\n  - name: DELETE Profile\n    community.fortios.fmgr_secprof_ssl_ssh:\n      name: Ansible_SSL_SSH_Profile\n      mode: delete\n\n  - name: CREATE Profile\n    community.fortios.fmgr_secprof_ssl_ssh:\n      name: Ansible_SSL_SSH_Profile\n      comment: \"Created by Ansible Module TEST\"\n      mode: set\n      mapi_over_https: enable\n      rpc_over_https: enable\n      server_cert_mode: replace\n      ssl_anomalies_log: enable\n      ssl_exemptions_log: enable\n      use_ssl_server: enable\n      whitelist: enable\n"
  },
  "community.fortios.fmgr_secprof_voip": {
    "doc": {
      "description": "Manage VOIP security profiles in FortiManager via API",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "comment": {
          "aliases": [],
          "description": "Comment.",
          "required": false,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.\nAllows use of soft-adds instead of overwriting existing values",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete",
            "update"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Profile name.",
          "required": false,
          "suboptions": {}
        },
        "sccp": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "sccp_block_mcast": {
          "aliases": [],
          "description": "Enable/disable block multicast RTP connections.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sccp_log_call_summary": {
          "aliases": [],
          "description": "Enable/disable log summary of SCCP calls.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sccp_log_violations": {
          "aliases": [],
          "description": "Enable/disable logging of SCCP violations.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sccp_max_calls": {
          "aliases": [],
          "description": "Maximum calls per minute per SCCP client (max 65535).",
          "required": false,
          "suboptions": {}
        },
        "sccp_status": {
          "aliases": [],
          "description": "Enable/disable SCCP.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sccp_verify_header": {
          "aliases": [],
          "description": "Enable/disable verify SCCP header content.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "sip_ack_rate": {
          "aliases": [],
          "description": "ACK request rate limit (per second, per policy).",
          "required": false,
          "suboptions": {}
        },
        "sip_block_ack": {
          "aliases": [],
          "description": "Enable/disable block ACK requests.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_block_bye": {
          "aliases": [],
          "description": "Enable/disable block BYE requests.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_block_cancel": {
          "aliases": [],
          "description": "Enable/disable block CANCEL requests.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_block_geo_red_options": {
          "aliases": [],
          "description": "Enable/disable block OPTIONS requests, but OPTIONS requests still notify for redundancy.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_block_info": {
          "aliases": [],
          "description": "Enable/disable block INFO requests.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_block_invite": {
          "aliases": [],
          "description": "Enable/disable block INVITE requests.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_block_long_lines": {
          "aliases": [],
          "description": "Enable/disable block requests with headers exceeding max-line-length.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_block_message": {
          "aliases": [],
          "description": "Enable/disable block MESSAGE requests.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_block_notify": {
          "aliases": [],
          "description": "Enable/disable block NOTIFY requests.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_block_options": {
          "aliases": [],
          "description": "Enable/disable block OPTIONS requests and no OPTIONS as notifying message for redundancy either.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_block_prack": {
          "aliases": [],
          "description": "Enable/disable block prack requests.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_block_publish": {
          "aliases": [],
          "description": "Enable/disable block PUBLISH requests.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_block_refer": {
          "aliases": [],
          "description": "Enable/disable block REFER requests.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_block_register": {
          "aliases": [],
          "description": "Enable/disable block REGISTER requests.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_block_subscribe": {
          "aliases": [],
          "description": "Enable/disable block SUBSCRIBE requests.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_block_unknown": {
          "aliases": [],
          "description": "Block unrecognized SIP requests (enabled by default).\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_block_update": {
          "aliases": [],
          "description": "Enable/disable block UPDATE requests.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_bye_rate": {
          "aliases": [],
          "description": "BYE request rate limit (per second, per policy).",
          "required": false,
          "suboptions": {}
        },
        "sip_call_keepalive": {
          "aliases": [],
          "description": "Continue tracking calls with no RTP for this many minutes.",
          "required": false,
          "suboptions": {}
        },
        "sip_cancel_rate": {
          "aliases": [],
          "description": "CANCEL request rate limit (per second, per policy).",
          "required": false,
          "suboptions": {}
        },
        "sip_contact_fixup": {
          "aliases": [],
          "description": "Fixup contact anyway even if contact's IP|port doesn't match session's IP|port.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_hnt_restrict_source_ip": {
          "aliases": [],
          "description": "Enable/disable restrict RTP source IP to be the same as SIP source IP when HNT is enabled.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_hosted_nat_traversal": {
          "aliases": [],
          "description": "Hosted NAT Traversal (HNT).\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_info_rate": {
          "aliases": [],
          "description": "INFO request rate limit (per second, per policy).",
          "required": false,
          "suboptions": {}
        },
        "sip_invite_rate": {
          "aliases": [],
          "description": "INVITE request rate limit (per second, per policy).",
          "required": false,
          "suboptions": {}
        },
        "sip_ips_rtp": {
          "aliases": [],
          "description": "Enable/disable allow IPS on RTP.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_log_call_summary": {
          "aliases": [],
          "description": "Enable/disable logging of SIP call summary.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_log_violations": {
          "aliases": [],
          "description": "Enable/disable logging of SIP violations.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_allow": {
          "aliases": [],
          "description": "Action for malformed Allow header.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_call_id": {
          "aliases": [],
          "description": "Action for malformed Call-ID header.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_contact": {
          "aliases": [],
          "description": "Action for malformed Contact header.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_content_length": {
          "aliases": [],
          "description": "Action for malformed Content-Length header.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_content_type": {
          "aliases": [],
          "description": "Action for malformed Content-Type header.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_cseq": {
          "aliases": [],
          "description": "Action for malformed CSeq header.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_expires": {
          "aliases": [],
          "description": "Action for malformed Expires header.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_from": {
          "aliases": [],
          "description": "Action for malformed From header.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_max_forwards": {
          "aliases": [],
          "description": "Action for malformed Max-Forwards header.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_p_asserted_identity": {
          "aliases": [],
          "description": "Action for malformed P-Asserted-Identity header.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_rack": {
          "aliases": [],
          "description": "Action for malformed RAck header.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_record_route": {
          "aliases": [],
          "description": "Action for malformed Record-Route header.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_route": {
          "aliases": [],
          "description": "Action for malformed Route header.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_rseq": {
          "aliases": [],
          "description": "Action for malformed RSeq header.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_sdp_a": {
          "aliases": [],
          "description": "Action for malformed SDP a line.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_sdp_b": {
          "aliases": [],
          "description": "Action for malformed SDP b line.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_sdp_c": {
          "aliases": [],
          "description": "Action for malformed SDP c line.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_sdp_i": {
          "aliases": [],
          "description": "Action for malformed SDP i line.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_sdp_k": {
          "aliases": [],
          "description": "Action for malformed SDP k line.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_sdp_m": {
          "aliases": [],
          "description": "Action for malformed SDP m line.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_sdp_o": {
          "aliases": [],
          "description": "Action for malformed SDP o line.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_sdp_r": {
          "aliases": [],
          "description": "Action for malformed SDP r line.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_sdp_s": {
          "aliases": [],
          "description": "Action for malformed SDP s line.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_sdp_t": {
          "aliases": [],
          "description": "Action for malformed SDP t line.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_sdp_v": {
          "aliases": [],
          "description": "Action for malformed SDP v line.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_sdp_z": {
          "aliases": [],
          "description": "Action for malformed SDP z line.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_to": {
          "aliases": [],
          "description": "Action for malformed To header.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_header_via": {
          "aliases": [],
          "description": "Action for malformed VIA header.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_malformed_request_line": {
          "aliases": [],
          "description": "Action for malformed request line.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_max_body_length": {
          "aliases": [],
          "description": "Maximum SIP message body length (0 meaning no limit).",
          "required": false,
          "suboptions": {}
        },
        "sip_max_dialogs": {
          "aliases": [],
          "description": "Maximum number of concurrent calls/dialogs (per policy).",
          "required": false,
          "suboptions": {}
        },
        "sip_max_idle_dialogs": {
          "aliases": [],
          "description": "Maximum number established but idle dialogs to retain (per policy).",
          "required": false,
          "suboptions": {}
        },
        "sip_max_line_length": {
          "aliases": [],
          "description": "Maximum SIP header line length (78-4096).",
          "required": false,
          "suboptions": {}
        },
        "sip_message_rate": {
          "aliases": [],
          "description": "MESSAGE request rate limit (per second, per policy).",
          "required": false,
          "suboptions": {}
        },
        "sip_nat_trace": {
          "aliases": [],
          "description": "Enable/disable preservation of original IP in SDP i line.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_no_sdp_fixup": {
          "aliases": [],
          "description": "Enable/disable no SDP fix-up.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_notify_rate": {
          "aliases": [],
          "description": "NOTIFY request rate limit (per second, per policy).",
          "required": false,
          "suboptions": {}
        },
        "sip_open_contact_pinhole": {
          "aliases": [],
          "description": "Enable/disable open pinhole for non-REGISTER Contact port.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_open_record_route_pinhole": {
          "aliases": [],
          "description": "Enable/disable open pinhole for Record-Route port.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_open_register_pinhole": {
          "aliases": [],
          "description": "Enable/disable open pinhole for REGISTER Contact port.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_open_via_pinhole": {
          "aliases": [],
          "description": "Enable/disable open pinhole for Via port.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_options_rate": {
          "aliases": [],
          "description": "OPTIONS request rate limit (per second, per policy).",
          "required": false,
          "suboptions": {}
        },
        "sip_prack_rate": {
          "aliases": [],
          "description": "PRACK request rate limit (per second, per policy).",
          "required": false,
          "suboptions": {}
        },
        "sip_preserve_override": {
          "aliases": [],
          "description": "Override i line to preserve original IPS (default| append).\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_provisional_invite_expiry_time": {
          "aliases": [],
          "description": "Expiry time for provisional INVITE (10 - 3600 sec).",
          "required": false,
          "suboptions": {}
        },
        "sip_publish_rate": {
          "aliases": [],
          "description": "PUBLISH request rate limit (per second, per policy).",
          "required": false,
          "suboptions": {}
        },
        "sip_refer_rate": {
          "aliases": [],
          "description": "REFER request rate limit (per second, per policy).",
          "required": false,
          "suboptions": {}
        },
        "sip_register_contact_trace": {
          "aliases": [],
          "description": "Enable/disable trace original IP/port within the contact header of REGISTER requests.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_register_rate": {
          "aliases": [],
          "description": "REGISTER request rate limit (per second, per policy).",
          "required": false,
          "suboptions": {}
        },
        "sip_rfc2543_branch": {
          "aliases": [],
          "description": "Enable/disable support via branch compliant with RFC 2543.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_rtp": {
          "aliases": [],
          "description": "Enable/disable create pinholes for RTP traffic to traverse firewall.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_ssl_algorithm": {
          "aliases": [],
          "description": "Relative strength of encryption algorithms accepted in negotiation.\nchoice | high | High encryption. Allow only AES and ChaCha.\nchoice | medium | Medium encryption. Allow AES, ChaCha, 3DES, and RC4.\nchoice | low | Low encryption. Allow AES, ChaCha, 3DES, RC4, and DES.",
          "required": false,
          "choices": [
            "high",
            "medium",
            "low"
          ],
          "suboptions": {}
        },
        "sip_ssl_auth_client": {
          "aliases": [],
          "description": "Require a client certificate and authenticate it with the peer/peergrp.",
          "required": false,
          "suboptions": {}
        },
        "sip_ssl_auth_server": {
          "aliases": [],
          "description": "Authenticate the server's certificate with the peer/peergrp.",
          "required": false,
          "suboptions": {}
        },
        "sip_ssl_client_certificate": {
          "aliases": [],
          "description": "Name of Certificate to offer to server if requested.",
          "required": false,
          "suboptions": {}
        },
        "sip_ssl_client_renegotiation": {
          "aliases": [],
          "description": "Allow/block client renegotiation by server.\nchoice | allow | Allow a SSL client to renegotiate.\nchoice | deny | Abort any SSL connection that attempts to renegotiate.\nchoice | secure | Reject any SSL connection that does not offer a RFC 5746 Secure Renegotiation Indication.",
          "required": false,
          "choices": [
            "allow",
            "deny",
            "secure"
          ],
          "suboptions": {}
        },
        "sip_ssl_max_version": {
          "aliases": [],
          "description": "Highest SSL/TLS version to negotiate.\nchoice | ssl-3.0 | SSL 3.0.\nchoice | tls-1.0 | TLS 1.0.\nchoice | tls-1.1 | TLS 1.1.\nchoice | tls-1.2 | TLS 1.2.",
          "required": false,
          "choices": [
            "ssl-3.0",
            "tls-1.0",
            "tls-1.1",
            "tls-1.2"
          ],
          "suboptions": {}
        },
        "sip_ssl_min_version": {
          "aliases": [],
          "description": "Lowest SSL/TLS version to negotiate.\nchoice | ssl-3.0 | SSL 3.0.\nchoice | tls-1.0 | TLS 1.0.\nchoice | tls-1.1 | TLS 1.1.\nchoice | tls-1.2 | TLS 1.2.",
          "required": false,
          "choices": [
            "ssl-3.0",
            "tls-1.0",
            "tls-1.1",
            "tls-1.2"
          ],
          "suboptions": {}
        },
        "sip_ssl_mode": {
          "aliases": [],
          "description": "SSL/TLS mode for encryption &amp; decryption of traffic.\nchoice | off | No SSL.\nchoice | full | Client to FortiGate and FortiGate to Server SSL.",
          "required": false,
          "choices": [
            "off",
            "full"
          ],
          "suboptions": {}
        },
        "sip_ssl_pfs": {
          "aliases": [],
          "description": "SSL Perfect Forward Secrecy.\nchoice | require | PFS mandatory.\nchoice | deny | PFS rejected.\nchoice | allow | PFS allowed.",
          "required": false,
          "choices": [
            "require",
            "deny",
            "allow"
          ],
          "suboptions": {}
        },
        "sip_ssl_send_empty_frags": {
          "aliases": [],
          "description": "Send empty fragments to avoid attack on CBC IV (SSL 3.0 &amp; TLS 1.0 only).\nchoice | disable | Do not send empty fragments.\nchoice | enable | Send empty fragments.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_ssl_server_certificate": {
          "aliases": [],
          "description": "Name of Certificate return to the client in every SSL connection.",
          "required": false,
          "suboptions": {}
        },
        "sip_status": {
          "aliases": [],
          "description": "Enable/disable SIP.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_strict_register": {
          "aliases": [],
          "description": "Enable/disable only allow the registrar to connect.\nchoice | disable | Disable status.\nchoice | enable | Enable status.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "sip_subscribe_rate": {
          "aliases": [],
          "description": "SUBSCRIBE request rate limit (per second, per policy).",
          "required": false,
          "suboptions": {}
        },
        "sip_unknown_header": {
          "aliases": [],
          "description": "Action for unknown SIP header.\nchoice | pass | Bypass malformed messages.\nchoice | discard | Discard malformed messages.\nchoice | respond | Respond with error code.",
          "required": false,
          "choices": [
            "pass",
            "discard",
            "respond"
          ],
          "suboptions": {}
        },
        "sip_update_rate": {
          "aliases": [],
          "description": "UPDATE request rate limit (per second, per policy).",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "VOIP security profiles in FMG"
    },
    "examples": "\n  - name: DELETE Profile\n    community.fortios.fmgr_secprof_voip:\n      name: \"Ansible_VOIP_Profile\"\n      mode: \"delete\"\n\n  - name: Create FMGR_VOIP_PROFILE\n    community.fortios.fmgr_secprof_voip:\n      mode: \"set\"\n      adom: \"root\"\n      name: \"Ansible_VOIP_Profile\"\n      comment: \"Created by Ansible\"\n      sccp: {block-mcast: \"enable\", log-call-summary: \"enable\", log-violations: \"enable\", status: \"enable\"}\n"
  },
  "community.fortios.fmgr_secprof_waf": {
    "doc": {
      "description": "Manage web application firewall security profiles for FGTs via FMG",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "address_list": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "address_list_blocked_address": {
          "aliases": [],
          "description": "Blocked address.",
          "required": false,
          "suboptions": {}
        },
        "address_list_blocked_log": {
          "aliases": [],
          "description": "Enable/disable logging on blocked addresses.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "address_list_severity": {
          "aliases": [],
          "description": "Severity.\nchoice | low | Low severity.\nchoice | medium | Medium severity.\nchoice | high | High severity.",
          "required": false,
          "choices": [
            "low",
            "medium",
            "high"
          ],
          "suboptions": {}
        },
        "address_list_status": {
          "aliases": [],
          "description": "Status.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "address_list_trusted_address": {
          "aliases": [],
          "description": "Trusted address.",
          "required": false,
          "suboptions": {}
        },
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "comment": {
          "aliases": [],
          "description": "Comment.",
          "required": false,
          "suboptions": {}
        },
        "constraint": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "constraint_content_length_action": {
          "aliases": [],
          "description": "Action.\nchoice | allow | Allow.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "allow",
            "block"
          ],
          "suboptions": {}
        },
        "constraint_content_length_length": {
          "aliases": [],
          "description": "Length of HTTP content in bytes (0 to 2147483647).",
          "required": false,
          "suboptions": {}
        },
        "constraint_content_length_log": {
          "aliases": [],
          "description": "Enable/disable logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_content_length_severity": {
          "aliases": [],
          "description": "Severity.\nchoice | low | Low severity.\nchoice | medium | Medium severity.\nchoice | high | High severity.",
          "required": false,
          "choices": [
            "low",
            "medium",
            "high"
          ],
          "suboptions": {}
        },
        "constraint_content_length_status": {
          "aliases": [],
          "description": "Enable/disable the constraint.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_exception_address": {
          "aliases": [],
          "description": "Host address.",
          "required": false,
          "suboptions": {}
        },
        "constraint_exception_content_length": {
          "aliases": [],
          "description": "HTTP content length in request.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_exception_header_length": {
          "aliases": [],
          "description": "HTTP header length in request.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_exception_hostname": {
          "aliases": [],
          "description": "Enable/disable hostname check.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_exception_line_length": {
          "aliases": [],
          "description": "HTTP line length in request.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_exception_malformed": {
          "aliases": [],
          "description": "Enable/disable malformed HTTP request check.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_exception_max_cookie": {
          "aliases": [],
          "description": "Maximum number of cookies in HTTP request.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_exception_max_header_line": {
          "aliases": [],
          "description": "Maximum number of HTTP header line.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_exception_max_range_segment": {
          "aliases": [],
          "description": "Maximum number of range segments in HTTP range line.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_exception_max_url_param": {
          "aliases": [],
          "description": "Maximum number of parameters in URL.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_exception_method": {
          "aliases": [],
          "description": "Enable/disable HTTP method check.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_exception_param_length": {
          "aliases": [],
          "description": "Maximum length of parameter in URL, HTTP POST request or HTTP body.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_exception_pattern": {
          "aliases": [],
          "description": "URL pattern.",
          "required": false,
          "suboptions": {}
        },
        "constraint_exception_regex": {
          "aliases": [],
          "description": "Enable/disable regular expression based pattern match.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_exception_url_param_length": {
          "aliases": [],
          "description": "Maximum length of parameter in URL.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_exception_version": {
          "aliases": [],
          "description": "Enable/disable HTTP version check.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_header_length_action": {
          "aliases": [],
          "description": "Action.\nchoice | allow | Allow.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "allow",
            "block"
          ],
          "suboptions": {}
        },
        "constraint_header_length_length": {
          "aliases": [],
          "description": "Length of HTTP header in bytes (0 to 2147483647).",
          "required": false,
          "suboptions": {}
        },
        "constraint_header_length_log": {
          "aliases": [],
          "description": "Enable/disable logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_header_length_severity": {
          "aliases": [],
          "description": "Severity.\nchoice | low | Low severity.\nchoice | medium | Medium severity.\nchoice | high | High severity.",
          "required": false,
          "choices": [
            "low",
            "medium",
            "high"
          ],
          "suboptions": {}
        },
        "constraint_header_length_status": {
          "aliases": [],
          "description": "Enable/disable the constraint.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_hostname_action": {
          "aliases": [],
          "description": "Action for a hostname constraint.\nchoice | allow | Allow.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "allow",
            "block"
          ],
          "suboptions": {}
        },
        "constraint_hostname_log": {
          "aliases": [],
          "description": "Enable/disable logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_hostname_severity": {
          "aliases": [],
          "description": "Severity.\nchoice | low | Low severity.\nchoice | medium | Medium severity.\nchoice | high | High severity.",
          "required": false,
          "choices": [
            "low",
            "medium",
            "high"
          ],
          "suboptions": {}
        },
        "constraint_hostname_status": {
          "aliases": [],
          "description": "Enable/disable the constraint.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_line_length_action": {
          "aliases": [],
          "description": "Action.\nchoice | allow | Allow.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "allow",
            "block"
          ],
          "suboptions": {}
        },
        "constraint_line_length_length": {
          "aliases": [],
          "description": "Length of HTTP line in bytes (0 to 2147483647).",
          "required": false,
          "suboptions": {}
        },
        "constraint_line_length_log": {
          "aliases": [],
          "description": "Enable/disable logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_line_length_severity": {
          "aliases": [],
          "description": "Severity.\nchoice | low | Low severity.\nchoice | medium | Medium severity.\nchoice | high | High severity.",
          "required": false,
          "choices": [
            "low",
            "medium",
            "high"
          ],
          "suboptions": {}
        },
        "constraint_line_length_status": {
          "aliases": [],
          "description": "Enable/disable the constraint.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_malformed_action": {
          "aliases": [],
          "description": "Action.\nchoice | allow | Allow.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "allow",
            "block"
          ],
          "suboptions": {}
        },
        "constraint_malformed_log": {
          "aliases": [],
          "description": "Enable/disable logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_malformed_severity": {
          "aliases": [],
          "description": "Severity.\nchoice | low | Low severity.\nchoice | medium | Medium severity.\nchoice | high | High severity.",
          "required": false,
          "choices": [
            "low",
            "medium",
            "high"
          ],
          "suboptions": {}
        },
        "constraint_malformed_status": {
          "aliases": [],
          "description": "Enable/disable the constraint.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_max_cookie_action": {
          "aliases": [],
          "description": "Action.\nchoice | allow | Allow.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "allow",
            "block"
          ],
          "suboptions": {}
        },
        "constraint_max_cookie_log": {
          "aliases": [],
          "description": "Enable/disable logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_max_cookie_max_cookie": {
          "aliases": [],
          "description": "Maximum number of cookies in HTTP request (0 to 2147483647).",
          "required": false,
          "suboptions": {}
        },
        "constraint_max_cookie_severity": {
          "aliases": [],
          "description": "Severity.\nchoice | low | Low severity.\nchoice | medium | Medium severity.\nchoice | high | High severity.",
          "required": false,
          "choices": [
            "low",
            "medium",
            "high"
          ],
          "suboptions": {}
        },
        "constraint_max_cookie_status": {
          "aliases": [],
          "description": "Enable/disable the constraint.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_max_header_line_action": {
          "aliases": [],
          "description": "Action.\nchoice | allow | Allow.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "allow",
            "block"
          ],
          "suboptions": {}
        },
        "constraint_max_header_line_log": {
          "aliases": [],
          "description": "Enable/disable logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_max_header_line_max_header_line": {
          "aliases": [],
          "description": "Maximum number HTTP header lines (0 to 2147483647).",
          "required": false,
          "suboptions": {}
        },
        "constraint_max_header_line_severity": {
          "aliases": [],
          "description": "Severity.\nchoice | low | Low severity.\nchoice | medium | Medium severity.\nchoice | high | High severity.",
          "required": false,
          "choices": [
            "low",
            "medium",
            "high"
          ],
          "suboptions": {}
        },
        "constraint_max_header_line_status": {
          "aliases": [],
          "description": "Enable/disable the constraint.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_max_range_segment_action": {
          "aliases": [],
          "description": "Action.\nchoice | allow | Allow.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "allow",
            "block"
          ],
          "suboptions": {}
        },
        "constraint_max_range_segment_log": {
          "aliases": [],
          "description": "Enable/disable logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_max_range_segment_max_range_segment": {
          "aliases": [],
          "description": "Maximum number of range segments in HTTP range line (0 to 2147483647).",
          "required": false,
          "suboptions": {}
        },
        "constraint_max_range_segment_severity": {
          "aliases": [],
          "description": "Severity.\nchoice | low | Low severity.\nchoice | medium | Medium severity.\nchoice | high | High severity.",
          "required": false,
          "choices": [
            "low",
            "medium",
            "high"
          ],
          "suboptions": {}
        },
        "constraint_max_range_segment_status": {
          "aliases": [],
          "description": "Enable/disable the constraint.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_max_url_param_action": {
          "aliases": [],
          "description": "Action.\nchoice | allow | Allow.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "allow",
            "block"
          ],
          "suboptions": {}
        },
        "constraint_max_url_param_log": {
          "aliases": [],
          "description": "Enable/disable logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_max_url_param_max_url_param": {
          "aliases": [],
          "description": "Maximum number of parameters in URL (0 to 2147483647).",
          "required": false,
          "suboptions": {}
        },
        "constraint_max_url_param_severity": {
          "aliases": [],
          "description": "Severity.\nchoice | low | Low severity.\nchoice | medium | Medium severity.\nchoice | high | High severity.",
          "required": false,
          "choices": [
            "low",
            "medium",
            "high"
          ],
          "suboptions": {}
        },
        "constraint_max_url_param_status": {
          "aliases": [],
          "description": "Enable/disable the constraint.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_method_action": {
          "aliases": [],
          "description": "Action.\nchoice | allow | Allow.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "allow",
            "block"
          ],
          "suboptions": {}
        },
        "constraint_method_log": {
          "aliases": [],
          "description": "Enable/disable logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_method_severity": {
          "aliases": [],
          "description": "Severity.\nchoice | low | Low severity.\nchoice | medium | Medium severity.\nchoice | high | High severity.",
          "required": false,
          "choices": [
            "low",
            "medium",
            "high"
          ],
          "suboptions": {}
        },
        "constraint_method_status": {
          "aliases": [],
          "description": "Enable/disable the constraint.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_param_length_action": {
          "aliases": [],
          "description": "Action.\nchoice | allow | Allow.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "allow",
            "block"
          ],
          "suboptions": {}
        },
        "constraint_param_length_length": {
          "aliases": [],
          "description": "Maximum length of parameter in URL, HTTP POST request or HTTP body in bytes (0 to 2147483647).",
          "required": false,
          "suboptions": {}
        },
        "constraint_param_length_log": {
          "aliases": [],
          "description": "Enable/disable logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_param_length_severity": {
          "aliases": [],
          "description": "Severity.\nchoice | low | Low severity.\nchoice | medium | Medium severity.\nchoice | high | High severity.",
          "required": false,
          "choices": [
            "low",
            "medium",
            "high"
          ],
          "suboptions": {}
        },
        "constraint_param_length_status": {
          "aliases": [],
          "description": "Enable/disable the constraint.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_url_param_length_action": {
          "aliases": [],
          "description": "Action.\nchoice | allow | Allow.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "allow",
            "block"
          ],
          "suboptions": {}
        },
        "constraint_url_param_length_length": {
          "aliases": [],
          "description": "Maximum length of URL parameter in bytes (0 to 2147483647).",
          "required": false,
          "suboptions": {}
        },
        "constraint_url_param_length_log": {
          "aliases": [],
          "description": "Enable/disable logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_url_param_length_severity": {
          "aliases": [],
          "description": "Severity.\nchoice | low | Low severity.\nchoice | medium | Medium severity.\nchoice | high | High severity.",
          "required": false,
          "choices": [
            "low",
            "medium",
            "high"
          ],
          "suboptions": {}
        },
        "constraint_url_param_length_status": {
          "aliases": [],
          "description": "Enable/disable the constraint.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_version_action": {
          "aliases": [],
          "description": "Action.\nchoice | allow | Allow.\nchoice | block | Block.",
          "required": false,
          "choices": [
            "allow",
            "block"
          ],
          "suboptions": {}
        },
        "constraint_version_log": {
          "aliases": [],
          "description": "Enable/disable logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "constraint_version_severity": {
          "aliases": [],
          "description": "Severity.\nchoice | low | Low severity.\nchoice | medium | Medium severity.\nchoice | high | High severity.",
          "required": false,
          "choices": [
            "low",
            "medium",
            "high"
          ],
          "suboptions": {}
        },
        "constraint_version_status": {
          "aliases": [],
          "description": "Enable/disable the constraint.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "extended_log": {
          "aliases": [],
          "description": "Enable/disable extended logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "external": {
          "aliases": [],
          "description": "Disable/Enable external HTTP Inspection.\nchoice | disable | Disable external inspection.\nchoice | enable | Enable external inspection.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "method": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "method_default_allowed_methods": {
          "aliases": [],
          "description": "Methods.\nFLAG Based Options. Specify multiple in list form.\nflag | delete | HTTP DELETE method.\nflag | get | HTTP GET method.\nflag | head | HTTP HEAD method.\nflag | options | HTTP OPTIONS method.\nflag | post | HTTP POST method.\nflag | put | HTTP PUT method.\nflag | trace | HTTP TRACE method.\nflag | others | Other HTTP methods.\nflag | connect | HTTP CONNECT method.",
          "required": false,
          "choices": [
            "delete",
            "get",
            "head",
            "options",
            "post",
            "put",
            "trace",
            "others",
            "connect"
          ],
          "suboptions": {}
        },
        "method_log": {
          "aliases": [],
          "description": "Enable/disable logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "method_method_policy_address": {
          "aliases": [],
          "description": "Host address.",
          "required": false,
          "suboptions": {}
        },
        "method_method_policy_allowed_methods": {
          "aliases": [],
          "description": "Allowed Methods.\nFLAG Based Options. Specify multiple in list form.\nflag | delete | HTTP DELETE method.\nflag | get | HTTP GET method.\nflag | head | HTTP HEAD method.\nflag | options | HTTP OPTIONS method.\nflag | post | HTTP POST method.\nflag | put | HTTP PUT method.\nflag | trace | HTTP TRACE method.\nflag | others | Other HTTP methods.\nflag | connect | HTTP CONNECT method.",
          "required": false,
          "choices": [
            "delete",
            "get",
            "head",
            "options",
            "post",
            "put",
            "trace",
            "others",
            "connect"
          ],
          "suboptions": {}
        },
        "method_method_policy_pattern": {
          "aliases": [],
          "description": "URL pattern.",
          "required": false,
          "suboptions": {}
        },
        "method_method_policy_regex": {
          "aliases": [],
          "description": "Enable/disable regular expression based pattern match.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "method_severity": {
          "aliases": [],
          "description": "Severity.\nchoice | low | low severity\nchoice | medium | medium severity\nchoice | high | High severity",
          "required": false,
          "choices": [
            "low",
            "medium",
            "high"
          ],
          "suboptions": {}
        },
        "method_status": {
          "aliases": [],
          "description": "Status.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.\nAllows use of soft-adds instead of overwriting existing values",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete",
            "update"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "WAF Profile name.",
          "required": false,
          "suboptions": {}
        },
        "signature": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "signature_credit_card_detection_threshold": {
          "aliases": [],
          "description": "The minimum number of Credit cards to detect violation.",
          "required": false,
          "suboptions": {}
        },
        "signature_custom_signature_action": {
          "aliases": [],
          "description": "Action.\nchoice | allow | Allow.\nchoice | block | Block.\nchoice | erase | Erase credit card numbers.",
          "required": false,
          "choices": [
            "allow",
            "block",
            "erase"
          ],
          "suboptions": {}
        },
        "signature_custom_signature_case_sensitivity": {
          "aliases": [],
          "description": "Case sensitivity in pattern.\nchoice | disable | Case insensitive in pattern.\nchoice | enable | Case sensitive in pattern.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "signature_custom_signature_direction": {
          "aliases": [],
          "description": "Traffic direction.\nchoice | request | Match HTTP request.\nchoice | response | Match HTTP response.",
          "required": false,
          "choices": [
            "request",
            "response"
          ],
          "suboptions": {}
        },
        "signature_custom_signature_log": {
          "aliases": [],
          "description": "Enable/disable logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "signature_custom_signature_name": {
          "aliases": [],
          "description": "Signature name.",
          "required": false,
          "suboptions": {}
        },
        "signature_custom_signature_pattern": {
          "aliases": [],
          "description": "Match pattern.",
          "required": false,
          "suboptions": {}
        },
        "signature_custom_signature_severity": {
          "aliases": [],
          "description": "Severity.\nchoice | low | Low severity.\nchoice | medium | Medium severity.\nchoice | high | High severity.",
          "required": false,
          "choices": [
            "low",
            "medium",
            "high"
          ],
          "suboptions": {}
        },
        "signature_custom_signature_status": {
          "aliases": [],
          "description": "Status.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "signature_custom_signature_target": {
          "aliases": [],
          "description": "Match HTTP target.\nFLAG Based Options. Specify multiple in list form.\nflag | arg | HTTP arguments.\nflag | arg-name | Names of HTTP arguments.\nflag | req-body | HTTP request body.\nflag | req-cookie | HTTP request cookies.\nflag | req-cookie-name | HTTP request cookie names.\nflag | req-filename | HTTP request file name.\nflag | req-header | HTTP request headers.\nflag | req-header-name | HTTP request header names.\nflag | req-raw-uri | Raw URI of HTTP request.\nflag | req-uri | URI of HTTP request.\nflag | resp-body | HTTP response body.\nflag | resp-hdr | HTTP response headers.\nflag | resp-status | HTTP response status.",
          "required": false,
          "choices": [
            "arg",
            "arg-name",
            "req-body",
            "req-cookie",
            "req-cookie-name",
            "req-filename",
            "req-header",
            "req-header-name",
            "req-raw-uri",
            "req-uri",
            "resp-body",
            "resp-hdr",
            "resp-status"
          ],
          "suboptions": {}
        },
        "signature_disabled_signature": {
          "aliases": [],
          "description": "Disabled signatures",
          "required": false,
          "suboptions": {}
        },
        "signature_disabled_sub_class": {
          "aliases": [],
          "description": "Disabled signature subclasses.",
          "required": false,
          "suboptions": {}
        },
        "signature_main_class_action": {
          "aliases": [],
          "description": "Action.\nchoice | allow | Allow.\nchoice | block | Block.\nchoice | erase | Erase credit card numbers.",
          "required": false,
          "choices": [
            "allow",
            "block",
            "erase"
          ],
          "suboptions": {}
        },
        "signature_main_class_log": {
          "aliases": [],
          "description": "Enable/disable logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "signature_main_class_severity": {
          "aliases": [],
          "description": "Severity.\nchoice | low | Low severity.\nchoice | medium | Medium severity.\nchoice | high | High severity.",
          "required": false,
          "choices": [
            "low",
            "medium",
            "high"
          ],
          "suboptions": {}
        },
        "signature_main_class_status": {
          "aliases": [],
          "description": "Status.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "url_access": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "url_access_access_pattern_negate": {
          "aliases": [],
          "description": "Enable/disable match negation.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "url_access_access_pattern_pattern": {
          "aliases": [],
          "description": "URL pattern.",
          "required": false,
          "suboptions": {}
        },
        "url_access_access_pattern_regex": {
          "aliases": [],
          "description": "Enable/disable regular expression based pattern match.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "url_access_access_pattern_srcaddr": {
          "aliases": [],
          "description": "Source address.",
          "required": false,
          "suboptions": {}
        },
        "url_access_action": {
          "aliases": [],
          "description": "Action.\nchoice | bypass | Allow the HTTP request, also bypass further WAF scanning.\nchoice | permit | Allow the HTTP request, and continue further WAF scanning.\nchoice | block | Block HTTP request.",
          "required": false,
          "choices": [
            "bypass",
            "permit",
            "block"
          ],
          "suboptions": {}
        },
        "url_access_address": {
          "aliases": [],
          "description": "Host address.",
          "required": false,
          "suboptions": {}
        },
        "url_access_log": {
          "aliases": [],
          "description": "Enable/disable logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "url_access_severity": {
          "aliases": [],
          "description": "Severity.\nchoice | low | Low severity.\nchoice | medium | Medium severity.\nchoice | high | High severity.",
          "required": false,
          "choices": [
            "low",
            "medium",
            "high"
          ],
          "suboptions": {}
        }
      },
      "short_description": "FortiManager web application firewall security profile"
    },
    "examples": "\n  - name: DELETE Profile\n    community.fortios.fmgr_secprof_waf:\n      name: \"Ansible_WAF_Profile\"\n      comment: \"Created by Ansible Module TEST\"\n      mode: \"delete\"\n\n  - name: CREATE Profile\n    community.fortios.fmgr_secprof_waf:\n      name: \"Ansible_WAF_Profile\"\n      comment: \"Created by Ansible Module TEST\"\n      mode: \"set\"\n"
  },
  "community.fortios.fmgr_secprof_wanopt": {
    "doc": {
      "description": "Manage WanOpt security profiles in FortiManager via API",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "auth_group": {
          "aliases": [],
          "description": "Optionally add an authentication group to restrict access to the WAN Optimization tunnel to peers in the authentication group.",
          "required": false,
          "suboptions": {}
        },
        "cifs": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "cifs_byte_caching": {
          "aliases": [],
          "description": "Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "cifs_log_traffic": {
          "aliases": [],
          "description": "Enable/disable logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "cifs_port": {
          "aliases": [],
          "description": "Single port number or port number range for CIFS. Only packets with a destination port number that matches this port number or range are accepted by this profile.",
          "required": false,
          "suboptions": {}
        },
        "cifs_prefer_chunking": {
          "aliases": [],
          "description": "Select dynamic or fixed-size data chunking for HTTP WAN Optimization.",
          "required": false,
          "choices": [
            "dynamic",
            "fix"
          ],
          "suboptions": {}
        },
        "cifs_secure_tunnel": {
          "aliases": [],
          "description": "Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810).",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "cifs_status": {
          "aliases": [],
          "description": "Enable/disable HTTP WAN Optimization.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "cifs_tunnel_sharing": {
          "aliases": [],
          "description": "Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols.",
          "required": false,
          "choices": [
            "private",
            "shared",
            "express-shared"
          ],
          "suboptions": {}
        },
        "comments": {
          "aliases": [],
          "description": "Comment.",
          "required": false,
          "suboptions": {}
        },
        "ftp": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "ftp_byte_caching": {
          "aliases": [],
          "description": "Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ftp_log_traffic": {
          "aliases": [],
          "description": "Enable/disable logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ftp_port": {
          "aliases": [],
          "description": "Single port number or port number range for FTP. Only packets with a destination port number that matches this port number or range are accepted by this profile.",
          "required": false,
          "suboptions": {}
        },
        "ftp_prefer_chunking": {
          "aliases": [],
          "description": "Select dynamic or fixed-size data chunking for HTTP WAN Optimization.",
          "required": false,
          "choices": [
            "dynamic",
            "fix"
          ],
          "suboptions": {}
        },
        "ftp_secure_tunnel": {
          "aliases": [],
          "description": "Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810).",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ftp_status": {
          "aliases": [],
          "description": "Enable/disable HTTP WAN Optimization.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ftp_tunnel_sharing": {
          "aliases": [],
          "description": "Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols.",
          "required": false,
          "choices": [
            "private",
            "shared",
            "express-shared"
          ],
          "suboptions": {}
        },
        "http": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "http_byte_caching": {
          "aliases": [],
          "description": "Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "http_log_traffic": {
          "aliases": [],
          "description": "Enable/disable logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "http_port": {
          "aliases": [],
          "description": "Single port number or port number range for HTTP. Only packets with a destination port number that matches this port number or range are accepted by this profile.",
          "required": false,
          "suboptions": {}
        },
        "http_prefer_chunking": {
          "aliases": [],
          "description": "Select dynamic or fixed-size data chunking for HTTP WAN Optimization.",
          "required": false,
          "choices": [
            "dynamic",
            "fix"
          ],
          "suboptions": {}
        },
        "http_secure_tunnel": {
          "aliases": [],
          "description": "Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810).",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "http_ssl": {
          "aliases": [],
          "description": "Enable/disable SSL/TLS offloading (hardware acceleration) for HTTPS traffic in this tunnel.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "http_ssl_port": {
          "aliases": [],
          "description": "Port on which to expect HTTPS traffic for SSL/TLS offloading.",
          "required": false,
          "suboptions": {}
        },
        "http_status": {
          "aliases": [],
          "description": "Enable/disable HTTP WAN Optimization.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "http_tunnel_non_http": {
          "aliases": [],
          "description": "Configure how to process non-HTTP traffic when a profile configured for HTTP traffic accepts a non-HTTP session. Can occur if an application sends non-HTTP traffic using an HTTP destination port.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "http_tunnel_sharing": {
          "aliases": [],
          "description": "Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols.",
          "required": false,
          "choices": [
            "private",
            "shared",
            "express-shared"
          ],
          "suboptions": {}
        },
        "http_unknown_http_version": {
          "aliases": [],
          "description": "How to handle HTTP sessions that do not comply with HTTP 0.9, 1.0, or 1.1.",
          "required": false,
          "choices": [
            "best-effort",
            "reject",
            "tunnel"
          ],
          "suboptions": {}
        },
        "mapi": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "mapi_byte_caching": {
          "aliases": [],
          "description": "Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "mapi_log_traffic": {
          "aliases": [],
          "description": "Enable/disable logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "mapi_port": {
          "aliases": [],
          "description": "Single port number or port number range for MAPI. Only packets with a destination port number that matches this port number or range are accepted by this profile.",
          "required": false,
          "suboptions": {}
        },
        "mapi_secure_tunnel": {
          "aliases": [],
          "description": "Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810).",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "mapi_status": {
          "aliases": [],
          "description": "Enable/disable HTTP WAN Optimization.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "mapi_tunnel_sharing": {
          "aliases": [],
          "description": "Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols.",
          "required": false,
          "choices": [
            "private",
            "shared",
            "express-shared"
          ],
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.\nAllows use of soft-adds instead of overwriting existing values",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete",
            "update"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Profile name.",
          "required": false,
          "suboptions": {}
        },
        "tcp": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "tcp_byte_caching": {
          "aliases": [],
          "description": "Enable/disable byte-caching for HTTP. Byte caching reduces the amount of traffic by caching file data sent across the WAN and in future serving if from the cache.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "tcp_byte_caching_opt": {
          "aliases": [],
          "description": "Select whether TCP byte-caching uses system memory only or both memory and disk space.",
          "required": false,
          "choices": [
            "mem-only",
            "mem-disk"
          ],
          "suboptions": {}
        },
        "tcp_log_traffic": {
          "aliases": [],
          "description": "Enable/disable logging.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "tcp_port": {
          "aliases": [],
          "description": "Single port number or port number range for TCP. Only packets with a destination port number that matches this port number or range are accepted by this profile.",
          "required": false,
          "suboptions": {}
        },
        "tcp_secure_tunnel": {
          "aliases": [],
          "description": "Enable/disable securing the WAN Opt tunnel using SSL. Secure and non-secure tunnels use the same TCP port (7810).",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "tcp_ssl": {
          "aliases": [],
          "description": "Enable/disable SSL/TLS offloading.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "tcp_ssl_port": {
          "aliases": [],
          "description": "Port on which to expect HTTPS traffic for SSL/TLS offloading.",
          "required": false,
          "suboptions": {}
        },
        "tcp_status": {
          "aliases": [],
          "description": "Enable/disable HTTP WAN Optimization.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "tcp_tunnel_sharing": {
          "aliases": [],
          "description": "Tunnel sharing mode for aggressive/non-aggressive and/or interactive/non-interactive protocols.",
          "required": false,
          "choices": [
            "private",
            "shared",
            "express-shared"
          ],
          "suboptions": {}
        },
        "transparent": {
          "aliases": [],
          "description": "Enable/disable transparent mode.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        }
      },
      "short_description": "WAN optimization"
    },
    "examples": "\n  - name: DELETE Profile\n    community.fortios.fmgr_secprof_wanopt:\n      name: \"Ansible_WanOpt_Profile\"\n      mode: \"delete\"\n\n  - name: Create FMGR_WANOPT_PROFILE\n    community.fortios.fmgr_secprof_wanopt:\n      mode: \"set\"\n      adom: \"root\"\n      transparent: \"enable\"\n      name: \"Ansible_WanOpt_Profile\"\n      comments: \"Created by Ansible\"\n      cifs: {byte-caching: \"enable\",\n              log-traffic: \"enable\",\n              port: 80,\n              prefer-chunking: \"dynamic\",\n              status: \"enable\",\n              tunnel-sharing: \"private\"}\n      ftp: {byte-caching: \"enable\",\n              log-traffic: \"enable\",\n              port: 80,\n              prefer-chunking: \"dynamic\",\n              secure-tunnel: \"disable\",\n              status: \"enable\",\n              tunnel-sharing: \"private\"}\n"
  },
  "community.fortios.fmgr_secprof_web": {
    "doc": {
      "description": "Manage web filter security profiles in FortiManager through playbooks using the FMG API",
      "has_action": false,
      "notes": "Full Documentation at U(https://ftnt-ansible-docs.readthedocs.io/en/latest/).",
      "options": {
        "adom": {
          "aliases": [],
          "description": "The ADOM the configuration should belong to.",
          "default": "root",
          "required": false,
          "suboptions": {}
        },
        "comment": {
          "aliases": [],
          "description": "Optional comments.",
          "required": false,
          "suboptions": {}
        },
        "extended_log": {
          "aliases": [],
          "description": "Enable/disable extended logging for web filtering.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ftgd_wf": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "ftgd_wf_exempt_quota": {
          "aliases": [],
          "description": "Do not stop quota for these categories.",
          "required": false,
          "suboptions": {}
        },
        "ftgd_wf_filters_action": {
          "aliases": [],
          "description": "Action to take for matches.\nchoice | block | Block access.\nchoice | monitor | Allow access while logging the action.\nchoice | warning | Allow access after warning the user.\nchoice | authenticate | Authenticate user before allowing access.",
          "required": false,
          "choices": [
            "block",
            "monitor",
            "warning",
            "authenticate"
          ],
          "suboptions": {}
        },
        "ftgd_wf_filters_auth_usr_grp": {
          "aliases": [],
          "description": "Groups with permission to authenticate.",
          "required": false,
          "suboptions": {}
        },
        "ftgd_wf_filters_category": {
          "aliases": [],
          "description": "Categories and groups the filter examines.",
          "required": false,
          "suboptions": {}
        },
        "ftgd_wf_filters_log": {
          "aliases": [],
          "description": "Enable/disable logging.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ftgd_wf_filters_override_replacemsg": {
          "aliases": [],
          "description": "Override replacement message.",
          "required": false,
          "suboptions": {}
        },
        "ftgd_wf_filters_warn_duration": {
          "aliases": [],
          "description": "Duration of warnings.",
          "required": false,
          "suboptions": {}
        },
        "ftgd_wf_filters_warning_duration_type": {
          "aliases": [],
          "description": "Re-display warning after closing browser or after a timeout.\nchoice | session | After session ends.\nchoice | timeout | After timeout occurs.",
          "required": false,
          "choices": [
            "session",
            "timeout"
          ],
          "suboptions": {}
        },
        "ftgd_wf_filters_warning_prompt": {
          "aliases": [],
          "description": "Warning prompts in each category or each domain.\nchoice | per-domain | Per-domain warnings.\nchoice | per-category | Per-category warnings.",
          "required": false,
          "choices": [
            "per-domain",
            "per-category"
          ],
          "suboptions": {}
        },
        "ftgd_wf_max_quota_timeout": {
          "aliases": [],
          "description": "Maximum FortiGuard quota used by single page view in seconds (excludes streams).",
          "required": false,
          "suboptions": {}
        },
        "ftgd_wf_options": {
          "aliases": [],
          "description": "Options for FortiGuard Web Filter.\nFLAG Based Options. Specify multiple in list form.\nflag | error-allow | Allow web pages with a rating error to pass through.\nflag | rate-server-ip | Rate the server IP in addition to the domain name.\nflag | connect-request-bypass | Bypass connection which has CONNECT request.\nflag | ftgd-disable | Disable FortiGuard scanning.",
          "required": false,
          "choices": [
            "error-allow",
            "rate-server-ip",
            "connect-request-bypass",
            "ftgd-disable"
          ],
          "suboptions": {}
        },
        "ftgd_wf_ovrd": {
          "aliases": [],
          "description": "Allow web filter profile overrides.",
          "required": false,
          "suboptions": {}
        },
        "ftgd_wf_quota_category": {
          "aliases": [],
          "description": "FortiGuard categories to apply quota to (category action must be set to monitor).",
          "required": false,
          "suboptions": {}
        },
        "ftgd_wf_quota_duration": {
          "aliases": [],
          "description": "Duration of quota.",
          "required": false,
          "suboptions": {}
        },
        "ftgd_wf_quota_override_replacemsg": {
          "aliases": [],
          "description": "Override replacement message.",
          "required": false,
          "suboptions": {}
        },
        "ftgd_wf_quota_type": {
          "aliases": [],
          "description": "Quota type.\nchoice | time | Use a time-based quota.\nchoice | traffic | Use a traffic-based quota.",
          "required": false,
          "choices": [
            "time",
            "traffic"
          ],
          "suboptions": {}
        },
        "ftgd_wf_quota_unit": {
          "aliases": [],
          "description": "Traffic quota unit of measurement.\nchoice | B | Quota in bytes.\nchoice | KB | Quota in kilobytes.\nchoice | MB | Quota in megabytes.\nchoice | GB | Quota in gigabytes.",
          "required": false,
          "choices": [
            "B",
            "KB",
            "MB",
            "GB"
          ],
          "suboptions": {}
        },
        "ftgd_wf_quota_value": {
          "aliases": [],
          "description": "Traffic quota value.",
          "required": false,
          "suboptions": {}
        },
        "ftgd_wf_rate_crl_urls": {
          "aliases": [],
          "description": "Enable/disable rating CRL by URL.\nchoice | disable | Disable rating CRL by URL.\nchoice | enable | Enable rating CRL by URL.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ftgd_wf_rate_css_urls": {
          "aliases": [],
          "description": "Enable/disable rating CSS by URL.\nchoice | disable | Disable rating CSS by URL.\nchoice | enable | Enable rating CSS by URL.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ftgd_wf_rate_image_urls": {
          "aliases": [],
          "description": "Enable/disable rating images by URL.\nchoice | disable | Disable rating images by URL (blocked images are replaced with blanks).\nchoice | enable | Enable rating images by URL (blocked images are replaced with blanks).",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "ftgd_wf_rate_javascript_urls": {
          "aliases": [],
          "description": "Enable/disable rating JavaScript by URL.\nchoice | disable | Disable rating JavaScript by URL.\nchoice | enable | Enable rating JavaScript by URL.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "https_replacemsg": {
          "aliases": [],
          "description": "Enable replacement messages for HTTPS.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "inspection_mode": {
          "aliases": [],
          "description": "Web filtering inspection mode.\nchoice | proxy | Proxy.\nchoice | flow-based | Flow based.",
          "required": false,
          "choices": [
            "proxy",
            "flow-based"
          ],
          "suboptions": {}
        },
        "log_all_url": {
          "aliases": [],
          "description": "Enable/disable logging all URLs visited.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Sets one of three modes for managing the object.\nAllows use of soft-adds instead of overwriting existing values",
          "default": "add",
          "required": false,
          "choices": [
            "add",
            "set",
            "delete",
            "update"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Profile name.",
          "required": false,
          "suboptions": {}
        },
        "options": {
          "aliases": [],
          "description": "FLAG Based Options. Specify multiple in list form.\nflag | block-invalid-url | Block sessions contained an invalid domain name.\nflag | jscript | Javascript block.\nflag | js | JS block.\nflag | vbs | VB script block.\nflag | unknown | Unknown script block.\nflag | wf-referer | Referring block.\nflag | intrinsic | Intrinsic script block.\nflag | wf-cookie | Cookie block.\nflag | per-user-bwl | Per-user black/white list filter\nflag | activexfilter | ActiveX filter.\nflag | cookiefilter | Cookie filter.\nflag | javafilter | Java applet filter.",
          "required": false,
          "choices": [
            "block-invalid-url",
            "jscript",
            "js",
            "vbs",
            "unknown",
            "wf-referer",
            "intrinsic",
            "wf-cookie",
            "per-user-bwl",
            "activexfilter",
            "cookiefilter",
            "javafilter"
          ],
          "suboptions": {}
        },
        "override": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "override_ovrd_cookie": {
          "aliases": [],
          "description": "Allow/deny browser-based (cookie) overrides.\nchoice | deny | Deny browser-based (cookie) override.\nchoice | allow | Allow browser-based (cookie) override.",
          "required": false,
          "choices": [
            "deny",
            "allow"
          ],
          "suboptions": {}
        },
        "override_ovrd_dur": {
          "aliases": [],
          "description": "Override duration.",
          "required": false,
          "suboptions": {}
        },
        "override_ovrd_dur_mode": {
          "aliases": [],
          "description": "Override duration mode.\nchoice | constant | Constant mode.\nchoice | ask | Prompt for duration when initiating an override.",
          "required": false,
          "choices": [
            "constant",
            "ask"
          ],
          "suboptions": {}
        },
        "override_ovrd_scope": {
          "aliases": [],
          "description": "Override scope.\nchoice | user | Override for the user.\nchoice | user-group | Override for the user's group.\nchoice | ip | Override for the initiating IP.\nchoice | ask | Prompt for scope when initiating an override.\nchoice | browser | Create browser-based (cookie) override.",
          "required": false,
          "choices": [
            "user",
            "user-group",
            "ip",
            "ask",
            "browser"
          ],
          "suboptions": {}
        },
        "override_ovrd_user_group": {
          "aliases": [],
          "description": "User groups with permission to use the override.",
          "required": false,
          "suboptions": {}
        },
        "override_profile": {
          "aliases": [],
          "description": "Web filter profile with permission to create overrides.",
          "required": false,
          "suboptions": {}
        },
        "override_profile_attribute": {
          "aliases": [],
          "description": "Profile attribute to retrieve from the RADIUS server.\nchoice | User-Name | Use this attribute.\nchoice | NAS-IP-Address | Use this attribute.\nchoice | Framed-IP-Address | Use this attribute.\nchoice | Framed-IP-Netmask | Use this attribute.\nchoice | Filter-Id | Use this attribute.\nchoice | Login-IP-Host | Use this attribute.\nchoice | Reply-Message | Use this attribute.\nchoice | Callback-Number | Use this attribute.\nchoice | Callback-Id | Use this attribute.\nchoice | Framed-Route | Use this attribute.\nchoice | Framed-IPX-Network | Use this attribute.\nchoice | Class | Use this attribute.\nchoice | Called-Station-Id | Use this attribute.\nchoice | Calling-Station-Id | Use this attribute.\nchoice | NAS-Identifier | Use this attribute.\nchoice | Proxy-State | Use this attribute.\nchoice | Login-LAT-Service | Use this attribute.\nchoice | Login-LAT-Node | Use this attribute.\nchoice | Login-LAT-Group | Use this attribute.\nchoice | Framed-AppleTalk-Zone | Use this attribute.\nchoice | Acct-Session-Id | Use this attribute.\nchoice | Acct-Multi-Session-Id | Use this attribute.",
          "required": false,
          "choices": [
            "User-Name",
            "NAS-IP-Address",
            "Framed-IP-Address",
            "Framed-IP-Netmask",
            "Filter-Id",
            "Login-IP-Host",
            "Reply-Message",
            "Callback-Number",
            "Callback-Id",
            "Framed-Route",
            "Framed-IPX-Network",
            "Class",
            "Called-Station-Id",
            "Calling-Station-Id",
            "NAS-Identifier",
            "Proxy-State",
            "Login-LAT-Service",
            "Login-LAT-Node",
            "Login-LAT-Group",
            "Framed-AppleTalk-Zone",
            "Acct-Session-Id",
            "Acct-Multi-Session-Id"
          ],
          "suboptions": {}
        },
        "override_profile_type": {
          "aliases": [],
          "description": "Override profile type.\nchoice | list | Profile chosen from list.\nchoice | radius | Profile determined by RADIUS server.",
          "required": false,
          "choices": [
            "list",
            "radius"
          ],
          "suboptions": {}
        },
        "ovrd_perm": {
          "aliases": [],
          "description": "FLAG Based Options. Specify multiple in list form.\nflag | bannedword-override | Banned word override.\nflag | urlfilter-override | URL filter override.\nflag | fortiguard-wf-override | FortiGuard Web Filter override.\nflag | contenttype-check-override | Content-type header override.",
          "required": false,
          "choices": [
            "bannedword-override",
            "urlfilter-override",
            "fortiguard-wf-override",
            "contenttype-check-override"
          ],
          "suboptions": {}
        },
        "post_action": {
          "aliases": [],
          "description": "Action taken for HTTP POST traffic.\nchoice | normal | Normal, POST requests are allowed.\nchoice | block | POST requests are blocked.",
          "required": false,
          "choices": [
            "normal",
            "block"
          ],
          "suboptions": {}
        },
        "replacemsg_group": {
          "aliases": [],
          "description": "Replacement message group.",
          "required": false,
          "suboptions": {}
        },
        "url_extraction": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "url_extraction_redirect_header": {
          "aliases": [],
          "description": "HTTP header name to use for client redirect on blocked requests",
          "required": false,
          "suboptions": {}
        },
        "url_extraction_redirect_no_content": {
          "aliases": [],
          "description": "Enable / Disable empty message-body entity in HTTP response\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "url_extraction_redirect_url": {
          "aliases": [],
          "description": "HTTP header value to use for client redirect on blocked requests",
          "required": false,
          "suboptions": {}
        },
        "url_extraction_server_fqdn": {
          "aliases": [],
          "description": "URL extraction server FQDN (fully qualified domain name)",
          "required": false,
          "suboptions": {}
        },
        "url_extraction_status": {
          "aliases": [],
          "description": "Enable URL Extraction\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "web": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "web_blacklist": {
          "aliases": [],
          "description": "Enable/disable automatic addition of URLs detected by FortiSandbox to blacklist.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "web_bword_table": {
          "aliases": [],
          "description": "Banned word table ID.",
          "required": false,
          "suboptions": {}
        },
        "web_bword_threshold": {
          "aliases": [],
          "description": "Banned word score threshold.",
          "required": false,
          "suboptions": {}
        },
        "web_content_header_list": {
          "aliases": [],
          "description": "Content header list.",
          "required": false,
          "suboptions": {}
        },
        "web_content_log": {
          "aliases": [],
          "description": "Enable/disable logging logging blocked web content.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "web_extended_all_action_log": {
          "aliases": [],
          "description": "Enable/disable extended any filter action logging for web filtering.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "web_filter_activex_log": {
          "aliases": [],
          "description": "Enable/disable logging ActiveX.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "web_filter_applet_log": {
          "aliases": [],
          "description": "Enable/disable logging Java applets.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "web_filter_command_block_log": {
          "aliases": [],
          "description": "Enable/disable logging blocked commands.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "web_filter_cookie_log": {
          "aliases": [],
          "description": "Enable/disable logging cookie filtering.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "web_filter_cookie_removal_log": {
          "aliases": [],
          "description": "Enable/disable logging blocked cookies.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "web_filter_js_log": {
          "aliases": [],
          "description": "Enable/disable logging Java scripts.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "web_filter_jscript_log": {
          "aliases": [],
          "description": "Enable/disable logging JScripts.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "web_filter_referer_log": {
          "aliases": [],
          "description": "Enable/disable logging referrers.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "web_filter_unknown_log": {
          "aliases": [],
          "description": "Enable/disable logging unknown scripts.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "web_filter_vbs_log": {
          "aliases": [],
          "description": "Enable/disable logging VBS scripts.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "web_ftgd_err_log": {
          "aliases": [],
          "description": "Enable/disable logging rating errors.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "web_ftgd_quota_usage": {
          "aliases": [],
          "description": "Enable/disable logging daily quota usage.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "web_invalid_domain_log": {
          "aliases": [],
          "description": "Enable/disable logging invalid domain names.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "web_keyword_match": {
          "aliases": [],
          "description": "Search keywords to log when match is found.",
          "required": false,
          "suboptions": {}
        },
        "web_log_search": {
          "aliases": [],
          "description": "Enable/disable logging all search phrases.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "web_safe_search": {
          "aliases": [],
          "description": "Safe search type.\nFLAG Based Options. Specify multiple in list form.\nflag | url | Insert safe search string into URL.\nflag | header | Insert safe search header.",
          "required": false,
          "choices": [
            "url",
            "header"
          ],
          "suboptions": {}
        },
        "web_url_log": {
          "aliases": [],
          "description": "Enable/disable logging URL filtering.\nchoice | disable | Disable setting.\nchoice | enable | Enable setting.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "web_urlfilter_table": {
          "aliases": [],
          "description": "URL filter table ID.",
          "required": false,
          "suboptions": {}
        },
        "web_whitelist": {
          "aliases": [],
          "description": "FortiGuard whitelist settings.\nFLAG Based Options. Specify multiple in list form.\nflag | exempt-av | Exempt antivirus.\nflag | exempt-webcontent | Exempt web content.\nflag | exempt-activex-java-cookie | Exempt ActiveX-JAVA-Cookie.\nflag | exempt-dlp | Exempt DLP.\nflag | exempt-rangeblock | Exempt RangeBlock.\nflag | extended-log-others | Support extended log.",
          "required": false,
          "choices": [
            "exempt-av",
            "exempt-webcontent",
            "exempt-activex-java-cookie",
            "exempt-dlp",
            "exempt-rangeblock",
            "extended-log-others"
          ],
          "suboptions": {}
        },
        "web_youtube_restrict": {
          "aliases": [],
          "description": "YouTube EDU filter level.\nchoice | strict | Strict access for YouTube.\nchoice | none | Full access for YouTube.\nchoice | moderate | Moderate access for YouTube.",
          "required": false,
          "choices": [
            "strict",
            "none",
            "moderate"
          ],
          "suboptions": {}
        },
        "wisp": {
          "aliases": [],
          "description": "Enable/disable web proxy WISP.\nchoice | disable | Disable web proxy WISP.\nchoice | enable | Enable web proxy WISP.",
          "required": false,
          "choices": [
            "disable",
            "enable"
          ],
          "suboptions": {}
        },
        "wisp_algorithm": {
          "aliases": [],
          "description": "WISP server selection algorithm.\nchoice | auto-learning | Select the lightest loading healthy server.\nchoice | primary-secondary | Select the first healthy server in order.\nchoice | round-robin | Select the next healthy server.",
          "required": false,
          "choices": [
            "auto-learning",
            "primary-secondary",
            "round-robin"
          ],
          "suboptions": {}
        },
        "wisp_servers": {
          "aliases": [],
          "description": "WISP servers.",
          "required": false,
          "suboptions": {}
        },
        "youtube_channel_filter": {
          "aliases": [],
          "description": "EXPERTS ONLY! KNOWLEDGE OF FMGR JSON API IS REQUIRED!\nList of multiple child objects to be added. Expects a list of dictionaries.\nDictionaries must use FortiManager API parameters, not the ansible ones listed below.\nIf submitted, all other prefixed sub-parameters ARE IGNORED.\nThis object is MUTUALLY EXCLUSIVE with its options.\nWe expect that you know what you are doing with these list parameters, and are leveraging the JSON API Guide.\nWHEN IN DOUBT, USE THE SUB OPTIONS BELOW INSTEAD TO CREATE OBJECTS WITH MULTIPLE TASKS",
          "required": false,
          "suboptions": {}
        },
        "youtube_channel_filter_channel_id": {
          "aliases": [],
          "description": "YouTube channel ID to be filtered.",
          "required": false,
          "suboptions": {}
        },
        "youtube_channel_filter_comment": {
          "aliases": [],
          "description": "Comment.",
          "required": false,
          "suboptions": {}
        },
        "youtube_channel_status": {
          "aliases": [],
          "description": "YouTube channel filter status.\nchoice | disable | Disable YouTube channel filter.\nchoice | blacklist | Block matches.\nchoice | whitelist | Allow matches.",
          "required": false,
          "choices": [
            "disable",
            "blacklist",
            "whitelist"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage web filter security profiles in FortiManager"
    },
    "examples": "\n  - name: DELETE Profile\n    community.fortios.fmgr_secprof_web:\n      name: \"Ansible_Web_Filter_Profile\"\n      mode: \"delete\"\n\n  - name: CREATE Profile\n    community.fortios.fmgr_secprof_web:\n      name: \"Ansible_Web_Filter_Profile\"\n      comment: \"Created by Ansible Module TEST\"\n      mode: \"set\"\n      extended_log: \"enable\"\n      inspection_mode: \"proxy\"\n      log_all_url: \"enable\"\n      options: \"js\"\n      ovrd_perm: \"bannedword-override\"\n      post_action: \"block\"\n      web_content_log: \"enable\"\n      web_extended_all_action_log: \"enable\"\n      web_filter_activex_log: \"enable\"\n      web_filter_applet_log: \"enable\"\n      web_filter_command_block_log: \"enable\"\n      web_filter_cookie_log: \"enable\"\n      web_filter_cookie_removal_log: \"enable\"\n      web_filter_js_log: \"enable\"\n      web_filter_jscript_log: \"enable\"\n      web_filter_referer_log: \"enable\"\n      web_filter_unknown_log: \"enable\"\n      web_filter_vbs_log: \"enable\"\n      web_ftgd_err_log: \"enable\"\n      web_ftgd_quota_usage: \"enable\"\n      web_invalid_domain_log: \"enable\"\n      web_url_log: \"enable\"\n      wisp: \"enable\"\n      wisp_algorithm: \"auto-learning\"\n      youtube_channel_status: \"blacklist\"\n"
  }
}