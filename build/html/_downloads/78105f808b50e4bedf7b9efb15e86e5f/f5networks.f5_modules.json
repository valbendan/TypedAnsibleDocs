{
  "f5networks.f5_modules.bigip_apm_acl": {
    "doc": {
      "description": "Manage user-defined APM ACLs.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "acl_order": {
          "aliases": [],
          "description": "Specifies a number that indicates the order of this ACL relative to other ACLs.\nWhen not set, the device will always place the ACL after the last one created.\nThe lower the number, the higher the ACL will be in the general order, with the lowest number C(0) being the topmost one.\nValid range of values is between C(0) and C(65535) inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "User created ACL description.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "entries": {
          "aliases": [],
          "description": "Access control entries that define the ACL matching and its respective behavior.\nThe order in which the rules are placed as arguments to this parameter determines their order in the ACL, in other words changing the order of the same elements will cause a change on the unit.\nChanges in the number of rules will always trigger device change. This means user input will take precedence over what is on device.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "action": {
              "aliases": [],
              "description": "Specifies the action that the access control entry takes when a match for this access control entry is encountered.",
              "type": "str",
              "required": true,
              "choices": [
                "allow",
                "reject",
                "discard",
                "continue"
              ],
              "suboptions": {}
            },
            "dst_addr": {
              "aliases": [],
              "description": "Specifies the destination IP address for the access control entry.\nWhen set to C(any) the ACL will match any destination address, C(dst_mask) is ignored in this case.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "dst_mask": {
              "aliases": [],
              "description": "Optional parameter that specifies the destination network mask for the access control entry.\nIf not specified and C(dst_addr) is not C(any), the C(dst_addr) is deemed to be host address.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "dst_port": {
              "aliases": [],
              "description": "Specifies the destination port for the access control entry.\nCan be set to C(*) to indicate all ports.\nParameter is mutually exclusive with C(dst_port_range).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "dst_port_range": {
              "aliases": [],
              "description": "Specifies the destination port range for the access control entry.\nParameter is mutually exclusive with C(dst_port_range).\nTo indicate all ports the C(dst_port) parameter must be used and set to C(*).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "host_name": {
              "aliases": [],
              "description": "This parameter applies to Layer 7 access control entries only.\nSpecifies a host to which the access control entry applies.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "log": {
              "aliases": [],
              "description": "Specifies the log level that is logged when actions of this type occur.\nWhen C(none) it will log nothing, which is a default action.\nWhen C(packet) it will log the matched packet.",
              "type": "str",
              "required": false,
              "choices": [
                "none",
                "packet"
              ],
              "suboptions": {}
            },
            "paths": {
              "aliases": [],
              "description": "This parameter applies to Layer 7 access control entries only.\nSpecifies the path or paths to which the access control entry applies.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "protocol": {
              "aliases": [],
              "description": "This parameter applies to Layer 4 access control entries only.\nSpecifies the protocol: C(tcp), C(udp), C(icmp) or C(all) protocols, to which the access control entry applies.",
              "type": "str",
              "required": false,
              "choices": [
                "tcp",
                "icmp",
                "udp",
                "all"
              ],
              "suboptions": {}
            },
            "scheme": {
              "aliases": [],
              "description": "This parameter applies to Layer 7 access control entries only.\nSpecifies the URI scheme: C(http), C(https) or C(any) on which the access control entry operates.",
              "type": "str",
              "required": false,
              "choices": [
                "http",
                "https",
                "any"
              ],
              "suboptions": {}
            },
            "src_addr": {
              "aliases": [],
              "description": "Specifies the source IP address for the access control entry.\nWhen set to C(any) the ACL will match any source address, C(src_mask) is ignored in this case.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "src_mask": {
              "aliases": [],
              "description": "Optional parameter that specifies the source network mask for the access control entry.\nIf not specified and C(src_addr) is not C(any), the C(src_addr) is deemed to be host address.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "src_port": {
              "aliases": [],
              "description": "Specifies the source port for the access control entry.\nCan be set to C(*) to indicate all ports.\nParameter is mutually exclusive with C(src_port_range).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "src_port_range": {
              "aliases": [],
              "description": "Specifies the source port range for the access control entry.\nParameter is mutually exclusive with C(src_port_range).\nTo indicate all ports the C(src_port) parameter must be used and set to C(*).",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the ACL to manage.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "path_match_case": {
          "aliases": [],
          "description": "Specifies whether alphabetic case is considered when matching paths in an access control entry.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(state) is C(present), ensures that the ACL exists.\nWhen C(state) is C(absent), ensures that the ACL is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Specifies the type of ACL to create.\nOnce the type is set it cannot be changed.",
          "type": "str",
          "required": false,
          "choices": [
            "static",
            "dynamic"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage user-defined APM ACLs",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a static ACL with L4 entries\n  bigip_apm_acl:\n    name: L4foo\n    acl_order: 0\n    type: static\n    entries:\n      - action: allow\n        dst_port: '80'\n        dst_addr: '192.168.1.1'\n        src_port: '443'\n        src_addr: '10.10.10.0'\n        src_mask: '255.255.255.128'\n        protocol: tcp\n      - action: reject\n        dst_port: '*'\n        dst_addr: '192.168.1.1'\n        src_port: '*'\n        src_addr: '10.10.10.0'\n        src_mask: '255.255.255.128'\n        protocol: tcp\n        log: packet\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create a static ACL with L7 entries\n  bigip_apm_acl:\n    name: L7foo\n    acl_order: 1\n    type: static\n    path_match_case: no\n    entries:\n      - action: allow\n        host_name: 'foobar.com'\n        paths: '/shopfront'\n        scheme: https\n      - action: reject\n        host_name: 'internal_foobar.com'\n        paths: '/admin'\n        scheme: any\n        log: packet\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create a static ACL with L7/L4 entries\n  bigip_apm_acl:\n    name: L7L4foo\n    acl_order: 2\n    type: static\n    path_match_case: no\n    entries:\n      - action: allow\n        host_name: 'foobar.com'\n        paths: '/shopfront'\n        scheme: https\n        dst_port: '8181'\n        dst_addr: '192.168.1.1'\n        protocol: tcp\n      - action: reject\n        dst_addr: '192.168.1.1'\n        host_name: 'internal_foobar.com'\n        paths: '/admin'\n        scheme: any\n        protocol: all\n        log: packet\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Modify a static ACL entries\n  bigip_apm_acl:\n    name: L4foo\n    entries:\n      - action: allow\n        dst_port: '80'\n        dst_addr: '192.168.1.1'\n        src_port: '443'\n        src_addr: '10.10.10.0'\n        src_mask: '255.255.255.128'\n        protocol: tcp\n      - action: discard\n        dst_port: '*'\n        dst_addr: 192.168.1.1\n        src_port: '*'\n        src_addr: '10.10.10.0'\n        src_mask: '255.2155.255.128'\n        protocol: all\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove static ACL\n  bigip_apm_acl:\n    name: L4foo\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_apm_network_access": {
    "doc": {
      "description": "Manage APM Network Access resource.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "allow_local_dns": {
          "aliases": [],
          "description": "Enables local access to DNS servers configured on the client prior to establishing a network access connection.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "allow_local_subnet": {
          "aliases": [],
          "description": "Enables local subnet access and local access to any host or subnet in routes specified in the client routing table.\nWhen C(yes) the system does not support integrated IP filtering.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "User created network access description.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dns_address_space": {
          "aliases": [],
          "description": "Specifies a list of domain names describing the target LAN DNS addresses.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "dtls": {
          "aliases": [],
          "description": "When C(yes) the network access connection uses Datagram Transport Level Security instead of TCP, to provide better throughput for high demand applications like VoIP or streaming video.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "dtls_port": {
          "aliases": [],
          "description": "Specifies the port number the network access resource uses for secure UDP traffic with DTLS.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "excluded_dns_addresses": {
          "aliases": [],
          "description": "Specifies the DNS address spaces for which traffic is not forced through the tunnel.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "excluded_ipv4_adresses": {
          "aliases": [],
          "description": "Specifies IPV4 address spaces for which traffic is not forced through the tunnel.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "subnet": {
              "aliases": [],
              "description": "The address of subnet in CIDR format, e.g. C(192.168.1.0/24)\nHost addresses can be specified without the CIDR mask notation.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "excluded_ipv6_adresses": {
          "aliases": [],
          "description": "Specifies IPV6 address spaces for which traffic is not forced through the tunnel.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "subnet": {
              "aliases": [],
              "description": "The address of a subnet in CIDR format, e.g. C(2001:db8:abcd:8000::/52)\nHost addresses can be specified without the CIDR mask notation.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "ip_version": {
          "aliases": [],
          "description": "Supported IP version on the network access resource.",
          "type": "str",
          "required": false,
          "choices": [
            "ipv4",
            "ipv4-ipv6"
          ],
          "suboptions": {}
        },
        "ipv4_address_space": {
          "aliases": [],
          "description": "Specifies a list of IPv4 hosts or networks describing the target LAN.\nThis option is mandatory when creating a new resource and C(split_tunnel) is set to C(yes).",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "subnet": {
              "aliases": [],
              "description": "The address of subnet in CIDR format, e.g. C(192.168.1.0/24)\nHost addresses can be specified without the CIDR mask notation.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "ipv4_lease_pool": {
          "aliases": [],
          "description": "Specifies the IPV4 lease pool resource to use with network access.\nReferencing a lease pool can be done in the full path format, for example C(/Common/pool_name).\nWhen a lease pool is referenced in full path format, the C(partition) parameter is ignored.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ipv6_address_space": {
          "aliases": [],
          "description": "Specifies a list of IPv6 hosts or networks describing the target LAN.\nThis option is mandatory when creating a new resource and C(split_tunnel) is set to C(yes).",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "subnet": {
              "aliases": [],
              "description": "The address of subnet in CIDR format, e.g. C(2001:db8:abcd:8000::/52)\nHost addresses can be specified without the CIDR mask notation.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "ipv6_lease_pool": {
          "aliases": [],
          "description": "Specifies the IPV6 lease pool resource to use with network access.\nReferencing a lease pool can be done in the full path format, for example C(/Common/pool_name).\nWhen a lease pool is referenced in full path format, the C(partition) parameter is ignored.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the APM network access to manage/create.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "snat_pool": {
          "aliases": [],
          "description": "Specifies the name of a SNAT pool used for implementing selective and intelligent SNATs.\nWhen C(none) the system uses no SNAT pool for this network resource.\nWhen C(automap) the system uses all of the self IP addresses as the translation addresses for the pool.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "split_tunnel": {
          "aliases": [],
          "description": "Specifies that only the traffic targeted to a specified address space is sent over the network access tunnel.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(state) is C(present), ensures the ACL exists.\nWhen C(state) is C(absent), ensures the ACL is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage APM Network Access resource",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a split tunnel IPV4 Network Access\n  bigip_apm_network_access:\n    name: foobar\n    ip_version: ipv4\n    split_tunnel: yes\n    snat_pool: \"none\"\n    ipv4_lease_pool: leasefoo\n    ipv4_address_space:\n      - subnet: 10.10.1.1\n      - subnet: 10.10.2.0/24\n    excluded_ipv4_adresses:\n      - subnet: 192.168.1.0/24\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Modify a split tunnel IPV4 Network Access\n  bigip_apm_network_access:\n    name: foobar\n    snat_pool: /Common/poolsnat\n    ipv4_address_space:\n      - subnet: 172.16.23.0/24\n    excluded_ipv4_adresses:\n      - subnet: 10.10.2.0/24\n    allow_local_subnet: yes\n    allow_local_dns: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove Network Access\n  bigip_apm_network_access:\n    name: foobar\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_apm_policy_fetch": {
    "doc": {
      "description": "Exports the APM policy or APM access profile from remote nodes.",
      "has_action": false,
      "notes": "Due to ID685681 it is not possible to execute ng_* tools via REST API on v12.x and 13.x, once this is fixed this restriction will be removed.\nRequires BIG-IP >= 14.0.0\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "dest": {
          "aliases": [],
          "description": "A directory to save the file into.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "file": {
          "aliases": [],
          "description": "The name of the file to be created on the remote device for downloading.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "If C(no), the file will only be transferred if it does not exist in the the destination.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the APM policy or APM access profile exported to create a file on the remote device for downloading.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition which contains the APM policy or APM access profile to export.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "type": {
          "aliases": [],
          "description": "Specifies the type of item to export from the device.",
          "default": "profile_access",
          "type": "str",
          "required": false,
          "choices": [
            "profile_access",
            "access_policy"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Exports the APM policy or APM access profile from remote nodes.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Export APM access profile\n  bigip_apm_policy_fetch:\n    name: foobar\n    file: export_foo\n    dest: /root/download\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Export APM access policy\n  bigip_apm_policy_fetch:\n    name: foobar\n    file: export_foo\n    dest: /root/download\n    type: access_policy\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Export APM access profile, autogenerate name\n  bigip_apm_policy_fetch:\n    name: foobar\n    dest: /root/download\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_apm_policy_import": {
    "doc": {
      "description": "Manage BIG-IP APM policy or APM access profile imports.",
      "has_action": false,
      "notes": "Due to ID685681 it is not possible to execute ng_* tools via REST API on v12.x and 13.x, once this is fixed this restriction will be removed.\nRequires BIG-IP >= 14.0.0\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "force": {
          "aliases": [],
          "description": "When set to C(yes) any existing policy with the same name will be overwritten by the new import.\nIf a policy does not exist, this setting is ignored.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the APM policy or APM access profile to create or override.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "reuse_objects": {
          "aliases": [],
          "description": "When set to C(yes) and objects referred within the policy exist on the BIG-IP, those will be used instead of the objects defined in the policy.\nReusing existing objects reduces configuration size.\nThe configuration of existing objects might differ to the configuration of the objects defined in the policy!",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "source": {
          "aliases": [],
          "description": "Full path to a file to be imported into the BIG-IP APM.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Specifies the type of item to export from the device.",
          "default": "profile_access",
          "type": "str",
          "required": false,
          "choices": [
            "profile_access",
            "access_policy",
            "profile_api_protection"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage BIG-IP APM policy or APM access profile imports",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Import APM profile\n  bigip_apm_policy_import:\n    name: new_apm_profile\n    source: /root/apm_profile.tar.gz\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Import APM policy\n  bigip_apm_policy_import:\n    name: new_apm_policy\n    source: /root/apm_policy.tar.gz\n    type: access_policy\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Override existing APM policy\n  bigip_asm_policy:\n    name: new_apm_policy\n    source: /root/apm_policy.tar.gz\n    force: yes\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Import APM profile without re-using existing configuration objects\n  bigip_apm_policy_import:\n    name: new_apm_profile\n    source: /root/apm_profile.tar.gz\n    reuse_objects: false\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_asm_advanced_settings": {
    "doc": {
      "description": "Manage BIG-IP system ASM advanced settings.",
      "has_action": false,
      "notes": "Requires BIG-IP version 12.0.0 or greater\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "name": {
          "aliases": [],
          "description": "The ASM setting to manipulate.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "The state of the setting on the system. When C(present), guarantees that an existing setting is set to C(value). When C(reset), sets the setting back to the default value. At least one of value and state C(reset) are required.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "reset"
          ],
          "suboptions": {}
        },
        "value": {
          "aliases": [],
          "description": "The value to set the key to. At least one of value and state C(reset) are required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage BIG-IP system ASM advanced settings",
      "version_added": "1.4.0"
    },
    "examples": "\n- name: Set the long_request_buffer_size asm setting\n  bigip_asm_advanced_settings:\n    name: long_request_buffer_size\n    value: 20000000\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Reset the long_request_buffer_size to default value\n  bigip_asm_advanced_settings:\n    name: long_request_buffer_size\n    state: reset\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_asm_dos_application": {
    "doc": {
      "description": "Manages Application settings for an ASM/AFM DOS profile.",
      "has_action": false,
      "notes": "Requires BIG-IP >= 13.1.0\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "geolocations": {
          "aliases": [],
          "description": "Manages the geolocations countries whitelist, blacklist.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "blacklist": {
              "aliases": [],
              "description": "A list of countries to be put on the blacklist, must not have overlapping elements with C(whitelist).",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "whitelist": {
              "aliases": [],
              "description": "A list of countries to be put on the whitelist, must not have overlapping elements with C(blacklist).",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            }
          }
        },
        "heavy_urls": {
          "aliases": [],
          "description": "Manages Heavy URL protection.\nHeavy URLs are a small number of site URLs that might consume considerable server resources per request.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auto_detect": {
              "aliases": [],
              "description": "Enables or disables automatic heavy URL detection.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "exclude": {
              "aliases": [],
              "description": "Specifies a list of URLs or wildcards to exclude from the heavy URLs.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "include": {
              "aliases": [],
              "description": "Configures additional URLs to include in the heavy URLs that were auto-detected.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "threshold": {
                  "aliases": [],
                  "description": "Specifies the threshold of requests per second, where the URL in question is considered under attack.\nThe acceptable range is between 1 and 4294967295 inclusive, or C(auto).",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "url": {
                  "aliases": [],
                  "description": "Specifies the URL to be added to the list of heavy URLs, in addition to those automatically detected.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "latency_threshold": {
              "aliases": [],
              "description": "Specifies the latency threshold for automatic heavy URL detection.\nThe acceptable range is between 0 and 4294967295 miliseconds inclusive.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "mobile_detection": {
          "aliases": [],
          "description": "Configures detection of mobile applications built with the Anti-Bot Mobile SDK and defines how requests from these mobile application clients are handled.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "allow_android_rooted_device": {
              "aliases": [],
              "description": "When C(yes) the device will allow traffic from rooted Android devices.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "allow_any_android_package": {
              "aliases": [],
              "description": "When C(yes) allows any application publisher.\nA publisher is identified by the certificate used to sign the application.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "allow_any_ios_package": {
              "aliases": [],
              "description": "When C(yes) allows any iOS package.\nA package name is the unique identifier of the mobile application.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "allow_emulators": {
              "aliases": [],
              "description": "When C(yes) allows traffic from applications run on emulators.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "allow_jailbroken_devices": {
              "aliases": [],
              "description": "When C(yes) allows traffic from jailbroken iOS devices.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "android_publishers": {
              "aliases": [],
              "description": "This option has no effect when C(allow_any_android_package) is set to C(yes).\nSpecifies the allowed publisher certificates for android applications.\nThe publisher certificate needs to be installed on the BIG-IP beforehand.\nThe certificate name located on a different partition than the one specified in the C(partition) parameter needs to be provided in C(full_path) format, e.g. C(/Foo/cert.crt).",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "client_side_challenge_mode": {
              "aliases": [],
              "description": "Action to take when a CAPTCHA or Client Side Integrity challenge needs to be presented.\nThe mobile application user will not see a CAPTCHA challenge and the mobile application will not be presented with the Client Side Integrity challenge. The such options for mobile applications are C(pass) or C(cshui).\nWhen C(pass) the traffic is passed without incident.\nWhen C(cshui) the SDK checks for human interactions with the screen in the last few seconds. If none are detected, the traffic is blocked.",
              "type": "str",
              "required": false,
              "choices": [
                "pass",
                "cshui"
              ],
              "suboptions": {}
            },
            "enabled": {
              "aliases": [],
              "description": "When C(yes), requests from mobile applications built with Anti-Bot Mobile SDK will be detected and handled according to the parameters set.\nWhen C(no), these requests will be handled like any other request which may let attacks in, or cause false positives.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "ios_allowed_package_names": {
              "aliases": [],
              "description": "Specifies the names of iOS packages to allow traffic on.\nThis option has no effect when C(allow_any_ios_package) is set to C(yes).",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            }
          }
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Specifies the name of the profile to manage application settings in.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rtbh_duration": {
          "aliases": [],
          "description": "Specifies the duration of the RTBH BGP route advertisement, in seconds.\nThe acceptable range is between 0 and 4294967295 inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "rtbh_enable": {
          "aliases": [],
          "description": "Specifies whether to enable Remote Triggered Black Hole C(RTBH) of attacking IPs by advertising BGP routes.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "scrubbing_duration": {
          "aliases": [],
          "description": "Specifies the duration of the Traffic Scrubbing BGP route advertisement, in seconds.\nThe acceptable range is between 0 and 4294967295 inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "scrubbing_enable": {
          "aliases": [],
          "description": "Specifies whether to enable Traffic Scrubbing during attacks by advertising BGP routes.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "single_page_application": {
          "aliases": [],
          "description": "Specifies, when C(yes), that the system supports a Single Page Applications.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(state) is C(present), ensures that the Application object exists.\nWhen C(state) is C(absent), ensures that the Application object is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "trigger_irule": {
          "aliases": [],
          "description": "Specifies, when C(yes), that the system activates an Application DoS iRule event.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage application settings for a DOS profile",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create an ASM dos application profile\n  bigip_asm_dos_application:\n    profile: dos_foo\n    geolocations:\n      blacklist:\n        - Afghanistan\n        - Andora\n      whitelist:\n        - Cuba\n    heavy_urls:\n      auto_detect: yes\n      latency_threshold: 1000\n    rtbh_duration: 3600\n    rtbh_enable: yes\n    single_page_application: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Update an ASM dos application profile\n  bigip_asm_dos_application:\n    profile: dos_foo\n    mobile_detection:\n      enabled: yes\n      allow_any_ios_package: yes\n      allow_emulators: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove an ASM dos application profile\n  bigip_asm_dos_application:\n    profile: dos_foo\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_asm_policy_fetch": {
    "doc": {
      "description": "Exports the ASM policy from remote nodes.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "base64": {
          "aliases": [],
          "description": "If C(yes), the returned C(inline) ASM policy content will be Base64 encoded.\nOnly applies to C(inline) ASM policy exports.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "binary": {
          "aliases": [],
          "description": "If C(yes), the exported ASM policy will be in binary format.\nOnly applies to C(file) ASM policy exports.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "compact": {
          "aliases": [],
          "description": "If C(yes), only the ASM policy custom settings will be exported.\nOnly applies to XML type ASM policy exports.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "dest": {
          "aliases": [],
          "description": "A directory to save the policy file into.\nThis option is ignored when C(inline) is set to c(yes).",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "file": {
          "aliases": [],
          "description": "The name of the file to be created on the remote device for downloading.\nWhen C(binary) is set to C(no) the ASM policy will be in XML format.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "If C(no), the file will only be transferred if it does not exist in the the destination.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "inline": {
          "aliases": [],
          "description": "If C(yes), the ASM policy will be exported C(inline) as a string instead of a file.\nThe policy can be be retrieved in the playbook C(result) dictionary under the C(inline_policy) key.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the policy exported to create a file on the remote device for downloading.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition which contains the ASM policy to export.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "short_description": "Exports the ASM policy from remote nodes.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Export policy in binary format\n  bigip_asm_policy_fetch:\n    name: foobar\n    file: export_foo\n    dest: /root/download\n    binary: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Export policy inline base64 encoded format\n  bigip_asm_policy_fetch:\n    name: foobar\n    inline: yes\n    base64: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Export policy in XML format\n  bigip_asm_policy_fetch:\n    name: foobar\n    file: export_foo\n    dest: /root/download\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Export compact policy in XML format\n  bigip_asm_policy_fetch:\n    name: foobar\n    file: export_foo.xml\n    dest: /root/download/\n    compact: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Export policy in binary format, autogenerate name\n  bigip_asm_policy_fetch:\n    name: foobar\n    dest: /root/download/\n    binary: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_asm_policy_import": {
    "doc": {
      "description": "Manage the policy imports for BIG-IP ASM policies.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "base64": {
          "aliases": [],
          "description": "Indicates if the imported policy string is encoded in Base64.\nThis parameter only takes effect when using the C(inline) method of import.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "encoding": {
          "aliases": [],
          "description": "Specifies the desired application language of the imported policy.\nThe imported policy cannot be a C(parent) type or attached to a C(parent) policy when C(auto-detect) encoding is set.\nWhen importing a policy to attach to a C(parent) policy, the C(encoding) of the imported policy, if different, must be set to be the same value as C(parent_policy), otherwise import will fail.\nThis parameter is available on TMOS version 13.x and later and only takes effect when the C(inline) import method is used.",
          "type": "str",
          "required": false,
          "choices": [
            "windows-874",
            "utf-8",
            "koi8-r",
            "windows-1253",
            "iso-8859-10",
            "gbk",
            "windows-1256",
            "windows-1250",
            "iso-8859-13",
            "iso-8859-9",
            "windows-1251",
            "iso-8859-6",
            "big5",
            "gb2312",
            "iso-8859-1",
            "windows-1252",
            "iso-8859-4",
            "iso-8859-2",
            "iso-8859-3",
            "gb18030",
            "shift_jis",
            "iso-8859-8",
            "euc-kr",
            "iso-8859-5",
            "iso-8859-7",
            "windows-1255",
            "euc-jp",
            "iso-8859-15",
            "windows-1257",
            "iso-8859-16",
            "auto-detect"
          ],
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "When set to C(yes), any existing policy with the same name will be overwritten by the new import.\nThis works for both inline and file imports, if the policy does not exist this setting is ignored.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "inline": {
          "aliases": [],
          "description": "When specified, the ASM policy is created from a provided string.\nContent needs to be provided in a valid XML format, otherwise the operation will fail.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The ASM policy to create or override.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent_policy": {
          "aliases": [],
          "description": "The parent policy to which the newly imported policy should be attached as child.\nWhen C(parent_policy) is specified, the imported C(policy_type) must not be C(parent).\nThis parameter is available on TMOS version 13.x and later and only takes effect when C(inline) import method is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition on which to create the policy.\nThis parameter is also applied to indicate the partition of the C(parent) policy.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "policy_type": {
          "aliases": [],
          "description": "The type of the policy to import.\nWhen C(policy_type) is C(security), the policy is imported as an application security policy that you can apply to a virtual server.\nWhen C(policy_type) is C(parent), the policy becomes a parent to which other Security policies attach, inheriting its attributes. This policy type cannot be applied to Virtual Servers.\nThis parameter is available on TMOS version 13.x and later and only takes effect when the C(inline) import method is used.",
          "default": "security",
          "type": "str",
          "required": false,
          "choices": [
            "security",
            "parent"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "retain_inheritance_settings": {
          "aliases": [],
          "description": "Indicates if an imported security type policy should retain settings when attached to parent policy.\nThis parameter is available on TMOS version 13.x and later and only takes effect when the C(inline) import method is used.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "source": {
          "aliases": [],
          "description": "Full path to a policy file to be imported into the BIG-IP ASM.\nPolicy files exported from newer versions of BIG-IP cannot be imported into older versions of BIG-IP. However, policy files from older versions of BIG-IP can be imported into newer versions of BIG-IP.\nThe file format can be binary or XML.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage BIG-IP ASM policy imports",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Import ASM policy\n  bigip_asm_policy_import:\n    name: new_asm_policy\n    file: /root/asm_policy.xml\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Import ASM policy inline\n  bigip_asm_policy_import:\n    name: foo-policy4\n    inline: <xml>content</xml>\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Override existing ASM policy\n  bigip_asm_policy:\n    name: new_asm_policy\n    source: /root/asm_policy_new.xml\n    force: yes\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_asm_policy_manage": {
    "doc": {
      "description": "Manage BIG-IP ASM policies, create policies from templates, and manage global policy settings.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "active": {
          "aliases": [],
          "description": "If C(yes), will apply and activate the existing inactive policy. If C(no), it will deactivate the existing active policy. Generally should be C(yes) only in cases where you want to activate new or existing policy.\nIn TMOS v14 and later, deactivating the policy will cause it to be detached from any other associated objects, hence the default option of C(no) has been removed in order to prevent accidental disassociation.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "apply": {
          "aliases": [],
          "description": "If C(yes) will apply the policy if the policy has pending changes.\nThis parameter supported on TMOS C(v14.x) and above.",
          "type": "bool",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The ASM policy to manage or create.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(state) is C(present), and the C(template) parameter is provided, a new ASM policy is created from the template with the given policy C(name).\nWhen C(state) is C(present) and no C(template) parameter is provided, a new blank ASM policy is created with the given policy C(name).\nWhen C(state) is C(absent), ensures the policy is removed, even if it is currently active.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "template": {
          "aliases": [],
          "description": "An ASM policy built-in template. If the template does not exist, an error is raised.\nOnce the policy has been created, this value cannot change.\nThe C(Comprehensive), C(Drupal), C(Fundamental), C(Joomla), C(Vulnerability Assessment Baseline), and C(Wordpress) templates are only available on BIG-IP versions >= 13.",
          "type": "str",
          "required": false,
          "choices": [
            "ActiveSync v1.0 v2.0 (http)",
            "ActiveSync v1.0 v2.0 (https)",
            "Comprehensive",
            "Drupal",
            "Fundamental",
            "Joomla",
            "LotusDomino 6.5 (http)",
            "LotusDomino 6.5 (https)",
            "OWA Exchange 2003 (http)",
            "OWA Exchange 2003 (https)",
            "OWA Exchange 2003 with ActiveSync (http)",
            "OWA Exchange 2003 with ActiveSync (https)",
            "OWA Exchange 2007 (http)",
            "OWA Exchange 2007 (https)",
            "OWA Exchange 2007 with ActiveSync (http)",
            "OWA Exchange 2007 with ActiveSync (https)",
            "OWA Exchange 2010 (http)",
            "OWA Exchange 2010 (https)",
            "Oracle 10g Portal (http)",
            "Oracle 10g Portal (https)",
            "Oracle Applications 11i (http)",
            "Oracle Applications 11i (https)",
            "PeopleSoft Portal 9 (http)",
            "PeopleSoft Portal 9 (https)",
            "Rapid Deployment Policy",
            "SAP NetWeaver 7 (http)",
            "SAP NetWeaver 7 (https)",
            "SharePoint 2003 (http)",
            "SharePoint 2003 (https)",
            "SharePoint 2007 (http)",
            "SharePoint 2007 (https)",
            "SharePoint 2010 (http)",
            "SharePoint 2010 (https)",
            "Vulnerability Assessment Baseline",
            "Wordpress"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage BIG-IP ASM policies",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create ASM policy from template\n  bigip_asm_policy:\n    name: new_sharepoint_policy\n    template: SharePoint 2007 (http)\n    state: present\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Create blank ASM policy\n  bigip_asm_policy:\n    name: new_blank_policy\n    state: present\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Create blank ASM policy and activate\n  bigip_asm_policy:\n    name: new_blank_policy\n    active: yes\n    state: present\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Activate ASM policy\n  bigip_asm_policy:\n    name: inactive_policy\n    active: yes\n    state: present\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Deactivate ASM policy\n  bigip_asm_policy_manage:\n    name: active_policy\n    state: present\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_asm_policy_server_technology": {
    "doc": {
      "description": "Manages Server Technology on ASM policies.",
      "has_action": false,
      "notes": "This module is primarily used as a component of configuring an ASM policy in the Ansible Galaxy ASM Policy Role.\nRequires BIG-IP >= 13.0.0\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "name": {
          "aliases": [],
          "description": "Specifies the name of the server technology to apply on, or remove from, the ASM policy.",
          "type": "str",
          "required": true,
          "choices": [
            "jQuery",
            "Java Servlets/JSP",
            "ASP",
            "WebDAV",
            "IIS",
            "Front Page Server Extensions (FPSE)",
            "ASP.NET",
            "Microsoft Windows",
            "Unix/Linux",
            "Macromedia ColdFusion",
            "WordPress",
            "Apache Tomcat",
            "Apache/NCSA HTTP Server",
            "Outlook Web Access",
            "PHP",
            "Microsoft SQL Server",
            "Oracle",
            "MySQL",
            "Lotus Domino",
            "BEA Systems WebLogic Server",
            "Macromedia JRun",
            "Novell",
            "Cisco",
            "SSI (Server Side Includes)",
            "Proxy Servers",
            "CGI",
            "Sybase/ASE",
            "IBM DB2",
            "PostgreSQL",
            "XML",
            "Apache Struts",
            "Elasticsearch",
            "JBoss",
            "Citrix",
            "Node.js",
            "Django",
            "MongoDB",
            "Ruby",
            "JavaServer Faces (JSF)",
            "Joomla",
            "Jetty"
          ],
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "This parameter is only used when identifying an ASM policy.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "policy_name": {
          "aliases": [],
          "description": "Specifies the name of an existing ASM policy to add or remove a server technology to.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages Server Technology on an ASM policy",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add Server Technology to ASM Policy\n  bigip_asm_policy_server_technology:\n    name: Joomla\n    policy_name: FooPolicy\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n- name: Remove Server Technology from ASM Policy\n  bigip_asm_policy_server_technology:\n    name: Joomla\n    policy_name: FooPolicy\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_asm_policy_signature_set": {
    "doc": {
      "description": "Manages Signature Sets on an ASM policy.",
      "has_action": false,
      "notes": "This module is primarily used as a component of configuring an ASM policy in the Ansible Galaxy ASM Policy Role.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "alarm": {
          "aliases": [],
          "description": "Specifies if the security policy logs the request data in the Statistics screen when a request matches a signature that is included in the signature set.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "block": {
          "aliases": [],
          "description": "Effective when the security policy enforcement mode is Blocking.\nDetermines how the system treats requests that match a signature included in the signature set.\nWhen C(yes), the system blocks all requests that match a signature, and provides the client with a support ID number.\nWhen C(no), the system accepts those requests.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "learn": {
          "aliases": [],
          "description": "Specifies if the security policy learns all requests that match a signature that is included in the signature set.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the signature sets to apply on, or remove from, the ASM policy.\nApart from built-in signature sets that ship with the device, you can create and use custom signature sets.\nWhen C(All Response Signatures), configures all signatures in the attack signature pool that can review responses.\nWhen C(All Signatures), configures all attack signatures in the attack signature pool.\nWhen C(Apache Struts Signatures), configures signatures that target attacks against the Apache Struts web servers. Only available in version 13.x and later.\nWhen C(Apache Tomcat Signatures), configures signatures that target attacks against the Apache Tomcat web servers. Only available in version 13.x and later.\nWhen C(Cisco Signatures), configures signatures that target attacks against Cisco systems. Only available in version 13.x and later.\nWhen C(Command Execution Signatures), configures signatures involving attacks perpetrated by executing commands.\nWhen C(Cross Site Scripting Signatures), configures signatures that target attacks caused by cross-site scripting techniques.\nWhen C(Directory Indexing Signatures), configures signatures targeting attacks that browse directory listings.\nWhen C(Generic Detection Signatures), configures signatures targeting well-known or common web and application attacks.\nWhen C(HTTP Response Splitting Signatures), configures signatures targeting attacks that take advantage of responses for which input values have not been sanitized.\nWhen C(High Accuracy Detection Evasion Signatures), configures signatures with a high level of accuracy that produce few false positives when identifying evasion attacks. Only available in version 13.x and later.\nWhen C(High Accuracy Signatures), configures signatures with a high level of accuracy that produce few false positives when identifying evasion attacks.\nWhen C(IIS and Windows Signatures), configures signatures that target attacks against Microsoft IIS and Windows-based systems. Only available in version 13.x and later.\nWhen C(Information Leakage Signatures), configures signatures targeting attacks that are looking for system data or debugging information that shows where the system is vulnerable to attack.\nWhen C(Java Servlets/JSP Signatures), configures signatures that target attacks against Java Servlets and Java Server Pages (JSP) based applications. Only available in version 13.x and later.\nWhen C(Low Accuracy Signatures), configures signatures that may result in more false positives when identifying attacks.\nWhen C(Medium Accuracy Signatures), configures signatures with a medium level of accuracy when identifying attacks.\nWhen C(OS Command Injection Signatures), configures signatures targeting attacks that attempt to run system level commands through a vulnerable application.\nWhen C(OWA Signatures), configures signatures that target attacks against the Microsoft Outlook Web Access (OWA) application.\nWhen C(Other Application Attacks Signatures), configures signatures targeting miscellaneous attacks, including session fixation, local file access, injection attempts, header tampering and so on, affecting many applications.\nWhen C(Path Traversal Signatures), configures signatures targeting attacks that attempt to access files and directories that are stored outside the web root folder.\nWhen C(Predictable Resource Location Signatures), configures signatures targeting attacks that attempt to uncover hidden website content and functionality by forceful browsing, or by directory and file enumeration.\nWhen C(Remote File Include Signatures), configures signatures targeting attacks that attempt to exploit a remote file include vulnerability that could enable a remote attacker to execute arbitrary commands on the server hosting the application.\nWhen C(SQL Injection Signatures), configures signatures targeting attacks that attempt to insert (inject) a SQL query using the input data from a client to an application.\nWhen C(Server Side Code Injection Signatures), configures signatures targeting code injection attacks on the server side.\nWhen C(WebSphere signatures), configures signatures targeting attacks on many computing platforms that are integrated using WebSphere, including general database, Microsoft Windows, IIS, Microsoft SQL Server, Apache, Oracle, Unix/Linux, IBM DB2, PostgreSQL, and XML.\nWhen C(XPath Injection Signatures), configures signatures targeting attacks that attempt to gain access to data structures or bypass permissions when a web site uses user-supplied information to construct XPath queries for XML data.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "This parameter is only used when identifying an ASM policy.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "policy_name": {
          "aliases": [],
          "description": "Specifies the name of an existing ASM policy to add or remove signature sets to.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages Signature Sets on an ASM policy",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add Signature Set to ASM Policy\n  bigip_asm_policy_signature_set:\n    name: IIS and Windows Signatures\n    policy_name: FooPolicy\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove Signature Set to ASM Policy\n  bigip_asm_policy_signature_set:\n    name: IIS and Windows Signatures\n    policy_name: FooPolicy\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_cgnat_lsn_pool": {
    "doc": {
      "description": "Manage CGNAT LSN (Large Scale NAT) Pools.",
      "has_action": false,
      "notes": "Requires CGNAT is licensed and enabled on BIG-IP.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "backup_members": {
          "aliases": [],
          "description": "Specifies translation IP addresses available for backup members, which are used by Deterministic translation mode if C(deterministic) mode translation fails and falls back to C(napt) mode.\nThis is a collection of IP prefixes with their prefix lengths.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "client_conn_limit": {
          "aliases": [],
          "description": "Specifies the maximum number of simultaneous translated connections a client or subscriber is allowed to have.\nValid range of values is between C(0) and C(4294967295) inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "User created LSN pool description.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "egress_interfaces": {
          "aliases": [],
          "description": "Specifies the set of interfaces on which the source address translation is allowed or disallowed, as determined by the C(egress_intf_enabled) setting.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "egress_intf_enabled": {
          "aliases": [],
          "description": "Specifies how the system handles address translation on the interfaces specified in C(egress_interfaces).\nWhen set to C(yes), source address translation is allowed only on the specified C(egress_interfaces).\nWhen set to C(no), source address translation is disabled on the specified C(egress_interfaces).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "harpin_mode": {
          "aliases": [],
          "description": "Enables or disables hairpinning for incoming connections to active translation end-points.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "icmp_echo": {
          "aliases": [],
          "description": "Enables or disables ICMP echo on translated addresses.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "inbound_connections": {
          "aliases": [],
          "description": "Controls whether or not the BIG-IP system supports inbound connections for each outbound mapping.\nWhen C(disabled), system does not support inbound connections for outbound mappings, which prevents Port Control Protocol C(pcp) from functioning.\nWhen C(explicit), the system supports inbound connections for explicit outbound mappings.\nWhen C(automatic) the system supports inbound connections for every outbound mapping as it gets used.",
          "type": "str",
          "required": false,
          "choices": [
            "disabled",
            "explicit",
            "automatic"
          ],
          "suboptions": {}
        },
        "log_profile": {
          "aliases": [],
          "description": "Specifies the name of the logging profile the pool uses.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_publisher": {
          "aliases": [],
          "description": "Specifies the name of the log publisher that logs translation events.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "members": {
          "aliases": [],
          "description": "Specifies the set of translation IP addresses available in the pool. This is a collection of IP prefixes with their prefix lengths.\nAll public-side addresses come from the addresses in this group of subnets. Members of two or more deterministic LSN pools must not overlap. Every external address used for deterministic mapping must occur only in one LSN pool.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Specifies the translation address mapping mode.\nThe C(napt) mode provides standard address and port translation allowing multiple clients in a private network to access remote networks using the single IP address assigned to their router.\nThe C(deterministic) address translation mode provides address translation that eliminates the logging of every address mapping, while still allowing internal client address tracking using only an external address and port, and a destination address and port.\nThe C(pba) mode logs the allocation and release of port blocks for subscriber translation requests, instead of separately logging each translation request.",
          "type": "str",
          "required": false,
          "choices": [
            "napt",
            "deterministic",
            "pba"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the LSN pool to manage.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition on which to manage resources.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "pba_block_idle_timeout": {
          "aliases": [],
          "description": "Specifies the timeout duration subsequent to the point when the port block becomes idle.\nValid range of values is between C(0) and C(4294967295) inclusive.\"",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "pba_block_lifetime": {
          "aliases": [],
          "description": "Specifies the timeout for the port block, after which the block is not used for new port allocations.\nValid range of values is between C(0) and C(4294967295) inclusive.\nThe value of C(0) corresponds to an infinite timeout.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "pba_block_size": {
          "aliases": [],
          "description": "Specifies the number of ports in a block.\nValid range of values is between C(0) and C(65535) inclusive.\nThe C(pba_block_size) value should be less than or equal to the LSN pool range, i.e the range of ports defined by C(port_range_low) and C(port_range_high) values.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "pba_client_block_limit": {
          "aliases": [],
          "description": "Specifies the number of blocks that can be assigned to a single subscriber IP address.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "pba_zombie_timeout": {
          "aliases": [],
          "description": "Specifies the timeout duration for a zombie port block, which is a timed out port block with one or more active connections. When the timeout duration expires, connections using the zombie block are killed and the zombie port block becomes an available port block.\nThe value of C(0) corresponds to an infinite timeout.\nSystem ignores this parameter value if C(pba_block_lifetime) is C(0).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "persistence_mode": {
          "aliases": [],
          "description": "Specifies the persistence settings for LSN translation entries.\nWhen C(address), the translation attempts to reuse the address mapping, but not the port mapping.\nWhen C(address-port), the translation attempts to reuse both the address and port mapping for subsequent packets sent from the same internal IP address and port.\nWhen C(none), peristence is disabled.",
          "type": "str",
          "required": false,
          "choices": [
            "address",
            "address-port",
            "none"
          ],
          "suboptions": {}
        },
        "persistence_timeout": {
          "aliases": [],
          "description": "Specifies the persistence timeout value for LSN translation entries.\nIf a particular mapping is unused for this length of time, the mapping expires and the public-side address/port pair is free for use in other mappings.\nValid range of values is between C(0) and C(31536000) inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "port_range_high": {
          "aliases": [],
          "description": "Specifies the high end of the range of port numbers available for use with translation IP addresses.\nThe C(port_range_high) must always be higher or equal to C(port_range_high) value.\nValid range of values is between C(0) and C(65535) inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "port_range_low": {
          "aliases": [],
          "description": "Specifies the low end of the range of port numbers available for use with translation IP addresses.\nThe C(port_range_low) must always be lower or equal to C(port_range_high) value.\nValid range of values is between C(0) and C(65535) inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "route_advertisement": {
          "aliases": [],
          "description": "Specifies whether the translation addresses are passed to the Advanced Routing Module for advertisement through dynamic routing protocols.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(state) is C(present), ensures the LSN pool exists.\nWhen C(state) is C(absent), ensures the LSN pool is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage CGNAT LSN Pools",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create an lsn pool\n  bigip_cgnat_lsn_pool:\n    name: foo\n    mode: napt\n    client_conn_limit: 100\n    log_profile: foo_profile\n    log_publisher: foo_publisher\n    members:\n      - 10.1.1.0/24\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Update lsn pool\n  bigip_cgnat_lsn_pool:\n    name: foo\n    mode: pba\n    pba_block_size: 128\n    pba_block_lifetime: 7200\n    pba_block_idle_timeout: 1800\n    pba_zombie_timeout: 900\n    log_profile: foo_profile\n    log_publisher: foo_publisher\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove lsn pool\n  bigip_cgnat_lsn_pool:\n    name: foo\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_cli_alias": {
    "doc": {
      "description": "Allows for managing both private and shared aliases on a BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "command": {
          "aliases": [],
          "description": "The command to alias.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the alias.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the alias.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition on which to manage resources.\nThis parameter is disregarded when the C(scope) is C(private).",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "scope": {
          "aliases": [],
          "description": "The scope of the alias; whether it is shared on the system, or usable only for the user who created it.",
          "default": "shared",
          "type": "str",
          "required": false,
          "choices": [
            "private",
            "shared"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage CLI aliases on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a new alias\n  bigip_cli_alias:\n    name: sync_device_to_bside\n    scope: shared\n    command: save /sys config partitions all; run /cm config-sync to-group device-group-1\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_cli_script": {
    "doc": {
      "description": "Manages CLI scripts on a BIG-IP. CLI scripts, otherwise known as tmshell scripts or TMSH scripts, allow you to create custom scripts that can run to manage objects within a BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "content": {
          "aliases": [],
          "description": "The content of the script.\nThis parameter is typically used in conjunction with Ansible's C(file) or template lookup plugins. See the examples in this documentation.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the cli script.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the script.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition on which to manage resources.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the script exists.\nWhen C(absent), ensures the script is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage CLI scripts on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a cli script from an existing file\n  bigip_cli_script:\n    name: foo\n    content: \"{{ lookup('file', '/absolute/path/to/cli/script.tcl') }}\"\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create a cli script from a jinja template representing a cli script\n  bigip_cli_script:\n    name: foo\n    content: \"{{ lookup('template', '/absolute/path/to/cli/script.tcl') }}\"\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_command": {
    "doc": {
      "description": "Sends a TMSH or BASH command to a BIG-IP node and returns the results read from the device. This module includes an argument that will cause the module to wait for a specific condition before returning or timing out if the condition is not met.\nThis module is B(not) idempotent, nor will it ever be. It is intended as a stop-gap measure to satisfy automation requirements until such a time as a real module has been developed to configure in the way you need.\nIf you are using this module, we recommend also filing an issue to have a B(real) module created for your needs.",
      "has_action": false,
      "notes": "When running this module in an HA environment via SSH connection and using a role other than C(admin) or C(root), you may see a C(Change Pending) status, even if you did not make any changes. This is being tracked with ID429869.\nWhen using the bigip_command module with the REST API, there are a number of places regex is used internally to escape characters such as quotation marks. If your TMSH command contains regex characters itself, such as datagroup wildcards C(*), then a large amount of escape characters may be needed.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "chdir": {
          "aliases": [],
          "description": "Change into this directory before running the command.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "commands": {
          "aliases": [],
          "description": "The commands to send to the remote BIG-IP device over the configured provider. The resulting output from the command is returned. If the I(wait_for) argument is provided, the module is not returned until the condition is satisfied or the number of retries has expired.\nOnly C(tmsh) commands are supported. If you are piping or adding additional logic that is outside of C(tmsh) (such as grep'ing, awk'ing or other shell related logic that are not C(tmsh)), this behavior is not supported.",
          "type": "raw",
          "required": true,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "Configures the interval in seconds to wait between retries of the command. If the command does not pass the specified conditional, the interval indicates how to long to wait before trying the command again.",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "match": {
          "aliases": [],
          "description": "The I(match) argument is used in conjunction with the I(wait_for) argument to specify the match policy. Valid values are C(all) or C(any). If the value is set to C(all), then all conditionals in the I(wait_for) must be satisfied. If the value is set to C(any) then only one of the values must be satisfied.",
          "default": "all",
          "type": "str",
          "required": false,
          "choices": [
            "any",
            "all"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports.\nYou may omit this option by setting the environment variable C(ANSIBLE_NET_SSH_KEYFILE).",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "retries": {
          "aliases": [],
          "description": "Specifies the number of retries a command should be tried before it is considered failed. The command is run on the target device every retry and evaluated against the I(wait_for) conditionals.",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "wait_for": {
          "aliases": [
            "waitfor"
          ],
          "description": "Specifies what to evaluate from the output of the command and what conditionals to apply.  This argument will cause the task to wait for a particular conditional to be true before moving forward. If the conditional is not true by the configured retries, the task fails. See the examples.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "warn": {
          "aliases": [],
          "description": "Whether the module should raise warnings related to command idempotency or not.\nNote that the F5 Ansible developers specifically leave this on to make you aware that your usage of this module may be better served by official F5 Ansible modules. This module should always be used as a last resort.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Run TMSH and BASH commands on F5 devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: run show version on remote devices\n  bigip_command:\n    commands: show sys version\n    provider:\n      server: lb.mydomain.com\n      password: secret\n      user: admin\n  delegate_to: localhost\n\n- name: run show version and check to see if output contains BIG-IP\n  bigip_command:\n    commands: show sys version\n    wait_for: result[0] contains BIG-IP\n    provider:\n      server: lb.mydomain.com\n      password: secret\n      user: admin\n  register: result\n  delegate_to: localhost\n\n- name: run multiple commands on remote nodes\n  bigip_command:\n    commands:\n      - show sys version\n      - list ltm virtual\n    provider:\n      server: lb.mydomain.com\n      password: secret\n      user: admin\n  delegate_to: localhost\n\n- name: run multiple commands and evaluate the output\n  bigip_command:\n    commands:\n      - show sys version\n      - list ltm virtual\n    wait_for:\n      - result[0] contains BIG-IP\n      - result[1] contains my-vs\n    provider:\n      server: lb.mydomain.com\n      password: secret\n      user: admin\n  register: result\n  delegate_to: localhost\n\n- name: tmsh prefixes will automatically be handled\n  bigip_command:\n    commands:\n      - show sys version\n      - tmsh list ltm virtual\n    provider:\n      server: lb.mydomain.com\n      password: secret\n      user: admin\n  delegate_to: localhost\n\n- name: Delete all LTM nodes in Partition1, assuming no dependencies exist\n  bigip_command:\n    commands:\n      - delete ltm node all\n    chdir: Partition1\n    provider:\n      server: lb.mydomain.com\n      password: secret\n      user: admin\n  delegate_to: localhost\n\n- name: Command that contains wildcard character to be passed to tmsh\n  bigip_command:\n    commands:\n      - modify ltm data-group internal dg_string records add { \"my test\\\\\\\\\\\\\\*string\"  { data \"value\" }}\n    provider:\n      server: lb.mydomain.com\n      password: secret\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_config": {
    "doc": {
      "description": "Manages a BIG-IP configuration by allowing TMSH commands that modify the running configuration, or merge SCF formatted files into the running configuration. Additionally, this module is of significant importance because it allows you to save your running configuration to disk. Since all F5 modules manipulate the running configuration, it is important you use this module to save that running config.",
      "has_action": false,
      "notes": "This module requires that sys db variable on device C(systemauth.disablebash) is set to C(false).\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "merge_content": {
          "aliases": [],
          "description": "Loads the specified configuration that you want to merge into the running configuration. This is equivalent to using the C(tmsh) command C(load sys config from-terminal merge).\nIf you need to read the configuration from a file or template, use Ansible's C(file) or C(template) lookup plugins respectively.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "reset": {
          "aliases": [],
          "description": "Loads the default configuration on the device.\nIf this option is specified, the default configuration will be loaded before any commands or other provided configuration is run.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "save": {
          "aliases": [],
          "description": "The C(save) argument instructs the module to save the running-config to startup-config.\nThis operation is performed after any changes are made to the current running config. If no changes are made, the configuration is still saved to the startup config.\nThis option will always cause the module to return B(changed).",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "verify": {
          "aliases": [],
          "description": "Validates the specified configuration to see whether it is valid to replace the running configuration.\nThe running configuration will not be changed.\nWhen this parameter is set to C(yes), no change will be reported by the module.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage BIG-IP configuration sections",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Save the running configuration of the BIG-IP\n  bigip_config:\n    save: yes\n    provider:\n      server: lb.mydomain.com\n      password: secret\n      user: admin\n  delegate_to: localhost\n\n- name: Reset the BIG-IP configuration, for example, to RMA the device\n  bigip_config:\n    reset: yes\n    save: yes\n    provider:\n      server: lb.mydomain.com\n      password: secret\n      user: admin\n  delegate_to: localhost\n\n- name: Load an SCF configuration\n  bigip_config:\n    merge_content: \"{{ lookup('file', '/path/to/config.scf') }}\"\n    provider:\n      server: lb.mydomain.com\n      password: secret\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_configsync_action": {
    "doc": {
      "description": "Allows running different config-sync actions. These actions allow you to manually sync your configuration across multiple BIG-IPs when those devices are in an HA pair.",
      "has_action": false,
      "notes": "Requires the objectpath Python package on the host. This is as easy as running C(pip install objectpath).\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "device_group": {
          "aliases": [],
          "description": "The device group on which you want to perform config-sync actions.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "overwrite_config": {
          "aliases": [],
          "description": "Indicates the sync operation overwrites the configuration on the target.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "sync_device_to_group": {
          "aliases": [],
          "description": "Specifies the system synchronizes configuration data from this device to other members of the device group. In this case, the device will do a \"push\" to all the other devices in the group. This option is mutually exclusive with the C(sync_group_to_device) option.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "sync_group_to_device": {
          "aliases": [],
          "description": "Specifies the system synchronizes configuration data from the device with the most recent configuration. In this case, the device will do a \"pull\" from the most recently updated device. This option is mutually exclusive with the C(sync_device_to_group) options.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Perform different actions related to config-sync",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Sync configuration from device to group\n  bigip_configsync_action:\n    device_group: foo-group\n    sync_device_to_group: yes\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Sync configuration from most recent device to the current host\n  bigip_configsync_action:\n    device_group: foo-group\n    sync_group_to_device: yes\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Perform an initial sync of a device to a new device group\n  bigip_configsync_action:\n    device_group: new-device-group\n    sync_device_to_group: yes\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_data_group": {
    "doc": {
      "description": "Allows for managing data groups on a BIG-IP. Data groups provide a way to store collections of values on a BIG-IP for later use in things such as LTM rules, iRules, and ASM policies.",
      "has_action": false,
      "notes": "This module does NOT support atomic updates of data group members in a type C(internal) data group.\nAddition/Deletion of data group members in a type C(external) data group should be done through Ansible modules only, if changes are made manually, the Ansible module will not detect those changes.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "delete_data_group_file": {
          "aliases": [],
          "description": "When C(yes), ensures the remote data group file is deleted.\nThis parameter is only relevant when C(state) is C(absent) and C(internal) is C(no).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the data group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "external_file_name": {
          "aliases": [],
          "description": "When creating a new data group, this specifies the file name you want to give an external data group file on the BIG-IP.\nThis parameter is ignored when C(internal) is C(yes).\nThis parameter can be used to select an existing data group file to use with an existing external data group.\nIf this value is not provided, it will be given the value specified in C(name) and, therefore, match the name of the data group.\nThis value may only contain letters, numbers, underscores, dashes, or a period.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "internal": {
          "aliases": [],
          "description": "The type of this data group.\nYou should only consider setting this value in cases where you know exactly what you are doing, B(or), you are working with a pre-existing internal data group.\nBe aware that if you deliberately force this parameter to C(yes), and you have a either a large number of records or a large total records size, this large amount of data will be reflected in your BIG-IP configuration. This can lead to B(long) system configuration load times due to parsing and verifying the large configuration.\nThere is a limit of either 4 megabytes or 65,000 records (whichever is more restrictive) for uploads when this parameter is C(yes).\nThis value cannot be changed once the data group is created.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the data group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "records": {
          "aliases": [],
          "description": "Specifies the records you want to add to a data group.\nIf you have a large number of records, we recommend you use C(records_src) instead of typing all those records here.\nThe technical limit of either the number of records, or the total size of all records. Varies with the size of the total resources on your system; in particular, RAM.\nWhen C(internal) is C(no), at least one record must be specified in either C(records) or C(records_src).\nWhen C(type) is: C(ip), C(address), C(addr) if the addresses use a non-default route domain, they must be explicit about it, meaning they must contain a route domain notation C(%) e.g. 10.10.1.1%11. This is true regardless if the data group resides in a partition or not.",
          "type": "list",
          "required": false,
          "elements": "raw",
          "suboptions": {
            "key": {
              "aliases": [],
              "description": "The key describing the record in the data group.\nThe key will be used for validation of the C(type) parameter to this module.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "value": {
              "aliases": [],
              "description": "The value of the key describing the record in the data group.",
              "type": "raw",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "records_src": {
          "aliases": [],
          "description": "Path to a file with records in it.\nThe file should be well-formed. This means it includes records, one per line, that resemble the following format \"key separator value\". For example, C(foo := bar).\nBIG-IP is strict about this format, but this module is a bit more lax. It will allow you to include arbitrary amounts (including none) of empty space on either side of the separator. For an illustration of this, see the Examples section.\nRecord keys are limited in length to no more than 65520 characters.\nValues of record keys are limited in length to no more than 65520 characters.\nThe total number of records you can have in your BIG-IP is limited by the memory of the BIG-IP itself.\nThe format of this content is slightly different depending on whether you specify a C(type) of C(address), C(integer), or C(string). See the examples section for examples of the different types of payload formats that are expected in your data group file.\nWhen C(internal) is C(no), at least one record must be specified in either C(records) or C(records_src).",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "separator": {
          "aliases": [],
          "description": "When specifying C(records_src), this is the string of characters that will be used to break apart entries in the C(records_src) into key/value pairs.\nBy default, the value of this parameter is C(:=).\nThis value cannot be changed once it is set.\nThis parameter is only relevant when C(internal) is C(no). It will be ignored otherwise.",
          "default": ":=",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(state) is C(present), ensures the data group exists.\nWhen C(state) is C(absent), ensures the data group is removed.\nThe use of state in this module refers to the entire data group, not its members.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "The type of records in this data group.\nThis parameter is important because it causes the BIG-IP to store your data in different ways to optimize access to it. For example, it would be wrong to specify a list of records containing IP addresses, but label them as a C(string) type.\nThis value cannot be changed once the data group is created.",
          "default": "string",
          "type": "str",
          "required": false,
          "choices": [
            "address",
            "addr",
            "ip",
            "string",
            "integer",
            "int"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage data groups on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a data group of addresses\n  bigip_data_group:\n    name: foo\n    internal: yes\n    records:\n      - key: 0.0.0.0/32\n        value: External_NAT\n      - key: 10.10.10.10\n        value: No_NAT\n    type: address\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create a data group of strings\n  bigip_data_group:\n    name: foo\n    internal: yes\n    records:\n      - key: caddy\n        value: \"\"\n      - key: cafeteria\n        value: \"\"\n      - key: cactus\n        value: \"\"\n    type: string\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create a data group of IP addresses from a file\n  bigip_data_group:\n    name: foo\n    records_src: /path/to/dg-file\n    type: address\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Update an existing internal data group of strings\n  bigip_data_group:\n    name: foo\n    internal: yes\n    records:\n      - key: caddy\n        value: \"\"\n      - key: cafeteria\n        value: \"\"\n      - key: cactus\n        value: \"\"\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Show the data format expected for records_content - address 1\n  copy:\n    dest: /path/to/addresses.txt\n    content: |\n      network 10.0.0.0 prefixlen 8 := \"Network1\",\n      network 172.16.0.0 prefixlen 12 := \"Network2\",\n      network 192.168.0.0 prefixlen 16 := \"Network3\",\n      network 2402:9400:1000:0:: prefixlen 64 := \"Network4\",\n      host 192.168.20.1 := \"Host1\",\n      host 172.16.1.1 := \"Host2\",\n      host 172.16.1.1 := \"Host3\",\n      host 2001:0db8:85a3:0000:0000:8a2e:0370:7334 := \"Host4\",\n      host 2001:0db8:85a3:0000:0000:8a2e:0370:7334 := \"Host5\"\n\n- name: Show the data format expected for records_content - address 2\n  copy:\n    dest: /path/to/addresses.txt\n    content: |\n      10.0.0.0/8 := \"Network1\",\n      172.16.0.0/12 := \"Network2\",\n      192.168.0.0/16 := \"Network3\",\n      2402:9400:1000:0::/64 := \"Network4\",\n      192.168.20.1 := \"Host1\",\n      172.16.1.1 := \"Host2\",\n      172.16.1.1/32 := \"Host3\",\n      2001:0db8:85a3:0000:0000:8a2e:0370:7334 := \"Host4\",\n      2001:0db8:85a3:0000:0000:8a2e:0370:7334/128 := \"Host5\"\n\n- name: Show the data format expected for records_content - string\n  copy:\n    dest: /path/to/strings.txt\n    content: |\n      a := alpha,\n      b := bravo,\n      c := charlie,\n      x := x-ray,\n      y := yankee,\n      z := zulu,\n\n- name: Show the data format expected for records_content - integer\n  copy:\n    dest: /path/to/integers.txt\n    content: |\n      1 := bar,\n      2 := baz,\n      3,\n      4,\n"
  },
  "f5networks.f5_modules.bigip_device_auth": {
    "doc": {
      "description": "Manage the system authentication configuration. This module can assist in configuring a number of different system authentication types. Note that this module can not be used to configure APM authentication types.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "accounting": {
          "aliases": [],
          "description": "Specifies how the system returns accounting information, such as which services users access and the amount of network resources they consume, to the TACACS+ server.\nWhen C(send-to-first-server), specifies the system transmits accounting information back to the first available TACACS+ server in the list.\nWhen C(send-to-all-servers), specifies the system transmits accounting information back to all TACACS+ servers in the list.\nThis parameter is supported by the C(tacacs) type.",
          "type": "str",
          "required": false,
          "choices": [
            "send-to-first-server",
            "send-to-all-servers"
          ],
          "suboptions": {}
        },
        "authentication": {
          "aliases": [],
          "description": "Specifies the process the system employs when sending authentication requests.\nWhen C(use-first-server), specifies the system sends authentication attempts only to the first server in the list.\nWhen C(use-all-servers), specifies the system sends an authentication request to each server until authentication succeeds, or until the system has sent a request to all servers in the list.\nThis parameter is supported by the C(tacacs) type.",
          "type": "str",
          "required": false,
          "choices": [
            "use-first-server",
            "use-all-servers"
          ],
          "suboptions": {}
        },
        "protocol_name": {
          "aliases": [],
          "description": "Specifies the protocol associated with the value specified in C(service_name), which is a subset of the associated service being used for client authorization or system accounting.\nNote that the majority of TACACS+ implementations are of protocol type C(ip), so try that first.",
          "type": "str",
          "required": false,
          "choices": [
            "lcp",
            "ip",
            "ipx",
            "atalk",
            "vines",
            "lat",
            "xremote",
            "tn3270",
            "telnet",
            "rlogin",
            "pad",
            "vpdn",
            "ftp",
            "http",
            "deccp",
            "osicp",
            "unknown"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "secret": {
          "aliases": [],
          "description": "Secret key used to encrypt and decrypt packets sent or received from the server.\nB(Do not) use the pound/hash sign in the secret for TACACS+ servers.\nWhen configuring TACACS+ auth for the first time, this value is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "servers": {
          "aliases": [],
          "description": "Specifies a list of the IPv4 addresses for servers using the Terminal Access Controller Access System (TACACS)+ protocol with which the system communicates to obtain authorization data.\nFor each address, an alternate TCP port number may be optionally specified by specifying the C(port) key.\nIf no port number is specified, the default port C(49163) is used.\nThis parameter is supported by the C(tacacs) type.",
          "type": "raw",
          "required": false,
          "suboptions": {
            "address": {
              "aliases": [],
              "description": "The IP address of the server.\nThis field is required, unless you are specifying a simple list of servers. In that case, the simple list can specify server IPs. See the examples for more clarification.",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port of the server.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "service_name": {
          "aliases": [],
          "description": "Specifies the name of the service the user is requesting to be authorized to use.\nIdentifying what the user is asking to be authorized for enables the TACACS+ serverc to behave differently for different types of authorization requests.\nThis setting is required when configuring this form of system authentication.\nNote that the majority of TACACS+ implementations are of service type C(ppp), so try that first.",
          "type": "str",
          "required": false,
          "choices": [
            "slip",
            "ppp",
            "arap",
            "shell",
            "tty-daemon",
            "connection",
            "system",
            "firewall"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the authentication configuration on the system.\nWhen C(present), guarantees the system is configured for the specified C(type).\nWhen C(absent), sets the system auth source back to C(local).",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "The authentication type to manage with this module.\nTake special note that the parameters supported by this module will vary depending on the C(type) that you are configuring.\nAt this time, this module only supports a subset of the total available auth types.",
          "type": "str",
          "required": true,
          "choices": [
            "tacacs",
            "local"
          ],
          "suboptions": {}
        },
        "update_secret": {
          "aliases": [],
          "description": "C(always) will allow updating secrets if the user chooses to do so.\nC(on_create) will only set the secret when a C(use_auth_source) is C(yes) and TACACS+ is not currently the auth source.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_create"
          ],
          "suboptions": {}
        },
        "use_for_auth": {
          "aliases": [],
          "description": "Specifies whether or not this auth source is put in use on the system.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage system authentication on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Set the system auth to TACACS+, default server port\n  bigip_device_auth:\n    type: tacacs\n    authentication: use-all-servers\n    accounting: send-to-all-servers\n    protocol_name: ip\n    secret: secret\n    servers:\n      - 10.10.10.10\n      - 10.10.10.11\n    service_name: ppp\n    state: present\n    use_for_auth: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Set the system auth to TACACS+, override server port\n  bigip_device_auth:\n    type: tacacs\n    authentication: use-all-servers\n    protocol_name: ip\n    secret: secret\n    servers:\n      - address: 10.10.10.10\n        port: 1234\n      - 10.10.10.11\n    service_name: ppp\n    use_for_auth: yes\n    state: present\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_device_auth_ldap": {
    "doc": {
      "description": "Manage LDAP device authentication settings on BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "bind_dn": {
          "aliases": [],
          "description": "Specifies the distinguished name for the Active Directory or LDAP server user ID.\nThe BIG-IP client authentication module does not support Active Directory or LDAP servers that do not perform bind referral when authenticating referred accounts.\nTherefore, if you plan to use Active Directory or LDAP as your authentication source and want to use referred accounts, make sure your servers perform bind referral.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "bind_password": {
          "aliases": [],
          "description": "Specifies a password for the Active Directory or LDAP server user ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ca_cert": {
          "aliases": [
            "ssl_ca_cert"
          ],
          "description": "Specifies the name of an SSL certificate from a certificate authority (CA).\nTo remove this value, use the reserved value C(none).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "check_member_attr": {
          "aliases": [],
          "description": "Checks the member attribute of the user in the remote LDAP or AD group.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [
            "ssl_client_cert"
          ],
          "description": "Specifies the name of an SSL client certificate.\nTo remove this value, use the reserved value C(none).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [
            "ssl_client_key"
          ],
          "description": "Specifies the name of an SSL client key.\nTo remove this value, use the reserved value C(none).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fallback_to_local": {
          "aliases": [],
          "description": "Specifies the system uses the Local authentication method if the remote authentication method is not available.\nOption only available on C(TMOS 13.0.0) and above.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "login_ldap_attr": {
          "aliases": [],
          "description": "Specifies the LDAP directory attribute containing the local user name that is associated with the selected directory entry.\nIf this parameter is not specified, when configuring LDAP device authentication for the first time, the default port is C(samaccountname).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Specifies the port the system uses for access to the remote host server.\nWhen configuring LDAP device authentication for the first time, the default port is C(389) if this parameter is not specified.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "remote_directory_tree": {
          "aliases": [],
          "description": "Specifies the file location (tree) of the user authentication database on the server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "Specifies the level of the remote Active Directory or LDAP directory the system should search for the user authentication.",
          "type": "str",
          "required": false,
          "choices": [
            "sub",
            "one",
            "base"
          ],
          "suboptions": {}
        },
        "servers": {
          "aliases": [],
          "description": "Specifies the LDAP servers the system must use to obtain authentication information. You must specify a server when you create an LDAP configuration object.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "source_type": {
          "aliases": [],
          "description": "Specifies the auth source for user authentication, should be used with C(use_for_auth).",
          "default": "ldap",
          "type": "str",
          "required": false,
          "choices": [
            "ldap",
            "active-directory"
          ],
          "version_added": "1.13.0",
          "suboptions": {}
        },
        "ssl": {
          "aliases": [],
          "description": "Specifies whether the system uses an SSL port to communicate with the LDAP server.",
          "type": "str",
          "required": false,
          "choices": [
            "yes",
            "no",
            "start-tls"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the device authentication method exists.\nWhen C(absent), ensures the device authentication method does not exist.\nWhen C(state) equal to (absent), before you can delete the LDAP configuration, the system must set auth to some alternative. The system ships with a system auth called C(local), therefore the system authentication type will be set to that value on the device upon removal of LDAP configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "C(always) will always update the C(bind_password).\nC(on_create) will only set the C(bind_password) for newly created authentication mechanisms.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_create"
          ],
          "suboptions": {}
        },
        "use_for_auth": {
          "aliases": [],
          "description": "Specifies whether or not this auth source is put in use on the system.\nIf C(yes), the module sets the current system auth type to the value of C(ldap).\nIf C(no), the module sets the authentication type to C(local), similar behavior to when C(state) is C(absent), without removing the configured LDAP resource.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "user_template": {
          "aliases": [],
          "description": "Specifies the distinguished name of the user who is logging on.\nYou specify the template as a variable that the system replaces with user-specific information during the logon attempt.\nFor example, you could specify a user template such as C(%s@siterequest.com) or C(uxml:id=%s,ou=people,dc=siterequest,dc=com).\nWhen a user attempts to log on, the system replaces C(%s) with the name the user specified in the Basic Authentication dialog box, and passes that as the distinguished name for the bind operation.\nThe system passes the associated password as the password for the bind operation.\nThis field can contain only one C(%s) and cannot contain any other format specifiers.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [
            "ssl_check_peer"
          ],
          "description": "Specifies whether the system checks an SSL peer, as a result of which the system requires and verifies the server certificate.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage LDAP device authentication settings on BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create an LDAP authentication object\n  bigip_device_auth_ldap:\n    name: foo\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_device_auth_radius": {
    "doc": {
      "description": "Module creates a RADIUS configuration.",
      "has_action": false,
      "notes": "This module is based on the command line (TMSH) configuration capabilities of RADIUS authentication, not the GUI.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "accounting_bug": {
          "aliases": [],
          "description": "Enables or disables validation of the accounting response vector.\nThis option should be necessary only on older servers.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fallback_to_local": {
          "aliases": [],
          "description": "Specifies the system uses the Local authentication method if the remote authentication method is not available.\nOption only available on C(TMOS 13.0.0) and above.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "retries": {
          "aliases": [],
          "description": "Specifies the number of authentication retries the BIG-IP Local Traffic Management system allows before authentication fails.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "servers": {
          "aliases": [],
          "description": "Specifies the names of RADIUS servers for use with RADIUS authentication profiles.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_type": {
          "aliases": [],
          "description": "Specifies the type of service requested from the RADIUS server. The default value is C(authenticate-only).",
          "type": "str",
          "required": false,
          "choices": [
            "authenticate-only",
            "login",
            "default",
            "framed",
            "callback-login",
            "callback-framed",
            "outbound",
            "administrative",
            "nas-prompt",
            "callback-nas-prompt",
            "call-check",
            "callback-administrative"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(state) is C(present), ensures the RADIUS server exists.\nWhen C(state) is C(absent), ensures the RADIUS server is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "use_for_auth": {
          "aliases": [],
          "description": "Specifies whether or not this auth source is put in use on the system.\nIf C(yes), the module sets the current system auth type to the value of C(radius).\nIf C(no), the module sets the authentication type to C(local), similar behavior to when C(state) is C(absent), without removing the configured RADIUS resource.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages RADIUS auth configuration on a BIG-IP device",
      "version_added": "1.3.0"
    },
    "examples": "\n- name: Create an RADIUS device configuration\n  bigip_device_auth_radius:\n    servers:\n      - \"ansible_test1\"\n      - \"ansible_test2\"\n    retries: 3\n    service_type: authenticate-only\n    accounting_bug: no\n    use_for_auth: yes\n    fallback_to_local: yes\n    state: present\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Update an RADIUS device configuration\n  bigip_device_auth_radius:\n    retries: 5\n    service_type: administrative\n    accounting_bug: yes\n    state: present\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Delete RADIUS auth configuration\n  bigip_device_auth_radius:\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_device_auth_radius_server": {
    "doc": {
      "description": "Manages a device's RADIUS server configuration.\nUsed in tandem with the C(bigip_device_auth_radius) module.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "The description of the RADIUS server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "The IP address of the server.\nThis parameter is mandatory when creating a new resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the RADIUS server to manage.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "The port of the server.\nValid range of values is between C(0) and C(65535) inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "secret": {
          "aliases": [],
          "description": "Specifies the secret used for accessing RADIUS server.\nThis parameter is mandatory when creating a new resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(state) is C(present), ensures the RADIUS server exists.\nWhen C(state) is C(absent), ensures the RADIUS server is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "Specifies the timeout value in seconds.\nValid range of values is between C(1) and C(60) inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "update_secret": {
          "aliases": [],
          "description": "C(always) will update passwords if the C(secret) is specified.\nC(on_create) will only set the password for newly created servers.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_create"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages the RADIUS server configuration of the device",
      "version_added": "1.3.0"
    },
    "examples": "\n- name: Create a RADIUS server configuration\n  bigip_device_auth_radius_server:\n    name: \"ansible_test\"\n    ip: \"1.1.1.1\"\n    port: 1812\n    secret: \"secret\"\n    timeout: 5\n    update_secret: on_create\n    state: present\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Update RADIUS server configuration\n  bigip_device_auth_radius_server:\n    name: \"ansible_test\"\n    ip: \"10.10.10.1\"\n    description: \"this is a test\"\n    port: 1813\n    timeout: 10\n    state: present\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove RADIUS server configuration\n  bigip_device_auth_radius_server:\n    name: \"ansible_test\"\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_device_certificate": {
    "doc": {
      "description": "Module used to create and/or renew self-signed device certificates for BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "add_to_trusted": {
          "aliases": [],
          "description": "Specified if the certificate should be added to the trusted client and server certificate files.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "cert_name": {
          "aliases": [],
          "description": "Specifies the full name of the certificate file.\nIf the name is not default C(server.crt), the module will configure C(httpd) to use them prior to restarting the C(httpd) daemon.",
          "default": "server.crt",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "days_valid": {
          "aliases": [],
          "description": "Specifies the interval for which the self-signed certificate is valid.\nThe maximum value is 25 years: C(9125) days",
          "type": "int",
          "required": true,
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "When C(yes), will update or overwrite the existing certificate when it is not expired on the device.\nWhen C(no), the certificate will only be updated/overwritten if expired.\nGenerally should be C(yes) only in cases where you need to update certificate that is about to expire.\nThis option is also needed when generating a new certificate to replace non-expired one.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "issuer": {
          "aliases": [],
          "description": "Certificate properties, required when generating new certificates.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "common_name": {
              "aliases": [],
              "description": "Specifies the Common Name attribute for the certificate.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "country": {
              "aliases": [],
              "description": "Specifies the Country name attribute for the certificate.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "division": {
              "aliases": [],
              "description": "Specifies the department name attribute for the certificate.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "email": {
              "aliases": [],
              "description": "Specifies the email address of the domain administrator.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "locality": {
              "aliases": [],
              "description": "Specifies the city or town name for the certificate.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "organization": {
              "aliases": [],
              "description": "Specifies the Organization attribute for the certificate.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "Specifies the State or Province attribute for the certificate.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "key_name": {
          "aliases": [],
          "description": "Specifies the full name of the key file.\nIf the name is not default C(server.key), the module will configure C(httpd) to use them prior to restarting the C(httpd) daemon.",
          "default": "server.key",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key_size": {
          "aliases": [],
          "description": "Specifies the desired key size in bits.\nMandatory option when generating a new certificate.",
          "default": "2048",
          "type": "int",
          "required": false,
          "choices": [
            "512",
            "1024",
            "2048",
            "4096"
          ],
          "suboptions": {}
        },
        "new_cert": {
          "aliases": [],
          "description": "Specified if the module should generate a new certificate.\nWhen C(yes), the device certificate and key will be replaced.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "22",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports.\nYou may omit this option by setting the environment variable C(ANSIBLE_NET_SSH_KEYFILE).",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "cli",
              "type": "str",
              "required": false,
              "choices": [
                "cli"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "short_description": "Manage self-signed device certificates",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Update expired certificate\n  bigip_device_certificate:\n    days_valid: 365\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n      transport: cli\n      server_port: 22\n  delegate_to: localhost\n\n- name: Update expired certificate non-default names\n  bigip_device_certificate:\n    days_valid: 60\n    cert_name: custom.crt\n    key_name: custom.key\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n      transport: cli\n      server_port: 22\n  delegate_to: localhost\n\n- name: Force update not expired certificate\n  bigip_device_certificate:\n    days_valid: 365\n    force: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n      transport: cli\n      server_port: 22\n  delegate_to: localhost\n\n- name: Create a new certificate to replace expired certificate\n  bigip_device_certificate:\n    days_valid: 365\n    new_cert: yes\n    issuer:\n      country: US\n      state: WA\n      common_name: foobar.foo.local\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n      transport: cli\n      server_port: 22\n  delegate_to: localhost\n\n- name: Force create a new custom named certificate to replace not expired certificate\n  bigip_device_certificate:\n    days_valid: 365\n    cert_name: custom.crt\n    key_name: custom.key\n    new_cert: yes\n    force: yes\n    issuer:\n      country: US\n      state: WA\n      common_name: foobar.foo.local\n    key_size: 2048\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n      transport: cli\n      server_port: 22\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_device_connectivity": {
    "doc": {
      "description": "Manages device IP configuration settings for High Availability (HA) on a BIG-IP. Each BIG-IP device has synchronization and failover connectivity information (IP addresses) that you define as part of HA pairing or clustering. This module allows you to configure that information.",
      "has_action": false,
      "notes": "This module is primarily used as a component of configuring HA pairs of BIG-IP devices.\nRequires BIG-IP >= 12.0.0\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "cluster_mirroring": {
          "aliases": [],
          "description": "Specifies whether mirroring occurs within the same cluster or between different clusters on a multi-bladed system.\nThis parameter is only supported on platforms that have multiple blades, such as Viprion hardware. It is not supported on Virtual Editions (VEs).",
          "type": "str",
          "required": false,
          "choices": [
            "between-clusters",
            "within-cluster"
          ],
          "suboptions": {}
        },
        "config_sync_ip": {
          "aliases": [],
          "description": "Local IP address the system uses for ConfigSync operations.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "failover_multicast": {
          "aliases": [],
          "description": "When C(yes), ensures the Failover Multicast configuration is enabled and, if no further multicast configuration is provided, ensures that C(multicast_interface), C(multicast_address) and C(multicast_port) are the defaults specified in the description of each option.\nWhen C(no), ensures that Failover Multicast configuration is disabled.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "mirror_primary_address": {
          "aliases": [],
          "description": "Specifies the primary IP address for the system to use to mirror connections.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mirror_secondary_address": {
          "aliases": [],
          "description": "Specifies the secondary IP address for the system to use to mirror connections.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "multicast_address": {
          "aliases": [],
          "description": "IP address for the system to send multicast messages associated with failover.\nWhen C(failover_multicast) is C(yes) and this option is not provided, a default of C(224.0.0.245) will be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "multicast_interface": {
          "aliases": [],
          "description": "Interface over which the system sends multicast messages associated with failover.\nWhen C(failover_multicast) is C(yes) and this option is not provided, a default of C(eth0) will be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "multicast_port": {
          "aliases": [],
          "description": "Port for the system to send multicast messages associated with failover.\nWhen C(failover_multicast) is C(yes) and this option is not provided, a default of C(62960) will be used. This value must be between 0 and 65535.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "unicast_failover": {
          "aliases": [],
          "description": "Addresses to use for failover operations. Options C(address) and C(port) are supported with dictionary structure, where C(address) is the local IP address the system uses for failover operations.\nPort specifies the port the system uses for failover operations. If C(port) is not specified, the default value C(1026) will be used.\nIf you are specifying the (recommended) management IP address, use 'management-ip' in the address field.\nWhen the value is set to empty list, the parameter value is removed from device.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        }
      },
      "short_description": "Manages device IP configuration settings for HA on a BIG-IP.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Configure device connectivity for standard HA pair\n  bigip_device_connectivity:\n    config_sync_ip: 10.1.30.1\n    mirror_primary_address: 10.1.30.1\n    unicast_failover:\n      - address: management-ip\n      - address: 10.1.30.1\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_device_dns": {
    "doc": {
      "description": "Manage the DNS settings on a BIG-IP device.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "cache": {
          "aliases": [],
          "description": "Specifies whether the system caches DNS lookups or performs the operation each time a lookup is needed. Note this applies only to Access Policy Manager (APM) features, such as ACLs, web application rewrites, and authentication.",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled",
            "enable",
            "disable"
          ],
          "suboptions": {}
        },
        "ip_version": {
          "aliases": [],
          "description": "Specifies whether the DNS specifies IP addresses using IPv4 or IPv6.",
          "type": "int",
          "required": false,
          "choices": [
            "4",
            "6"
          ],
          "suboptions": {}
        },
        "name_servers": {
          "aliases": [],
          "description": "A list of name servers the system uses to validate DNS lookups",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "search": {
          "aliases": [],
          "description": "A list of domains the system searches for local domain lookups, to resolve local host names.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the variable on the system. When C(present), guarantees an existing variable is set to C(value).",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage DNS settings on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Set the DNS settings on the BIG-IP\n  bigip_device_dns:\n    name_servers:\n      - 208.67.222.222\n      - 208.67.220.220\n    search:\n      - localdomain\n      - lab.local\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_device_group": {
    "doc": {
      "description": "Managing device groups allows you to create HA pairs and clusters of BIG-IP devices. Usage of this module should be done in conjunction with the C(bigip_configsync_actions) to sync the configuration across the pair or cluster if auto-sync is disabled.",
      "has_action": false,
      "notes": "This module is primarily used as a component of configuring HA pairs of BIG-IP devices.\nRequires BIG-IP >= 12.1.x.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "auto_sync": {
          "aliases": [],
          "description": "Indicates whether configuration synchronization occurs manually or automatically.\nWhen creating a new device group, this option will default to C(no).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the device group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "full_sync": {
          "aliases": [],
          "description": "Specifies whether the system synchronizes the entire configuration during synchronization operations.\nWhen C(no), the system performs incremental synchronization operations, based on the cache size specified in C(max_incremental_sync_size).\nIncremental configuration synchronization is a mechanism for synchronizing a device-group's configuration among its members, without requiring a full configuration load for each configuration change.\nIn order for this to work, all devices in the device-group must initially agree on the configuration. Typically this requires at least one full configuration load to each device.\nWhen creating a new device group, this option will default to C(no).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "max_incremental_sync_size": {
          "aliases": [],
          "description": "Specifies the size of the changes cache for incremental sync.\nFor example, using the default, if you make more than 1024 KB worth of incremental changes, the system performs a full synchronization operation.\nUsing incremental synchronization operations can reduce the per-device sync/load time for configuration changes.\nThis setting is relevant only when C(full_sync) is C(no).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the device group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network_failover": {
          "aliases": [],
          "description": "Indicates whether failover occurs over the network or is hard-wired.\nThis parameter is only valid for C(type)s that are C(sync-failover).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "save_on_auto_sync": {
          "aliases": [],
          "description": "When performing an auto-sync, specifies whether the configuration will be saved or not.\nWhen C(no), only the running configuration will be changed on the device(s) being synced to.\nWhen creating a new device group, this option will default to C(no).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(state) is C(present), ensures the device group exists.\nWhen C(state) is C(absent), ensures  the device group is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Specifies the type of group.\nA C(sync-failover) device group contains devices that synchronize their configuration data and fail over to one another when a device becomes unavailable.\nA C(sync-only) device group has no such failover. When creating a new device group, this option will default to C(sync-only).\nThis setting cannot be changed once it has been set.",
          "type": "str",
          "required": false,
          "choices": [
            "sync-failover",
            "sync-only"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage device groups on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a sync-only device group\n  bigip_device_group:\n    name: foo-group\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create a sync-only device group with auto-sync enabled\n  bigip_device_group:\n    name: foo-group\n    auto_sync: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_device_group_member": {
    "doc": {
      "description": "Manages members in a device group. Members in a device group can only be added or removed, never updated. This is because the members are identified by unique name values and changing that name would invalidate the uniqueness.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "device_group": {
          "aliases": [],
          "description": "The device group to which you want to add the member.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the device that you want to add to the device group. Often this will be the hostname of the device. This member must be trusted by the device already. Trusting can be done with the C(bigip_device_trust) module and the C(peer_hostname) option to that module.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the device group member exists.\nWhen C(absent), ensures the device group member is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages members in a device group",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add the current device to the \"device_trust_group\" device group\n  bigip_device_group_member:\n    name: \"{{ inventory_hostname }}\"\n    device_group: device_trust_group\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Add the hosts in the current scope to \"device_trust_group\"\n  bigip_device_group_member:\n    name: \"{{ item }}\"\n    device_group: device_trust_group\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  loop: \"{{ hostvars.keys() }}\"\n  run_once: true\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_device_ha_group": {
    "doc": {
      "description": "Manage HA (High Availability) group settings on a BIG-IP system.",
      "has_action": false,
      "notes": "This module does not support atomic removal of HA group objects.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "active_bonus": {
          "aliases": [],
          "description": "Specifies the extra value to be added to the HA score of the active unit.\nWhen system creates HA group this value is set to C(10) by the system.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "User created HA group description.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enable": {
          "aliases": [],
          "description": "When set to C(no), the system disables the HA score feature.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the HA group to create/manage.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "pools": {
          "aliases": [],
          "description": "Specifies pools to contribute to the HA score.\nThe pools must exist on the BIG-IP, otherwise the operation will fail.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "attribute": {
              "aliases": [],
              "description": "The pool attribute that contributes to the HA score.",
              "default": "percent-up-members",
              "type": "str",
              "required": false,
              "choices": [
                "percent-up-members"
              ],
              "suboptions": {}
            },
            "minimum_threshold": {
              "aliases": [],
              "description": "Below this value, the selected pool attribute contributes nothing to the HA score.\nThis value must be greater than the number of pool members present in the pool.\nIn TMOS versions 12.x this attribute is named C(threshold), however it has been deprecated in versions 13.x and above.\nSpecifying this attribute in the module running against v12.x will keep the same behavior as if C(threshold) option was set.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "partition": {
              "aliases": [],
              "description": "Device partition where the specified pool exists.\nThis parameter is ignored if the C(pool_name) is specified in full path format.",
              "default": "Common",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "pool_name": {
              "aliases": [],
              "description": "The pool name which is used to contribute to the HA score.\nReferencing the pool can be done in the full path format for example, C(/Common/pool_name).\nWhen the pool is referenced in full path format, the C(partition) parameter is ignored.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "weight": {
              "aliases": [],
              "description": "Maximum value the selected pool attribute contributes to the HA score.",
              "type": "int",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "trunks": {
          "aliases": [],
          "description": "Specifies trunks to contribute to the HA score.\nThe trunks must exist on the BIG-IP, otherwise the operation will fail.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "attribute": {
              "aliases": [],
              "description": "The trunk attribute that contributes to the HA score.",
              "default": "percent-up-members",
              "type": "str",
              "required": false,
              "choices": [
                "percent-up-members"
              ],
              "suboptions": {}
            },
            "minimum_threshold": {
              "aliases": [],
              "description": "Below this value the selected trunk attribute contributes nothing to the HA score.\nThis value must be greater than the number of trunk members.\nIn TMOS versions 12.x this attribute is named C(threshold), however it has been deprecated in versions 13.x and above.\nSpecifying this attribute in the module running against v12.x will keep the same behavior as if C(threshold) option was set.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "trunk_name": {
              "aliases": [],
              "description": "The trunk name used to contribute to the HA score.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "weight": {
              "aliases": [],
              "description": "Maximum value the selected trunk attribute contributes to the HA score.",
              "type": "int",
              "required": true,
              "suboptions": {}
            }
          }
        }
      },
      "short_description": "Manage HA group settings on a BIG-IP system",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create HA group no members, not active\n  bigip_device_ha_group:\n    name: foo_ha\n    description: empty_foo\n    active_bonus: 20\n    enable: no\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create HA group with pools and trunks\n  bigip_device_ha_group:\n    name: baz_ha\n    description: non_empty_baz\n    active_bonus: 15\n    pools:\n      - pool_name: foopool\n        weight: 30\n        minimum_threshold: 1\n    trunks:\n      - trunk_name: footrunk\n        weight: 70\n        minimum_threshold: 2\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create HA group pools using full_path format\n  bigip_device_ha_group:\n    name: bar_ha\n    description: non_empty_bar\n    active_bonus: 12\n    pools:\n      - pool_name: /Baz/foopool\n        weight: 30\n        minimum_threshold: 1\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove HA group\n  bigip_device_ha_group:\n    name: foo_ha\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_device_httpd": {
    "doc": {
      "description": "Manages HTTPD related settings on the BIG-IP. These settings are useful when you want to set GUI timeouts and other TMUI related settings.",
      "has_action": false,
      "notes": "Requires the B(requests) Python package on the host. This is as easy as running C(pip install requests).\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "allow": {
          "aliases": [],
          "description": "If you have enabled HTTPD access, specifies the IP address or address range for other systems that can communicate with this system.\nTo specify all addresses, use the value C(all).\nAn IP address can be specified, such as 172.27.1.10.\nIP ranges can be specified, such as 172.27.*.* or 172.27.0.0/255.255.0.0.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "auth_name": {
          "aliases": [],
          "description": "Sets the BIG-IP authentication realm name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "auth_pam_dashboard_timeout": {
          "aliases": [],
          "description": "Sets whether or not the BIG-IP dashboard will timeout.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_pam_idle_timeout": {
          "aliases": [],
          "description": "Sets the GUI timeout for automatic logout, in seconds.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "auth_pam_validate_ip": {
          "aliases": [],
          "description": "Sets the authPamValidateIp setting.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fast_cgi_timeout": {
          "aliases": [],
          "description": "Sets the timeout of FastCGI.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "hostname_lookup": {
          "aliases": [],
          "description": "Sets whether or not to display the hostname, if possible.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "log_level": {
          "aliases": [],
          "description": "Sets the minimum HTTPD log level.",
          "type": "str",
          "required": false,
          "choices": [
            "alert",
            "crit",
            "debug",
            "emerg",
            "error",
            "info",
            "notice",
            "warn"
          ],
          "suboptions": {}
        },
        "max_clients": {
          "aliases": [],
          "description": "Sets the maximum number of clients that can connect to the GUI at once.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "redirect_http_to_https": {
          "aliases": [],
          "description": "Whether or not to redirect HTTP requests to the GUI to HTTPS.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssl_cipher_suite": {
          "aliases": [],
          "description": "Specifies the ciphers the system uses.\nThe values in the suite are separated by colons (:).\nCan be specified in either a string or list form. The list form is the recommended way to provide the cipher suite. See examples for usage.\nUse the value C(default) to set the cipher suite to the system default. This value is equivalent to specifying a list of C(ECDHE-RSA-AES128-GCM-SHA256, ECDHE-RSA-AES256-GCM-SHA384,ECDHE-RSA-AES128-SHA,ECDHE-RSA-AES256-SHA, ECDHE-RSA-AES128-SHA256,ECDHE-RSA-AES256-SHA384,ECDHE-ECDSA-AES128-GCM-SHA256, ECDHE-ECDSA-AES256-GCM-SHA384,ECDHE-ECDSA-AES128-SHA,ECDHE-ECDSA-AES256-SHA, ECDHE-ECDSA-AES128-SHA256,ECDHE-ECDSA-AES256-SHA384,AES128-GCM-SHA256, AES256-GCM-SHA384,AES128-SHA,AES256-SHA,AES128-SHA256,AES256-SHA256, ECDHE-RSA-DES-CBC3-SHA,ECDHE-ECDSA-DES-CBC3-SHA,DES-CBC3-SHA).",
          "type": "raw",
          "required": false,
          "suboptions": {}
        },
        "ssl_port": {
          "aliases": [],
          "description": "The HTTPS port on which the system should listen.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ssl_protocols": {
          "aliases": [],
          "description": "The list of SSL protocols to accept on the management console.\nA space-separated list of tokens in the format accepted by the Apache mod_ssl SSLProtocol directive.\nCan be specified in either a string or list form. The list form is the recommended way to provide the cipher suite. See examples for usage.\nUse the value C(default) to set the SSL protocols to the system default. This value is equivalent to specifying a list of C(all,-SSLv2,-SSLv3).",
          "type": "raw",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage HTTPD related settings on a BIG-IP system",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Set the BIG-IP authentication realm name\n  bigip_device_httpd:\n    auth_name: BIG-IP\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Set the auth pam timeout to 3600 seconds\n  bigip_device_httpd:\n    auth_pam_idle_timeout: 1200\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Set the validate IP settings\n  bigip_device_httpd:\n    auth_pam_validate_ip: on\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Set SSL cipher suite by list\n  bigip_device_httpd:\n    ssl_cipher_suite:\n      - ECDHE-RSA-AES128-GCM-SHA256\n      - ECDHE-RSA-AES256-GCM-SHA384\n      - ECDHE-RSA-AES128-SHA\n      - AES256-SHA256\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Set SSL cipher suite by string\n  bigip_device_httpd:\n    ssl_cipher_suite: ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA:AES256-SHA256\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Set SSL protocols by list\n  bigip_device_httpd:\n    ssl_protocols:\n      - all\n      - -SSLv2\n      - -SSLv3\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Set SSL protocols by string\n  bigip_device_httpd:\n    ssl_protocols: all -SSLv2 -SSLv3\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_device_info": {
    "doc": {
      "description": "Collect information from F5 BIG-IP devices.\nThis module was called C(bigip_device_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "gather_subset": {
          "aliases": [
            "include"
          ],
          "description": "When supplied, this argument will restrict the information returned to a given subset.\nYou can specify a list of values to include a larger subset.\nValues can also be used with an initial C(!) to specify that a specific subset should not be collected.",
          "type": "list",
          "required": true,
          "choices": [
            "all",
            "monitors",
            "profiles",
            "apm-access-profiles",
            "apm-access-policies",
            "as3",
            "asm-policy-stats",
            "asm-policies",
            "asm-server-technologies",
            "asm-signature-sets",
            "client-ssl-profiles",
            "cfe",
            "devices",
            "device-groups",
            "do",
            "external-monitors",
            "fasthttp-profiles",
            "fastl4-profiles",
            "gateway-icmp-monitors",
            "gtm-pools",
            "gtm-servers",
            "gtm-wide-ips",
            "gtm-a-pools",
            "gtm-a-wide-ips",
            "gtm-aaaa-pools",
            "gtm-aaaa-wide-ips",
            "gtm-cname-pools",
            "gtm-cname-wide-ips",
            "gtm-mx-pools",
            "gtm-mx-wide-ips",
            "gtm-naptr-pools",
            "gtm-naptr-wide-ips",
            "gtm-srv-pools",
            "gtm-srv-wide-ips",
            "gtm-topology-regions",
            "http-monitors",
            "https-monitors",
            "http-profiles",
            "iapp-services",
            "iapplx-packages",
            "icmp-monitors",
            "interfaces",
            "internal-data-groups",
            "irules",
            "ltm-pools",
            "ltm-policies",
            "management-routes",
            "nodes",
            "oneconnect-profiles",
            "partitions",
            "provision-info",
            "remote-syslog",
            "route-domains",
            "self-ips",
            "server-ssl-profiles",
            "software-volumes",
            "software-images",
            "software-hotfixes",
            "ssl-certs",
            "ssl-keys",
            "sync-status",
            "system-db",
            "system-info",
            "ts",
            "tcp-monitors",
            "tcp-half-open-monitors",
            "tcp-profiles",
            "traffic-groups",
            "trunks",
            "udp-profiles",
            "users",
            "vcmp-guests",
            "virtual-addresses",
            "virtual-servers",
            "vlans",
            "!all",
            "!as3",
            "!do",
            "!ts",
            "!cfe",
            "!monitors",
            "!profiles",
            "!apm-access-profiles",
            "!apm-access-policies",
            "!asm-policy-stats",
            "!asm-policies",
            "!asm-server-technologies",
            "!asm-signature-sets",
            "!client-ssl-profiles",
            "!devices",
            "!device-groups",
            "!external-monitors",
            "!fasthttp-profiles",
            "!fastl4-profiles",
            "!gateway-icmp-monitors",
            "!gtm-pools",
            "!gtm-servers",
            "!gtm-wide-ips",
            "!gtm-a-pools",
            "!gtm-a-wide-ips",
            "!gtm-aaaa-pools",
            "!gtm-aaaa-wide-ips",
            "!gtm-cname-pools",
            "!gtm-cname-wide-ips",
            "!gtm-mx-pools",
            "!gtm-mx-wide-ips",
            "!gtm-naptr-pools",
            "!gtm-naptr-wide-ips",
            "!gtm-srv-pools",
            "!gtm-srv-wide-ips",
            "!gtm-topology-regions",
            "!http-monitors",
            "!https-monitors",
            "!http-profiles",
            "!iapp-services",
            "!iapplx-packages",
            "!icmp-monitors",
            "!interfaces",
            "!internal-data-groups",
            "!irules",
            "!ltm-pools",
            "!ltm-policies",
            "!management-routes",
            "!nodes",
            "!oneconnect-profiles",
            "!partitions",
            "!provision-info",
            "!remote-syslog",
            "!route-domains",
            "!self-ips",
            "!server-ssl-profiles",
            "!software-volumes",
            "!software-images",
            "!software-hotfixes",
            "!ssl-certs",
            "!ssl-keys",
            "!sync-status",
            "!system-db",
            "!system-info",
            "!tcp-monitors",
            "!tcp-half-open-monitors",
            "!tcp-profiles",
            "!traffic-groups",
            "!trunks",
            "!udp-profiles",
            "!users",
            "!vcmp-guests",
            "!virtual-addresses",
            "!virtual-servers",
            "!vlans"
          ],
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "short_description": "Collect information from F5 BIG-IP devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Collect BIG-IP information\n  bigip_device_info:\n    gather_subset:\n      - interfaces\n      - vlans\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Collect all BIG-IP information\n  bigip_device_info:\n    gather_subset:\n      - all\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Collect all BIG-IP information except trunks\n  bigip_device_info:\n    gather_subset:\n      - all\n      - \"!trunks\"\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_device_license": {
    "doc": {
      "description": "Manage license installation and activation on a BIG-IP.",
      "has_action": false,
      "notes": "This module can be used to license BIG-IPs that do not have access to internet.\nOnly the Ansible Controller needs internet access as the license activation is done on the Ansible Controller from which the module is running.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "accept_eula": {
          "aliases": [],
          "description": "Declares whether you accept the BIG-IP EULA or not. By default, this value is C(no). You must specifically declare you have viewed and accepted the license. This module does not present you with the EULA, so it is incumbent on you to read it.\nThe EULA can be found here; https://support.f5.com/csp/article/K12902.\nThis parameter is not required when C(state) is C(absent) and will be ignored if it is provided.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "addon_keys": {
          "aliases": [],
          "description": "The list of addon keys to use to in conjunction with the base license.\nThis parameter will be ignored if no C(license_key) is provided.\nThis parameter is not required when C(state) is C(absent) and will be ignored if it is provided.",
          "type": "list",
          "required": false,
          "elements": "str",
          "version_added": "1.2.0",
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "Declares whether to force license renewal. By default, this value is C(no).\nThis parameter is not required and will be ignored if it is provided.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "license_key": {
          "aliases": [],
          "description": "The registration key to use to license the BIG-IP.\nThis parameter is required if the C(state) is equal to C(present) or C(latest).\nThis parameter is not required when C(state) is C(absent) and will be ignored if it is provided.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "license_server": {
          "aliases": [],
          "description": "The F5 license server to use when getting a license and validating a dossier.\nThis parameter is required if the C(state) is equal to C(present) or C(latest).\nThis parameter is not required when C(state) is C(absent) and will be ignored if it is provided.",
          "default": "activate.f5.com",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "The state of the license on the system.\nWhen C(present), only guarantees that a license exists.\nWhen C(absent), removes the license on the system.\nWhen C(latest), ensures that the license is always valid. This is not idempotent state since re-run can modify result.\nWhen C(revoked), removes the license on the system and revokes its future usage on the F5 license servers.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "latest",
            "present",
            "revoked"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage license installation and activation on BIG-IP devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: License BIG-IP using a key\n  bigip_device_license:\n    license_key: \"XXXXX-XXXXX-XXXXX-XXXXX-XXXXXXX\"\n    provider:\n      server: \"lb.mydomain.com\"\n      user: \"admin\"\n      password: \"secret\"\n  delegate_to: localhost\n\n- name: License BIG-IP using a key\n  bigip_device_license:\n    license_key: \"XXXXX-XXXXX-XXXXX-XXXXX-XXXXXXX\"\n    provider:\n      server: \"lb.mydomain.com\"\n      user: \"admin\"\n      password: \"secret\"\n  delegate_to: localhost\n\n- name: Remove the license from the system\n  bigip_device_license:\n    state: \"absent\"\n    provider:\n      server: \"lb.mydomain.com\"\n      user: \"admin\"\n      password: \"secret\"\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_device_ntp": {
    "doc": {
      "description": "Manage NTP (Network Time Protocol) servers on a BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "ntp_servers": {
          "aliases": [],
          "description": "A list of NTP servers to set on the device. At least one of C(ntp_servers) or C(timezone) is required.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "The state of the NTP servers on the system. When C(present), guarantees the NTP servers are set on the system. When C(absent), removes the specified NTP servers from the device configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "timezone": {
          "aliases": [],
          "description": "The timezone to set for NTP lookups. At least one of C(ntp_servers) or C(timezone) is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage NTP servers on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Set NTP server\n  bigip_device_ntp:\n    ntp_servers:\n      - 192.0.2.23\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Set timezone\n  bigip_device_ntp:\n    timezone: America/Los_Angeles\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_device_sshd": {
    "doc": {
      "description": "Manage the SSHD (secure shell daemon) settings of a BIG-IP.",
      "has_action": false,
      "notes": "Requires BIG-IP version 12.0.0 or greater\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "allow": {
          "aliases": [],
          "description": "If you have enabled SSH access, specifies the IP address or address range for other systems that can use SSH to communicate with this system.\nTo specify all addresses, use the value C(all).\nAn IP address can be specified, such as 172.27.1.10.\nIP ranges can be specified, such as 172.27.*.* or 172.27.0.0/255.255.0.0.\nTo remove SSH access, specify an empty list or an empty string.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "banner": {
          "aliases": [],
          "description": "Whether to enable the banner or not.",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "banner_text": {
          "aliases": [],
          "description": "Specifies the text to include on the pre-login banner, which displays when a user attempts to login to the system using SSH.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "inactivity_timeout": {
          "aliases": [],
          "description": "Specifies the number of seconds before inactivity causes an SSH session to log out.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "log_level": {
          "aliases": [],
          "description": "Specifies the minimum SSHD message level to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "debug",
            "debug1",
            "debug2",
            "debug3",
            "error",
            "fatal",
            "info",
            "quiet",
            "verbose"
          ],
          "suboptions": {}
        },
        "login": {
          "aliases": [],
          "description": "When checked C(enabled), specifies the system accepts SSH communication.",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port on which you want the SSH daemon to run.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "short_description": "Manage the SSHD settings of a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Set the banner for the SSHD service from a string\n  bigip_device_sshd:\n    banner: enabled\n    banner_text: banner text goes here\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Set the banner for the SSHD service from a file\n  bigip_device_sshd:\n    banner: enabled\n    banner_text: \"{{ lookup('file', '/path/to/file') }}\"\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Set the SSHD service to run on port 2222\n  bigip_device_sshd:\n    port: 2222\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_device_syslog": {
    "doc": {
      "description": "Manage system-level syslog settings on BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "auth_priv_from": {
          "aliases": [],
          "description": "Specifies the lowest level of messages about user authentication to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "alert",
            "crit",
            "debug",
            "emerg",
            "err",
            "info",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "auth_priv_to": {
          "aliases": [],
          "description": "Specifies the highest level of messages about user authentication to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "alert",
            "crit",
            "debug",
            "emerg",
            "err",
            "info",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "console_log": {
          "aliases": [],
          "description": "Enables or disables logging emergency syslog messages to the console.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "cron_from": {
          "aliases": [],
          "description": "Specifies the lowest level of messages about time-based scheduling to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "alert",
            "crit",
            "debug",
            "emerg",
            "err",
            "info",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "cron_to": {
          "aliases": [],
          "description": "Specifies the highest level of messages about time-based scheduling to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "alert",
            "crit",
            "debug",
            "emerg",
            "err",
            "info",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "daemon_from": {
          "aliases": [],
          "description": "Specifies the lowest level of messages about daemon performance to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "alert",
            "crit",
            "debug",
            "emerg",
            "err",
            "info",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "daemon_to": {
          "aliases": [],
          "description": "Specifies the highest level of messages about daemon performance to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "alert",
            "crit",
            "debug",
            "emerg",
            "err",
            "info",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "include": {
          "aliases": [],
          "description": "Syslog-NG configuration to include in the device syslog config.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "iso_date": {
          "aliases": [],
          "description": "Enables or disables the ISO date format for messages in the log files.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "kern_from": {
          "aliases": [],
          "description": "Specifies the lowest level of kernel messages to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "alert",
            "crit",
            "debug",
            "emerg",
            "err",
            "info",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "kern_to": {
          "aliases": [],
          "description": "Specifies the highest level of kernel messages to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "alert",
            "crit",
            "debug",
            "emerg",
            "err",
            "info",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "local6_from": {
          "aliases": [],
          "description": "Specifies the lowest error level for messages from the local6 facility to include in the log.",
          "type": "str",
          "required": false,
          "choices": [
            "alert",
            "crit",
            "debug",
            "emerg",
            "err",
            "info",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "local6_to": {
          "aliases": [],
          "description": "Specifies the highest error level for messages from the local6 facility to include in the log.",
          "type": "str",
          "required": false,
          "choices": [
            "alert",
            "crit",
            "debug",
            "emerg",
            "err",
            "info",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "mail_from": {
          "aliases": [],
          "description": "Specifies the lowest level of mail log messages to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "alert",
            "crit",
            "debug",
            "emerg",
            "err",
            "info",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "mail_to": {
          "aliases": [],
          "description": "Specifies the highest level of mail log messages to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "alert",
            "crit",
            "debug",
            "emerg",
            "err",
            "info",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "messages_from": {
          "aliases": [],
          "description": "Specifies the lowest level of system messages to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "alert",
            "crit",
            "debug",
            "emerg",
            "err",
            "info",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "messages_to": {
          "aliases": [],
          "description": "Specifies the highest level of system messages to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "alert",
            "crit",
            "debug",
            "emerg",
            "err",
            "info",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "user_log_from": {
          "aliases": [],
          "description": "Specifies the lowest level of user account messages to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "alert",
            "crit",
            "debug",
            "emerg",
            "err",
            "info",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "user_log_to": {
          "aliases": [],
          "description": "Specifies the highest level of user account messages to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "alert",
            "crit",
            "debug",
            "emerg",
            "err",
            "info",
            "notice",
            "warning"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage system-level syslog settings on BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a syslog config\n  bigip_device_syslog:\n    name: foo\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_device_traffic_group": {
    "doc": {
      "description": "Supports managing traffic groups and their attributes on a BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "auto_failback": {
          "aliases": [],
          "description": "Specifies whether the traffic group fails back to the initial device specified in C(ha_order).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auto_failback_time": {
          "aliases": [],
          "description": "Specifies the number of seconds the system delays before failing back to the initial device specified in C(ha_order).\nThe correct value range is C(0 - 300) inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ha_group": {
          "aliases": [],
          "description": "Specifies a configured C(HA group) to be associated with the traffic group.\nOnce you create an HA group on a device and associate the HA group with a traffic group, you must create an HA group and associate it with that same traffic group on every device in the device group.\nTo disable an HA group failover method, specify an empty string value (C(\"\")) to this parameter.\nDisabling an HA group will revert the device back to using C(Load Aware) method (the default), unless C(ha_order) setting is also configured.\nThe C(auto_failback) and C(auto_failback_time) are not compatible with C(ha_group).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ha_load_factor": {
          "aliases": [],
          "description": "The value of the load the traffic-group presents the system relative to other traffic groups.\nThis parameter only takes effect when C(Load Aware) failover method is in use.\nThe correct value range is C(1 - 1000) inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ha_order": {
          "aliases": [],
          "description": "Specifies the order in which you would like to assign devices for failover.\nIf you configure this setting, you must configure the setting on every traffic group in the device group.\nThe values should be device names of the devices that belong to the failover group configured previously.\nThe order in which the devices are placed as arguments to this parameter determines their HA order on the device. Meaning that changing the order of the same elements will cause a change on the unit.\nTo disable an HA order failover method, specify an empty string value (C(\"\")) to this parameter.\nDisabling an HA order will revert the device back to using the Load Aware method (the default), unless the C(ha_group) setting is also configured.\nDevice names will be prepended with a partition by the module, so you can provide either the full path format name C(/Common/bigip1) or just the name string C(bigip1).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "mac_address": {
          "aliases": [],
          "description": "Specifies the floating Media Access Control (MAC) address associated with the floating IP addresses defined for a traffic group.\nPrimarily, a MAC masquerade address minimizes ARP communications or dropped packets as a result of failover.\nA MAC masquerade address ensures any traffic destined for a specific traffic group reaches an available device after failover, which happens because, along with the traffic group, the MAC masquerade address floats to the available device.\nWithout a MAC masquerade address, the sending host must learn the MAC address for a newly-active device, either by sending an ARP request or by relying on the gratuitous ARP from the newly-active device.\nTo unset the MAC address, specify an empty value (C(\"\")) to this parameter.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the traffic group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the traffic group exists.\nWhen C(absent), ensures the traffic group is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages traffic groups on BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a traffic group\n  bigip_device_traffic_group:\n    name: foo1\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Create a traffic group with ha_group failover\n  bigip_device_traffic_group:\n    name: foo2\n    state: present\n    ha_group: foo_HA_grp\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Create a traffic group with ha_order failover\n  bigip_device_traffic_group:\n    name: foo3\n    state: present\n    ha_order:\n      - /Common/bigip1.lab.local\n      - /Common/bigip2.lab.local\n    auto_failback: yes\n    auto_failback_time: 40\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Change traffic group ha_order to ha_group\n  bigip_device_traffic_group:\n    name: foo3\n    state: present\n    ha_group: foo_HA_grp\n    ha_order: \"\"\n    auto_failback: no\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Remove traffic group\n  bigip_device_traffic_group:\n    name: foo\n    state: absent\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_device_trust": {
    "doc": {
      "description": "Manage the trust relationships between BIG-IP systems. Devices, once peered, cannot be updated. If updating is needed, the peer must first be removed before it can be re-added to the trust.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "peer_hostname": {
          "aliases": [],
          "description": "The hostname you want to associate with the device. This value is used to easily distinguish this device in BIG-IP configuration.\nWhen trusting a new device, if this parameter is not specified, the value of C(peer_server) is used as a default.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "peer_password": {
          "aliases": [],
          "description": "The password of the API username of the remote peer device you are trusting. If this value is not specified, then the value of C(password), or the environment variable C(F5_PASSWORD) is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "peer_server": {
          "aliases": [],
          "description": "The peer address to connect to and trust for synchronizing the configuration. This is typically the management address of the remote device, but may also be a Self IP address.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "peer_user": {
          "aliases": [],
          "description": "The API username of the remote peer device you are trusting. Note that the CLI user cannot be used unless it too has an API account. If this value is not specified, then the value of C(user), or the environment variable C(F5_USER) is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the specified devices are trusted.\nWhen C(absent), removes the device trusts.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Specifies whether the device you are adding is a Peer or a Subordinate. The default is C(peer).\nThe difference between the two is a matter of mitigating risk of compromise.\nA subordinate device cannot sign a certificate for another device.\nIn the case where the security of an authority device in a trust domain is compromised, the risk of compromise is minimized for any subordinate device.\nDesignating devices as subordinate devices is recommended for device groups with a large number of member devices, where the risk of compromise is high.",
          "default": "peer",
          "type": "str",
          "required": false,
          "choices": [
            "peer",
            "subordinate"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage the trust relationships between BIG-IPs",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add trusts for all peer devices to Active device\n  bigip_device_trust:\n    peer_server: \"{{ item.ansible_host }}\"\n    peer_hostname: \"{{ item.inventory_hostname }}\"\n    peer_user: \"{{ item.bigip_username }}\"\n    peer_password: \"{{ item.bigip_password }}\"\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  loop: hostvars\n  when: inventory_hostname in groups['master']\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_dns_cache_resolver": {
    "doc": {
      "description": "Manage the DNS resolver cache configuration on BIG-IP devices.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "answer_default_zones": {
          "aliases": [],
          "description": "Specifies whether the system answers DNS queries for the default zones localhost, reverse 127.0.0.1 and ::1, and AS112.\nWhen creating a new cache resolver, if this parameter is not specified, the default is C(no).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "forward_zones": {
          "aliases": [],
          "description": "Forward zones associated with the cache.\nTo remove all forward zones, specify a value of C(none).",
          "type": "raw",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Specifies an FQDN for the forward zone.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "nameservers": {
              "aliases": [],
              "description": "Specifies the IP address and service port of a recursive nameserver that answers DNS queries for the zone when the response cannot be found in the DNS cache.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "address": {
                  "aliases": [],
                  "description": "Address of recursive nameserver.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "port": {
                  "aliases": [],
                  "description": "Port of recursive nameserver.\nWhen specifying new nameservers, if this value is not provided, the default is C(53).",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the cache.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "route_domain": {
          "aliases": [],
          "description": "Specifies the route domain the resolver uses for outbound traffic.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage DNS resolver cache configuration on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a DNS resolver cache\n  bigip_dns_cache:\n    name: foo\n    answer_default_zones: yes\n    forward_zones:\n      - name: foo.bar.com\n        nameservers:\n          - address: 1.2.3.4\n            port: 53\n          - address: 5.6.7.8\n    route_domain: 0\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_dns_nameserver": {
    "doc": {
      "description": "Manages LTM DNS nameservers on a BIG-IP. These nameservers form part of what is known as DNS Express on a BIG-IP. This module does not configure GTM (DNS module) related functionality, nor does it configure system-level name servers that affect the ability of the base system to resolve DNS names.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "address": {
          "aliases": [],
          "description": "Specifies the IP address on which the DNS nameserver (client) or back-end DNS authoritative server (DNS Express server) listens for DNS messages.\nWhen creating a new nameserver, if this value is not specified, the default is C(127.0.0.1).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the nameserver.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "route_domain": {
          "aliases": [],
          "description": "Specifies the local route domain the DNS nameserver (client) or back-end DNS authoritative server (DNS Express server) uses for outbound traffic.\nWhen creating a new nameserver, if this value is not specified, the default is C(0).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_port": {
          "aliases": [],
          "description": "Specifies the service port on which the DNS nameserver (client) or back-end DNS authoritative server (DNS Express server) listens for DNS messages.\nWhen creating a new nameserver, if this value is not specified, the default is C(53).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tsig_key": {
          "aliases": [],
          "description": "Specifies the TSIG key the system uses to communicate with this DNS nameserver (client) or back-end DNS authoritative server (DNS Express server) for AXFR zone transfers.\nIf the nameserver is a client, then the system uses this TSIG key to verify the request and sign the response.\nIf this nameserver is a DNS Express server, then this TSIG key must match the TSIG key for the zone on the back-end DNS authoritative server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage LTM DNS nameservers on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a nameserver\n  bigip_dns_nameserver:\n    name: foo\n    address: 10.10.10.10\n    service_port: 53\n    state: present\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_dns_resolver": {
    "doc": {
      "description": "Manage DNS resolvers on a BIG-IP system.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "answer_default_zones": {
          "aliases": [],
          "description": "Specifies whether the system answers DNS queries for the default zones localhost, reverse 127.0.0.1 and ::1, and AS112.\nWhen creating a new resolver, if this parameter is not specified, the default is C(no), meaning the system passes along the DNS queries for the default zones.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "cache_size": {
          "aliases": [],
          "description": "Specifies the size of the internal DNS resolver cache.\nWhen creating a new resolver, if this parameter is not specified, the default is 5767168 bytes.\nAfter the cache reaches this size, when new or refreshed content arrives, the system removes expired and older content and caches the new or updated content.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the DNS resolver.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "randomize_query_case": {
          "aliases": [],
          "description": "When C(yes), specifies the internal DNS resolver randomizes character case in domain name queries issued to the root DNS servers.\nWhen creating a new resolver, if this parameter is not specified, the default is C(yes).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "route_domain": {
          "aliases": [],
          "description": "Specifies the route domain the resolver uses for outbound traffic.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "use_ipv4": {
          "aliases": [],
          "description": "Specifies whether the system can use IPv4 to query backend nameservers.\nAn IPv4 Self IP and default route must be available for these queries to work successfully.\nWhen creating a new resolver, if this parameter is not specified, the default is C(yes).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "use_ipv6": {
          "aliases": [],
          "description": "Specifies whether the system can use IPv6 to query backend nameservers.\nAn IPv6 Self IP and default route must be available for these queries to work successfully.\nWhen creating a new resolver, if this parameter is not specified, the default is C(yes).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "use_tcp": {
          "aliases": [],
          "description": "Specifies whether the system answers and issues TCP-formatted queries.\nWhen creating a new resolver, if this parameter is not specified, the default is C(yes).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "use_udp": {
          "aliases": [],
          "description": "Specifies whether the system answers and issues UDP-formatted queries.\nWhen creating a new resolver, if this parameter is not specified, the default is C(yes).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage DNS resolvers on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a simple DNS responder for OCSP stapling\n  bigip_dns_resolver:\n    name: resolver1\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_dns_zone": {
    "doc": {
      "description": "Manage DNS zones on BIG-IP. The zones managed here are primarily used for configuring DNS Express on a BIG-IP. This module does not configure zones that are found in BIG-IP ZoneRunner.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "dns_express": {
          "aliases": [],
          "description": "DNS express related settings.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "allow_notify_from": {
              "aliases": [],
              "description": "Specifies the IP addresses from which the system accepts NOTIFY messages for this DNS Express zone.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "enabled": {
              "aliases": [],
              "description": "Specifies the current status of the DNS Express zone.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "notify_action": {
              "aliases": [],
              "description": "Specifies the action the system takes when a NOTIFY message is received for this DNS Express zone.\nIf a TSIG key is configured for the zone, the signature is only validated for C(consume) and C(repeat) actions.\nWhen C(consume), the NOTIFY message is seen only by DNS Express.\nWhen C(bypass), the NOTIFY message does not go to DNS Express, but instead goes to a back-end DNS server (subject to the value of the Unhandled Query Action configured in the DNS profile applied to the listener that handles the DNS request).\nWhen C(repeat), the NOTIFY message goes to both DNS Express and any back-end DNS server.",
              "type": "str",
              "required": false,
              "choices": [
                "consume",
                "bypass",
                "repeat"
              ],
              "suboptions": {}
            },
            "response_policy": {
              "aliases": [],
              "description": "Specifies whether this DNS Express zone is a DNS response policy zone (RPZ).",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "Specifies the back-end authoritative DNS server from which the BIG-IP system receives AXFR zone transfers for the DNS Express zone.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "verify_tsig": {
              "aliases": [],
              "description": "Specifies whether the system verifies the identity of the authoritative nameserver that sends updated information for this DNS Express zone.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the DNS zone.\nThe name must begin with a letter and contain only letters, numbers, and the underscore character.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "nameservers": {
          "aliases": [],
          "description": "Specifies the DNS nameservers to which the system sends NOTIFY messages.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tsig_server_key": {
          "aliases": [],
          "description": "Specifies the TSIG key the system uses to authenticate the back-end DNS authoritative server that sends AXFR zone transfers to the BIG-IP system.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage DNS zones on BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a DNS zone for DNS express\n  bigip_dns_zone:\n    name: zone.foo.com\n    dns_express:\n      enabled: yes\n      server: dns-lab\n      allow_notify_from:\n        - 192.168.39.10\n      notify_action: consume\n      verify_tsig: no\n      response_policy: no\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Disable DNS express zone, change server, and modify notify_action to bypass\n  bigip_dns_zone:\n    name: zone.foo.com\n    dns_express:\n      enabled: no\n      server: foo1.server.com\n      allow_notify_from:\n        - 192.168.39.10\n      notify_action: bypass\n      verify_tsig: no\n      response_policy: no\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Add nameservers\n  bigip_dns_zone:\n    name: zone.foo.com\n    nameservers:\n      - foo1.nameserver.com\n      - foo2.nameserver.com\n      - foo3.nameserver.com\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove nameserver\n  bigip_dns_zone:\n    name: zone.foo.com\n    nameservers:\n      - foo1.nameserver.com\n      - foo2.nameserver.com\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove all nameservers\n  bigip_dns_zone:\n    name: zone.foo.com\n    nameservers: none\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Add tsig_server_key\n  bigip_dns_zone:\n    name: zone.foo.com\n    tsig_server_key: key1\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove tsig_server_key\n  bigip_dns_zone:\n    name: zone.foo.com\n    tsig_server_key: none\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove zone\n  bigip_dns_zone:\n    name: zone.foo.com\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n"
  },
  "f5networks.f5_modules.bigip_file_copy": {
    "doc": {
      "description": "Manages files on a variety of datastores on a BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "datastore": {
          "aliases": [],
          "description": "Specifies the datastore to put the file in.\nThere are several different datastores and each of them allows files to be exposed in different ways.\nWhen C(external-monitor), the specified file will be stored as an external monitor file and be available for use in external monitors.\nWhen C(ifile), the specified file will be stored as an iFile.\nWhen C(lw4o6-table), the specified file will be stored as a Lightweight 4 over 6 (lw4o6) tunnel binding table, which includes an IPv6 address for the lwB4, public IPv4 address, and restricted port set.",
          "default": "ifile",
          "type": "str",
          "required": false,
          "choices": [
            "external-monitor",
            "ifile",
            "lw4o6-table"
          ],
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "Force overwriting a file.\nBy default, files will only be overwritten if the SHA of the file is different for the given filename. This parameter can be used to force overwriting the file even if it already exists and its SHA matches.\nThe C(lw4o6-table) datastore does not keep checksums of its file. Therefore, you would need to provide this argument to update any of these files.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the file as it should reside on the BIG-IP.\nIf this is not specified, then the filename provided in the C(source) parameter is used instead.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "source": {
          "aliases": [
            "src"
          ],
          "description": "Specifies the path of the file to upload.\nThis parameter is required if C(state) is C(present).",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage files in datastores on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Upload a file as an iFile\n  bigip_file_copy:\n    name: foo\n    source: /path/to/file.txt\n    datastore: ifile\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n# Upload a directory of files\n- name: Recursively upload web related files in /var/tmp/project\n  find:\n    paths: /var/tmp/project\n    patterns: \"^.*?\\\\.(?:html|?:css|?:js)$\"\n    use_regex: yes\n  register: f\n\n- name: Upload a directory of files as a set of iFiles\n  bigip_file_copy:\n    source: \"{{ item.path }}\"\n    datastore: ifile\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n    loop: f\n  delegate_to: localhost\n# End upload a directory of files\n\n- name: Upload a file to use in an external monitor\n  bigip_file_copy:\n    source: /path/to/files/external.sh\n    datastore: external-monitor\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_firewall_address_list": {
    "doc": {
      "description": "Manages the AFM (Advanced Firewall Manager) address lists on a BIG-IP. This module can be used to add and remove address list entries.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "address_lists": {
          "aliases": [],
          "description": "Simple list of existing address lists to add to this list. Address lists can be specified in either their fully qualified name (/Common/foo) or their short name (foo). If a short name is used, the C(partition) argument will automatically be prepended to the short name.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "address_ranges": {
          "aliases": [],
          "description": "A list of address ranges where the range starts with a port number, is followed by a dash (-), and then a second number.\nIf the first address is greater than the second number, the numbers will be reversed so-as to be properly formatted. For example, C(2.2.2.2-1.1.1). would become C(1.1.1.1-2.2.2.2).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "addresses": {
          "aliases": [],
          "description": "Individual addresses you want to add to the list. These addresses differ from ranges and lists of lists, such as what can be used in C(address_ranges) and C(address_lists) respectively.\nThis list can also include networks that have CIDR notation.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the address list.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fqdns": {
          "aliases": [],
          "description": "A list of fully qualified domain names (FQDNs).\nAn FQDN has at least one decimal point in it, separating the host from the domain.\nTo add FQDNs to a list requires that a global FQDN resolver is configured. This must either be done via C(bigip_command), or in the GUI of the BIG-IP. If using C(bigip_command), you can do this with C(tmsh modify security firewall global-fqdn-policy FOO) where C(FOO) is a DNS resolver configured at C(tmsh create net dns-resolver FOO).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "geo_locations": {
          "aliases": [],
          "description": "List of geolocations specified by their C(country) and C(region).",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "country": {
              "aliases": [],
              "description": "The country name, or code, of the geolocation to use.\nIn addition to the country full names, you may also specify their abbreviated form, such as C(US) instead of C(United States).\nValid country codes can be found here https://countrycode.org/.",
              "type": "str",
              "required": true,
              "choices": [
                "Any valid 2 character ISO country code.",
                "Any valid country name."
              ],
              "suboptions": {}
            },
            "region": {
              "aliases": [],
              "description": "Region name of the country to use.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the address list.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the address list and entries exists.\nWhen C(absent), ensures the address list is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage address lists on BIG-IP AFM",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create an address list\n  bigip_firewall_address_list:\n    name: foo\n    addresses:\n      - 3.3.3.3\n      - 4.4.4.4\n      - 5.5.5.5\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_firewall_dos_profile": {
    "doc": {
      "description": "Manages AFM (Advanced Firewall Manager) Denial of Service (DoS) profiles on a BIG-IP. To manage the vectors associated with a DoS profile, refer to the C(bigip_firewall_dos_vector) module.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "default_whitelist": {
          "aliases": [],
          "description": "The default whitelist address list for the system to use to determine which IP addresses are legitimate.\nThe system does not examine traffic from the IP addresses in the list when performing DoS prevention.\nTo define a new whitelist, use the C(bigip_firewall_address_list) module.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the DoS profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "threshold_sensitivity": {
          "aliases": [],
          "description": "Specifies the threshold sensitivity for the DoS profile.\nThresholds for detecting attacks are higher when sensitivity is C(low), and lower when sensitivity is C(high).\nWhen creating a new profile, if this parameter is not specified, the default is C(medium).",
          "type": "str",
          "required": false,
          "choices": [
            "low",
            "medium",
            "high"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage AFM DoS profiles on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a new DoS profile\n  bigip_firewall_dos_profile:\n    name: profile1\n    description: DoS profile 1\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_firewall_dos_vector": {
    "doc": {
      "description": "Manage the attack vector configuration in an AFM (Advanced Firewall Manager) DoS profile. In addition to the normal AFM DoS profile vectors, this module can manage the device-configuration vectors. See the module documentation for details about this method.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "allow_advertisement": {
          "aliases": [],
          "description": "Specifies addresses that are identified for blacklisting are advertised to BGP routers.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "attack_ceiling": {
          "aliases": [],
          "description": "Specifies the absolute maximum allowable for packets of this type.\nThis setting rate limits packets to the packets per second setting, when specified.\nTo set no hard limit and allow automatic thresholds to manage all rate limiting, set this to C(infinite).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "attack_floor": {
          "aliases": [],
          "description": "Specifies packets per second to identify an attack.\nThese settings provide an absolute minimum of packets to allow before the attack is identified.\nAs the automatic detection thresholds adjust to traffic and CPU usage on the system over time, this attack floor becomes less relevant.\nThis value may not exceed the value in C(attack_floor).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "auto_blacklist": {
          "aliases": [],
          "description": "Automatically blacklists detected bad actors.\nTo enable this parameter, the C(bad_actor_detection) must also be enabled.\nThis parameter is not supported by the C(dns-malformed) vector.\nThis parameter is not supported by the C(qdcount) vector.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "bad_actor_detection": {
          "aliases": [],
          "description": "Whether Bad Actor detection is enabled or disabled for a vector, if available.\nThis parameter must be enabled to enable the C(auto_blacklist) parameter.\nThis parameter is not supported by the C(dns-malformed) vector.\nThis parameter is not supported by the C(qdcount) vector.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "blacklist_detection_seconds": {
          "aliases": [],
          "description": "Detection before blacklisting occurs, in seconds.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "blacklist_duration": {
          "aliases": [],
          "description": "Duration the blacklist will last, in seconds.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "detection_threshold_eps": {
          "aliases": [
            "rate_threshold"
          ],
          "description": "Lists how many packets per second the system must discover in traffic in order to detect this attack.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "detection_threshold_percent": {
          "aliases": [
            "rate_increase"
          ],
          "description": "Lists the threshold percent increase over time that the system must detect in traffic in order to detect this attack.\nThe C(tcp-half-open) vector does not support this parameter.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mitigation_threshold_eps": {
          "aliases": [
            "rate_limit"
          ],
          "description": "Specifies the maximum number of this type of packet per second the system allows for a vector.\nThe system drops packets once the traffic level exceeds the rate limit.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the vector to modify.\nVectors that ship with the device are \"hard-coded\" in that the list of vectors is known to the system and users cannot add new vectors. Users only manipulate the existing vectors; all of which are disabled by default.\nWhen C(bad-icmp-chksum), configures the \"Bad ICMP Checksum\" Network Security vector.\nWhen C(bad-icmp-frame), configures the \"Bad ICMP Frame\" Network Security vector.\nWhen C(bad-igmp-frame), configures the \"Bad IGMP Frame\" Network Security vector.\nWhen C(bad-ip-opt), configures the \"IP Option Illegal Length\" Network Security vector.\nWhen C(bad-ipv6-hop-cnt), configures the \"Bad IPv6 Hop Count\" Network Security vector.\nWhen C(bad-ipv6-ver), configures the \"Bad IPv6 Version\" Network Security vector.\nWhen C(bad-sctp-chksum), configures the \"Bad SCTP Checksum\" Network Security vector.\nWhen C(bad-tcp-chksum), configures the \"Bad TCP Checksum\" Network Security vector.\nWhen C(bad-tcp-flags-all-clr), configures the \"Bad TCP Flags (All Cleared)\" Network Security vector.\nWhen C(bad-tcp-flags-all-set), configures the \"Bad TCP Flags (All Flags Set)\" Network Security vector.\nWhen C(bad-ttl-val), configures the \"Bad IP TTL Value\" Network Security vector.\nWhen C(bad-udp-chksum), configures the \"Bad UDP Checksum\" Network Security vector.\nWhen C(bad-udp-hdr), configures the \"Bad UDP Header (UDP Length > IP Length or L2 Length)\" Network Security vector.\nWhen C(bad-ver), configures the \"Bad IP Version\" Network Security vector.\nWhen C(arp-flood), configures the \"ARP Flood\" Network Security vector.\nWhen C(flood), configures the \"Single Endpoint Flood\" Network Security vector.\nWhen C(igmp-flood), configures the \"IGMP Flood\" Network Security vector.\nWhen C(igmp-frag-flood), configures the \"IGMP Fragment Flood\" Network Security vector.\nWhen C(ip-bad-src), configures the \"Bad Source\" Network Security vector.\nWhen C(ip-err-chksum), configures the \"IP Error Checksum\" Network Security vector.\nWhen C(ip-len-gt-l2-len), configures the \"IP Length > L2 Length\" Network Security vector.\nWhen C(ip-other-frag), configures the \"IP Fragment Error\" Network Security vector.\nWhen C(ip-overlap-frag), configures the \"IP Fragment Overlap\" Network Security vector.\nWhen C(ip-short-frag), configures the \"IP Fragment Too Small\" Network Security vector.\nWhen C(ip-uncommon-proto), configures the \"IP Uncommon Proto\" Network Security vector.\nWhen C(ip-unk-prot), configures the \"IP Unknown Protocol\" Network Security vector.\nWhen C(ipv4-mapped-ipv6), configures the \"IPv4 Mapped IPv6\" Network Security vector.\nWhen C(ipv6-atomic-frag), configures the \"IPv6 Atomic Fragment\" Network Security vector.\nWhen C(ipv6-bad-src), configures the \"Bad IPv6 Addr\" Network Security vector.\nWhen C(ipv6-len-gt-l2-len), configures the \"IPv6 Length > L2 Length\" Network Security vector.\nWhen C(ipv6-other-frag), configures the \"IPv6 Fragment Error\" Network Security vector.\nWhen C(ipv6-overlap-frag), configures the \"IPv6 Fragment Overlap\" Network Security vector.\nWhen C(ipv6-short-frag), configures the \"IPv6 Fragment Too Small\" Network Security vector.\nWhen C(l2-len-ggt-ip-len), configures the \"L2 Length >> IP Length\" Network Security vector.\nWhen C(l4-ext-hdrs-go-end), configures the \"No L4 (Extension Headers Go To Or Past The End of Frame)\" Network Security vector.\nWhen C(land-attack), configures the \"LAND Attack\" Network Security vector.\nWhen C(no-l4), configures the \"No L4\" Network Security vector.\nWhen C(no-listener-match), configures the \"No Listener Match\" Network Security vector.\nWhen C(non-tcp-connection), configures the \"Non TCP Connection\" Network Security vector.\nWhen C(payload-len-ls-l2-len), configures the \"Payload Length < L2 Length\" Network Security vector.\nWhen C(routing-header-type-0), configures the \"Routing Header Type 0\" Network Security vector.\nWhen C(syn-and-fin-set), configures the \"SYN && FIN Set\" Network Security vector.\nWhen C(tcp-ack-flood), configures the \"TCP BADACK Flood\" Network Security vector.\nWhen C(tcp-hdr-len-gt-l2-len), configures the \"TCP Header Length > L2 Length\" Network Security vector.\nWhen C(tcp-hdr-len-too-short), configures the \"TCP Header Length Too Short (Length < 5)\" Network Security vector.\nWhen C(hdr-len-gt-l2-len), configures the \"Header Length > L2 Length\" Network Security vector.\nWhen C(hdr-len-too-short), configures the \"Header Length Too Short\" Network Security vector.\nWhen C(bad-ext-hdr-order), configures the \"IPv6 Extended Headers Wrong order\" Network Security vector.\nWhen C(ext-hdr-too-large), configures the \"IPv6 extension header too large\" Network Security vector.\nWhen C(hop-cnt-low), configures the \"IPv6 hop count <= <tunable>\" Network Security vector.\nWhen C(host-unreachable), configures the \"Host Unreachable\" Network Security vector.\nWhen C(icmp-frag), configures the \"ICMP Fragment\" Network Security vector.\nWhen C(icmp-frame-too-large), configures the \"ICMP Frame Too Large\" Network Security vector.\nWhen C(icmpv4-flood), configures the \"ICMPv4 flood\" Network Security vector.\nWhen C(icmpv6-flood), configures the \"ICMPv6 flood\" Network Security vector.\nWhen C(ip-frag-flood), configures the \"IP Fragment Flood\" Network Security vector.\nWhen C(ip-low-ttl), configures the \"TTL <= <tunable>\" Network Security vector.\nWhen C(ip-opt-frames), configures the \"IP Option Frames\" Network Security vector.\nWhen C(ipv6-ext-hdr-frames), configures the \"IPv6 Extended Header Frames\" Network Security vector.\nWhen C(ipv6-frag-flood), configures the \"IPv6 Fragment Flood\" Network Security vector.\nWhen C(opt-present-with-illegal-len), configures the \"Option Present With Illegal Length\" Network Security vector.\nWhen C(sweep), configures the \"Sweep\" Network Security vector.\nWhen C(tcp-bad-urg), configures the \"TCP Flags-Bad URG\" Network Security vector.\nWhen C(tcp-half-open), configures the \"TCP Half Open\" Network Security vector.\nWhen C(tcp-opt-overruns-tcp-hdr), configures the \"TCP Option Overruns TCP Header\" Network Security vector.\nWhen C(tcp-psh-flood), configures the \"TCP PUSH Flood\" Network Security vector.\nWhen C(tcp-rst-flood), configures the \"TCP RST Flood\" Network Security vector.\nWhen C(tcp-syn-flood), configures the \"TCP SYN Flood\" Network Security vector.\nWhen C(tcp-syn-oversize), configures the \"TCP SYN Oversize\" Network Security vector.\nWhen C(tcp-synack-flood), configures the \"TCP SYN ACK Flood\" Network Security vector.\nWhen C(tcp-window-size), configures the \"TCP Window Size\" Network Security vector.\nWhen C(tidcmp), configures the \"TIDCMP\" Network Security vector.\nWhen C(too-many-ext-hdrs), configures the \"Too Many Extension Headers\" Network Security vector.\nWhen C(dup-ext-hdr), configures the \"IPv6 Duplicate Extension Headers\" Network Security vector.\nWhen C(fin-only-set), configures the \"FIN Only Set\" Network Security vector.\nWhen C(ether-brdcst-pkt), configures the \"Ethernet Broadcast Packet\" Network Security vector.\nWhen C(ether-multicst-pkt), configures the \"Ethernet Multicast Packet\" Network Security vector.\nWhen C(ether-mac-sa-eq-da), configures the \"Ethernet MAC Source Address == Destination Address\" Network Security vector.\nWhen C(udp-flood), configures the \"UDP Flood\" Network Security vector.\nWhen C(unk-ipopt-type), configures the \"Unknown Option Type\" Network Security vector.\nWhen C(unk-tcp-opt-type), configures the \"Unknown TCP Option Type\" Network Security vector.\nWhen C(a), configures the \"DNS A Query\" DNS Protocol Security vector.\nWhen C(aaaa), configures the \"DNS AAAA Query\" DNS Protocol Security vector.\nWhen C(any), configures the \"DNS ANY Query\" DNS Protocol Security vector.\nWhen C(axfr), configures the \"DNS AXFR Query\" DNS Protocol Security vector.\nWhen C(cname), configures the \"DNS CNAME Query\" DNS Protocol Security vector.\nWhen C(dns-malformed), configures the \"dns-malformed\" DNS Protocol Security vector.\nWhen C(dns-nxdomain-query), configures the \"dns-nxdomain-query\" DNS Protocol Security vector.\nWhen C(dns-response-flood), configures the \"dns-response-flood\" DNS Protocol Security vector.\nWhen C(dns-oversize), configures the \"dns-oversize\" DNS Protocol Security vector.\nWhen C(ixfr), configures the \"DNS IXFR Query\" DNS Protocol Security vector.\nWhen C(mx), configures the \"DNS MX Query\" DNS Protocol Security vector.\nWhen C(ns), configures the \"DNS NS Query\" DNS Protocol Security vector.\nWhen C(other), configures the \"DNS OTHER Query\" DNS Protocol Security vector.\nWhen C(ptr), configures the \"DNS PTR Query\" DNS Protocol Security vector.\nWhen C(qdcount), configures the \"DNS QDCOUNT Query\" DNS Protocol Security vector.\nWhen C(soa), configures the \"DNS SOA Query\" DNS Protocol Security vector.\nWhen C(srv), configures the \"DNS SRV Query\" DNS Protocol Security vector.\nWhen C(txt), configures the \"DNS TXT Query\" DNS Protocol Security vector.\nWhen C(ack), configures the \"SIP ACK Method\" SIP Protocol Security vector.\nWhen C(bye), configures the \"SIP BYE Method\" SIP Protocol Security vector.\nWhen C(cancel), configures the \"SIP CANCEL Method\" SIP Protocol Security vector.\nWhen C(invite), configures the \"SIP INVITE Method\" SIP Protocol Security vector.\nWhen C(message), configures the \"SIP MESSAGE Method\" SIP Protocol Security vector.\nWhen C(notify), configures the \"SIP NOTIFY Method\" SIP Protocol Security vector.\nWhen C(options), configures the \"SIP OPTIONS Method\" SIP Protocol Security vector.\nWhen C(other), configures the \"SIP OTHER Method\" SIP Protocol Security vector.\nWhen C(prack), configures the \"SIP PRACK Method\" SIP Protocol Security vector.\nWhen C(publish), configures the \"SIP PUBLISH Method\" SIP Protocol Security vector.\nWhen C(register), configures the \"SIP REGISTER Method\" SIP Protocol Security vector.\nWhen C(sip-malformed), configures the \"sip-malformed\" SIP Protocol Security vector.\nWhen C(subscribe), configures the \"SIP SUBSCRIBE Method\" SIP Protocol Security vector.\nWhen C(uri-limit), configures the \"uri-limit\" SIP Protocol Security vector.",
          "type": "str",
          "required": true,
          "choices": [
            "bad-icmp-chksum",
            "bad-icmp-frame",
            "bad-igmp-frame",
            "bad-ip-opt",
            "bad-ipv6-hop-cnt",
            "bad-ipv6-ver",
            "bad-sctp-chksum",
            "bad-tcp-chksum",
            "bad-tcp-flags-all-clr",
            "bad-tcp-flags-all-set",
            "bad-ttl-val",
            "bad-udp-chksum",
            "bad-udp-hdr",
            "bad-ver",
            "arp-flood",
            "flood",
            "igmp-flood",
            "igmp-frag-flood",
            "ip-bad-src",
            "ip-err-chksum",
            "ip-len-gt-l2-len",
            "ip-other-frag",
            "ip-overlap-frag",
            "ip-short-frag",
            "ip-uncommon-proto",
            "ip-unk-prot",
            "ipv4-mapped-ipv6",
            "ipv6-atomic-frag",
            "ipv6-bad-src",
            "ipv6-len-gt-l2-len",
            "ipv6-other-frag",
            "ipv6-overlap-frag",
            "ipv6-short-frag",
            "l2-len-ggt-ip-len",
            "l4-ext-hdrs-go-end",
            "land-attack",
            "no-l4",
            "no-listener-match",
            "non-tcp-connection",
            "payload-len-ls-l2-len",
            "routing-header-type-0",
            "syn-and-fin-set",
            "tcp-ack-flood",
            "tcp-hdr-len-gt-l2-len",
            "tcp-hdr-len-too-short",
            "hdr-len-gt-l2-len",
            "hdr-len-too-short",
            "bad-ext-hdr-order",
            "ext-hdr-too-large",
            "hop-cnt-low",
            "host-unreachable",
            "icmp-frag",
            "icmp-frame-too-large",
            "icmpv4-flood",
            "icmpv6-flood",
            "ip-frag-flood",
            "ip-low-ttl",
            "ip-opt-frames",
            "ipv6-ext-hdr-frames",
            "ipv6-frag-flood",
            "opt-present-with-illegal-len",
            "sweep",
            "tcp-bad-urg",
            "tcp-half-open",
            "tcp-opt-overruns-tcp-hdr",
            "tcp-psh-flood",
            "tcp-rst-flood",
            "tcp-syn-flood",
            "tcp-syn-oversize",
            "tcp-synack-flood",
            "tcp-window-size",
            "tidcmp",
            "too-many-ext-hdrs",
            "dup-ext-hdr",
            "fin-only-set",
            "ether-brdcst-pkt",
            "ether-multicst-pkt",
            "ether-mac-sa-eq-da",
            "udp-flood",
            "unk-ipopt-type",
            "unk-tcp-opt-type",
            "a",
            "aaaa",
            "any",
            "axfr",
            "cname",
            "dns-malformed",
            "dns-nxdomain-query",
            "dns-response-flood",
            "dns-oversize",
            "ixfr",
            "mx",
            "ns",
            "other",
            "ptr",
            "qdcount",
            "soa",
            "srv",
            "txt",
            "ack",
            "bye",
            "cancel",
            "invite",
            "message",
            "notify",
            "options",
            "other",
            "prack",
            "publish",
            "register",
            "sip-malformed",
            "subscribe",
            "uri-limit"
          ],
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "per_source_ip_detection_threshold": {
          "aliases": [],
          "description": "Specifies the number of packets per second to identify an IP address as a bad actor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "per_source_ip_mitigation_threshold": {
          "aliases": [],
          "description": "Specifies the rate limit applied to a source IP that is identified as a bad actor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Specifies the name of the profile to manage vectors in.\nThe name C(device-config) is reserved for use by this module.\nVectors can be managed in either DoS Profiles or Device Configuration. By specifying a profile of 'device-config', this module will specifically tailor configuration of the provided vectors to the Device Configuration.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "simulate_auto_threshold": {
          "aliases": [],
          "description": "Specifies results of the current automatic thresholds are logged, though manual thresholds are enforced, and no action is taken on automatic thresholds.\nThe C(sweep) vector does not support this parameter.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(state) is C(mitigate), ensures the vector enforces limits and thresholds.\nWhen C(state) is C(detect-only), ensures the vector does not enforce limits and thresholds (rate limiting, dropping, etc), but is still tracked in logs and statistics.\nWhen C(state) is C(disabled), ensures the vector does not enforce limits and thresholds, but is still tracked in logs and statistics.\nWhen C(state) is C(learn-only), ensures the vector does not \"detect\" any attacks. Only learning and stat collecting is performed.",
          "type": "str",
          "required": false,
          "choices": [
            "mitigate",
            "detect-only",
            "learn-only",
            "disabled"
          ],
          "suboptions": {}
        },
        "threshold_mode": {
          "aliases": [],
          "description": "The C(dns-malformed) vector does not support C(fully-automatic) or C(stress-based-mitigation) for this parameter.\nThe C(qdcount) vector does not support C(fully-automatic) or C(stress-based-mitigation) for this parameter.\nThe C(sip-malformed) vector does not support C(fully-automatic) or C(stress-based-mitigation) for this parameter.",
          "type": "str",
          "required": false,
          "choices": [
            "manual",
            "stress-based-mitigation",
            "fully-automatic"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "BIG-IP >= v13.0.0"
      ],
      "short_description": "Manage attack vector configuration in an AFM DoS profile",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Enable DNS AAAA vector mitigation\n  bigip_firewall_dos_vector:\n    name: aaaa\n    state: mitigate\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_firewall_global_rules": {
    "doc": {
      "description": "Configures the global network firewall rules on AFM (Advanced Firewall Manager). These firewall rules are applied to all packets except those going through the management interface. They are applied first, before any firewall rules for the packet's virtual server, route domain, and/or self IP address.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "Description for the global list of firewall rules.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enforced_policy": {
          "aliases": [],
          "description": "Specifies an enforced firewall policy.\nC(enforced_policy) rules are enforced globally.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "service_policy": {
          "aliases": [],
          "description": "Specifies a service policy that would apply to traffic globally.\nThe service policy is applied to all flows, provided there are no other context specific service policy configurations that override the global service policy. For example, when a service policy is configured both at a global level and on a firewall rule, and a flow matches the rule, the more specific service policy configuration in the rule will override the service policy setting at the global level.\nThe service policy associated here can be created using the C(bigip_service_policy) module.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "staged_policy": {
          "aliases": [],
          "description": "Specifies a staged firewall policy.\nC(staged_policy) rules are not enforced while all the visibility aspects (statistics, reporting, and logging) function as if the staged-policy rules were enforced globally.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage AFM global rule settings on BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Change enforced policy in AFM global rules\n  bigip_firewall_global_rules:\n    enforced_policy: enforcing1\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_firewall_log_profile": {
    "doc": {
      "description": "Manages AFM (Advanced Firewall Manager) logging profiles configured in the system along with basic information about each profile.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "Description of the log profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dos_protection": {
          "aliases": [],
          "description": "Configures DoS related settings of the log profile.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "dns_publisher": {
              "aliases": [],
              "description": "Specifies the name of the log publisher used for DNS DoS events.\nTo specify the log_publisher on a different partition from the AFM log profile, specify the name in fullpath format, e.g. C(/Foobar/log-publisher), otherwise the partition for the log publisher is inferred from the C(partition) module parameter.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "network_publisher": {
              "aliases": [],
              "description": "Specifies the name of the log publisher used for DoS Network events.\nTo specify the log_publisher on a different partition from the AFM log profile, specify the name in fullpath format, e.g. C(/Foobar/log-publisher), otherwise the partition for the log publisher is inferred from the C(partition) module parameter.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "sip_publisher": {
              "aliases": [],
              "description": "Specifies the name of the log publisher used for SIP DoS events.\nTo specify the log_publisher on a different partition from the AFM log profile, specify the name in fullpath format, e.g. C(/Foobar/log-publisher), otherwise the partition for the log publisher is inferred from the C(partition) module parameter.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "ip_intelligence": {
          "aliases": [],
          "description": "Configures IP Intelligence related settings of the log profile.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "log_publisher": {
              "aliases": [],
              "description": "Specifies the name of the log publisher used for IP Intelligence events.\nTo specify the log_publisher on a different partition from the AFM log profile, specify the name in fullpath format, e.g. C(/Foobar/log-publisher), otherwise the partition for the log publisher is inferred the from C(partition) module parameter.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "log_rtbh": {
              "aliases": [],
              "description": "When C(yes), specifies remotely triggered blackholing events are logged.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "log_shun": {
              "aliases": [],
              "description": "When C(yes), specifies IP Intelligence shun list events are logged.\nThis option can only be set on the C(global-network) built-in profile.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "log_translation_fields": {
              "aliases": [],
              "description": "This option is used to enable or disable the logging of translated (i.e server side) fields in IP Intelligence log messages.\nTranslated fields include (but are not limited to) source address/port, destination address/port, IP protocol, route domain, and VLAN.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "rate_limit": {
              "aliases": [],
              "description": "Defines a rate limit for all combined IP intelligence log messages per second. Beyond this rate limit, log messages are not logged until the threshold drops below the specified rate.\nTo specify an indefinite rate, use the value C(indefinite).\nIf specifying a numeric rate, the value must be between C(1) and C(4294967295).",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the log profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to create log profile on.\nParameter also used when specifying names for log publishers, unless log publisher names are in fullpath format.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port_misuse": {
          "aliases": [],
          "description": "Port Misuse log configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "log_publisher": {
              "aliases": [],
              "description": "Specifies the name of the log publisher used for Port Misuse events.\nTo specify the log_publisher on a different partition from the AFM log profile, specify the name in fullpath format, e.g. C(/Foobar/log-publisher), otherwise the partition for the log publisher is inferred from the C(partition) module parameter.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "rate_limit": {
              "aliases": [],
              "description": "Defines a rate limit for all combined port misuse log messages per second. Beyond this rate limit, log messages are not logged until the threshold drops below the specified rate.\nTo specify an indefinite rate, use the value C(indefinite).\nIf specifying a numeric rate, the value must be between C(1) and C(4294967295).",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(state) is C(present), ensures the resource exists.\nWhen C(state) is C(absent), ensures the resource is removed. Attempts to remove built-in system profiles are ignored and no change is returned.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages AFM logging profiles configured in the system",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a basic log profile with port misuse\n  bigip_firewall_log_profile:\n    name: barbaz\n    port_misuse:\n      rate_limit: 30000\n      log_publisher: local-db-pub\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Change ip_intelligence settings, publisher on different partition, remove port misuse\n  bigip_firewall_log_profile:\n    name: barbaz\n    ip_intelligence:\n      rate_limit: 400000\n      log_translation_fields: yes\n      log_rtbh: yes\n      log_publisher: \"/foobar/non-local-db\"\n    port_misuse:\n      log_publisher: \"\"\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create a log profile with dos protection, different partition\n  bigip_firewall_log_profile:\n    name: foobar\n    partition: foobar\n    dos_protection:\n      dns_publisher: \"/Common/local-db-pub\"\n      sip_publisher: \"non-local-db\"\n      network_publisher: \"/Common/local-db-pub\"\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove log profile\n  bigip_firewall_log_profile:\n    name: barbaz\n    partition: Common\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_firewall_log_profile_network": {
    "doc": {
      "description": "Configures Network Firewall related settings of the log profile.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "log_format_delimiter": {
          "aliases": [],
          "description": "Specifies the delimiter string when using a C(log_storage_format) of C(field-list).\nWhen creating a new profile, if this parameter is not specified, the default value of C(,) (the comma character) is used.\nThis option is valid when the C(log_storage_format) is set to C(field-list). It is ignored otherwise.\nDepending on the delimiter used, it may be necessary to wrap the delimiter in quotes to prevent YAML errors from occurring.\nThe special character C($) is reserved for internal use, and will raise an error if used.\nThe maximum length allowed for this parameter is C(31) characters.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_ip_errors": {
          "aliases": [],
          "description": "Modifies log settings for logging of IP error packets.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enabled": {
              "aliases": [],
              "description": "This option enables or disables the logging of IP error packets.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "rate_limit": {
              "aliases": [],
              "description": "This option sets rate limits for the logging of IP error packets.\nThis option is effective only if logging of this message type is enabled.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "log_matches_accept_rule": {
          "aliases": [],
          "description": "Modifies log settings for ACL rules configured with an \"accept\" or \"accept decisively\" action.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enabled": {
              "aliases": [],
              "description": "This option enables or disables the logging of packets that match ACL rules configured with an \"accept\" or \"accept decisively\" action.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "rate_limit": {
              "aliases": [],
              "description": "This option sets rate limits for the logging of packets that match ACL rules configured with an \"accept\" or \"accept decisively\" action.\nThis option is effective only if logging of this message type is enabled.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "log_matches_drop_rule": {
          "aliases": [],
          "description": "Modifies log settings for ACL rules configured with a drop action.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enabled": {
              "aliases": [],
              "description": "This option enables or disables the logging of packets that match ACL rules configured with a drop action.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "rate_limit": {
              "aliases": [],
              "description": "This option sets rate limits for the logging of packets that match ACL rules configured with a drop action.\nThis option is effective only if logging of this message type is enabled.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "log_matches_reject_rule": {
          "aliases": [],
          "description": "Modifies log settings for ACL rules configured with a reject action.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enabled": {
              "aliases": [],
              "description": "This option enables or disables the logging of packets that match ACL rules configured with a reject action.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "rate_limit": {
              "aliases": [],
              "description": "This option sets rate limits for the logging of packets that match ACL rules configured with a reject action.\nThis option is effective only if logging of this message type is enabled.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "log_message_fields": {
          "aliases": [],
          "description": "Specifies a set of fields to be logged.\nThis option is valid when the C(log_storage_format) is set to C(field-list). It is ignored otherwise.\nThe order of the list is important, as the server displays the selected traffic items in the log sequentially according to it.",
          "type": "list",
          "required": false,
          "choices": [
            "acl_policy_name",
            "acl_policy_type",
            "acl_rule_name",
            "action",
            "bigip_hostname",
            "context_name",
            "context_type",
            "date_time",
            "dest_fqdn",
            "dest_geo",
            "dest_ip",
            "dest_port",
            "drop_reason",
            "management_ip_address",
            "protocol",
            "route_domain",
            "sa_translation_pool",
            "sa_translation_type",
            "source_fqdn",
            "source_user",
            "src_geo",
            "src_ip",
            "src_port",
            "translated_dest_ip",
            "translated_dest_port",
            "translated_ip_protocol",
            "translated_route_domain",
            "translated_src_ip",
            "translated_src_port",
            "translated_vlan",
            "vlan"
          ],
          "elements": "str",
          "suboptions": {}
        },
        "log_publisher": {
          "aliases": [],
          "description": "Specifies the name of the log publisher used for Network events.\nTo specify the log_publisher on a different partition from the AFM log profile, specify the name in fullpath format, e.g. C(/Foobar/log-publisher), otherwise the partition for the log publisher is inferred from the C(partition) module parameter.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_storage_format": {
          "aliases": [],
          "description": "Specifies the type of the storage format.\nWhen creating a new log profile, if this parameter is not specified, the default is C(none).\nWhen C(field-list), specifies the log displays only the items you specify in the C(log_message_fields) list with C(log_format_delimiter) as the delimiter between the items.\nWhen C(none), the messages will be logged in the default format, which is C(\"management_ip_address\", \"bigip_hostname\",\"context_type\", \"context_name\",\"src_geo\",\"src_ip\", \"dest_geo\",\"dest_ip\",\"src_port\", \"dest_port\",\"vlan\",\"protocol\",\"route_domain\", \"translated_src_ip\", \"translated_dest_ip\", \"translated_src_port\",\"translated_dest_port\", \"translated_vlan\",\"translated_ip_protocol\", \"translated_route_domain\", \"acl_policy_type\", \"acl_policy_name\",\"acl_rule_name\",\"action\", \"drop_reason\",\"sa_translation_type\", \"sa_translation_pool\",\"flow_id\", \"source_user\", \"source_fqdn\",\"dest_fqdn\").",
          "type": "str",
          "required": false,
          "choices": [
            "field-list",
            "none"
          ],
          "suboptions": {}
        },
        "log_tcp_errors": {
          "aliases": [],
          "description": "Modifies log settings for the logging of TCP error packets.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enabled": {
              "aliases": [],
              "description": "This option enables or disables the logging of TCP error packets.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "rate_limit": {
              "aliases": [],
              "description": "This option sets rate limits for the logging of TCP error packets.\nThis option is effective only if logging of this message type is enabled.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "log_tcp_events": {
          "aliases": [],
          "description": "Modifies the log settings for logging of TCP events on the client side.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enabled": {
              "aliases": [],
              "description": "This option enables or disables the logging of TCP events on the client side.\nOnly B(Established) and B(Closed) states of a TCP session are logged if this option is enabled.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "rate_limit": {
              "aliases": [],
              "description": "This option sets rate limits for the logging of TCP events on the client side.\nThis option is effective only if logging of this message type is enabled.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "log_translation_fields": {
          "aliases": [],
          "description": "This option enables or disables the logging of translated (i.e server side) fields in ACL match and TCP events.\nTranslated fields include (but are not limited to) source address/port, destination address/port, IP protocol, route domain, and VLAN.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to create log profile on.\nThis parameter is also used when specifying names for log publishers, unless log publisher names are in fullpath format.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile_name": {
          "aliases": [],
          "description": "Specifies the name of the AFM (Advanced Firewall Manager) log profile to be updated.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rate_limit": {
          "aliases": [],
          "description": "Defines a rate limit for all combined network firewall log messages per second. Beyond this rate limit, log messages are not logged.\nTo specify an indefinite rate, use the value C(indefinite).\nIf specifying a numeric rate, the value must be between C(1) and C(4294967295).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(state) is C(present), ensures the resource exists.\nThe only built-in profile that allows updating network log settings is global-network, attempts to do so on other built-in profiles will be ignored.\nWhen C(state) is C(absent), ensures that the resource is removed.\nThe C(absent) state is ignored for global-network log profile.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Configures Network Firewall related settings of the log profile",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add network settings to log profile\n  bigip_firewall_log_profile_network:\n    profile_name: barbaz\n    rate_limit: 150000\n    log_publisher: local-db-pub\n    log_tcp_errors:\n      enabled: yes\n      rate_limit: 10000\n    log_tcp_events:\n      enabled: yes\n      rate_limit: 40000\n    log_storage_format: \"field-list\"\n    log_message_fields:\n      - vlan\n      - translated_vlan\n      - src_ip\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Change delimiter and log fields\n  bigip_firewall_log_profile_network:\n    profile_name: barbaz\n    log_format_delimiter: '.'\n    log_message_fields:\n      - translated_dest_ip\n      - translated_dest_port\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Modify built-in profile\n  bigip_firewall_log_profile_network:\n    profile_name: \"global-network\"\n    log_publisher: \"/foobar/log1\"\n    log_ip_errors:\n      enabled: yes\n      rate_limit: 60000\n    log_matches_reject_rule:\n      enabled: yes\n      rate_limit: 2000\n    log_translation_fields: yes\n    log_storage_format: \"field-list\"\n    log_format_delimiter: '.'\n    log_message_fields:\n      - protocol\n      - dest_ip\n      - dest_port\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove custom log profile network log settings\n  bigip_firewall_log_profile_network:\n    profile_name: \"{{ log_profile }}\"\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_firewall_policy": {
    "doc": {
      "description": "Manages AFM (Advanced Firewall Manager) security firewall policies on a BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "The description to attach to the policy.\nThis parameter is only supported on versions of BIG-IP >= 12.1.0. On earlier versions it is simply ignored.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the policy to create.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rules": {
          "aliases": [],
          "description": "Specifies a list of rules you want associated with this policy. The order of this list is the order they will be evaluated by BIG-IP. If the specified rules do not exist (for example when creating a new policy), they will be created.\nRules specified here, if they do not exist, will be created with \"default deny\" behavior. It is expected that you follow-up after this module with the actual configuration for these rules.\nThe C(bigip_firewall_rule) module can also be used to create and edit existing and new rules.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(state) is C(present), ensures the policy exists.\nWhen C(state) is C(absent), ensures the policy is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage AFM security firewall policies on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a basic policy with some rule stubs\n  bigip_firewall_policy:\n    name: foo\n    rules:\n      - rule1\n      - rule2\n      - rule3\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_firewall_port_list": {
    "doc": {
      "description": "Manages the AFM (Advanced Firewall Manager) port lists on a BIG-IP. This module can be used to add and remove port list entries.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "Description of the port list.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the port list.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port_lists": {
          "aliases": [],
          "description": "Simple list of existing port lists to add to this list. Port lists can be specified in either their fully qualified name (/Common/foo) or their short name (foo). If a short name is used, the C(partition) argument will automatically be prepended to the short name.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "port_ranges": {
          "aliases": [],
          "description": "A list of port ranges where the range starts with a port number, is followed by a dash (-), and then a second number.\nIf the first number is greater than the second number, the numbers will be reversed to be properly formatted, for example 90-78 would become 78-90.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "ports": {
          "aliases": [],
          "description": "Simple list of port values to add to the list.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the address list and entries exists.\nWhen C(absent), ensures the address list is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage port lists on BIG-IP AFM",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a simple port list\n  bigip_firewall_port_list:\n    name: foo\n    ports:\n      - 80\n      - 443\n    state: present\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Override the above list of ports with a new list\n  bigip_firewall_port_list:\n    name: foo\n    ports:\n      - 3389\n      - 8080\n      - 25\n    state: present\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create port list with series of ranges\n  bigip_firewall_port_list:\n    name: foo\n    port_ranges:\n      - 25-30\n      - 80-500\n      - 50-78\n    state: present\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Use multiple types of port arguments\n  bigip_firewall_port_list:\n    name: foo\n    port_ranges:\n      - 25-30\n      - 80-500\n      - 50-78\n    ports:\n      - 8080\n      - 443\n    state: present\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove port list\n  bigip_firewall_port_list:\n    name: foo\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create port list from a file with one port per line\n  bigip_firewall_port_list:\n    name: lot-of-ports\n    ports: \"{{ lookup('file', 'my-large-port-list.txt').split('\\n') }}\"\n    state: present\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_firewall_rule": {
    "doc": {
      "description": "Manages firewall rules in an AFM (Advanced Firewall Manager) firewall policy. New rules will always be added to the end of the policy. Rules can be re-ordered using the C(bigip_security_policy) module. Rules can also be pre-ordered using the C(bigip_security_policy) module and then later updated using the C(bigip_firewall_rule) module.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "action": {
          "aliases": [],
          "description": "Specifies the action for the firewall rule.\nWhen C(accept), allows packets with the specified source, destination, and protocol to pass through the firewall. Packets that match the rule and are accepted, traverse the system as if the firewall is not present.\nWhen C(drop), drops packets with the specified source, destination, and protocol. Dropping a packet is a silent action with no notification to the source or destination systems. Dropping the packet causes the connection to be retried until the retry threshold is reached.\nWhen C(reject), rejects packets with the specified source, destination, and protocol. When a packet is rejected, the firewall sends a destination unreachable message to the sender.\nWhen C(accept-decisively), allows packets with the specified source, destination, and protocol to pass through the firewall, and does not require any further processing by any of the further firewalls. Packets that match the rule and are accepted, traverse the system as if the firewall is not present. If the Rule List is applied to a virtual server, management IP, or self IP firewall rule, then Accept Decisively is equivalent to Accept.\nWhen creating a new rule, if this parameter is not provided, the default is C(reject).",
          "type": "str",
          "required": false,
          "choices": [
            "accept",
            "drop",
            "reject",
            "accept-decisively"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The rule description.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "destination": {
          "aliases": [],
          "description": "Specifies packet destinations to which the rule applies.\nLeaving this field blank applies the rule to all addresses and all ports.\nYou can specify the following destination items. An IPv4 or IPv6 address, an IPv4 or IPv6 address range, geographic location, VLAN, address list, port, port range, port list or address list.\nYou can specify a mix of different types of items for the source address.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "address": {
              "aliases": [],
              "description": "Specifies a specific IP address.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "address_list": {
              "aliases": [],
              "description": "Specifies an existing address list.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "address_range": {
              "aliases": [],
              "description": "Specifies an address range.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "country": {
              "aliases": [],
              "description": "Specifies a country code.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies a single numeric port.\nThis option is only valid when C(protocol) is C(tcp)(6) or C(udp)(17).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "port_list": {
              "aliases": [],
              "description": "Specifes an existing port list.\nThis option is only valid when C(protocol) is C(tcp)(6) or C(udp)(17).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port_range": {
              "aliases": [],
              "description": "Specifies a range of ports, which is two port values separated by a hyphen. The port to the left of the hyphen should be less than the port to the right.\nThis option is only valid when C(protocol) is C(tcp)(6) or C(udp)(17).",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "icmp_message": {
          "aliases": [],
          "description": "Specifies the Internet Control Message Protocol (ICMP) or ICMPv6 message C(type) and C(code) the rule uses.\nThis parameter is only relevant when C(protocol) is either C(icmp)(1) or C(icmpv6)(58).",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "code": {
              "aliases": [],
              "description": "Specifies the code returned in response to the specified ICMP message type.\nYou can specify codes, each set appropriate to the associated type, such as No Code (0) (associated with Echo Reply (0)) and Host Unreachable (1) (associated with Destination Unreachable (3)), or you can specify C(any) to indicate the system applies the rule for all codes in response to that specific ICMP message.\nYou can also specify an arbitrary code.\nThe ICMP protocol contains definitions for the existing message code and number pairs.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "Specifies the type of ICMP message.\nYou can specify control messages, such as Echo Reply (0) and Destination Unreachable (3), or you can specify C(any) to indicate the system applies the rule for all ICMP messages.\nYou can also specify an arbitrary ICMP message.\nThe ICMP protocol contains definitions for the existing message type and number pairs.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "irule": {
          "aliases": [],
          "description": "Specifies an iRule that is applied to the firewall rule.\nAn iRule can be started when the firewall rule matches traffic.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "logging": {
          "aliases": [],
          "description": "Specifies whether logging is enabled or disabled for the firewall rule.\nWhen creating a new rule, if this parameter is not specified, the default if C(no).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the rule.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent_policy": {
          "aliases": [],
          "description": "The policy which contains the rule to be managed.\nOne of either C(parent_policy) or C(parent_rule_list) is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "parent_rule_list": {
          "aliases": [],
          "description": "The rule list which contains the rule to be managed.\nOne of either C(parent_policy) or C(parent_rule_list) is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "protocol": {
          "aliases": [],
          "description": "Specifies the protocol to which the rule applies.\nProtocols may be specified by either their name or numeric value.\nA special protocol value C(any) can be specified to match any protocol. The numeric equivalent of this protocol is C(255).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rule_list": {
          "aliases": [],
          "description": "Specifies an existing rule list to use in the rule.\nThis parameter is mutually exclusive with many of the other individual-rule specific settings. This includes C(logging), C(action), C(source), C(destination), C(irule'), C(protocol) and C(logging).\nThis parameter is only used when C(parent_policy) is specified, otherwise it is ignored.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "schedule": {
          "aliases": [],
          "description": "Specifies a schedule for the firewall rule.\nYou configure schedules to define days and times when the firewall rule is made active.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source": {
          "aliases": [],
          "description": "Specifies packet sources to which the rule applies.\nLeaving this field blank applies the rule to all addresses and all ports.\nYou can specify the following source items. An IPv4 or IPv6 address, an IPv4 or IPv6 address range, geographic location, VLAN, address list, port, port range, port list or address list.\nYou can specify a mix of different types of items for the source address.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "address": {
              "aliases": [],
              "description": "Specifies a specific IP address.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "address_list": {
              "aliases": [],
              "description": "Specifies an existing address list.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "address_range": {
              "aliases": [],
              "description": "Specifies an address range.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "country": {
              "aliases": [],
              "description": "Specifies a country code.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies a single numeric port.\nThis option is only valid when C(protocol) is C(tcp)(6) or C(udp)(17).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "port_list": {
              "aliases": [],
              "description": "Specifes an existing port list.\nThis option is only valid when C(protocol) is C(tcp)(6) or C(udp)(17).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port_range": {
              "aliases": [],
              "description": "Specifies a range of ports, which is two port values separated by a hyphen. The port to the left of the hyphen should be less than the port to the right.\nThis option is only valid when C(protocol) is C(tcp)(6) or C(udp)(17).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "vlan": {
              "aliases": [],
              "description": "Specifies VLANs to which the rule applies.\nThe VLAN source refers to the packet's source.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(state) is C(present), ensures the rule exists.\nWhen C(state) is C(absent), ensures the rule is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "status": {
          "aliases": [],
          "description": "Indicates the activity state of the rule or rule list.\nWhen C(disabled), specifies the rule or rule list does not apply at all.\nWhen C(enabled), specifies the system applies the firewall rule or rule list to the given context and addresses.\nWhen C(scheduled), specifies the system applies the rule or rule list according to the specified schedule.\nWhen creating a new rule, if this parameter is not provided, the default is C(enabled).",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled",
            "scheduled"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage AFM Firewall rules",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a new rule in the foo firewall policy\n  bigip_firewall_rule:\n    name: foo\n    parent_policy: policy1\n    protocol: tcp\n    source:\n      - address: 1.2.3.4\n      - address: \"::1\"\n      - address_list: foo-list1\n      - address_range: 1.1.1.1-2.2.2.2\n      - vlan: vlan1\n      - country: US\n      - port: 22\n      - port_list: port-list1\n      - port_range: 80-443\n    destination:\n      - address: 1.2.3.4\n      - address: \"::1\"\n      - address_list: foo-list1\n      - address_range: 1.1.1.1-2.2.2.2\n      - country: US\n      - port: 22\n      - port_list: port-list1\n      - port_range: 80-443\n    irule: irule1\n    action: accept\n    logging: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create an ICMP specific rule\n  bigip_firewall_rule:\n    name: foo\n    protocol: icmp\n    icmp_message:\n      type: 0\n    source:\n      - country: US\n    action: drop\n    logging: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Add a new policy rule that uses an existing rule list\n  bigip_firewall_rule:\n    name: foo\n    parent_policy: foo_policy\n    rule_list: rule-list1\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_firewall_rule_list": {
    "doc": {
      "description": "Manages AFM (Advanced Firewall Manager) security firewall policies on a BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "The description to attach to the policy.\nThis parameter is only supported on versions of BIG-IP >= 12.1.0. On earlier versions it is ignored.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the policy to create.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rules": {
          "aliases": [],
          "description": "Specifies a list of rules you want associated with this policy. The order of this list is the order they will be evaluated by BIG-IP. If the specified rules do not exist (for example when creating a new policy) then they will be created.\nRules specified here, if they do not exist, will be created with \"default deny\" behavior. It is expected that you follow-up this module with the actual configuration for these rules.\nThe C(bigip_firewall_rule) module can also be used to create, as well as edit, existing and new rules.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(state) is C(present), ensures the rule list exists.\nWhen C(state) is C(absent), ensures the rule list is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage AFM security firewall policies on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a basic policy with some rule stubs\n  bigip_firewall_rule_list:\n    name: foo\n    rules:\n      - rule1\n      - rule2\n      - rule3\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_firewall_schedule": {
    "doc": {
      "description": "Manage BIG-IP AFM (Avanced Firewall Manager) schedule configurations.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "daily_hour_end": {
          "aliases": [],
          "description": "Specifies the time of day the rule will stop being used.\nWhen not defined, the default of C(24:00) is used when creating a new schedule.\nThe time zone is always assumed to be UTC and values must be provided as C(HH:MM) using 24hour clock format.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "daily_hour_start": {
          "aliases": [],
          "description": "Specifies the time of day the rule will start to be in use.\nThe value must be a time before C(daily_hour_end).\nWhen not defined, the default of C(0:00) is used when creating a new schedule.\nWhen the value is set to C(all-day) both C(daily_hour_end) and C(daily_hour_start) are reset to their respective defaults.\nThe time zone is always assumed to be UTC and values must be provided as C(HH:MM) using 24hour clock format.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "date_valid_end": {
          "aliases": [],
          "description": "Specifies the end date/time this schedule will apply to the rule.\nThe date must be after C(date_valid_start)\nWhen not defined, the default of C(indefinite) is used when creating a new schedule.\nThe time zone is always assumed to be UTC.\nThe datetime format should always be in C(YYYY-MM-DD:HH:MM:SS) format.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "date_valid_start": {
          "aliases": [],
          "description": "Specifies the start date/time this schedule will apply to the rule.\nWhen not defined the default of C(epoch) is used when creating a new schedule.\nThe time zone is always assumed to be UTC.\nThe datetime format should always be in C(YYYY-MM-DD:HH:MM:SS) format.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "days_of_week": {
          "aliases": [],
          "description": "Specifies which days of the week the rule will be applied.\nWhen not defined, the default value of C(all) is used when creating a new schedule.\nThe C(all) value is mutually exclusive with other choices.",
          "type": "list",
          "required": false,
          "choices": [
            "sunday",
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "all"
          ],
          "elements": "str",
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Specifies the user defined description text.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the AFM schedule configuration.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage BIG-IP AFM schedule configurations",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a 6 hour two day schedule, no start/end date\n  bigip_firewall_schedule:\n    name: barfoo\n    daily_hour_start: 13:00\n    daily_hour_end: 19:00\n    days_of_week:\n      - monday\n      - tuesday\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create a seven day schedule with start/end date\n  bigip_firewall_schedule:\n    name: foobar\n    date_valid_start: \"{{ lookup('pipe','date +%Y-%m-%d:%H:%M:%S') }}\"\n    date_valid_end: \"{{ lookup('pipe','date -d \\\"now + 7 days\\\" +%Y-%m-%d:%H:%M:%S') }}\"\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Modify created schedule to all-day\n  bigip_firewall_schedule:\n    name: barfoo\n    daily_hour_start: all-day\n    days_of_week:\n      - monday\n      - tuesday\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Modify a schedule to have no end date\n  bigip_firewall_schedule:\n    name: foobar\n    date_valid_start: \"{{ lookup('pipe','date +%Y-%m-%d:%H:%M:%S') }}\"\n    date_valid_end: \"indefinite\"\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove created schedule\n  bigip_firewall_schedule:\n    name: foobar\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_gtm_datacenter": {
    "doc": {
      "description": "Manage BIG-IP data center configuration. A data center defines the location where the physical network components reside, such as the server and link objects that share the same subnet on the network. This module is able to manipulate the data center definitions in a BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "contact": {
          "aliases": [],
          "description": "The name of the contact for the data center.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the data center.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "The location of the data center.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the data center.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "The virtual address state. If C(absent), an attempt to delete the virtual address will be made. This will only succeed if this virtual address is not in use by a virtual server. C(present) creates the virtual address and enables it. If C(enabled), enables the virtual address if it exists. If C(disabled), creates the virtual address if needed, and sets state to C(disabled).",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage Datacenter configuration in BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create data center \"New York\"\n  bigip_gtm_datacenter:\n    name: New York\n    location: 222 West 23rd\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_gtm_dns_listener": {
    "doc": {
      "description": "Defines one or more Listener objects to control which protocols are available for the BIG-IP DNS system to process DNS requests.\nBIG-IP DNS Listeners allow TCP and UDP protocols.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "address": {
          "aliases": [],
          "description": "Specifies the IP address on which the system listens.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "advertise": {
          "aliases": [],
          "description": "Specifies whether this Listener's address is advertised to surrounding routers.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auto_lasthop": {
          "aliases": [],
          "description": "Specifies whether to automatically map the last hop for pools or not.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Provides a brief description for DNS Listener.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "disabled_vlans": {
          "aliases": [],
          "description": "List of VLANs to be disabled. If the partition is not specified in the VLAN, then the C(partition) option of this module will be used.\nThis parameter is mutually exclusive with the C(enabled_vlans) parameters.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "enabled_vlans": {
          "aliases": [],
          "description": "List of VLANs to be enabled. When a VLAN named C(all) is used, all VLANs will be allowed. VLANs can be specified with or without the leading partition. If the partition is not specified in the VLAN, then the C(partition) option of this module will be used.\nThis parameter is mutually exclusive with the C(disabled_vlans) parameter.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "fallback_persistence": {
          "aliases": [],
          "description": "Specifies a fallback persistence profile for the Listener to use when the default persistence profile is not available.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ip_protocol": {
          "aliases": [],
          "description": "Specifies the protocol on which this Listener receives network traffic.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "irules": {
          "aliases": [],
          "description": "Specifies list of iRules to run on the Listener.\niRules help automate the intercepting, processing, and routing of application traffic.\nIf you want to remove existing iRules, provide an empty list value; C([]). See the documentation for an example.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "last_hop_pool": {
          "aliases": [],
          "description": "Specifies the name of the last hop pool that you want the Listener to use to direct reply traffic to the last hop router.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mask": {
          "aliases": [],
          "description": "Specifies the netmask for a network Listener only.\nNetmask clarifies whether the host bit is an actual zero or a wildcard representation.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the DNS Listener.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "pool": {
          "aliases": [],
          "description": "Specifies a default pool to which the Listener automatically directs traffic.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Specifies the port on which the Listener listens for connections.\nValid range of values is between C(0) and C(65535) inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "source_port": {
          "aliases": [],
          "description": "Specifies whether the system preserves the source port of the connection.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "DNS Listener state.\nWhen C(present), ensures the pool is created and enabled.\nWhen C(absent), ensures the pool is removed from the system.\nWhen C(enabled) or C(disabled), ensures the pool is enabled or disabled respectively) on the remote device.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "translate_address": {
          "aliases": [],
          "description": "Enables or disables address translation for the Listener.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "translate_port": {
          "aliases": [],
          "description": "Enables or disables port translation.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Configures the BIG-IP DNS system to answer TCP or UDP DNS requests",
      "version_added": "1.4.0"
    },
    "examples": "\n\n- name: 'Create DNS Listener'\n  bigip_gtm_dns_listener:\n    address: '192.0.1.0'\n    advertise: false\n    auto_lasthop: default\n    description: 'this is a test DNS listener'\n    enabled_vlans:\n      - /Common/external\n    ip_protocol: tcp\n    irules:\n      - /Common/irule1\n    mask: '255.255.255.0'\n    pool: /Common/webpool\n    name: test-dns-listener\n    port: 30025\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n    source_port: preserve\n    state: present\n    translate_address: yes\n    translate_port: yes\n  delegate_to: localhost\n\n- name: 'Disable a DNS Listener'\n  bigip_gtm_dns_listener:\n    address: '192.0.1.0'\n    state: disabled\n    name: test-dns-listener\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_gtm_global": {
    "doc": {
      "description": "Manages global BIG-IP GTM (now BIG-IP DNS) settings. These settings include general, load balancing, and metrics related settings.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "synchronization": {
          "aliases": [],
          "description": "Specifies whether this system is a member of a synchronization group.\nWhen you enable synchronization, the system periodically queries other systems in the synchronization group to obtain and distribute configuration and metrics collection updates.\nThe synchronization group may contain systems configured as Global Traffic Manager (DNS) and Link Controller systems.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "synchronization_group_name": {
          "aliases": [],
          "description": "Specifies the name of the synchronization group to which the system belongs.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "synchronize_zone_files": {
          "aliases": [],
          "description": "Specifies the system synchronizes Domain Name System (DNS) zone files among the synchronization group members.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages global GTM settings",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Configure synchronization settings\n  bigip_gtm_global:\n    synchronization: yes\n    synchronization_group_name: my-group\n    synchronize_zone_files: yes\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_gtm_monitor_bigip": {
    "doc": {
      "description": "Manages F5 BIG-IP GTM (now BIG-IP DNS) BIG-IP monitors. This monitor is used by GTM to monitor BIG-IPs themselves.",
      "has_action": false,
      "notes": "Requires BIG-IP software version >= 12\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "aggregate_dynamic_ratios": {
          "aliases": [],
          "description": "Specifies how the system combines the module values to create the proportion (score) for the load balancing operation.\nThe score represents the module's estimated capacity for handing traffic.\nAveraged values are appropriate for downstream Web Accelerator or Application Security Manager (ASM) virtual servers.\nWhen creating a new monitor, if this parameter is not specified, the default of C(none) is used, meaning the system does not use the scores in the load balancing operation.\nWhen C(none), specifies the monitor ignores the nodes and pool member scores.\nWhen C(average-nodes), specifies the system averages the dynamic ratios on the nodes associated with the monitor's target virtual servers and returns that average as the virtual servers' score.\nWhen C(sum-nodes), specifies the system adds together the scores of the nodes associated with the monitor's target virtual servers and uses that value in the load balancing operation.\nWhen C(average-members), specifies the system averages the dynamic ratios on the pool members associated with the monitor's target virtual servers and returns that average as the virtual servers' score.\nWhen C(sum-members), specifies the system adds together the scores of the pool members associated with the monitor's target virtual servers and uses that value in the load balancing operation.",
          "type": "str",
          "required": false,
          "choices": [
            "none",
            "average-nodes",
            "sum-nodes",
            "average-members",
            "sum-members"
          ],
          "suboptions": {}
        },
        "ignore_down_response": {
          "aliases": [],
          "description": "Specifies the monitor allows more than one probe attempt per interval.\nWhen C(yes), specifies the monitor ignores down responses for the duration of the monitor timeout. Once the monitor timeout is reached without the system receiving an up response, the system marks the object down.\nWhen C(no), specifies the monitor immediately marks an object down when it receives a down response.\nWhen creating a new monitor, if this parameter is not provided, the default value will be C(no).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "Specifies, in seconds, the frequency at which the system issues the monitor check when either the resource is down or the status of the resource is unknown.\nWhen creating a new monitor, if this parameter is not provided, the default value will be C(30). This value B(must) be less than the C(timeout) value.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value will be '*'.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the monitor.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is the C(bigip) parent on the C(Common) partition.",
          "default": "/Common/bigip",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value will be '*'. Note that if specifying an IP address, you must use a value between 1 and 65535.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "Specifies the number of seconds the target has in which to respond to the monitor request.\nIf the target responds within the set time period, it is considered up.\nIf the target does not respond within the set time period, it is considered down.\nWhen this value is set to 0 (zero), the system uses the interval from the parent monitor.\nWhen creating a new monitor, if this parameter is not provided, the default value will be C(90).",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP GTM BIG-IP monitors",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create BIG-IP Monitor\n  bigip_gtm_monitor_bigip:\n    state: present\n    ip: 10.10.10.10\n    name: my_monitor\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Remove BIG-IP Monitor\n  bigip_gtm_monitor_bigip:\n    state: absent\n    name: my_monitor\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Add BIG-IP monitor for all addresses, port 514\n  bigip_gtm_monitor_bigip:\n    port: 514\n    name: my_monitor\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_gtm_monitor_external": {
    "doc": {
      "description": "Manages external GTM (now BIG-IP DNS) monitors on a BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "arguments": {
          "aliases": [],
          "description": "Specifies any command-line arguments the script requires.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "external_program": {
          "aliases": [],
          "description": "Specifies the name of the file for the monitor to use. In order to reference a file, you must first import it using options on the System > File Management > External Monitor Program File List > Import screen. The BIG-IP system automatically places the file in the proper location on the file system.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "The interval specifying how frequently the monitor instance of this template will run. If this parameter is not provided when creating a new monitor, the default value will be 30. This value B(must) be less than the C(timeout) value.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, then the default value will be '*'.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the monitor.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is the C(http) parent on the C(Common) partition.",
          "default": "/Common/external",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value will be '*'. Note that if specifying an IP address, you must use a value between 1 and 65535.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "The number of seconds in which the node or service must respond to the monitor request. If the target responds within the set time period, it is considered up. If the target does not respond within the set time period, it is considered down. You can change this to any number, however, it should be 3 times the interval number of seconds plus 1 second. If this parameter is not provided when creating a new monitor, the default value will be 120.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "variables": {
          "aliases": [],
          "description": "Specifies any variables the script requires.\nDouble quotes in values will be suppressed.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages external GTM monitors on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create an external monitor\n  bigip_gtm_monitor_external:\n    name: foo\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Create an external monitor with variables\n  bigip_gtm_monitor_external:\n    name: foo\n    timeout: 10\n    variables:\n      var1: foo\n      var2: bar\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Add a variable to an existing set\n  bigip_gtm_monitor_external:\n    name: foo\n    timeout: 10\n    variables:\n      var1: foo\n      var2: bar\n      cat: dog\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_gtm_monitor_firepass": {
    "doc": {
      "description": "Manages F5 BIG-IP GTM (now BIG-IP DNS) FirePass monitors.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "cipher_list": {
          "aliases": [],
          "description": "Specifies the list of ciphers for this monitor.\nThe items in the cipher list are separated with the colon C(:) symbol.\nWhen creating a new monitor, if this parameter is not specified, the default list is C(HIGH:!ADH).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "concurrency_limit": {
          "aliases": [],
          "description": "Specifies the maximum percentage of licensed connections currently in use under which the monitor marks the Secure Access Manager system up.\nAs an example, a setting of 95 percent means that the monitor marks the Secure Access Manager system up until 95 percent of licensed connections are in use.\nWhen the number of in-use licensed connections exceeds 95 percent, the monitor marks the Secure Access Manager system down.\nWhen creating a new monitor, if this parameter is not specified, the default is C(95).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ignore_down_response": {
          "aliases": [],
          "description": "Specifies the monitor allows more than one probe attempt per interval.\nWhen C(yes), specifies the monitor ignores down responses for the duration of the monitor timeout. Once the monitor timeout is reached without the system receiving an up response, the system marks the object down.\nWhen C(no), specifies the monitor immediately marks an object down when it receives a down response.\nWhen creating a new monitor, if this parameter is not provided, the default value will be C(no).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "The interval specifying how frequently the monitor instance of this template will run.\nIf this parameter is not provided when creating a new monitor, then the default value will be 30.\nThis value B(must) be less than the C(timeout) value.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value will be '*'.\nIf this value is an IP address, a C(port) number must be specified.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "max_load_average": {
          "aliases": [],
          "description": "Specifies the number the monitor uses to mark the Secure Access Manager system up or down.\nThe system compares the Max Load Average setting against a one-minute average of the Secure Access Manager system load.\nWhen the Secure Access Manager system-load average falls within the specified Max Load Average, the monitor marks the Secure Access Manager system up.\nWhen the average exceeds the setting, the monitor marks the system down.\nWhen creating a new monitor, if this parameter is not specified, the default is C(12).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Monitor name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is the C(tcp) parent on the C(Common) partition.",
          "default": "/Common/firepass_gtm",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value will be '*'. Note that if specifying an IP address, a value between 1 and 65535 must be specified.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "probe_timeout": {
          "aliases": [],
          "description": "Specifies the number of seconds after which the system times out the probe request to the system.\nWhen creating a new monitor, if this parameter is not provided, the default value will be C(5).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target_password": {
          "aliases": [],
          "description": "Specifies the password, if the monitored target requires authentication.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_username": {
          "aliases": [],
          "description": "Specifies the user name, if the monitored target requires authentication.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "The number of seconds in which the node or service must respond to the monitor request. If the target responds within the set time period, it is considered up. If the target does not respond within the set time period, it is considered down. You can change this to any number, however, it should be 3 times the interval number of seconds plus 1 second.\nIf this parameter is not provided when creating a new monitor, the default value will be 90.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "C(always) will update passwords if the C(target_password) is specified.\nC(on_create) will only set the password for newly created monitors.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_create"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP GTM FirePass monitors",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a GTM FirePass monitor\n  bigip_gtm_monitor_firepass:\n    name: my_monitor\n    ip: 1.1.1.1\n    port: 80\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Remove FirePass Monitor\n  bigip_gtm_monitor_firepass:\n    name: my_monitor\n    state: absent\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Add FirePass monitor for all addresses, port 514\n  bigip_gtm_monitor_firepass:\n    name: my_monitor\n    port: 514\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_gtm_monitor_http": {
    "doc": {
      "description": "Manages F5 BIG-IP GTM (now BIG-IP DNS) HTTP monitors.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "ignore_down_response": {
          "aliases": [],
          "description": "Specifies the monitor allows more than one probe attempt per interval.\nWhen C(yes), specifies the monitor ignores down responses for the duration of the monitor timeout. Once the monitor timeout is reached without the system receiving an up response, the system marks the object down.\nWhen C(no), specifies the monitor immediately marks an object down when it receives a down response.\nWhen creating a new monitor, if this parameter is not provided, the default value will be C(no).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "The interval specifying how frequently the monitor instance of this template will run.\nIf this parameter is not provided when creating a new monitor, the default value will be 30.\nThis value B(must) be less than the C(timeout) value.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value will be '*'.\nIf this value is an IP address, then a C(port) number must be specified.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Monitor name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is the C(http) parent on the C(Common) partition.",
          "default": "/Common/http",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value will be '*'. If specifying an IP address, you must use a value between 1 and 65535.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "probe_timeout": {
          "aliases": [],
          "description": "Specifies the number of seconds after which the system times out the probe request to the system.\nWhen creating a new monitor, if this parameter is not provided, the default value will be C(5).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "receive": {
          "aliases": [],
          "description": "The receive string for the monitor call.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "reverse": {
          "aliases": [],
          "description": "Instructs the system to mark the target resource down when the test is successful. This setting is useful, for example, if the content on your web site home page is dynamic and changes frequently, you may want to set up a reverse ECV service check that looks for the string Error.\nA match for this string means the web server was down.\nTo use this option, you must specify values for C(send) and C(receive).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "send": {
          "aliases": [],
          "description": "The send string for the monitor call.\nWhen creating a new monitor, if this parameter is not provided, the default of C(GET /\\r\\n) will be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target_password": {
          "aliases": [],
          "description": "Specifies the password, if the monitored target requires authentication.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_username": {
          "aliases": [],
          "description": "Specifies the user name, if the monitored target requires authentication.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "The number of seconds in which the node or service must respond to the monitor request. If the target responds within the set time period, it is considered up. If the target does not respond within the set time period, it is considered down. You can change this to any number, however, it should be 3 times the interval number of seconds plus 1 second.\nIf this parameter is not provided when creating a new monitor, then default value will be 120.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "transparent": {
          "aliases": [],
          "description": "Specifies whether the monitor operates in transparent mode.\nA monitor in transparent mode directs traffic through the associated pool members or nodes (usually a router or firewall) to the aliased destination (that is, it probes the C(ip)-C(port) combination specified in the monitor).\nIf the monitor cannot successfully reach the aliased destination, the pool member or node through which the monitor traffic was sent is marked down.\nWhen creating a new monitor, if this parameter is not provided, the default value will be C(no).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "C(always) will update passwords if the C(target_password) is specified.\nC(on_create) will only set the password for newly created monitors.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_create"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP GTM HTTP monitors",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a GTM HTTP monitor\n  bigip_gtm_monitor_http:\n    name: my_monitor\n    ip: 1.1.1.1\n    port: 80\n    send: my send string\n    receive: my receive string\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Remove HTTP Monitor\n  bigip_gtm_monitor_http:\n    name: my_monitor\n    state: absent\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Add HTTP monitor for all addresses, port 514\n  bigip_gtm_monitor_http:\n    name: my_monitor\n    port: 514\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_gtm_monitor_https": {
    "doc": {
      "description": "Manages F5 BIG-IP GTM (now BIG-IP DNS) HTTPS monitors.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "cipher_list": {
          "aliases": [],
          "description": "Specifies the list of ciphers for this monitor.\nThe items in the cipher list are separated with the colon C(:) symbol.\nWhen creating a new monitor, if this parameter is not specified, the default list is C(DEFAULT:+SHA:+3DES:+kEDH).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client_cert": {
          "aliases": [],
          "description": "Specifies a fully-qualified path for a client certificate the monitor sends to the target SSL server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client_key": {
          "aliases": [],
          "description": "Specifies a key for a client certificate the monitor sends to the target SSL server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "compatibility": {
          "aliases": [],
          "description": "Specifies, when enabled, the SSL options setting (in OpenSSL) is set to B(all).\nWhen creating a new monitor, if this value is not specified, the default is C(yes)",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ignore_down_response": {
          "aliases": [],
          "description": "Specifies the monitor allows more than one probe attempt per interval.\nWhen C(yes), specifies the monitor ignores down responses for the duration of the monitor timeout. Once the monitor timeout is reached without the system receiving an up response, the system marks the object down.\nWhen C(no), specifies the monitor immediately marks an object down when it receives a down response.\nWhen creating a new monitor, if this parameter is not provided, the default value will be C(no).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "The interval specifying how frequently the monitor instance of this template will run.\nIf this parameter is not provided when creating a new monitor, the default value will be 30.\nThis value B(must) be less than the C(timeout) value.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value will be '*'.\nIf this value is an IP address, a C(port) number must be specified.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Monitor name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is the C(https) parent on the C(Common) partition.",
          "default": "/Common/https",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value will be '*'. If specifying an IP address, you must specify a value between 1 and 65535.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "probe_timeout": {
          "aliases": [],
          "description": "Specifies the number of seconds after which the system times out the probe request to the system.\nWhen creating a new monitor, if this parameter is not provided, then the default value will be C(5).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "receive": {
          "aliases": [],
          "description": "The receive string for the monitor call.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "reverse": {
          "aliases": [],
          "description": "Instructs the system to mark the target resource down when the test is successful. This setting is useful, for example, if the content on your web site home page is dynamic and changes frequently, you may want to set up a reverse ECV service check that looks for the string Error.\nA match for this string means the web server was down.\nTo use this option, you must specify values for C(send) and C(receive).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "send": {
          "aliases": [],
          "description": "The send string for the monitor call.\nWhen creating a new monitor, if this parameter is not provided, the default of C(GET /\\r\\n) will be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target_password": {
          "aliases": [],
          "description": "Specifies the password, if the monitored target requires authentication.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_username": {
          "aliases": [],
          "description": "Specifies the user name, if the monitored target requires authentication.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "The number of seconds in which the node or service must respond to the monitor request. If the target responds within the set time period, it is considered up. If the target does not respond within the set time period, it is considered down. You can change this to any number, however, it should be 3 times the interval number of seconds plus 1 second.\nIf this parameter is not provided when creating a new monitor, the default value will be 120.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "transparent": {
          "aliases": [],
          "description": "Specifies whether the monitor operates in transparent mode.\nA monitor in transparent mode directs traffic through the associated pool members or nodes (usually a router or firewall) to the aliased destination (that is, it probes the C(ip)-C(port) combination specified in the monitor).\nIf the monitor cannot successfully reach the aliased destination, the pool member or node through which the monitor traffic was sent is marked down.\nWhen creating a new monitor, if this parameter is not provided, the default value will be C(no).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "C(always) will update passwords if the C(target_password) is specified.\nC(on_create) will only set the password for newly created monitors.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_create"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP GTM HTTPS monitors",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a GTM HTTPS monitor\n  bigip_gtm_monitor_https:\n    name: my_monitor\n    ip: 1.1.1.1\n    port: 80\n    send: my send string\n    receive: my receive string\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Remove HTTPS Monitor\n  bigip_gtm_monitor_https:\n    name: my_monitor\n    state: absent\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Add HTTPS monitor for all addresses, port 514\n  bigip_gtm_monitor_https:\n    name: my_monitor\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n    port: 514\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_gtm_monitor_tcp": {
    "doc": {
      "description": "Manages F5 BIG-IP GTM (now BIG-IP DNS) TCP monitors.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "ignore_down_response": {
          "aliases": [],
          "description": "Specifies the monitor allows more than one probe attempt per interval.\nWhen C(yes), specifies the monitor ignores down responses for the duration of the monitor timeout. Once the monitor timeout is reached without the system receiving an up response, the system marks the object down.\nWhen C(no), specifies the monitor immediately marks an object down when it receives a down response.\nWhen creating a new monitor, if this parameter is not provided, the default value will be C(no).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "The interval specifying how frequently the monitor instance of this template will run.\nIf this parameter is not provided when creating a new monitor, the default value will be 30.\nThis value B(must) be less than the C(timeout) value.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value will be '*'.\nIf this value is an IP address, a C(port) number must be specified.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Monitor name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is the C(tcp) parent on the C(Common) partition.",
          "default": "/Common/tcp",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value will be '*'. Note that if using an IP address, you must specify a value between 1 and 65535.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "probe_timeout": {
          "aliases": [],
          "description": "Specifies the number of seconds after which the system times out the probe request to the system.\nWhen creating a new monitor, if this parameter is not provided, then the default value will be C(5).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "receive": {
          "aliases": [],
          "description": "The receive string for the monitor call.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "reverse": {
          "aliases": [],
          "description": "Instructs the system to mark the target resource down when the test is successful. This setting is useful, for example, if the content on your web site home page is dynamic and changes frequently, you may want to set up a reverse ECV service check that looks for the string Error.\nA match for this string means the web server was down.\nTo use this option, you must specify values for C(send) and C(receive).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "send": {
          "aliases": [],
          "description": "The send string for the monitor call.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "The number of seconds in which the node or service must respond to the monitor request. If the target responds within the set time period, it is considered up. If the target does not respond within the set time period, it is considered down. You can change this number to any number you want, however, it should be 3 times the interval number of seconds plus 1 second.\nIf this parameter is not provided when creating a new monitor, the default value will be 120.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "transparent": {
          "aliases": [],
          "description": "Specifies whether the monitor operates in transparent mode.\nA monitor in transparent mode directs traffic through the associated pool members or nodes (usually a router or firewall) to the aliased destination (that is, it probes the C(ip)-C(port) combination specified in the monitor).\nIf the monitor cannot successfully reach the aliased destination, the pool member or node through which the monitor traffic was sent is marked down.\nWhen creating a new monitor, if this parameter is not provided, then the default value will be C(no).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP GTM TCP monitors",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a GTM TCP monitor\n  bigip_gtm_monitor_tcp:\n    name: my_monitor\n    ip: 1.1.1.1\n    port: 80\n    send: my send string\n    receive: my receive string\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Remove TCP Monitor\n  bigip_gtm_monitor_tcp:\n    name: my_monitor\n    state: absent\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Add TCP monitor for all addresses, port 514\n  bigip_gtm_monitor_tcp:\n    name: my_monitor\n    port: 514\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_gtm_monitor_tcp_half_open": {
    "doc": {
      "description": "Manages F5 BIG-IP GTM (now BIG-IP DNS) TCP half-open monitors.",
      "has_action": false,
      "notes": "Requires BIG-IP software version >= 12\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "ignore_down_response": {
          "aliases": [],
          "description": "Specifies that the monitor allows more than one probe attempt per interval.\nWhen C(yes), specifies the monitor ignores down responses for the duration of the monitor timeout. Once the monitor timeout is reached without the system receiving an up response, the system marks the object down.\nWhen C(no), specifies the monitor immediately marks an object down when it receives a down response.\nWhen creating a new monitor, if this parameter is not provided, then the default value will be C(no).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "Specifies, in seconds, the frequency at which the system issues the monitor check when either the resource is down or the status of the resource is unknown.\nWhen creating a new monitor, if this parameter is not provided, then the default value will be C(30). This value B(must) be less than the C(timeout) value.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value will be '*'.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Monitor name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is the C(tcp_half_open) parent on the C(Common) partition.",
          "default": "/Common/tcp_half_open",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value will be '*'. Note that if using an IP address, you must specify a value between 1 and 65535.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "probe_attempts": {
          "aliases": [],
          "description": "Specifies the number of times the system attempts to probe the host server, after which the system considers the host server down or unavailable.\nWhen creating a new monitor, if this parameter is not provided, the default value will be C(3).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "probe_interval": {
          "aliases": [],
          "description": "Specifies the number of seconds the big3d process waits before sending out a subsequent probe attempt when a probe fails and multiple probe attempts have been requested.\nWhen creating a new monitor, if this parameter is not provided, then the default value will be C(1).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "probe_timeout": {
          "aliases": [],
          "description": "Specifies the number of seconds after which the system times out the probe request to the system.\nWhen creating a new monitor, if this parameter is not provided, the default value will be C(5).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "Specifies the number of seconds the target has in which to respond to the monitor request.\nIf the target responds within the set time period, it is considered up.\nIf the target does not respond within the set time period, it is considered down.\nWhen this value is set to 0 (zero), the system uses the interval from the parent monitor.\nWhen creating a new monitor, if this parameter is not provided, the default value will be C(120).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "transparent": {
          "aliases": [],
          "description": "Specifies whether the monitor operates in transparent mode.\nA monitor in transparent mode directs traffic through the associated pool members or nodes (usually a router or firewall) to the aliased destination (that is, it probes the C(ip)-C(port) combination specified in the monitor).\nIf the monitor cannot successfully reach the aliased destination, the pool member or node through which the monitor traffic was sent is marked down.\nWhen creating a new monitor, if this parameter is not provided, the default value will be C(no).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP GTM TCP half-open monitors",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create TCP half-open Monitor\n  bigip_gtm_monitor_tcp_half_open:\n    state: present\n    ip: 10.10.10.10\n    name: my_monitor\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Remove TCP half-open Monitor\n  bigip_gtm_monitor_tcp_half_open:\n    state: absent\n    name: my_monitor\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Add half-open monitor for all addresses, port 514\n  bigip_gtm_monitor_tcp_half_open:\n    port: 514\n    name: my_monitor\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_gtm_pool": {
    "doc": {
      "description": "Manages F5 BIG-IP GTM (now BIG-IP DNS) pools.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "alternate_lb_method": {
          "aliases": [],
          "description": "The load balancing mode the system tries if the C(preferred_lb_method) is unsuccessful in picking a pool.",
          "type": "str",
          "required": false,
          "choices": [
            "round-robin",
            "return-to-dns",
            "none",
            "ratio",
            "topology",
            "static-persistence",
            "global-availability",
            "virtual-server-capacity",
            "packet-rate",
            "drop-packet",
            "fallback-ip",
            "virtual-server-score"
          ],
          "suboptions": {}
        },
        "availability_requirements": {
          "aliases": [],
          "description": "If you activate more than one health monitor, specifies the number of health monitors that must receive successful responses in order for the link to be considered available.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "at_least": {
              "aliases": [],
              "description": "Specifies the minimum number of active health monitors that must be successful before the link is considered up.\nThis parameter is only relevant when a C(type) of C(at_least) is used.\nThis parameter will be ignored if a type of either C(all) or C(require) is used.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "number_of_probers": {
              "aliases": [],
              "description": "Specifies the number of probers that should be used when running probes.\nWhen creating a new virtual server, if this parameter is specified, the C(number_of_probes) parameter must also be specified.\nThe value of this parameter should always be B(higher) than, or B(equal to), the value of C(number_of_probers).\nThis parameter is only relevant when a C(type) of C(require) is used.\nThis parameter will be ignored if a type of either C(all) or C(at_least) is used.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "number_of_probes": {
              "aliases": [],
              "description": "Specifies the minimum number of probes that must succeed for this server to be declared up.\nWhen creating a new virtual server, if this parameter is specified, the C(number_of_probers) parameter must also be specified.\nThe value of this parameter should always be B(lower) than, or B(equal to), the value of C(number_of_probers).\nThis parameter is only relevant when a C(type) of C(require) is used.\nThis parameter will be ignored if a type of either C(all) or C(at_least) is used.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "Monitor rule type when C(monitors) is specified.\nWhen creating a new pool, if this value is not specified, the default of 'all' will be used.",
              "type": "str",
              "required": true,
              "choices": [
                "all",
                "at_least",
                "require"
              ],
              "suboptions": {}
            }
          }
        },
        "fallback_ip": {
          "aliases": [],
          "description": "Specifies the IPv4 or IPv6 address of the server to which the system directs requests when it cannot use one of its pools to do so. Note that the system uses the fallback IP only if you select the C(fallback_ip) load balancing method.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fallback_lb_method": {
          "aliases": [],
          "description": "The load balancing mode the system tries if both the C(preferred_lb_method) and C(alternate_lb_method)s are unsuccessful in picking a pool.",
          "type": "str",
          "required": false,
          "choices": [
            "round-robin",
            "return-to-dns",
            "ratio",
            "topology",
            "static-persistence",
            "global-availability",
            "virtual-server-capacity",
            "least-connections",
            "lowest-round-trip-time",
            "fewest-hops",
            "packet-rate",
            "cpu",
            "completion-rate",
            "quality-of-service",
            "kilobytes-per-second",
            "drop-packet",
            "fallback-ip",
            "virtual-server-score",
            "none"
          ],
          "suboptions": {}
        },
        "max_answers_returned": {
          "aliases": [],
          "description": "Specifies the maximum number of available virtual servers the system lists in a response.\nThe maximum is 500.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "members": {
          "aliases": [],
          "description": "Members to assign to the pool.\nThe order of the members in this list is the order they will be listed in the pool.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "server": {
              "aliases": [],
              "description": "Name of the server which the pool member is a part of.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "virtual_server": {
              "aliases": [],
              "description": "Name of the virtual server, associated with the server, the pool member is a part of.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "monitors": {
          "aliases": [],
          "description": "Specifies the health monitors the system currently uses to monitor this resource.\nWhen C(availability_requirements.type) is C(require), you may only have a single monitor in the C(monitors) list.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the GTM pool.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "preferred_lb_method": {
          "aliases": [],
          "description": "The load balancing mode the system tries first.",
          "type": "str",
          "required": false,
          "choices": [
            "round-robin",
            "return-to-dns",
            "ratio",
            "topology",
            "static-persistence",
            "global-availability",
            "virtual-server-capacity",
            "least-connections",
            "lowest-round-trip-time",
            "fewest-hops",
            "packet-rate",
            "cpu",
            "completion-rate",
            "quality-of-service",
            "kilobytes-per-second",
            "drop-packet",
            "fallback-ip",
            "virtual-server-score"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Pool state. When C(present), ensures the pool is created and enabled. When C(absent), ensures the pool is removed from the system. When C(enabled) or C(disabled), ensures the pool is enabled or disabled (respectively) on the remote device.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "ttl": {
          "aliases": [],
          "description": "Specifies the number of seconds the IP address, once found, is valid.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "The type of GTM pool you want to create.",
          "type": "str",
          "required": true,
          "choices": [
            "a",
            "aaaa",
            "cname",
            "mx",
            "naptr",
            "srv"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP GTM pools",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a GTM pool\n  bigip_gtm_pool:\n    name: my_pool\n    type: a\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Disable pool\n  bigip_gtm_pool:\n    state: disabled\n    name: my_pool\n    type: a\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_gtm_pool_member": {
    "doc": {
      "description": "Manages a variety of settings on GTM (now BIG-IP DNS) pool members. The settings that can be adjusted with this module are much more broad that what can be done in the C(bigip_gtm_pool) module. The pool module is intended to allow you to adjust the member order in the pool, not the various settings of the members. The C(bigip_gtm_pool_member) module should be used to adjust all of the other settings.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "aggregate": {
          "aliases": [
            "members"
          ],
          "description": "List of GTM pool member definitions to be created, modified, or removed.\nWhen using C(aggregates), if one of the aggregate definitions is invalid, the aggregate run will fail, indicating the error it last encountered.\nThe module will C(NOT) rollback any changes it has made prior to encountering the error.\nThe module also will not indicate what changes were made prior to failure, therefore we strongly advise you run the module in check mode to make basic validation, prior to module execution.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the pool member.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "limits": {
          "aliases": [],
          "description": "Specifies resource thresholds or limit requirements at the pool member level.\nWhen you enable one or more limit settings, the system then uses that data to take members in and out of service.\nYou can define limits for any or all of the limit settings. However, when a member does not meet the resource threshold limit requirement, the system marks the member as unavailable and directs load balancing traffic to another resource.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "bits_enabled": {
              "aliases": [],
              "description": "Whether the bits limit is enabled or not.\nThis parameter allows you to switch on or off the effect of the limit.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bits_limit": {
              "aliases": [],
              "description": "Specifies the maximum allowable data throughput rate for the member, in bits per second.\nIf the network traffic volume exceeds this limit, the system marks the member as unavailable.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "connections_enabled": {
              "aliases": [],
              "description": "Whether the current connections limit is enabled or not.\nThis parameter allows you to switch on or off the effect of the limit.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "connections_limit": {
              "aliases": [],
              "description": "Specifies the maximum number of concurrent connections, combined, for all of the members.\nIf the connections exceed this limit, the system marks the server as unavailable.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "packets_enabled": {
              "aliases": [],
              "description": "Whether the packets limit is enabled or not.\nThis parameter allows you to switch on or off the effect of the limit.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "packets_limit": {
              "aliases": [],
              "description": "Specifies the maximum allowable data transfer rate for the member, in packets per second.\nIf the network traffic volume exceeds this limit, the system marks the member as unavailable.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "member_order": {
          "aliases": [],
          "description": "Specifies the order in which the member will appear in the pool.\nThe system uses this number with load balancing methods that involve prioritizing pool members, such as the Ratio load balancing method.\nWhen creating a new member using this module, if the C(member_order) parameter is not specified, it will default to C(0) (first member in the pool).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "monitor": {
          "aliases": [],
          "description": "Specifies the monitor assigned to this pool member.\nPool members only support a single monitor.\nIf the C(port) of the C(gtm_virtual_server) is C(*), the accepted values of this parameter will be affected.\nIf this parameter is not specified when creating a new pool member, the default of C(default) will be used.\nTo remove the monitor from the pool member, use the value C(none).\nFor pool members created on different partitions, you can also specify the full path to the Common monitor. For example, C(/Common/tcp).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "pool": {
          "aliases": [],
          "description": "Name of the GTM pool.\nFor pools created on different partitions, you must specify partition of the pool in the full path format, for example, C(/FooBar/pool_name).",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "ratio": {
          "aliases": [],
          "description": "Specifies the weight of the pool member for load balancing purposes.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "replace_all_with": {
          "aliases": [
            "purge"
          ],
          "description": "Removes members not defined in the C(aggregate) parameter.\nThis operation is all or none, meaning it will stop if there are some pool members that cannot be removed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "Specifies the GTM server which contains the C(virtual_server).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Pool member state. When C(present), ensures the pool member is created and enabled. When C(absent), ensures the pool member is removed from the system. When C(enabled) or C(disabled), ensures the pool member is enabled or disabled (respectively) on the remote device.\nWe recommend you use the C(members) parameter of the C(bigip_gtm_pool) module when adding and removing members, as it provides an easier way of specifying order. If this is not possible, the C(state) parameter here should be used.\nRemember that the order of the members will be affected if you add or remove them using this method. To some extent, this can be controlled using the C(member_order) parameter.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "The type of GTM pool that the member is in.",
          "type": "str",
          "required": true,
          "choices": [
            "a",
            "aaaa",
            "cname",
            "mx",
            "naptr",
            "srv"
          ],
          "suboptions": {}
        },
        "virtual_server": {
          "aliases": [],
          "description": "Specifies the name of the GTM virtual server which is assigned to the specified C(server).",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage GTM pool member settings",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a GTM pool member\n  bigip_gtm_pool_member:\n    pool: pool1\n    server_name: server1\n    virtual_server: vs1\n    type: a\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create a GTM pool member different partition\n  bigip_gtm_pool_member:\n    server_name: /Common/foo_name\n    virtual_server: GTMVSName\n    type: a\n    pool: /FooBar/foo-pool\n    partition: Common\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Add GTM pool members aggregate\n  bigip_gtm_pool_member:\n    pool: pool1\n    type: a\n    aggregate:\n      - server_name: server1\n        virtual_server: vs1\n        partition: Common\n        description: web server1\n        member_order: 0\n      - server_name: server2\n        virtual_server: vs2\n        partition: Common\n        description: web server2\n        member_order: 1\n      - server_name: server3\n        virtual_server: vs3\n        partition: Common\n        description: web server3\n        member_order: 2\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add GTM pool members aggregate, remove non aggregates\n  bigip_gtm_pool_member:\n    pool: pool1\n    type: a\n    aggregate:\n      - server_name: server1\n        virtual_server: vs1\n        partition: Common\n        description: web server1\n        member_order: 0\n      - server_name: server2\n        virtual_server: vs2\n        partition: Common\n        description: web server2\n        member_order: 1\n      - server_name: server3\n        virtual_server: vs3\n        partition: Common\n        description: web server3\n        member_order: 2\n    replace_all_with: yes\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_gtm_server": {
    "doc": {
      "description": "Manage BIG-IP GTM (now BIG-IP DNS) server configuration. This module is able to manipulate the server definitions in a BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "availability_requirements": {
          "aliases": [],
          "description": "If you activate more than one health monitor, specifies the number of health monitors that must receive successful responses in order for the link to be considered available.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "at_least": {
              "aliases": [],
              "description": "Specifies the minimum number of active health monitors that must be successful before the link is considered up.\nThis parameter is only relevant when a C(type) of C(at_least) is used.\nThis parameter will be ignored if a type of either C(all) or C(require) is used.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "number_of_probers": {
              "aliases": [],
              "description": "Specifies the number of probers that should be used when running probes.\nWhen creating a new virtual server, if this parameter is specified, the C(number_of_probes) parameter must also be specified.\nThe value of this parameter should always be B(higher) than, or B(equal to), the value of C(number_of_probers).\nThis parameter is only relevant when a C(type) of C(require) is used.\nThis parameter will be ignored if a type of either C(all) or C(at_least) is used.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "number_of_probes": {
              "aliases": [],
              "description": "Specifies the minimum number of probes that must succeed for this server to be declared up.\nWhen creating a new virtual server, if this parameter is specified, then the C(number_of_probers) parameter must also be specified.\nThe value of this parameter should always be B(lower) than, or B(equal to), the value of C(number_of_probers).\nThis parameter is only relevant when a C(type) of C(require) is used.\nThis parameter will be ignored if a type of either C(all) or C(at_least) is used.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "Monitor rule type when C(monitors) is specified.\nWhen creating a new pool, if this value is not specified, the default of B(all) will be used.",
              "type": "str",
              "required": true,
              "choices": [
                "all",
                "at_least",
                "require"
              ],
              "suboptions": {}
            }
          }
        },
        "datacenter": {
          "aliases": [],
          "description": "Data center to which the server belongs. When creating a new GTM server, this value is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "devices": {
          "aliases": [],
          "description": "Lists the self IP addresses and translations for each device. When creating a new GTM server, this value is required. This list is a complex list that specifies a number of keys.\nThe C(name) key specifies a name for the device. The device name must be unique per server. This key is required.\nThe C(address) key contains an IP address, or list of IP addresses, for the destination server. This key is required.\nThe C(translation) key contains an IP address to translate the C(address) value above to. This key is optional.\nSpecifying duplicate C(name) fields is a supported means of providing device addresses. In this scenario, the addresses will be assigned to the C(name)'s list of addresses.",
          "type": "raw",
          "required": false,
          "suboptions": {}
        },
        "iquery_options": {
          "aliases": [],
          "description": "Specifies whether the Global Traffic Manager uses this BIG-IP system to conduct a variety of probes before delegating traffic to it.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "allow_path": {
              "aliases": [],
              "description": "Specifies the system verifies the logical network route between a data center server and a local DNS server.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "allow_service_check": {
              "aliases": [],
              "description": "Specifies the system verifies that an application on a server is running, by remotely running the application using an external service checker program.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "allow_snmp": {
              "aliases": [],
              "description": "Specifies the system checks the performance of a server running an SNMP agent.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "limits": {
          "aliases": [],
          "description": "Specifies resource thresholds or limit requirements at the pool member level.\nWhen you enable one or more limit settings, the system then uses that data to take members in and out of service.\nYou can define limits for any or all of the limit settings. However, when a member does not meet the resource threshold limit requirement, the system marks the member as unavailable and directs load balancing traffic to another resource.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "bits_enabled": {
              "aliases": [],
              "description": "Whether the bits limit it enabled or not.\nThis parameter allows you to switch on or off the effect of the limit.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bits_limit": {
              "aliases": [],
              "description": "Specifies the maximum allowable data throughput rate for the member, in bits per second.\nIf the network traffic volume exceeds this limit, the system marks the member as unavailable.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "connections_enabled": {
              "aliases": [],
              "description": "Whether the current connections limit it enabled or not.\nThis parameter allows you to switch on or off the effect of the limit.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "connections_limit": {
              "aliases": [],
              "description": "Specifies the maximum number of concurrent connections, combined, for all of the members.\nIf the connections exceed this limit, the system marks the server as unavailable.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "cpu_enabled": {
              "aliases": [],
              "description": "Whether the CPU limit it enabled or not.\nThis parameter allows you to switch on or off the effect of the limit.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "cpu_limit": {
              "aliases": [],
              "description": "Specifies the percent of CPU usage.\nIf percent of CPU usage goes above the limit, the system marks the server as unavailable.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "memory_enabled": {
              "aliases": [],
              "description": "Whether the memory limit it enabled or not.\nThis parameter allows you to switch on or off the effect of the limit.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "memory_limit": {
              "aliases": [],
              "description": "Specifies the available memory required by the virtual servers on the server.\nIf available memory falls below this limit, the system marks the server as unavailable.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "packets_enabled": {
              "aliases": [],
              "description": "Whether the packets limit it enabled or not.\nThis parameter allows you to switch on or off the effect of the limit.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "packets_limit": {
              "aliases": [],
              "description": "Specifies the maximum allowable data transfer rate for the member, in packets per second.\nIf the network traffic volume exceeds this limit, the system marks the member as unavailable.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "link_discovery": {
          "aliases": [],
          "description": "Specifies whether the system auto-discovers the links for this server. When creating a new GTM server, if this parameter is not specified, the default value C(disabled) is used.\nIf you set this parameter to C(enabled) or C(enabled-no-delete), you must also ensure the C(virtual_server_discovery) parameter is also set to C(enabled) or C(enabled-no-delete).",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled",
            "enabled-no-delete"
          ],
          "suboptions": {}
        },
        "monitors": {
          "aliases": [],
          "description": "Specifies the health monitors the system currently uses to monitor this resource.\nWhen C(availability_requirements.type) is C(require), you may only have a single monitor in the C(monitors) list.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server.\nIf the virtual server is auto-discovered from the LTM,then the partition name needs to be included as part of the virtual server name when referencing from the module e.g. \"/Common/vsname\".",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "prober_fallback": {
          "aliases": [],
          "description": "Specifies the type of prober to use to monitor this server's resources when the preferred prober is not available.\nThis option is ignored in C(TMOS) version C(12.x).\nFrom C(TMOS) version C(13.x) and up, when prober_preference is set to C(pool) a C(prober_pool) parameter must be specified.\nThe choices are mutually exclusive with prober_preference parameter, with the exception of the C(any-available) or C(none) options.",
          "type": "str",
          "required": false,
          "choices": [
            "any",
            "inside-datacenter",
            "outside-datacenter",
            "inherit",
            "pool",
            "none"
          ],
          "suboptions": {}
        },
        "prober_pool": {
          "aliases": [],
          "description": "Specifies the name of the prober pool to use to monitor this server's resources.\nIn C(TMOS) version C(13.x) and later, this parameter is mandatory when C(prober_preference) is set to C(pool).\nThe format of the name can be either be prepended by partition (C(/Common/foo)), or specified just as an object name (C(foo)).\nIn C(TMOS) version C(12.x), prober_pool can be set to an empty string to revert to default setting of C(inherit).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "prober_preference": {
          "aliases": [],
          "description": "Specifies the type of prober to use to monitor this server's resources.\nThis option is ignored in C(TMOS) version C(12.x).\nFrom C(TMOS) version C(13.x) and up, when prober_preference is set to C(pool) a C(prober_pool) parameter must be specified.",
          "type": "str",
          "required": false,
          "choices": [
            "inside-datacenter",
            "outside-datacenter",
            "inherit",
            "pool"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "server_type": {
          "aliases": [
            "product"
          ],
          "description": "Specifies the server type. The server type determines the metrics the system can collect from the server. When creating a new GTM server, the default value C(bigip) is used.",
          "type": "str",
          "required": false,
          "choices": [
            "alteon-ace-director",
            "cisco-css",
            "cisco-server-load-balancer",
            "generic-host",
            "radware-wsd",
            "windows-nt-4.0",
            "bigip",
            "cisco-local-director-v2",
            "extreme",
            "generic-load-balancer",
            "sun-solaris",
            "cacheflow",
            "cisco-local-director-v3",
            "foundry-server-iron",
            "netapp",
            "windows-2000-server"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The server state. If C(absent), the module attempts to delete the server. This will only succeed if this server is not in use by a virtual server. C(present) creates the server and enables it. If C(enabled), enables the server if it exists. If C(disabled), creates the server if needed, and sets state to C(disabled).",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "virtual_server_discovery": {
          "aliases": [],
          "description": "Specifies whether the system auto-discovers the virtual servers for this server. When creating a new GTM server, if this parameter is not specified, the default value C(disabled) is used.",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled",
            "enabled-no-delete"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP GTM servers",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create server \"GTM_Server\"\n  bigip_gtm_server:\n    name: GTM_Server\n    datacenter: /Common/New York\n    server_type: bigip\n    link_discovery: disabled\n    virtual_server_discovery: disabled\n    devices:\n      - name: server_1\n        address: 1.1.1.1\n      - name: server_2\n        address: 2.2.2.1\n        translation: 192.168.2.1\n      - name: server_2\n        address: 2.2.2.2\n      - name: server_3\n        addresses:\n          - address: 3.3.3.1\n          - address: 3.3.3.2\n      - name: server_4\n        addresses:\n          - address: 4.4.4.1\n            translation: 192.168.14.1\n          - address: 4.4.4.2\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Create server \"GTM_Server\" with expanded keys\n  bigip_gtm_server:\n    server: lb.mydomain.com\n    user: admin\n    password: secret\n    name: GTM_Server\n    datacenter: /Common/New York\n    server_type: bigip\n    link_discovery: disabled\n    virtual_server_discovery: disabled\n    devices:\n      - name: server_1\n        address: 1.1.1.1\n      - name: server_2\n        address: 2.2.2.1\n        translation: 192.168.2.1\n      - name: server_2\n        address: 2.2.2.2\n      - name: server_3\n        addresses:\n          - address: 3.3.3.1\n          - address: 3.3.3.2\n      - name: server_4\n        addresses:\n          - address: 4.4.4.1\n            translation: 192.168.14.1\n          - address: 4.4.4.2\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_gtm_topology_record": {
    "doc": {
      "description": "Manages GTM (now BIG-IP DNS) Topology Records. Once created, only topology record C(weight) can be modified.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "destination": {
          "aliases": [],
          "description": "Specifies where the system directs the incoming DNS request.",
          "type": "dict",
          "required": true,
          "suboptions": {
            "continent": {
              "aliases": [],
              "description": "Specifies one of the seven continents, along with the C(Unknown) setting.\nSpecifying C(Unknown) forces the system to use a default resolution if the system cannot determine the location of the local DNS making the request.\nFull continent names and their abbreviated versions are supported.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "country": {
              "aliases": [],
              "description": "Specifies a country.\nFull continent names and their abbreviated versions are supported.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "datacenter": {
              "aliases": [],
              "description": "Specifies the name of GTM data center already defined in the configuration.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "geo_isp": {
              "aliases": [],
              "description": "Specifies a geolocation ISP",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "isp": {
              "aliases": [],
              "description": "Specifies an Internet service provider.",
              "type": "str",
              "required": false,
              "choices": [
                "AOL",
                "BeijingCNC",
                "CNC",
                "ChinaEducationNetwork",
                "ChinaMobilNetwork",
                "ChinaRailwayTelcom",
                "ChinaTelecom",
                "ChinaUnicom",
                "Comcast",
                "Earthlink",
                "ShanghaiCNC",
                "ShanghaiTelecom"
              ],
              "suboptions": {}
            },
            "negate": {
              "aliases": [],
              "description": "When set to C(yes) the system selects this topology record, when the request destination does not match.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "pool": {
              "aliases": [],
              "description": "Specifies the name of GTM pool already defined in the configuration.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "region": {
              "aliases": [],
              "description": "Specifies the name of region already defined in the configuration.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "Specifies a state in a given country.\nThis parameter requires the C(country) option.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "subnet": {
              "aliases": [],
              "description": "An IP address and network mask in the CIDR format.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.\nPartition parameter is taken into account when used in conjunction with C(pool), C(data_center), and C(region) parameters, otherwise it is ignored.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "source": {
          "aliases": [],
          "description": "Specifies the origination of an incoming DNS request.",
          "type": "dict",
          "required": true,
          "suboptions": {
            "continent": {
              "aliases": [],
              "description": "Specifies one of the seven continents, along with the C(Unknown) setting.\nSpecifying C(Unknown) forces the system to use a default resolution if the system cannot determine the location of the local DNS making the request.\nFull continent names and their abbreviated versions are supported.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "country": {
              "aliases": [],
              "description": "Specifies a country.\nIn addition to the country full names, you may also specify their abbreviated form, such as C(US) instead of C(United States).\nValid country codes can be found here https://countrycode.org/.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "geo_isp": {
              "aliases": [],
              "description": "Specifies a geolocation ISP.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "isp": {
              "aliases": [],
              "description": "Specifies an Internet service provider.",
              "type": "str",
              "required": false,
              "choices": [
                "AOL",
                "BeijingCNC",
                "CNC",
                "ChinaEducationNetwork",
                "ChinaMobilNetwork",
                "ChinaRailwayTelcom",
                "ChinaTelecom",
                "ChinaUnicom",
                "Comcast",
                "Earthlink",
                "ShanghaiCNC",
                "ShanghaiTelecom"
              ],
              "suboptions": {}
            },
            "negate": {
              "aliases": [],
              "description": "When set to c(yes) the system selects this topology record, when the request source does not match.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "region": {
              "aliases": [],
              "description": "Specifies the name of region already defined in the configuration.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "Specifies a state in a given country.\nThis parameter requires the C(country) option.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "subnet": {
              "aliases": [],
              "description": "An IP address and network mask in the CIDR format.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(state) is C(present), ensures the record exists.\nWhen C(state) is C(absent), ensures the record is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "weight": {
          "aliases": [],
          "description": "Specifies the weight of the topology record.\nThe system finds the weight of the first topology record that matches the server object (pool or pool member) and the local DNS. The system then assigns that weight as the topology score for that server object.\nThe system load balances to the server object with the highest topology score.\nIf the system finds no topology record that matches both the server object and the local DNS, then the system assigns that server object a zero score.\nIf the option is not specified when the record is created the system will set it at a default value of C(1)\nValid range is (0 - 4294967295)",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages GTM Topology Records",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create an IP Subnet and an ISP based topology record\n  bigip_gtm_topology_record:\n    source:\n      - subnet: 192.168.1.0/24\n    destination:\n      - isp: AOL\n    weight: 10\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create a region and a pool based topology record\n  bigip_gtm_topology_record:\n    source:\n      - region: Foo\n    destination:\n      - pool: FooPool\n    partition: FooBar\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create a negative region and a negative data center based topology record\n  bigip_gtm_topology_record:\n    source:\n      - region: Baz\n      - negate: yes\n    destination:\n      - datacenter: Baz-DC\n      - negate: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_gtm_topology_region": {
    "doc": {
      "description": "Manages GTM (now BIG-IP DNS) Topology Regions.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "name": {
          "aliases": [],
          "description": "Specifies the name of the region.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.\nPartition parameter is also taken into account when used in conjunction with C(pool), C(data_center), and C(region) parameters.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "region_members": {
          "aliases": [],
          "description": "Specifies the list of region members.\nThis list of members is all or nothing, in order to add or remove a member, you must specify the entire list of members.\nThe list will override what is on the device, if different.\nIf you specify an empty list, the region members list is removed.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "continent": {
              "aliases": [],
              "description": "Specifies one of the seven continents, along with the C(Unknown) setting.\nSpecifying C(Unknown) forces the system to use a default resolution if the system cannot determine the location of the local DNS making the request.\nFull continent names and their abbreviated versions are supported.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "country": {
              "aliases": [],
              "description": "The country name or code to use.\nIn addition to the country full names, you may also specify their abbreviated form, such as C(US) instead of C(United States).\nValid country codes can be found here https://countrycode.org/.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "datacenter": {
              "aliases": [],
              "description": "Specifies the name of the GTM data center already defined in the configuration.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "geo_isp": {
              "aliases": [],
              "description": "Specifies a geolocation ISP.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "isp": {
              "aliases": [],
              "description": "Specifies an Internet service provider.",
              "type": "str",
              "required": false,
              "choices": [
                "AOL",
                "BeijingCNC",
                "CNC",
                "ChinaEducationNetwork",
                "ChinaMobilNetwork",
                "ChinaRailwayTelcom",
                "ChinaTelecom",
                "ChinaUnicom",
                "Comcast",
                "Earthlink",
                "ShanghaiCNC",
                "ShanghaiTelecom"
              ],
              "suboptions": {}
            },
            "negate": {
              "aliases": [],
              "description": "When set to c(yes), the system selects this topology region when the request source does not match.\nOnly a single list entry can be specified together with negate.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "pool": {
              "aliases": [],
              "description": "Specifies the name of the GTM pool already defined in the configuration.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "region": {
              "aliases": [],
              "description": "Specifies the name of region already defined in the configuration.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "Specifies a state in a given country.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "subnet": {
              "aliases": [],
              "description": "An IP address and network mask in the CIDR format.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(state) is C(present), ensures the region exists.\nWhen C(state) is C(absent), ensures the region is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages GTM Topology Regions",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create topology region\n  bigip_gtm_topology_region:\n    name: foobar\n    region_members:\n      - country: CN\n        negate: yes\n      - datacenter: baz\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Modify topology region\n  bigip_gtm_topology_region:\n    name: foobar\n    region_members:\n      - continent: EU\n      - country: PL\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_gtm_virtual_server": {
    "doc": {
      "description": "Manages F5 BIG-IP GTM (now BIG-IP DNS) virtual servers. A GTM server can have many virtual servers associated with it. They are arranged in much the same way that pool members are to pools.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "address": {
          "aliases": [],
          "description": "Specifies the IP Address of the virtual server.\nWhen creating a new GTM virtual server, this parameter is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "availability_requirements": {
          "aliases": [],
          "description": "If you activate more than one health monitor, specifies the number of health monitors that must receive successful responses in order for the link to be considered available.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "at_least": {
              "aliases": [],
              "description": "Specifies the minimum number of active health monitors that must be successful before the link is considered up.\nThis parameter is only relevant when a C(type) of C(at_least) is used.\nThis parameter will be ignored if a type of either C(all) or C(require) is used.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "number_of_probers": {
              "aliases": [],
              "description": "Specifies the number of probers that should be used when running probes.\nWhen creating a new virtual server, if this parameter is specified, the C(number_of_probes) parameter must also be specified.\nThe value of this parameter should always be B(higher) than or B(equal to) the value of C(number_of_probers).\nThis parameter is only relevant when a C(type) of C(require) is used.\nThis parameter will be ignored if a type of either C(all) or C(at_least) is used.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "number_of_probes": {
              "aliases": [],
              "description": "Specifies the minimum number of probes that must succeed for this server to be declared up.\nWhen creating a new virtual server, if this parameter is specified, then the C(number_of_probers) parameter must also be specified.\nThe value of this parameter should always be B(lower) than or B(equal to) the value of C(number_of_probers).\nThis parameter is only relevant when a C(type) of C(require) is used.\nThis parameter will be ignored if a type of either C(all) or C(at_least) is used.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "Monitor rule type when C(monitors) is specified.\nWhen creating a new virtual, if this value is not specified, the default of C(all) will be used.",
              "type": "str",
              "required": true,
              "choices": [
                "all",
                "at_least",
                "require"
              ],
              "suboptions": {}
            }
          }
        },
        "limits": {
          "aliases": [],
          "description": "Specifies resource thresholds or limit requirements at the server level.\nWhen you enable one or more limit settings, the system then uses that data to take servers in and out of service.\nYou can define limits for any or all of the limit settings. However, when a server does not meet the resource threshold limit requirement, the system marks the entire server as unavailable and directs load balancing traffic to another resource.\nThe limit settings available depend on the type of server.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "bits_enabled": {
              "aliases": [],
              "description": "Whether the bits limit is enabled or not.\nThis parameter allows you to switch on or off the effect of the limit.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bits_limit": {
              "aliases": [],
              "description": "Specifies the maximum allowable data throughput rate for the virtual servers on the server, in bits per second.\nIf the network traffic volume exceeds this limit, the system marks the server as unavailable.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "connections_enabled": {
              "aliases": [],
              "description": "Whether the current connections limit is enabled or not.\nThis parameter allows you to switch on or off the effect of the limit.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "connections_limit": {
              "aliases": [],
              "description": "Specifies the maximum number of concurrent connections, combined, for all of the virtual servers on the server.\nIf the connections exceed this limit, the system marks the server as unavailable.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "packets_enabled": {
              "aliases": [],
              "description": "Whether the packets limit is enabled or not.\nThis parameter allows you to switch on or off the effect of the limit.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "packets_limit": {
              "aliases": [],
              "description": "Specifies the maximum allowable data transfer rate for the virtual servers on the server, in packets per second.\nIf the network traffic volume exceeds this limit, the system marks the server as unavailable.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "link": {
          "aliases": [],
          "description": "Specifies a link to assign to the server or virtual server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "monitors": {
          "aliases": [],
          "description": "Specifies the health monitors the system currently uses to monitor this resource.\nWhen C(availability_requirements.type) is C(require), you may only have a single monitor in the C(monitors) list.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the virtual server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Specifies the service port number for the virtual server or pool member. For example, the HTTP service is typically port 80.\nTo specify all ports, use an C(*).\nWhen creating a new GTM virtual server, if this parameter is not specified, a default of C(*) will be used.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "server_name": {
          "aliases": [],
          "description": "Specifies the name of the server the virtual server is associated with.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "translation_address": {
          "aliases": [],
          "description": "Specifies the translation IP address for the virtual server.\nTo unset this parameter, use an empty string (C(\"\")) as a value.\nWhen creating a new GTM virtual server, if this parameter is not specified, a default of C(::) will be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "translation_port": {
          "aliases": [],
          "description": "Specifies the translation port number or service name for the virtual server.\nTo specify all ports, use an C(*).\nWhen creating a new GTM virtual server, if this parameter is not specified, a default of C(*) will be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_server_dependencies": {
          "aliases": [],
          "description": "Specifies the virtual servers on which the current virtual server depends.\nIf any of the specified servers are unavailable, the current virtual server is also listed as unavailable.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "server": {
              "aliases": [],
              "description": "Server which the dependant virtual server is part of.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "virtual_server": {
              "aliases": [],
              "description": "Virtual server to depend on.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        }
      },
      "short_description": "Manages F5 BIG-IP GTM virtual servers",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Enable virtual server\n  bigip_gtm_virtual_server:\n    server_name: server1\n    name: my-virtual-server\n    state: enabled\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_gtm_wide_ip": {
    "doc": {
      "description": "Manages the F5 BIG-IP GTM (now BIG-IP DNS) Wide IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "aliases": {
          "aliases": [],
          "description": "Specifies alternate domain names for the web site content you are load balancing.\nYou can use the same wildcard characters for aliases as you can for actual Wide IP names.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "irules": {
          "aliases": [],
          "description": "List of rules to be applied.\nIf you want to remove all existing iRules, specify a single empty value; C(\"\"). See the documentation for an example.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "last_resort_pool": {
          "aliases": [],
          "description": "Specifies which GTM pool for the system to use as the last resort pool for the Wide IP.\nThe valid pools for this parameter are those with the C(type) specified in this module.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "wide_ip"
          ],
          "description": "Wide IP name. This name must be formatted as a fully qualified domain name (FQDN). You can also use the alias C(wide_ip) but this is deprecated and will be removed in a future Ansible version.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "persist_cidr_ipv4": {
          "aliases": [],
          "description": "Specifies a mask used to group IPv4 LDNS addresses. This feature allows one persistence record to be shared by LDNS addresses that match within this mask.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "persist_cidr_ipv6": {
          "aliases": [],
          "description": "Specifies a mask used to group IPv6 LDNS addresses. This feature allows one persistence record to be shared by LDNS addresses that match within this mask.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "persistence": {
          "aliases": [],
          "description": "When C(yes), ensures that when a local DNS makes repetitive requests on behalf of a client, the system reconnects the client to the same resource as previous requests.\nWhen C(no), ensures repetitive requests do not reconnect the client to the same resource.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "persistence_ttl": {
          "aliases": [],
          "description": "Specifies the time to maintain a connection between an local DNS and a particular virtual server.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "pool_lb_method": {
          "aliases": [
            "lb_method"
          ],
          "description": "Specifies the load balancing method used to select a pool in this wide IP. This setting is relevant only when multiple pools are configured for a Wide IP.",
          "type": "str",
          "required": false,
          "choices": [
            "round-robin",
            "ratio",
            "topology",
            "global-availability"
          ],
          "suboptions": {}
        },
        "pools": {
          "aliases": [],
          "description": "The pools you want associated with the Wide IP.\nIf C(ratio) is not provided when creating a new Wide IP, it will default to 1.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "The name of the pool to include.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "order": {
              "aliases": [],
              "description": "Order of the pool in relation to other pools attached to this Wide IP.\nPool order is significant when the Global Availability load balancing method is used.\nWhen C(order) is not provided, the module assigns it value of C(0).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ratio": {
              "aliases": [],
              "description": "Ratio for the pool.\nThe system uses this number with the Ratio load balancing method.\nWhen C(ratio) is not provided, the module assigns it value of C(0).",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present) or C(enabled), ensures the Wide IP exists and is enabled.\nWhen C(absent), ensures the Wide IP has been removed.\nWhen C(disabled), ensures the Wide IP exists and is disabled.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "disabled",
            "enabled"
          ],
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Specifies the type of Wide IP. GTM Wide IPs need to be keyed by query type in addition to name, because pool members need different attributes depending on the response RDATA they are meant to supply.",
          "type": "str",
          "required": true,
          "choices": [
            "a",
            "aaaa",
            "cname",
            "mx",
            "naptr",
            "srv"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP GTM Wide IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Set lb method\n  bigip_gtm_wide_ip:\n    pool_lb_method: round-robin\n    name: my-wide-ip.example.com\n    type: a\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Add iRules to the Wide IP\n  bigip_gtm_wide_ip:\n    pool_lb_method: round-robin\n    name: my-wide-ip.example.com\n    type: a\n    irules:\n      - irule1\n      - irule2\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Remove one iRule from the Virtual Server\n  bigip_gtm_wide_ip:\n    pool_lb_method: round-robin\n    name: my-wide-ip.example.com\n    type: a\n    irules:\n      - irule1\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Remove all iRules from the Virtual Server\n  bigip_gtm_wide_ip:\n    pool_lb_method: round-robin\n    name: my-wide-ip.example.com\n    type: a\n    irules: \"\"\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Assign a pool with ratio to the Wide IP\n  bigip_gtm_wide_ip:\n    pool_lb_method: round-robin\n    name: my-wide-ip.example.com\n    type: a\n    pools:\n      - name: pool1\n        ratio: 100\n        order: 2\n      - name: pool1\n        ratio: 100\n        order: 1\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Assign a pool with persistence to the Wide IP\n  bigip_gtm_wide_ip:\n    pool_lb_method: round-robin\n    name: my-wide-ip.example.com\n    type: a\n    pools:\n      - name: pool1\n        persistence: yes\n        persist_cidr_ipv4: 24\n        persist_cidr_ipv6: 120\n        persistence_ttl: 3500\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_hostname": {
    "doc": {
      "description": "Manage the hostname of a BIG-IP device.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "hostname": {
          "aliases": [],
          "description": "Hostname of the BIG-IP host.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "short_description": "Manage the hostname of a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Set the hostname of the BIG-IP\n  bigip_hostname:\n    hostname: bigip.localhost.localdomain\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_iapp_service": {
    "doc": {
      "description": "Manages TCL iApp services on a BIG-IP.\nThe API the system uses to communicate with on the BIG-IP is C(/mgmt/tm/sys/application/service/).",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "Description of the iApp service.\nIf this option is specified in the Ansible task, it takes precedence over any similar setting in the iApp Service payload that you provide in the C(parameters) field.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "device_group": {
          "aliases": [],
          "description": "The device group for the iApp service.\nIf this option is specified in the Ansible task, it takes precedence over any similar setting in the iApp Service payload that you provide in the C(parameters) field.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "Forces the updating of an iApp service, even if the parameters to the service have not changed. This option is of particular importance if the iApp template that underlies the service has been updated in-place. This option is equivalent to re-configuring the iApp if that template has changed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "metadata": {
          "aliases": [],
          "description": "Metadata associated with the iApp service.\nIf this option is specified in the Ansible task, it takes precedence over any similar setting in the iApp Service payload that you provide in the C(parameters) field.",
          "type": "list",
          "required": false,
          "elements": "raw",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the iApp service you want to deploy.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parameters": {
          "aliases": [],
          "description": "A hash of all the required template variables for the iApp template. If your parameters are stored in a file (the more common scenario) we recommend you use either the C(file) or C(template) lookups to supply the expected parameters.\nThese parameters typically consist of the C(lists), C(tables), and C(variables) fields.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the iApp service is created and running. When C(absent), ensures the iApp service has been removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "strict_updates": {
          "aliases": [],
          "description": "Indicates whether the application service is tied to the template, so when the template is updated, the application service changes to reflect the updates.\nWhen C(yes), disallows any updates to the resources that the iApp service has created, if they are not updated directly through the iApp.\nWhen C(no), allows updates outside of the iApp.\nIf this option is specified in the Ansible task, it takes precedence over any similar setting in the iApp Service payload that you provide in the C(parameters) field.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "template": {
          "aliases": [],
          "description": "The iApp template from which to instantiate a new service. This template must exist on your BIG-IP before you can successfully create a service.\nWhen creating a new service, this parameter is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "traffic_group": {
          "aliases": [],
          "description": "The traffic group for the iApp service. When creating a new service, if this value is not specified, the default of C(/Common/traffic-group-1) is used.\nIf this option is specified in the Ansible task, it takes precedence over any similar setting in the iApp Service payload that you provide in the C(parameters) field.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages TCL iApp services on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create HTTP iApp service from iApp template\n  bigip_iapp_service:\n    name: foo-service\n    template: f5.http\n    parameters: \"{{ lookup('file', 'f5.http.parameters.json') }}\"\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Upgrade foo-service to v1.2.0rc4 of the f5.http template\n  bigip_iapp_service:\n    name: foo-service\n    template: f5.http.v1.2.0rc4\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Configure a service using parameters in YAML\n  bigip_iapp_service:\n    name: tests\n    template: web_frontends\n    state: present\n    parameters:\n      variables:\n        - name: var__vs_address\n          value: 1.1.1.1\n        - name: pm__apache_servers_for_http\n          value: 2.2.2.1:80\n        - name: pm__apache_servers_for_https\n          value: 2.2.2.2:80\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Re-configure a service whose underlying iApp was updated in place\n  bigip_iapp_service:\n    name: tests\n    template: web_frontends\n    force: yes\n    state: present\n    parameters:\n      variables:\n        - name: var__vs_address\n          value: 1.1.1.1\n        - name: pm__apache_servers_for_http\n          value: 2.2.2.1:80\n        - name: pm__apache_servers_for_https\n          value: 2.2.2.2:80\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Try to remove the iApp template before the associated Service is removed\n  bigip_iapp_template:\n    name: web_frontends\n    state: absent\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  register: result\n  failed_when:\n    - result is not success\n    - \"'referenced by one or more applications' not in result.msg\"\n\n- name: Configure a service using more complicated parameters\n  bigip_iapp_service:\n    name: tests\n    template: web_frontends\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n    parameters:\n      variables:\n        - name: var__vs_address\n          value: 1.1.1.1\n        - name: pm__apache_servers_for_http\n          value: 2.2.2.1:80\n        - name: pm__apache_servers_for_https\n          value: 2.2.2.2:80\n      lists:\n        - name: irules__irules\n          value:\n            - foo\n            - bar\n      tables:\n        - name: basic__snatpool_members\n        - name: net__snatpool_members\n        - name: optimizations__hosts\n        - name: pool__hosts\n          columnNames:\n            - name\n          rows:\n            - row:\n                - internal.company.bar\n        - name: pool__members\n          columnNames:\n            - addr\n            - port\n            - connection_limit\n          rows:\n            - row:\n                - \"none\"\n                - 80\n                - 0\n        - name: server_pools__servers\n  delegate_to: localhost\n\n- name: Override metadata that may or may not exist in parameters\n  bigip_iapp_service:\n    name: foo-service\n    template: f5.http\n    parameters: \"{{ lookup('file', 'f5.http.parameters.json') }}\"\n    metadata:\n      - persist: yes\n        name: data 1\n      - persist: yes\n        name: data 2\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_iapp_template": {
    "doc": {
      "description": "Manages TCL iApp templates on a BIG-IP. This module allows you to deploy iApp templates to the BIG-IP and manage their lifecycle. The conventional way to use this module is to import new iApps as needed, or by extracting the contents of the iApp archive that is provided at downloads.f5.com, and then importing all the iApps with this module. This module can also update existing iApps provided the source of the iApp changed while the name stayed the same. Note that this module will not reconfigure any services that may have been created using the C(bigip_iapp_service) module. iApps are normally not updated in production. Instead, new versions are deployed and then existing services are changed to consume that new template. As such, the ability to update templates in-place requires using the C(force) option.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "content": {
          "aliases": [],
          "description": "Sets the contents of an iApp template directly to the specified value. This is for simple values, but can be used with lookup plugins for anything complex or with formatting. C(content) must be provided when creating new templates.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "Specifies whether or not to force the uploading of an iApp. When C(yes), the system will force update the iApp even if there are iApp services using it. This will not update the running service, use C(bigip_iapp_service) to do that. When C(no), the system updates the iApp only if there are no iApp services using the template.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the iApp template you want to delete. This option is only available when specifying a C(state) of C(absent) and is provided as a way to delete templates that you may no longer have the source of.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Whether the iApp template should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages TCL iApp templates on a BIG-IP.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add the iApp contained in template iapp.tmpl\n  bigip_iapp_template:\n    content: \"{{ lookup('template', 'iapp.tmpl') }}\"\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Update a template in place\n  bigip_iapp_template:\n    content: \"{{ lookup('template', 'iapp-new.tmpl') }}\"\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Update a template in place that has existing services created from it.\n  bigip_iapp_template:\n    content: \"{{ lookup('template', 'iapp-new.tmpl') }}\"\n    force: yes\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_ike_peer": {
    "doc": {
      "description": "Manage IPSec IKE Peer configuration on a BIG-IP device.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "Description of the IKE peer.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the IKE peer.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "phase1_auth_method": {
          "aliases": [],
          "description": "Specifies the authentication method for phase 1 negotiation.\nWhen creating a new IKE peer, if this value is not specified, the default is C(rsa-signature).",
          "type": "str",
          "required": false,
          "choices": [
            "pre-shared-key",
            "rsa-signature"
          ],
          "suboptions": {}
        },
        "phase1_cert": {
          "aliases": [],
          "description": "Specifies the digital certificate to use for the RSA signature.\nWhen creating a new IKE peer, if this value is not specified, and C(phase1_auth_method) is C(rsa-signature), the default is C(default.crt).\nThis parameter is invalid when C(phase1_auth_method) is C(pre-shared-key).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "phase1_encryption_algorithm": {
          "aliases": [],
          "description": "Specifies the algorithm to use for IKE encryption.\nIKE C(version) C(v2) does not support C(blowfish), C(camellia), or C(cast128).",
          "type": "str",
          "required": false,
          "choices": [
            "3des",
            "des",
            "blowfish",
            "cast128",
            "aes128",
            "aes192",
            "aes256",
            "camellia"
          ],
          "suboptions": {}
        },
        "phase1_hash_algorithm": {
          "aliases": [],
          "description": "Specifies the algorithm to use for IKE authentication.",
          "type": "str",
          "required": false,
          "choices": [
            "sha1",
            "md5",
            "sha256",
            "sha384",
            "sha512"
          ],
          "suboptions": {}
        },
        "phase1_key": {
          "aliases": [],
          "description": "Specifies the public key the digital certificate contains.\nWhen creating a new IKE peer, if this value is not specified, and C(phase1_auth_method) is C(rsa-signature), the default is C(default.key).\nThis parameter is invalid when C(phase1_auth_method) is C(pre-shared-key).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "phase1_lifetime": {
          "aliases": [],
          "description": "Defines the lifetime in minutes of an IKE SA which will be proposed in the phase 1 negotiations.\nThe accepted value range is C(1 - 4294967295) minutes.\nWhen creating a new IKE peer, if this value is not specified, the default value set by the system is C(1440) minutes.",
          "type": "int",
          "required": false,
          "version_added": "1.1.0",
          "suboptions": {}
        },
        "phase1_perfect_forward_secrecy": {
          "aliases": [],
          "description": "Specifies the Diffie-Hellman group to use for IKE Phase 1 and Phase 2 negotiations.",
          "type": "str",
          "required": false,
          "choices": [
            "ecp256",
            "ecp384",
            "ecp521",
            "modp768",
            "modp1024",
            "modp1536",
            "modp2048",
            "modp3072",
            "modp4096",
            "modp6144",
            "modp8192"
          ],
          "suboptions": {}
        },
        "phase1_verify_peer_cert": {
          "aliases": [],
          "description": "In IKEv2, specifies whether the certificate sent by the IKE peer is verified using the Trusted Certificate Authorities, a CRL, and/or a peer certificate.\nIn IKEv1, specifies whether the identifier sent by the peer is verified with the credentials in the certificate, in the following manner - ASN1DN; specifies that the entire certificate subject name is compared with the identifier. Address, FQDN, or User FQDN; specifies that the certificate's subjectAltName is compared with the identifier. If the two do not match, the negotiation fails.\nWhen creating a new IKE peer, if this value is not specified, and C(phase1_auth_method) is C(rsa-signature), the default is C(no).\nThis parameter is invalid when C(phase1_auth_method) is C(pre-shared-key).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "presented_id_type": {
          "aliases": [],
          "description": "Specifies the identifier type the local system uses to identify itself to the peer during IKE Phase 1 negotiations.",
          "type": "str",
          "required": false,
          "choices": [
            "address",
            "asn1dn",
            "fqdn",
            "keyid-tag",
            "user-fqdn",
            "override"
          ],
          "suboptions": {}
        },
        "presented_id_value": {
          "aliases": [],
          "description": "Specifies a value for the identity when using a C(presented_id_type) of C(override).\nThis is a required value when C(version) includes (Cv2).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "preshared_key": {
          "aliases": [],
          "description": "Specifies a string the IKE peers share for authenticating each other.\nThis parameter is only relevant when C(phase1_auth_method) is C(pre-shared-key).\nThis parameter is invalid when C(phase1_auth_method) is C(rsa-signature).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "remote_address": {
          "aliases": [],
          "description": "Displays the IP address of the BIG-IP system that is remote to the system you are configuring.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "C(always) will allow updating passwords if the user chooses to do so. C(on_create) will only set the password for newly created IKE peers.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_create"
          ],
          "suboptions": {}
        },
        "verified_id_type": {
          "aliases": [],
          "description": "Specifies the identifier type that the local system uses to identify the peer during IKE Phase 1 negotiation.\nThis is a required value when C(version) includes (Cv2).\nWhen C(user-fqdn), value of C(verified_id_value) must be in the form of User @ DNS domain string.",
          "type": "str",
          "required": false,
          "choices": [
            "address",
            "asn1dn",
            "fqdn",
            "keyid-tag",
            "user-fqdn",
            "override"
          ],
          "suboptions": {}
        },
        "verified_id_value": {
          "aliases": [],
          "description": "Specifies a value for the identity when using a C(verified_id_type) of C(override).\nThis is a required value when C(version) includes (Cv2).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Specifies which version of IKE is used.\nIf the system you are configuring is the IPsec initiator, and you select both versions, the system tries using IKEv2 for negotiation. If the remote peer does not support IKEv2, the IPsec tunnel fails. To use IKEv1 in this case, you must deselect Version 2 and try again.\nIf the system you are configuring is the IPsec responder, and you select both versions, the IPsec initiator system determines which IKE version to use.\nWhen creating a new IKE peer, this value is required.",
          "type": "list",
          "required": false,
          "choices": [
            "v1",
            "v2"
          ],
          "elements": "str",
          "suboptions": {}
        }
      },
      "short_description": "Manage IPSec IKE Peer configuration on BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create new IKE peer\n  bigip_ike_peer:\n    name: ike1\n    remote_address: 1.2.3.4\n    version:\n      - v1\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Change presented id type - keyid-tag\n  bigip_ike_peer:\n    name: ike1\n    presented_id_type: keyid-tag\n    presented_id_value: key1\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove IKE peer\n  bigip_ike_peer:\n    name: ike1\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_imish_config": {
    "doc": {
      "description": "This module provides an implementation for working with advanced routing configuration sections in a deterministic way.",
      "has_action": true,
      "notes": "Abbreviated commands are NOT idempotent\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "after": {
          "aliases": [],
          "description": "The ordered set of commands to append to the end of the command stack if a change needs to be made.\nJust like with I(before), this allows the playbook designer to append a set of commands to be executed after the command set.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "allow_duplicates": {
          "aliases": [],
          "description": "Allows duplicate commands to be sent to the device. This is to accommodate scenarios where address families are configured.\nOnly used with the C(lines) parameter.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "1.2.0",
          "suboptions": {}
        },
        "backup": {
          "aliases": [],
          "description": "This argument will cause the module to create a full backup of the current C(running-config) from the remote device before any changes are made.\nThe backup file is written to the C(backup) folder in the playbook root directory or role root directory, if playbook is part of an Ansible role. If the directory does not exist, it is created.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "backup_options": {
          "aliases": [],
          "description": "This is a dict object containing configurable options related to backup file path. The value of this option is read-only when C(backup) is set to I(yes). If C(backup) is set to I(no), this option will be silently ignored.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "dir_path": {
              "aliases": [],
              "description": "This option provides the path ending with directory name in which the backup configuration file will be stored. If the directory does not exist, it will be first created and the filename is either the value of C(filename) or default filename as described in C(filename) options description. If the path value is not given, a I(backup) directory will be created in the current working directory and backup configuration will be copied in C(filename) within the I(backup) directory.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "filename": {
              "aliases": [],
              "description": "The filename to be used to store the backup configuration. If the filename is not given, it will be generated based on the hostname, current time and date in the format defined by <hostname>_config.<current-date>@<current-time>",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "before": {
          "aliases": [],
          "description": "The ordered set of commands to push onto the command stack if a change needs to be made.\nThis allows the playbook designer the opportunity to perform configuration commands prior to pushing any changes, without affecting how the set of commands are matched against the system.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "diff_against": {
          "aliases": [],
          "description": "When using the C(ansible-playbook --diff) command line argument, the module can generate diffs against different sources.\nWhen this option is configured as I(startup), the module will return the diff of the running-config against the startup-config.\nWhen this option is configured as I(intended), the module will return the diff of the running-config against the configuration provided in the C(intended_config) argument.\nWhen this option is configured as I(running), the module will return the before and after diff of the running-config with respect to any changes made to the device configuration.",
          "default": "startup",
          "type": "str",
          "required": false,
          "choices": [
            "startup",
            "intended",
            "running"
          ],
          "suboptions": {}
        },
        "diff_ignore_lines": {
          "aliases": [],
          "description": "Use this argument to specify one or more lines that should be ignored during the diff.\nThis is used for lines in the configuration that are automatically updated by the system.\nThis argument takes a list of regular expressions or exact line matches.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "intended_config": {
          "aliases": [],
          "description": "The C(intended_config) provides the master configuration the node should conform to and is used to check the final running-config against.\nThis argument will not modify any settings on the remote device and is strictly used to check the compliance of the current device's configuration against.\nWhen specifying this argument, the task should also modify the C(diff_against) value and set it to I(intended).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lines": {
          "aliases": [
            "commands"
          ],
          "description": "The ordered set of commands that should be configured in the section.\nThe commands must be the exact same as those found in the device running-config.\nBe sure to note the configuration command syntax, as some commands are automatically modified by the device config parser.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "match": {
          "aliases": [],
          "description": "Instructs the module on the way to perform the matching of the set of commands against the current device config.\nIf match is set to I(line), commands are matched line by line.\nIf match is set to I(strict), command lines are matched with respect to position.\nIf match is set to I(exact), command lines must be an equal match.\nFinally, if match is set to I(none), the module will not attempt to compare the source configuration with the running configuration on the remote device.",
          "default": "line",
          "type": "str",
          "required": false,
          "choices": [
            "line",
            "strict",
            "exact",
            "none"
          ],
          "suboptions": {}
        },
        "parents": {
          "aliases": [],
          "description": "The ordered set of parents that uniquely identify the section or hierarchy the commands should be checked against.\nIf the C(parents) argument is omitted, the commands are checked against the set of top level or global commands.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "replace": {
          "aliases": [],
          "description": "Instructs the module on the way to perform the configuration on the device.\nIf the replace argument is set to I(line), the modified lines are pushed to the device in configuration mode.\nIf the replace argument is set to I(block), the entire command block is pushed to the device in configuration mode if any line is not correct.",
          "default": "line",
          "type": "str",
          "required": false,
          "choices": [
            "line",
            "block"
          ],
          "suboptions": {}
        },
        "route_domain": {
          "aliases": [],
          "description": "Route domain on which to manage the BGP configuration.",
          "default": "0",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "running_config": {
          "aliases": [
            "config"
          ],
          "description": "By default, the module will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source.\nThere are times when you do not want to have the task get the current running-config for every task in a playbook.\nThe I(running_config) argument allows the implementer to pass in the configuration to use as the base config for comparison.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "save_when": {
          "aliases": [],
          "description": "When changes are made to the device running-configuration, the changes are not copied to non-volatile storage by default.\nIf the argument is set to I(always), the running-config will always be copied to the startup-config and the I(modified) flag will always be set to C(True).\nIf the argument is set to I(modified), the running-config will only be copied to the startup-config if it has changed since the last save to startup-config.\nIf the argument is set to I(never), the running-config will never be copied to the startup-config.\nIf the argument is set to I(changed), the running-config will only be copied to the startup-config if the task has made a change.",
          "default": "never",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "never",
            "modified",
            "changed"
          ],
          "suboptions": {}
        },
        "src": {
          "aliases": [],
          "description": "The I(src) argument provides a path to the configuration file to load into the remote system.\nThe path can either be a full system path to the configuration file if the value starts with /, or relative to the root of the implemented role or playbook.\nThis argument is mutually exclusive with the I(lines) and I(parents) arguments.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage BIG-IP advanced routing configuration sections",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure top level configuration and save it\n  bigip_imish_config:\n    lines: bfd slow-timer 2000\n    save_when: modified\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: diff the running-config against a provided config\n  bigip_imish_config:\n    diff_against: intended\n    intended_config: \"{{ lookup('file', 'master.cfg') }}\"\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Add config to a parent block\n  bigip_imish_config:\n    lines:\n      - bgp graceful-restart restart-time 120\n      - redistribute kernel route-map rhi\n      - neighbor 10.10.10.11 remote-as 65000\n      - neighbor 10.10.10.11 fall-over bfd\n      - neighbor 10.10.10.11 remote-as 65000\n      - neighbor 10.10.10.11 fall-over bfd\n    parents: router bgp 64664\n    match: exact\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Remove an existing acl before writing it\n  bigip_imish_config:\n    lines:\n      - access-list 10 permit 20.20.20.20\n      - access-list 10 permit 20.20.20.21\n      - access-list 10 deny any\n    before: no access-list 10\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: for idempotency, use full-form commands\n  bigip_imish_config:\n    lines:\n      # - desc My interface\n      - description My Interface\n    # parents: int ANYCAST-P2P-2\n    parents: interface ANYCAST-P2P-2\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: configurable backup path\n  bigip_imish_config:\n    lines: bfd slow-timer 2000\n    backup: yes\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n    backup_options:\n      filename: backup.cfg\n      dir_path: /home/user\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_interface": {
    "doc": {
      "description": "Module to manage BIG-IP physical interfaces.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "bundle": {
          "aliases": [],
          "description": "Enables or disables bundle capability.\nThis option is only supported on select hardware platforms and interfaces.\nAttempting to enable this option on a C(VE) or any other unsupported platform/interface will result in module run failure.",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled",
            "not-supported"
          ],
          "suboptions": {}
        },
        "bundle_speed": {
          "aliases": [],
          "description": "Sets the bundle speed, which is applicable only when the bundle is C(yes).\nThis option is only supported on selected hardware platforms and interfaces.\nAttempting to enable this option on a C(VE) or any other unsupported platform/interface will result in module run failure.",
          "type": "str",
          "required": false,
          "choices": [
            "100G",
            "40G",
            "not-supported"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "User defined description.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enabled": {
          "aliases": [],
          "description": "Specifies the current status of the interface.\nWhen C(yes), enables the interface to pass traffic.\nWhen C(no), disables the interface from passing traffic.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "flow_control": {
          "aliases": [],
          "description": "Specifies how the system controls the sending of PAUSE frames.\nWhen C(tx-rx), the interface honors pause frames from its partner, and also generates pause frames when necessary.\nWhen C(tx), the interface ignores pause frames from its partner, and generates pause frames when necessary.\nWhen C(rx), the interface honors pause frames from its partner, but does not generate pause frames.\nWhen (none), the flow control is disabled on the interface.",
          "type": "str",
          "required": false,
          "choices": [
            "none",
            "rx",
            "tx",
            "tx-rx"
          ],
          "suboptions": {}
        },
        "force_gigabit_fiber": {
          "aliases": [],
          "description": "Enables or disables forcing of gigabit fiber media.\nWhen C(yes) for a gigabit fiber interface, the media setting will be forced, and no auto-negotiation will be performed.\nWhen C(no) auto-negotiation will be performed with just a single gigabit fiber option advertised.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "forward_error_correction": {
          "aliases": [],
          "description": "Enables or disables IEEE 802.3bm Clause 91 Reed-Solomon Forward Error Correction on 100G interfaces. Not valid for LR4 media.\nThis option is only supported on selected hardware platforms and interfaces.\nAttempting to enable this option on a C(VE) or any other unsupported platform/interface will result in module run failure.",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled",
            "not-supported",
            "auto"
          ],
          "suboptions": {}
        },
        "lldp_admin": {
          "aliases": [],
          "description": "Specifies LLDP settings on an interface level.\nWhen C(disabled), the interface neither transmits (sends) LLDP messages to nor receives LLDP messages from neighboring devices.\nWhen C(txonly), the interface transmits LLDP messages to neighbor devices, but does not receive LLDP messages from neighbor devices.\nWhen C(rxonly), the interface receives LLDP messages from neighbor devices, but does not transmit LLDP messages to neighbor devices.\nWhen C(txrx), the interface transmits LLDP messages to and receives LLDP messages from neighboring devices.",
          "type": "str",
          "required": false,
          "choices": [
            "disable",
            "rxonly",
            "txonly",
            "txrx"
          ],
          "suboptions": {}
        },
        "lldp_tlvmap": {
          "aliases": [],
          "description": "Specifies the content of an LLDP message being sent or received.\nEach LLDP attribute specified with this setting is optional and is in the form of Type, Length, Value (TLV).\nThe three mandatory TLVs not taken into account when calculating this value are: C(Chassis ID), C(Port ID), and C(TTL).\nThe optional attributes that are available have a specific TLV numeric value mapped to them.\nThe C(Port Description) attribute has a TLV value of C(8).\nThe C(System Name) attribute has a TLV value of C(16).\nThe C(System Description) attribute has a TLV value of C(32).\nThe C(System Capabilities) attribute has a TLV value of C(64).\nThe C(Management Address) attribute has a TLV value of C(128).\nThe C(Port VLAN ID) attribute has a TLV value of C(256).\nThe C(VLAN Name) attribute has a TLV value of C(512).\nThe C(Port and Protocol VLAN ID) attribute has a TLV value of C(1024).\nThe C(Protocol Identity) attribute has a TLV value of C(2048).\nThe C(MAC/PHY Config Status) attribute has a TLV value of C(4096).\nThe C(Link Aggregation) attribute has a TLV value of C(8192).\nThe C(Max Frame Size) attribute has a TLV value of C(32768).\nThe C(Product Model) attribute has a TLV value of C(65536).\nThe C(lldp_tlvmap) is a numeric value that is a sum of all TLV values of selected attributes.\nSetting C(lldp_tlvmap) to C(0) will remove all attributes from the interface.\nSetting C(lldp_tlvmap) to C(114680) will add all attributes to the interface.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "media_fixed": {
          "aliases": [],
          "description": "Specifies the settings for a fixed (non-pluggable) interface.\nUse this option only with a combo port to specify the media type for the fixed interface, when it is not the preferred port.",
          "type": "str",
          "required": false,
          "choices": [
            "100000-FD",
            "100000LR4-FD",
            "10000LR-FD",
            "10000T-FD",
            "1000SX-FD",
            "100TX-FD",
            "10T-HD",
            "20000-FD",
            "40000LR4-FD",
            "100000AR4-FD",
            "100000SR4-FD",
            "10000SFPCU-FD",
            "1000CX-FD",
            "1000T-FD",
            "100TX-HD",
            "12000-FD",
            "21000-FD",
            "40000SR4-FD",
            "100000CR4-FD",
            "10000ER-FD",
            "10000SR-FD",
            "1000LX-FD",
            "1000T-HD",
            "10T-FD",
            "16000-FD",
            "40000-FD",
            "42000-FD",
            "auto",
            "no-phy"
          ],
          "suboptions": {}
        },
        "media_sfp": {
          "aliases": [],
          "description": "Specifies the settings for an SFP (pluggable) interface.\nUse this option only with a combo port to specify the media type for the SFP interface, when it is not the preferred port.",
          "type": "str",
          "required": false,
          "choices": [
            "100000-FD",
            "100000LR4-FD",
            "10000LR-FD",
            "10000T-FD",
            "1000SX-FD",
            "100TX-FD",
            "10T-HD",
            "20000-FD",
            "40000LR4-FD",
            "100000AR4-FD",
            "100000SR4-FD",
            "10000SFPCU-FD",
            "1000CX-FD",
            "1000T-FD",
            "100TX-HD",
            "12000-FD",
            "21000-FD",
            "40000SR4-FD",
            "100000CR4-FD",
            "10000ER-FD",
            "10000SR-FD",
            "1000LX-FD",
            "1000T-HD",
            "10T-FD",
            "16000-FD",
            "40000-FD",
            "42000-FD",
            "auto",
            "no-phy"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the interface to manage.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "port_fwd_mode": {
          "aliases": [],
          "description": "Specifies the operation mode.",
          "type": "str",
          "required": false,
          "choices": [
            "l3",
            "passive",
            "virtual-wire"
          ],
          "suboptions": {}
        },
        "prefer_port": {
          "aliases": [],
          "description": "Indicates which side of a combo port the interface uses, if both sides have the potential for an external link.\nThe default value for a combo port is sfp. Do not use this option for non-combo ports.",
          "type": "str",
          "required": false,
          "choices": [
            "sfp",
            "fixed"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "sflow": {
          "aliases": [],
          "description": "Specifies sFlow settings for the interface.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "poll_interval": {
              "aliases": [],
              "description": "Specifies the maximum interval between two pollings, in seconds.\nFor this setting to take effect, C(poll_interval_global) must be set to C(no).\nThe valid range is 0 - 4294967295.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "poll_interval_global": {
              "aliases": [],
              "description": "Specifies whether the global interface C(poll_interval) setting overrides the object-level C(poll_interval) setting.\nWhen C(yes) the C(poll_interval) setting does not take effect.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "stp": {
          "aliases": [],
          "description": "Enables or disables STP.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "stp_auto_edge_port": {
          "aliases": [],
          "description": "Sets STP automatic edge port detection for the interface.\nWhen C(yes), the system monitors the interface for incoming STP, RSTP, or MSTP packets. If no such packets are received for a sufficient period of time (about three seconds), the interface is automatically given edge port status.\nWhen C(no), the system never gives the interface edge port status automatically. Any STP setting set on a per-interface basis applies to all spanning tree instances.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "stp_edge_port": {
          "aliases": [],
          "description": "Specifies whether the interface connects to an end station instead of another spanning tree bridge.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "stp_link_type": {
          "aliases": [],
          "description": "Specifies the STP link type for the interface.",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "p2p",
            "shared"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Module to manage BIG-IP physical interfaces.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Update Interface Settings\n  bigip_interface:\n    name: 1.1\n    stp: yes\n    stp_auto_edge_port: no\n    stp_edge_port: yes\n    stp_link_type: shared\n    description: my description\n    flow_control: tx\n    lldp_admin: txrx\n    lldp_tlvmap: 8\n    force_gigabit_fiber: no\n    sflow:\n      - poll_interval: 10\n      - poll_interval_global: no\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Disable Interface\n  bigip_interface:\n    name: 1.1\n    enabled: no\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Change sflow interface settings\n  bigip_interface:\n    name: 1.1\n    sflow:\n      - poll_interval: 0\n      - poll_interval_global: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_ipsec_policy": {
    "doc": {
      "description": "Manage IPSec policies on a BIG-IP device.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "auth_algorithm": {
          "aliases": [],
          "description": "Specifies the algorithm to use for IKE authentication.",
          "type": "str",
          "required": false,
          "choices": [
            "sha1",
            "sha256",
            "sha384",
            "sha512",
            "aes-gcm128",
            "aes-gcm192",
            "aes-gcm256",
            "aes-gmac128",
            "aes-gmac192",
            "aes-gmac256"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the policy",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "encrypt_algorithm": {
          "aliases": [],
          "description": "Specifies the algorithm to use for IKE encryption.",
          "type": "str",
          "required": false,
          "choices": [
            "none",
            "3des",
            "aes128",
            "aes192",
            "aes256",
            "aes-gmac256",
            "aes-gmac192",
            "aes-gmac128",
            "aes-gcm256",
            "aes-gcm192",
            "aes-gcm256",
            "aes-gcm128"
          ],
          "suboptions": {}
        },
        "ipcomp": {
          "aliases": [],
          "description": "Specifies whether to use IPComp encapsulation.\nWhen C(none), specifies IPComp is disabled.\nWhen C(deflate), specifies IPComp is enabled and uses the Deflate compression algorithm.",
          "type": "str",
          "required": false,
          "choices": [
            "none",
            "null",
            "deflate"
          ],
          "suboptions": {}
        },
        "ipv4_interface": {
          "aliases": [],
          "description": "When C(mode) is C(interface), indicates if the IPv4 C(any) address should be used. By default C(BIG-IP) assumes C(any6) address for tunnel addresses when C(mode) is C(interface).\nThis option takes effect only when C(mode) is set to C(interface).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "kb_lifetime": {
          "aliases": [],
          "description": "Specifies the length of time before the IKE security association, in kilobytes. expires.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "lifetime": {
          "aliases": [],
          "description": "Specifies the length of time before the IKE security association expires, in minutes.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Specifies the processing mode.\nWhen C(transport), specifies a mode that encapsulates only the payload (adding an ESP header, trailer, and authentication tag).\nWhen C(tunnel), specifies a mode that includes encapsulation of the header as well as the payload (adding a new IP header, in addition to adding an ESP header, trailer, and authentication tag). If you select this option, you must also provide IP addresses for the local and remote endpoints of the IPsec tunnel.\nWhen C(isession), specifies the use of iSession over an IPsec tunnel. To use this option, you must also configure the iSession endpoints with IPsec in the Acceleration section of the user interface.\nWhen C(interface), specifies the IPsec policy can be used in the tunnel profile for network interfaces.",
          "type": "str",
          "required": false,
          "choices": [
            "transport",
            "interface",
            "isession",
            "tunnel"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the IPSec policy.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "perfect_forward_secrecy": {
          "aliases": [],
          "description": "Specifies the Diffie-Hellman group to use for IKE Phase 2 negotiation.",
          "type": "str",
          "required": false,
          "choices": [
            "none",
            "modp768",
            "modp1024",
            "modp1536",
            "modp2048",
            "modp3072",
            "modp4096",
            "modp6144",
            "modp8192"
          ],
          "suboptions": {}
        },
        "protocol": {
          "aliases": [],
          "description": "Specifies the IPsec protocol.\nOptions include ESP (Encapsulating Security Protocol) or AH (Authentication Header).",
          "type": "str",
          "required": false,
          "choices": [
            "esp",
            "ah"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "route_domain": {
          "aliases": [],
          "description": "Specifies the route domain, when C(interface) is selected for the C(mode) setting.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tunnel_local_address": {
          "aliases": [],
          "description": "Specifies the local endpoint IP address of the IPsec tunnel.\nThis parameter is only valid when C(mode) is C(tunnel).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tunnel_remote_address": {
          "aliases": [],
          "description": "Specifies the remote endpoint IP address of the IPsec tunnel.\nThis parameter is only valid when C(mode) is C(tunnel).",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage IPSec policies on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a IPSec policy\n  bigip_ipsec_policy:\n    name: policy1\n    mode: tunnel\n    tunnel_local_address: 1.1.1.1\n    tunnel_remote_address: 2.2.2.\n    auth_algorithm: sha1\n    encrypt_algorithm: 3des\n    protocol: esp\n    perfect_forward_secrecy: modp1024\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_irule": {
    "doc": {
      "description": "Manage iRules across different modules on a BIG-IP device.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "content": {
          "aliases": [],
          "description": "When used instead of B(src), sets the contents of an iRule directly to the specified value. This is for simple values, but can be used with lookup plugins for anything complex or with formatting. Either one of C(src) or C(content) must be provided.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "module": {
          "aliases": [],
          "description": "The BIG-IP module to which the iRule should be added.",
          "type": "str",
          "required": true,
          "choices": [
            "ltm",
            "gtm"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the iRule.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "src": {
          "aliases": [],
          "description": "The iRule file to interpret and upload to the BIG-IP. Either one of C(src) or C(content) must be provided.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the iRule should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage iRules across different modules on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add the iRule contained in template irule.tcl to the LTM module\n  bigip_irule:\n    content: \"{{ lookup('template', 'irule.tcl') }}\"\n    module: ltm\n    name: MyiRule\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Add the iRule contained in static file irule.tcl to the LTM module\n  bigip_irule:\n    module: ltm\n    name: MyiRule\n    src: irule.tcl\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_log_destination": {
    "doc": {
      "description": "Manages log destinations on a BIG-IP device.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "address": {
          "aliases": [],
          "description": "Specifies the IP address that will receive messages from the specified local Log Destination.\nThis parameter is only available when C(type) is C(management-port).\nWhen creating a new log destination and C(type) is C(management-port), this parameter is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the log destination.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "distribution": {
          "aliases": [],
          "description": "Specifies the distribution method used by the Remote High Speed Log destination to send messages to pool members.\nWhen C(adaptive), connections to pool members will be added as required to provide enough logging bandwidth. This can have the undesirable effect of logs accumulating on only one pool member when it provides sufficient logging bandwidth on its own.\nWhen C(balanced), sends each successive log to a new pool member, balancing the logs among them according to the pool's load balancing method.\nWhen C(replicated), replicates each log to all pool members, for redundancy.\nWhen creating a new log destination and C(type) is C(remote-high-speed-log), if this parameter is not specified, the default is C(adaptive).",
          "type": "str",
          "required": false,
          "choices": [
            "adaptive",
            "balanced",
            "replicated"
          ],
          "suboptions": {}
        },
        "forward_to": {
          "aliases": [],
          "description": "When C(type) is C(remote-syslog), specifies the management port log destination, which will be used to forward the logs to a single log server, or a remote high-speed log destination, which will be used to forward the logs to a pool of remote log servers.\nWhen C(type) is C(splunk) or C(arcsight), specifies the log destination to which logs are forwarded. This log destination may be a management port destination, a remote high-speed log destination, or a remote Syslog destination which is configured to send logs to an ArcSight or Splunk server.\nWhen creating a new log destination and C(type) is C(remote-syslog), C(splunk), or C(arcsight), this parameter is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the log destination.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "pool": {
          "aliases": [],
          "description": "When C(type) is C(remote-high-speed-log), specifies the existing pool of remote high-speed log servers where logs will be sent.\nWhen C(type) is C(ipfix), specifies the existing LTM pool of remote IPFIX collectors. Any BIG-IP application that uses this log destination sends its IP-traffic logs to this pool of collectors.\nWhen creating a new destination and C(type) is C(remote-high-speed-log) or C(ipfix), this parameter is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Specifies the port of the IP address that will receive messages from the specified local Log Destination.\nThis parameter is only available when C(type) is C(management-port).\nWhen creating a new log destination and C(type) is C(management-port), this parameter is required.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "protocol": {
          "aliases": [],
          "description": "When C(type) is C(remote-high-speed-log), specifies the protocol for the system to use to send logs to the pool of remote high-speed log servers, where the logs are stored.\nWhen C(type) is C(ipfix), can be IPFIX or Netflow v9, depending on the type of collectors you have in the pool that you specify.\nWhen C(type) is C(management-port), specifies the protocol used to send messages to the specified location.\nWhen C(type) is C(management-port), only C(tcp) and C(udp) are valid values.",
          "type": "str",
          "required": false,
          "choices": [
            "tcp",
            "udp",
            "ipfix",
            "netflow-9"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "server_ssl_profile": {
          "aliases": [],
          "description": "If the C(transport_profile) is a TCP profile, you can use this field to choose a Secure Socket Layer (SSL) profile for sending logs to the IPFIX collectors.\nAn SSL server profile defines how to communicate securely over SSL or Transport Layer Security (TLS).\nThis parameter is only available when C(type) is C(ipfix).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "syslog_format": {
          "aliases": [],
          "description": "Specifies the method to use to format the logs associated with the remote Syslog log destination.\nWhen creating a new log destination (and C(type) is C(remote-syslog)), if this parameter is not specified, the default is C(bsd-syslog).\nThe C(syslog) and C(rfc5424) choices are the same.\nThe C(bsd-syslog) and C(rfc3164) choices are the same.",
          "type": "str",
          "required": false,
          "choices": [
            "bsd-syslog",
            "syslog",
            "legacy-bigip",
            "rfc5424",
            "rfc3164"
          ],
          "suboptions": {}
        },
        "template_delete_delay": {
          "aliases": [],
          "description": "Enter the time (in seconds) that the BIG-IP device should pause between deleting an obsolete IPFIX template and reusing its template ID.\nThis feature is useful for systems where you use iRules to create customized IPFIX templates.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "template_retransmit_interval": {
          "aliases": [],
          "description": "Enter the time (in seconds) between each transmission of IPFIX templates to the pool of IPFIX collectors.\nThe logging destination periodically retransmits all of its IPFIX templates at the interval you set in this field. These retransmissions are helpful for UDP, a lossy transport mechanism.\nThis parameter is only available when C(type) is C(ipfix).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "transport_profile": {
          "aliases": [],
          "description": "Is a transport profile based on either TCP or UDP.\nThis profile defines the TCP or UDP options used to send IP-traffic logs to the pool of collectors.\nThis parameter is only available when C(type) is C(ipfix).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Specifies the type of log destination.\nOnce created, this parameter cannot be changed.",
          "type": "str",
          "required": true,
          "choices": [
            "remote-high-speed-log",
            "remote-syslog",
            "arcsight",
            "splunk",
            "management-port",
            "ipfix"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages log destinations on a BIG-IP.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a high-speed logging destination\n  bigip_log_destination:\n    name: foo\n    type: remote-high-speed-log\n    pool: my-ltm-pool\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create a remote-syslog logging destination\n  bigip_log_destination:\n    name: foo\n    type: remote-syslog\n    syslog_format: rfc5424\n    forward_to: my-destination\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_log_publisher": {
    "doc": {
      "description": "Manages log publishers on a BIG-IP device.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "Specifies a description for the log publisher.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "destinations": {
          "aliases": [],
          "description": "Specifies log destinations for this log publisher to use.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the log publisher.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages log publishers on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a log publisher for use in high speed loggins\n  bigip_log_publisher:\n    name: publisher1\n    destinations:\n      - hsl1\n      - security-log-servers-logging\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_lx_package": {
    "doc": {
      "description": "Manages Javascript LX packages on a BIG-IP. This module allows you to deploy LX packages to the BIG-IP and manage their lifecycle.",
      "has_action": false,
      "notes": "Requires the RPM tool be installed on the host. This can be accomplished in different ways on each platform. On Debian based systems with C(apt); C(apt-get install rpm). On Mac with C(brew); C(brew install rpm). This command is already present on RedHat based systems.\nRequires BIG-IP >= 12.1.0, because the required functionality is missing on prior versions.\nThe module name C(bigip_iapplx_package) has been deprecated in favor of C(bigip_lx_package).\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "package": {
          "aliases": [],
          "description": "The LX package that you want to upload or remove. When C(state) is C(present), and you intend to use this module in a C(role), we recommend you use the C({{ role_path }}) variable. An example is provided in the C(EXAMPLES) section.\nWhen C(state) is C(absent), it is not necessary for the package to exist on the Ansible controller. If the full path to the package is provided, the fileame will specifically be cherry-picked from it to properly remove the package.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "retain_package_file": {
          "aliases": [],
          "description": "Specifies whether the install file should be deleted on successful installation of the package.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "1.4.0",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the LX package should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "Requires BIG-IP >= 12.1.0",
        "The 'rpm' tool installed on the Ansible controller"
      ],
      "short_description": "Manages Javascript LX packages on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Install AS3\n  bigip_lx_package:\n    package: f5-appsvcs-3.5.0-3.noarch.rpm\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Add an LX package stored in a role\n  bigip_lx_package:\n    package: \"{{ roles_path }}/files/MyApp-0.1.0-0001.noarch.rpm'\"\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove an LX package\n  bigip_lx_package:\n    package: MyApp-0.1.0-0001.noarch.rpm\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Install AS3 and don't delete package file\n  bigip_lx_package:\n    package: f5-appsvcs-3.5.0-3.noarch.rpm\n    retain_package_file: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_management_route": {
    "doc": {
      "description": "Configures route settings for the management interface of a BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "Description of the management route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "gateway": {
          "aliases": [],
          "description": "Specifies the system forwards packets to the destination through the gateway with the specified IP address.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the management route.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network": {
          "aliases": [],
          "description": "The subnet and netmask for the route.\nTo specify the route is the default route for the system, provide the value C(default).\nOnly one C(default) entry is allowed.\nThis parameter cannot be changed after it is set. Therefore, if you do need to change it, you must delete it and create a new route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage system management routes on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a management route\n  bigip_management_route:\n    name: tacacs\n    description: Route to TACACS\n    gateway: 10.10.10.10\n    network: 11.11.11.0/24\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_message_routing_peer": {
    "doc": {
      "description": "Manage peers for routing generic message protocol messages.",
      "has_action": false,
      "notes": "Requires BIG-IP >= 14.0.0\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "auto_init": {
          "aliases": [],
          "description": "If C(yes), the BIG-IP automatically creates outbound connections to the active pool members in the specified C(pool) using the configuration of the specified C(transport_config).\nFor auto-initialization to attempt to create a connection, the peer must be included in a route that is attached to a router instance. For each router instance the peer is contained in, a connection is initiated.\nThe C(auto_init) logic verifies at C(auto_init_interval) if the a connection exists between the BIG-IP and the pool members of the pool. If a connection does not exist, it attempts to reestablish one.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auto_init_interval": {
          "aliases": [],
          "description": "Specifies the interval at which attempts to initiate a connection occur.\nThe default value upon peer object creation, that is supplied by the system is C(5000) milliseconds.\nThe accepted range is between 0 and 4294967295 inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "connection_mode": {
          "aliases": [],
          "description": "Specifies how the number of connections per host are to be limited.",
          "type": "str",
          "required": false,
          "choices": [
            "per-blade",
            "per-client",
            "per-peer",
            "per-tmm"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The user-defined description of the peer.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the peer to manage.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "number_of_connections": {
          "aliases": [],
          "description": "Specifies the distribution of connections between the BIG-IP and a remote host.\nThe accepted range is between 0 and 65535 inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to create peer object on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "pool": {
          "aliases": [],
          "description": "Specifies the name of the pool that messages are routed towards.\nThe specified pool must be on the same partition as the peer.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "ratio": {
          "aliases": [],
          "description": "Specifies the ratio to be used for selection of a peer within a list of peers in a LTM route.\nThe accepted range is between 0 and 4294967295 inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the peer exists.\nWhen C(absent), ensures the peer is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "transport_config": {
          "aliases": [],
          "description": "The name of the LTM virtual or LTM transport-config to use for creating an outgoing connection.\nThe resource must exist on the same partition as the peer object.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Parameter used to specify the type of the peer to manage.\nDefault setting is C(generic) with more options coming.",
          "default": "generic",
          "type": "str",
          "required": false,
          "choices": [
            "generic"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage peers for routing generic message protocol messages",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a simple peer\n  bigip_message_routing_peer:\n    name: foobar\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create message routing peer with additional settings\n  bigip_message_routing_peer:\n    name: foobar\n    connection_mode: per-blade\n    pool: /baz/bar\n    partition: baz\n    transport_config: foovirtual\n    ratio: 10\n    auto_init: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Modify message routing peer settings\n  bigip_message_routing_peer:\n    name: foobar\n    partition: baz\n    ratio: 20\n    auto_init_interval: 2000\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove message routing peer\n  bigip_message_routing_peer:\n    name: foobar\n    partition: baz\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_message_routing_protocol": {
    "doc": {
      "description": "Manages the generic message parser profile for use with the message routing framework.",
      "has_action": false,
      "notes": "Requires BIG-IP >= 14.0.0\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "The user-defined description of the generic parser profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "disable_parser": {
          "aliases": [],
          "description": "When C(yes), the generic message parser is disabled, ignoring all incoming packets and not directly send message data.\nThis mode supports iRule script protocol implementations that generates messages from the incoming transport stream and sends outgoing messages on the outgoing transport stream.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "max_egress_buffer": {
          "aliases": [],
          "description": "Specifies the maximum size of the send buffer in bytes. If the number of bytes in the send buffer for a connection exceeds this value, the generic message protocol will stop receiving outgoing messages from the router until the size of the size of the buffer drops below this setting.\nThe accepted range is between 0 and 4294967295 inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "max_msg_size": {
          "aliases": [],
          "description": "Specifies the maximum size of a received message. If a message exceeds this size, the connection will be reset.\nThe accepted range is between 0 and 4294967295 inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "msg_terminator": {
          "aliases": [],
          "description": "The string of characters used to terminate a message. If the message-terminator is not specified, the generic message parser will not separate the input stream into messages.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the generic parser profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "no_response": {
          "aliases": [],
          "description": "When set, matching of responses to requests is disabled.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this parser profile. Once this value has been set, it cannot be changed.\nWhen creating a new profile, if this parameter is not specified, the default is the system-supplied C(genericmsg) profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to create route object on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the route exists.\nWhen C(absent), ensures the route is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage the generic message parser profile.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a generic parser\n  bigip_message_routing_protocol:\n    name: foo\n    description: 'This is parser'\n    no_response: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Modify a generic parser\n  bigip_message_routing_protocol:\n    name: foo\n    no_response: no\n    max_egress_buffer: 10000\n    max_msg_size: 2000\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove generic parser\n  bigip_message_routing_protocol:\n    name: foo\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_message_routing_route": {
    "doc": {
      "description": "Manages static routes for routing message protocol messages.",
      "has_action": false,
      "notes": "Requires BIG-IP >= 14.0.0\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "The user-defined description of the static route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dst_address": {
          "aliases": [],
          "description": "Specifies the destination address of the route.\nSetting the attribute to an empty string will create a wildcard matching all message destination-addresses, which is the default when creating a new route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the static route.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to create route object on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "peer_selection_mode": {
          "aliases": [],
          "description": "Specifies the method to use when selecting a peer from the provided list of C(peers).",
          "type": "str",
          "required": false,
          "choices": [
            "ratio",
            "sequential"
          ],
          "suboptions": {}
        },
        "peers": {
          "aliases": [],
          "description": "Specifies a list of ltm messagerouting-peer objects.\nThe specified peer must be on the same partition as the route.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "src_address": {
          "aliases": [],
          "description": "Specifies the source address of the route.\nSetting the attribute to an empty string will create a wildcard matching all message source-addresses, which is the default when creating a new route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the route exists.\nWhen C(absent), ensures the route is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Parameter used to specify the type of the route to manage.\nDefault setting is C(generic) with more options coming.",
          "default": "generic",
          "type": "str",
          "required": false,
          "choices": [
            "generic"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages static routes for routing message protocol messages",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a simple generic route\n  bigip_message_routing_route:\n    name: foobar\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Modify a generic route\n  bigip_message_routing_route:\n    name: foobar\n    peers:\n      - peer1\n      - peer2\n    peer_selection_mode: ratio\n    src_address: annoying_user\n    dst_address: blackhole\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove a generic\n  bigip_message_routing_route:\n    name: foobar\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_message_routing_router": {
    "doc": {
      "description": "Manages router profiles for message-routing protocols.",
      "has_action": false,
      "notes": "Requires BIG-IP >= 14.0.0\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "The user-defined description of the router profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ignore_client_port": {
          "aliases": [],
          "description": "When C(yes), the remote port on clientside connections (connections where the peer connected to the BIG-IP) is ignored when searching for an existing connection.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "inherited_traffic_group": {
          "aliases": [],
          "description": "When set to C(yes), the C(traffic_group) will be inherited from the containing folder. When not specified the system sets this to C(no) when creating new router profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "max_pending_bytes": {
          "aliases": [],
          "description": "The maximum number of bytes worth of pending messages that will be held while waiting for a connection to a peer to be created. Once reached, any additional messages to the peer will be flagged as undeliverable and returned to the originator.\nThe accepted range is between 0 and 4294967295 inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "max_pending_messages": {
          "aliases": [],
          "description": "The maximum number of pending messages that will be held while waiting for a connection to a peer to be created. Once reached, any additional messages to the peer will be flagged as undeliverable and returned to the originator.\nThe accepted range is between 0 and 65535 inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "max_retries": {
          "aliases": [],
          "description": "Sets the maximum number of time a message may be resubmitted for rerouting by the C(MR::retry) iRule command.\nThe accepted range is between 0 and 4294967295 inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "mirror": {
          "aliases": [],
          "description": "Enables or disables state mirroring. State mirroring can be used to maintain the same state information in the standby unit that is in the active unit.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "mirrored_msg_sweeper_interval": {
          "aliases": [],
          "description": "Specifies the maximum time in milliseconds that a message will be held on the standby device as it waits for the active device to route the message.\nMessages on the standby device held for longer than the configurable sweeper interval, will be dropped.\nThe acceptable range is between 0 and 4294967295 inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the router profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this router profile. Once this value has been set, it cannot be changed.\nThe default values are set by the system if not specified and they correspond to the router type created, for example, C(/Common/messagerouter) for C(generic) C(type) and so on.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to create router profile on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "routes": {
          "aliases": [],
          "description": "Specifies a list of static routes for the router instance to use.\nThe route must be on the same partition as router profile.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the router profile exists.\nWhen C(absent), ensures the router profile is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "traffic_group": {
          "aliases": [],
          "description": "Specifies the traffic-group of the router profile.\nSetting the C(traffic_group) to an empty string value C(\"\") will cause the device to inherit from containing folder, which means the value of C(inherited_traffic_group) on device will be C(yes).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Parameter used to specify the type of the router profile to manage.\nDefault setting is C(generic) with more options coming.",
          "default": "generic",
          "type": "str",
          "required": false,
          "choices": [
            "generic"
          ],
          "suboptions": {}
        },
        "use_local_connection": {
          "aliases": [],
          "description": "If C(yes), the router will route a message to an existing connection on the same TMM as the message was received.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages router profiles for message-routing protocols",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a generic router profile\n  bigip_message_routing_router:\n    name: foo\n    max_retries: 10\n    ignore_client_port: yes\n    routes:\n      - /Common/route1\n      - /Common/route2\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Modify a generic router profile\n  bigip_message_routing_router:\n    name: foo\n    ignore_client_port: no\n    mirror: yes\n    mirrored_msg_sweeper_interval: 4000\n    traffic_group: /Common/traffic-group-2\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove a generic router profile\n  bigip_message_routing_router:\n    name: foo\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_message_routing_transport_config": {
    "doc": {
      "description": "Manages configuration for an outgoing connection in BIG-IP message routing.",
      "has_action": false,
      "notes": "Requires BIG-IP >= 14.0.0\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "The user-defined description of the transport config.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the transport config to manage.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to create transport-config object on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profiles": {
          "aliases": [],
          "description": "Specifies a list of profiles for the outgoing connection to use to direct and manage traffic.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rules": {
          "aliases": [],
          "description": "The iRules you want run on this transport config. iRules help automate the intercepting, processing, and routing of application traffic.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "src_addr_translation": {
          "aliases": [],
          "description": "Specifies the type of source address translation enabled for the transport config and the pool the source address translation will use.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "pool": {
              "aliases": [],
              "description": "Specifies the name of a LSN or SNAT pool used by the specified transport config.\nName can also be specified in C(fullPath) format: C(/Common/foobar).\nWhen C(type) is C(none) or C(automap), the pool parameter will be replaced by C(none) keyword, thus any defined C(pool) parameter will be ignored.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "Specifies the type of source address translation associated with the specified transport config.\nWhen set to C(snat), the C(pool) parameter needs to contain a name for a valid LSN or SNAT pool.",
              "type": "str",
              "required": false,
              "choices": [
                "snat",
                "none",
                "automap"
              ],
              "suboptions": {}
            }
          }
        },
        "src_port": {
          "aliases": [],
          "description": "Specifies the source port for the connection being created.\nIf no value is specified an ephemeral port is chosen for the connection being created.\nThe acceptable range is between 0 and 65535 inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the transport-config object exists.\nWhen C(absent), ensures the transport-config object is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Parameter used to specify the type of transport-config object to manage.\nDefault setting is C(generic) with more options coming.",
          "default": "generic",
          "type": "str",
          "required": false,
          "choices": [
            "generic"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages configuration for an outgoing connection",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create generic transport config\n  bigip_message_routing_transport_config:\n    name: foo\n    profiles:\n      transport: genericmsg\n      tcp: tcp-lan-optimized\n    description: new_transport\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Modify generic transport config\n  bigip_message_routing_transport_config:\n    name: foo\n    rules:\n      - rule_1\n      - rule_2\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove generic transport config\n  bigip_message_routing_transport_config:\n    name: foo\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_monitor_dns": {
    "doc": {
      "description": "Manages DNS health monitors on a BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "accept_rcode": {
          "aliases": [],
          "description": "Specifies the RCODE required in the response for an up status.\nWhen creating a new monitor, if this parameter is not specified, the default value is C(no-error).\nWhen C(no-error), specifies the status of the node will be marked up if the received DNS message has no error.\nWhen C(anything), specifies the status of the node will be marked up irrespective of the RCODE in the DNS message received.\nIf this parameter is set to C(anything), it will disregard the C(receive) string, and nullify it if the monitor is being updated.",
          "type": "str",
          "required": false,
          "choices": [
            "no-error",
            "anything"
          ],
          "suboptions": {}
        },
        "adaptive": {
          "aliases": [],
          "description": "Specifies whether adaptive response time monitoring is enabled for this monitor.\nWhen C(yes), the monitor determines the state of a service based on how divergent from the mean latency a monitor probe for that service is allowed to be. Also, values for the C(allowed_divergence), C(adaptive_limit), and and C(sampling_timespan) will be enforced.\nWhen C(disabled), the monitor determines the state of a service based on the C(interval), C(up_interval), C(time_until_up), and C(timeout) monitor settings.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "adaptive_limit": {
          "aliases": [],
          "description": "Specifies the absolute number of milliseconds that may not be exceeded by a monitor probe, regardless of C(allowed_divergence) setting, for a probe to be considered successful.\nThis value applies regardless of the value of the C(allowed_divergence) setting.\nWhile this value can be configured when C(adaptive) is C(no), it will not take effect on the system until C(adaptive) is C(yes).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "allowed_divergence_type": {
          "aliases": [],
          "description": "When specifying a new monitor, if C(adaptive) is C(yes), the default is C(relative).\nWhen C(absolute), the number of milliseconds the latency of a monitor probe can exceed the mean latency of a monitor probe for the service being probed. In typical cases, if the monitor detects three probes in a row that miss the latency value you set, the pool member or node is marked down.\nWhen C(relative), the percentage of deviation the latency of a monitor probe can exceed the mean latency of a monitor probe for the service being probed.",
          "type": "str",
          "required": false,
          "choices": [
            "relative",
            "absolute"
          ],
          "suboptions": {}
        },
        "allowed_divergence_value": {
          "aliases": [],
          "description": "When specifying a new monitor, if C(adaptive) is C(yes), and C(type) is C(relative), the default is C(25) percent.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "answer_section_contains": {
          "aliases": [],
          "description": "Specifies the type of DNS query the monitor sends.\nWhen creating a new monitor, if this value is not specified, the default value is C(query-type).\nWhen C(query-type), specifies that the response should contain at least one answer of which the resource record type matches the query type.\nWhen C(any-type), specifies the DNS message should contain at least one answer.\nWhen C(anything), specifies an empty answer is enough to mark the status of the node up.",
          "type": "str",
          "required": false,
          "choices": [
            "any-type",
            "anything",
            "query-type"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the monitor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "The interval specifying how frequently the monitor instance of this template will run.\nThis value B(must) be less than the C(timeout) value.\nWhen creating a new monitor, if this parameter is not provided, the default C(5) will be used.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition.\nIf this parameter is not provided when creating a new monitor, the default value will be C(*).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "manual_resume": {
          "aliases": [],
          "description": "Specifies whether the system automatically changes the status of a resource to B(enabled) at the next successful monitor check.\nIf C(yes), you must manually re-enable the resource before the system can use it for load balancing connections.\nWhen creating a new monitor, if this parameter is not specified, the default value is C(no).\nWhen C(yes), specifies you must manually re-enable the resource after an unsuccessful monitor check.\nWhen C(no), specifies the system automatically changes the status of a resource to B(enabled) at the next successful monitor check.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the monitor.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is the C(dns) parent on the C(Common) partition.",
          "default": "/Common/dns",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port address part of the IP/port definition.\nIf this parameter is not provided when creating a new monitor, the default value will be C(*).\nNote that if specifying an IP address, you must use a value between 1 and 65535.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "query_name": {
          "aliases": [],
          "description": "Specifies a query name for the monitor to use in a DNS query.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "query_type": {
          "aliases": [],
          "description": "Specifies the type of DNS query the monitor sends.\nWhen creating a new monitor, if this parameter is not specified, the default value is C(a).\nWhen C(a), specifies the monitor will send a DNS query of type A.\nWhen C(aaaa), specifies the monitor will send a DNS query of type AAAA.",
          "type": "str",
          "required": false,
          "choices": [
            "a",
            "aaaa"
          ],
          "suboptions": {}
        },
        "receive": {
          "aliases": [],
          "description": "Specifies the IP address the monitor uses from the resource record sections of the DNS response.\nThe IP address should be specified in the dotted-decimal notation or IPv6 notation.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "reverse": {
          "aliases": [],
          "description": "Specifies whether the monitor operates in reverse mode.\nWhen the monitor is in reverse mode, a successful receive string match marks the monitored object down instead of up. You can use the this mode only if you configure the C(receive) option.\nThis parameter is not compatible with the C(time_until_up) parameter. If C(time_until_up) is specified, it must be C(0). Or, if it already exists, it must be C(0).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "sampling_timespan": {
          "aliases": [],
          "description": "Specifies the length, in seconds, of the probe history window the system uses to calculate the mean latency and standard deviation of a monitor probe.\nWhile this value can be configured when C(adaptive) is C(no), it will not take effect on the system until C(adaptive) is C(yes).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "time_until_up": {
          "aliases": [],
          "description": "Specifies the amount of time in seconds after the first successful response before a node will be marked up.\nA value of 0 will cause a node to be marked up immediately after a valid response is received from the node.\nIf this parameter is not provided when creating a new monitor, the default value will be C(0).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "The number of seconds in which the node or service must respond to the monitor request.\nIf the target responds within the set time period, it is considered up.\nIf the target does not respond within the set time period, it is considered down.\nYou can change this to any number, however, it should be 3 times the interval number of seconds plus 1 second.\nIf this parameter is not provided when creating a new monitor, the default value will be C(16).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "transparent": {
          "aliases": [],
          "description": "Specifies whether the monitor operates in transparent mode.\nMonitors in transparent mode can monitor pool members through firewalls.\nWhen creating a new monitor, if this parameter is not provided, the default value will be C(no).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "up_interval": {
          "aliases": [],
          "description": "Specifies the interval for the system to use to perform the health check when a resource is up.\nWhen C(0), specifies the system uses the interval specified in C(interval) to check the health of the resource.\nWhen any other number, enables you to specify a different interval to use when checking the health of a resource that is up.\nWhen creating a new monitor, if this parameter is not provided, the default C(0) will be used.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage DNS monitors on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a DNS monitor\n  bigip_monitor_dns:\n    name: DNS-UDP-V6\n    interval: 2\n    query_name: localhost\n    query_type: aaaa\n    up_interval: 5\n    adaptive: no\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_monitor_external": {
    "doc": {
      "description": "Manages external LTM monitors on a BIG-IP device.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "arguments": {
          "aliases": [],
          "description": "Specifies any command-line arguments the script requires.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the monitor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "external_program": {
          "aliases": [],
          "description": "Specifies the name of the file for the monitor to use. In order to reference a file, you must first import it using options on the B(System > File Management > External Monitor Program File List > Import) screen. The BIG-IP system automatically places the file in the proper location on the file system.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "The interval specifying how frequently the monitor instance of this template will run. If this parameter is not provided when creating a new monitor, the default value will be 5. This value B(must) be less than the C(timeout) value.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value will be '*'.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the monitor.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is the C(external) parent on the C(Common) partition.",
          "default": "/Common/external",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port address part of the IP/port definition. If this parameter is not provided when creating a new monitor, then the default value will be '*'. If specifying an IP address, you must use a value between 1 and 65535.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "The number of seconds in which the node or service must respond to the monitor request.\nIf the target responds within the set time period, it is considered up.\nIf the target does not respond within the set time period, it is considered down.\nYou can change this to any number, however, it should be 3 times the interval number of seconds plus 1 second.\nIf this parameter is not provided when creating a new monitor, the default value will be C(16).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "variables": {
          "aliases": [],
          "description": "Specifies any variables the script requires.\nNote that double quotes in values will be suppressed.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages external LTM monitors on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create an external monitor\n  bigip_monitor_external:\n    name: foo\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Create an external monitor with variables\n  bigip_monitor_external:\n    name: foo\n    timeout: 10\n    variables:\n      var1: foo\n      var2: bar\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Add a variable to an existing set\n  bigip_monitor_external:\n    name: foo\n    timeout: 10\n    variables:\n      var1: foo\n      var2: bar\n      cat: dog\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_monitor_ftp": {
    "doc": {
      "description": "Manage FTP monitors on a BIG-IP device.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "app_service": {
          "aliases": [],
          "description": "The iApp service to be associated with this profile. When no service is specified, the default is None.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug": {
          "aliases": [],
          "description": "Specifies whether the monitor sends error messages and additional information to a log file created and labeled specifically for this monitor.\nWhen C(yes) the system redirects error messages and additional information to the C(/var/log/monitors/<monitor_name>-<node_name>-<port>.log) file.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the monitor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filename": {
          "aliases": [],
          "description": "Specifies the full path and file name of the file the system attempts to download. The health check is successful if the system can download the file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "The interval specifying how frequently the monitor instance of this template will run.\nThis value B(must) be less than the C(timeout) value.\nWhen creating a new monitor, if this parameter is not provided, the default C(5) will be used.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "manual_resume": {
          "aliases": [],
          "description": "Specifies whether the system automatically changes the status of a resource to B(enabled) at the next successful monitor check.\nIf you set this option to C(yes), you must manually re-enable the resource before the system can use it for load balancing connections.\nWhen creating a new monitor, if this parameter is not specified, the default value is C(no).\nWhen C(yes), specifies you must manually re-enable the resource after an unsuccessful monitor check.\nWhen C(no), specifies the system automatically changes the status of a resource to B(enabled) at the next successful monitor check.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Specifies the data transfer process (DTP) mode.\nWhen C(passive), the monitor sends a data transfer request to the FTP server. When the FTP server receives the request, the FTP server initiates and establishes the data connection.\nWhen C(port), the monitor initiates and establishes the data connection with the FTP server.",
          "type": "str",
          "required": false,
          "choices": [
            "passive",
            "port"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the monitor.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed.\nWhen creating a new monitor, if this parameter is not specified, the default is the system-supplied C(ftp) monitor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'. If specifying an IP address, you must use a value between 1 and 65535.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target_password": {
          "aliases": [],
          "description": "Specifies the password, if the monitored target requires authentication.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_username": {
          "aliases": [],
          "description": "Specifies the user name, if the monitored target requires authentication.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "time_until_up": {
          "aliases": [],
          "description": "Specifies the amount of time in seconds after the first successful response before a node will be marked up.\nA value of C(0) will cause a node to be marked up immediately after a valid response is received from the node.\nIf this parameter is not provided when creating a new monitor, then the default value will be C(0).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "The number of seconds in which the node or service must respond to the monitor request.\nIf the target responds within the set time period, it is considered up.\nIf the target does not respond within the set time period, it is considered down.\nYou can change this to any number, however, it should be 3 times the interval number of seconds plus 1 second.\nIf this parameter is not provided when creating a new monitor, then the default value will be C(31).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "up_interval": {
          "aliases": [],
          "description": "Specifies the interval at which the system performs the health check when a resource is up.\nWhen C(0), specifies the system uses the interval specified in C(interval) to check the health of the resource.\nWhen any other number, enables you to specify a different interval to use when checking the health of a resource that is up.\nWhen creating a new monitor, if this parameter is not provided, the default C(0) will be used.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "C(always) will update passwords if the C(target_password) is specified.\nC(on_create) will only set the password for newly created monitors.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_create"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage FTP monitors on a BIG-IP",
      "version_added": "1.1.0"
    },
    "examples": "\n- name: Create FTP Monitor\n  bigip_monitor_ftp:\n    state: present\n    ip: 10.10.10.10\n    name: my_ft_monitor\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Remove FTP Monitor\n  bigip_monitor_ftp:\n    state: absent\n    name: my_ftp_monitor\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Include a username and password in the FTP monitor\n  bigip_monitor_ftp:\n    state: absent\n    name: my_ftp_monitor\n    target_username: monitor_user\n    target_password: monitor_pass\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_monitor_gateway_icmp": {
    "doc": {
      "description": "Manages gateway ICMP monitors on a BIG-IP LTM.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "adaptive": {
          "aliases": [],
          "description": "Specifies whether adaptive response time monitoring is enabled for this monitor.\nWhen C(yes), the monitor determines the state of a service based on how divergent from the mean latency a monitor probe for that service is allowed to be. Also, values for the C(allowed_divergence), C(adaptive_limit), and and C(sampling_timespan) will be enforced.\nWhen C(disabled), the monitor determines the state of a service based on the C(interval), C(up_interval), C(time_until_up), and C(timeout) monitor settings.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "adaptive_limit": {
          "aliases": [],
          "description": "Specifies the absolute number of milliseconds that may not be exceeded by a monitor probe, regardless of C(allowed_divergence) setting, for a probe to be considered successful.\nThis value applies regardless of the value of the C(allowed_divergence) setting.\nWhile this value can be configured when C(adaptive) is C(no), it will not take effect on the system until C(adaptive) is C(yes).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "allowed_divergence_type": {
          "aliases": [],
          "description": "When specifying a new monitor, if C(adaptive) is C(yes), the default is C(relative).\nWhen C(absolute), the number of milliseconds the latency of a monitor probe can exceed the mean latency of a monitor probe for the service being probed. In typical cases, if the monitor detects three probes in a row that miss the latency value you set, the pool member or node is marked down.\nWhen C(relative), the percentage of deviation the latency of a monitor probe can exceed the mean latency of a monitor probe for the service being probed.",
          "type": "str",
          "required": false,
          "choices": [
            "relative",
            "absolute"
          ],
          "suboptions": {}
        },
        "allowed_divergence_value": {
          "aliases": [],
          "description": "When specifying a new monitor, if C(adaptive) is C(yes), and C(type) is C(relative), the default is C(25) percent.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the monitor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "Specifies, in seconds, the frequency at which the system issues the monitor check when either the resource is down or the status of the resource is unknown.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "manual_resume": {
          "aliases": [],
          "description": "Specifies whether the system automatically changes the status of a resource to B(enabled) at the next successful monitor check.\nIf you set this option to C(yes), you must manually re-enable the resource before the system can use it for load balancing connections.\nWhen C(yes), specifies you must manually re-enable the resource after an unsuccessful monitor check.\nWhen C(no), specifies the system automatically changes the status of a resource to B(enabled) at the next successful monitor check.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Monitor name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is the C(gateway_icmp) parent on the C(Common) partition.",
          "default": "/Common/gateway_icmp",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'. If specifying an IP address, you must use a value between 1 and 65535.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "sampling_timespan": {
          "aliases": [],
          "description": "Specifies the length, in seconds, of the probe history window that the system uses to calculate the mean latency and standard deviation of a monitor probe.\nWhile this value can be configured when C(adaptive) is C(no), it will not take effect on the system until C(adaptive) is C(yes).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures that the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "time_until_up": {
          "aliases": [],
          "description": "Specifies the number of seconds to wait after a resource first responds correctly to the monitor before setting the resource to 'up'.\nDuring the interval, all responses from the resource must be correct.\nWhen the interval expires, the resource is marked 'up'.\nA value of C(0) means the resource is marked up immediately upon receipt of the first correct response.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "Specifies the number of seconds the target has in which to respond to the monitor request.\nIf the target responds within the set time period, it is considered 'up'. If the target does not respond within the set time period, it is considered 'down'. When this value is set to 0 (zero), the system uses the interval from the parent monitor.\nNote that C(timeout) and C(time_until_up) combine to control when a resource is set to up.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "transparent": {
          "aliases": [],
          "description": "Specifies whether the monitor operates in transparent mode.\nA monitor in transparent mode directs traffic through the associated pool members or nodes (usually a router or firewall) to the aliased destination (that is, it probes the C(ip)-C(port) combination specified in the monitor).\nIf the monitor cannot successfully reach the aliased destination, the pool member or node through which the monitor traffic was sent is marked down.\nWhen creating a new monitor, if this parameter is not provided, then the default value will be whatever is provided by the C(parent).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "up_interval": {
          "aliases": [],
          "description": "Specifies the interval for the system to use to perform the health check when a resource is up.\nWhen C(0), specifies the system uses the interval specified in C(interval) to check the health of the resource.\nWhen any other number, enables you to specify a different interval to use when checking the health of a resource that is up.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP LTM gateway ICMP monitors",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a monitor\n  bigip_monitor_gateway_icmp:\n    name: gw1\n    adaptive: no\n    interval: 1\n    time_until_up: 0\n    timeout: 3\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_monitor_http": {
    "doc": {
      "description": "Manages F5 BIG-IP LTM HTTP monitors.",
      "has_action": false,
      "notes": "Requires BIG-IP software version >= 12\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "The description of the monitor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "The interval specifying how frequently the monitor instance of this template will run. If this parameter is not provided when creating a new monitor, the default value is 5. This value B(must) be less than the C(timeout) value.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Monitor name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is the C(http) parent on the C(Common) partition.",
          "default": "/Common/http",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'. If specifying an IP address, you must specify a value between 1 and 65535.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "receive": {
          "aliases": [],
          "description": "The Receive string for the monitor call.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "receive_disable": {
          "aliases": [],
          "description": "This setting works like C(receive), except the system marks the node or pool member disabled when its response matches the C(receive_disable) string but not C(receive). To use this setting, you must specify both C(receive_disable) and C(receive).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "reverse": {
          "aliases": [],
          "description": "Specifies whether the monitor operates in reverse mode.\nWhen the monitor is in reverse mode, a successful receive string match marks the monitored object down instead of up. You can use the this mode only if you configure the C(receive) option.\nThis parameter is not compatible with the C(time_until_up) parameter. If C(time_until_up) is specified, it must be C(0). Or, if it already exists, it must be C(0).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "send": {
          "aliases": [],
          "description": "The Send string for the monitor call. When creating a new monitor, if this value is not provided, the default C(GET /\\r\\n) is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target_password": {
          "aliases": [],
          "description": "Specifies the password, if the monitored target requires authentication.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_username": {
          "aliases": [],
          "description": "Specifies the user name, if the monitored target requires authentication.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "time_until_up": {
          "aliases": [],
          "description": "Specifies the amount of time in seconds after the first successful response before a node is marked up. A value of 0 causes a node to be marked up immediately after a valid response is received from the node. If this parameter is not provided when creating a new monitor, the default value will be 0.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "The number of seconds in which the node or service must respond to the monitor request. If the target responds within the set time period, it is considered up. If the target does not respond within the set time period, it is considered down. You can change this to any number, however, it should be 3 times the interval number of seconds plus 1 second. If this parameter is not provided when creating a new monitor, the default value is 16.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP LTM HTTP monitors",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create HTTP Monitor\n  bigip_monitor_http:\n    state: present\n    ip: 10.10.10.10\n    name: my_http_monitor\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Remove HTTP Monitor\n  bigip_monitor_http:\n    state: absent\n    name: my_http_monitor\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Include a username and password in the HTTP monitor\n  bigip_monitor_http:\n    state: absent\n    name: my_http_monitor\n    target_username: monitor_user\n    target_password: monitor_pass\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_monitor_https": {
    "doc": {
      "description": "Manages F5 BIG-IP LTM HTTPS monitors.",
      "has_action": false,
      "notes": "Requires BIG-IP software version >= 12\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "cipher_list": {
          "aliases": [],
          "description": "Specifies the list of ciphers for this monitor.\nThe items in the cipher list are separated with a colon C(:).",
          "type": "str",
          "required": false,
          "version_added": "1.3.0",
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the monitor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "The interval specifying how frequently the monitor instance of this template runs. If this parameter is not provided when creating a new monitor, the default value is 5. This value B(must) be less than the C(timeout) value.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Monitor name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is the C(https) parent on the C(Common) partition.",
          "default": "/Common/https",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'. If specifying an IP address, you must specify a value between 1 and 65535.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "receive": {
          "aliases": [],
          "description": "The Receive string for the monitor call.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "receive_disable": {
          "aliases": [],
          "description": "This setting works like C(receive), except the system marks the node or pool member disabled when its response matches the C(receive_disable) string but not C(receive). To use this setting, you must specify both C(receive_disable) and C(receive).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "reverse": {
          "aliases": [],
          "description": "Specifies whether the monitor operates in reverse mode.\nWhen the monitor is in reverse mode, a successful receive string match marks the monitored object down instead of up. You can use the this mode only if you configure the C(receive) option.\nThis parameter is not compatible with the C(time_until_up) parameter. If C(time_until_up) is specified, it must be C(0). Or, if it already exists, it must be C(0).",
          "type": "bool",
          "required": false,
          "version_added": "1.12.0",
          "suboptions": {}
        },
        "send": {
          "aliases": [],
          "description": "The Send string for the monitor call. When creating a new monitor, if this value is not provided, the default C(GET /\\\\r\\\\n) is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssl_profile": {
          "aliases": [],
          "description": "Specifies the SSL profile to use for the HTTPS monitor.\nDefining SSL profiles enables refined customization of the SSL attributes for an HTTPS monitor.\nThis parameter is only supported on BIG-IP versions 13.x and later.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target_password": {
          "aliases": [],
          "description": "Specifies the password, if the monitored target requires authentication.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_username": {
          "aliases": [],
          "description": "Specifies the user name, if the monitored target requires authentication.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "time_until_up": {
          "aliases": [],
          "description": "Specifies the amount of time in seconds after the first successful response before a node is marked up. A value of 0 causes a node to be marked up immediately after a valid response is received from the node. If this parameter is not provided when creating a new monitor, then the default value is 0.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "The number of seconds in which the node or service must respond to the monitor request. If the target responds within the set time period, it is considered up. If the target does not respond within the set time period, it is considered down. You can change this to any number, however, it should be 3 times the interval number of seconds plus 1 second. If this parameter is not provided when creating a new monitor, the default value is 16.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "up_interval": {
          "aliases": [],
          "description": "Specifies the interval for the system to use to perform the health check when a resource is up.\nWhen C(0), specifies the system uses the interval specified in C(interval) to check the health of the resource.\nWhen any other number, enables you to specify a different interval when checking the health of a resource that is up.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP LTM HTTPS monitors",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create HTTPS Monitor\n  bigip_monitor_https:\n    name: my_http_monitor\n    state: present\n    ip: 10.10.10.10\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Remove HTTPS Monitor\n  bigip_monitor_https:\n    name: my_http_monitor\n    state: absent\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_monitor_icmp": {
    "doc": {
      "description": "Manages ICMP monitors on a BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "adaptive": {
          "aliases": [],
          "description": "Specifies whether adaptive response time monitoring is enabled for this monitor.\nWhen C(yes), the monitor determines the state of a service based on how divergent from the mean latency a monitor probe for that service is allowed to be. Also, values for the C(allowed_divergence), C(adaptive_limit), and and C(sampling_timespan) will be enforced.\nWhen C(disabled), the monitor determines the state of a service based on the C(interval), C(up_interval), C(time_until_up), and C(timeout) monitor settings.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "adaptive_limit": {
          "aliases": [],
          "description": "Specifies the absolute number of milliseconds that may not be exceeded by a monitor probe, regardless of C(allowed_divergence) setting, for a probe to be considered successful.\nThis value applies regardless of the value of the C(allowed_divergence) setting.\nWhile this value can be configured when C(adaptive) is C(no), it will not take effect on the system until C(adaptive) is C(yes).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "allowed_divergence_type": {
          "aliases": [],
          "description": "When specifying a new monitor, if C(adaptive) is C(yes), the default is C(relative).\nWhen C(absolute), the number of milliseconds the latency of a monitor probe can exceed the mean latency of a monitor probe for the service being probed. In typical cases, if the monitor detects three probes in a row that miss the latency value you set, the pool member or node is marked down.\nWhen C(relative), the percentage of deviation the latency of a monitor probe can exceed the mean latency of a monitor probe for the service being probed.",
          "type": "str",
          "required": false,
          "choices": [
            "relative",
            "absolute"
          ],
          "suboptions": {}
        },
        "allowed_divergence_value": {
          "aliases": [],
          "description": "When specifying a new monitor, if C(adaptive) is C(yes), and C(type) is C(relative), the default is C(25) percent.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "app_service": {
          "aliases": [],
          "description": "The iApp service to be associated with this profile. When no service is specified, the default is None.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the monitor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "Specifies the frequency, in seconds, at which the system issues the monitor check when either the resource is down or the status of the resource is unknown.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "Specifies the IP address of the resource that is the destination of this monitor.\nWhen set to B(*), the device performs a health check on the IP address of the node.\nWhen set to an B(<IP>) the device performs a health check on that IP address and marks the associated node up or down as a result of the response. This option is set by the device by default when not defined during monitor creation.\nWhen set to an B(<IP>) and C(transparent) is C(yes), the device performs a health check on that IP address, routes the check through the associated node IP address, and marks the associated node IP address up or down accordingly.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "manual_resume": {
          "aliases": [],
          "description": "Specifies whether the system automatically changes the status of a resource to B(enabled) at the next successful monitor check.\nIf you set this option to C(yes), you must manually re-enable the resource before the system can use it for load balancing connections.\nWhen C(yes), specifies you must manually re-enable the resource after an unsuccessful monitor check.\nWhen C(no), specifies the system automatically changes the status of a resource to B(enabled) at the next successful monitor check.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the monitor.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed.\nWhen creating a new monitor, if this parameter is not specified, the default is the system-supplied C(icmp) monitor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "sampling_timespan": {
          "aliases": [],
          "description": "Specifies the length, in seconds, of the probe history window the system uses to calculate the mean latency and standard deviation of a monitor probe.\nWhile this value can be configured when C(adaptive) is C(no), it will not take effect on the system until C(adaptive) is C(yes).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures that the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "time_until_up": {
          "aliases": [],
          "description": "Specifies the number of seconds to wait after a resource first responds correctly to the monitor before setting the resource to 'up'.\nDuring the interval, all responses from the resource must be correct.\nWhen the interval expires, the resource is marked 'up'.\nA value of 0 means the resource is marked up immediately upon receipt of the first correct response.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "Specifies the number of seconds the target has in which to respond to the monitor request.\nIf the target responds within the set time period, it is considered 'up'. If the target does not respond within the set time period, it is considered 'down'. When this value is set to 0 (zero), the system uses the interval from the parent monitor.\nNote that C(timeout) and C(time_until_up) combine to control when a resource is set to up.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "transparent": {
          "aliases": [],
          "description": "Specifies whether the monitor operates in transparent mode.\nA monitor in transparent mode directs traffic through the associated pool members or nodes (usually a router or firewall) to the aliased destination (that is, it probes the C(ip)-C(port) combination specified in the monitor).\nIf the monitor cannot successfully reach the aliased destination, the pool member or node through which the monitor traffic was sent is marked down.\nWhen creating a new monitor, if this parameter is not provided, the default value will be whatever is provided by the C(parent).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "up_interval": {
          "aliases": [],
          "description": "Specifies the interval for the system to use to perform the health check when a resource is up.\nWhen C(0), specifies the system uses the interval specified in C(interval) to check the health of the resource.\nWhen any other number, enables you to specify a different interval to use when checking the health of a resource that is up.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP LTM ICMP monitors",
      "version_added": "1.1.0"
    },
    "examples": "\n- name: Create an ICMP monitor\n  bigip_monitor_icmp:\n    name: icmp1\n    adaptive: no\n    interval: 1\n    time_until_up: 0\n    timeout: 3\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Update an ICMP monitor\n  bigip_monitor_icmp:\n    name: icmp1\n    manual_resume: yes\n    interval: 5\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove an ICMP monitor\n  bigip_monitor_icmp:\n    name: icmp1\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_monitor_ldap": {
    "doc": {
      "description": "Manages BIG-IP LDAP monitors.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "base": {
          "aliases": [],
          "description": "Specifies the location in the LDAP tree from which the monitor starts the health check.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "chase_referrals": {
          "aliases": [],
          "description": "Upon receipt of an LDAP referral entry, specifies whether the target follows (or chases) that referral.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "debug": {
          "aliases": [],
          "description": "Specifies whether the monitor sends error messages and additional information to a log file created and labeled specifically for this monitor.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Specifies descriptive text that identifies the monitor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filter": {
          "aliases": [],
          "description": "Specifies an LDAP key for which the monitor searches.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "Specifies the frequency, in seconds, at which the system issues the monitor check when either the resource is down or the status of the resource is unknown.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mandatory_attributes": {
          "aliases": [],
          "description": "Specifies whether the target must include attributes in its response to be considered up.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "manual_resume": {
          "aliases": [],
          "description": "Specifies whether the system automatically changes the status of a resource to B(enabled) at the next successful monitor check.\nIf you set this option to C(yes), you must manually re-enable the resource before the system can use it for load balancing connections.\nWhen C(yes), specifies you must manually re-enable the resource after an unsuccessful monitor check.\nWhen C(no), specifies the system automatically changes the status of a resource to B(enabled) at the next successful monitor check.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Monitor name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed.\nBy default, this value is the C(ldap) parent on the C(Common) partition.",
          "default": "/Common/ldap",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'.\nNote that if specifying an IP address, you must specify a value between 1 and 65535.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "security": {
          "aliases": [],
          "description": "Specifies the secure protocol type for communication with the target.",
          "type": "str",
          "required": false,
          "choices": [
            "none",
            "ssl",
            "tls"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target_password": {
          "aliases": [],
          "description": "Specifies the password, if the monitored target requires authentication.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_username": {
          "aliases": [],
          "description": "Specifies the user name, if the monitored target requires authentication.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "time_until_up": {
          "aliases": [],
          "description": "Specifies the number of seconds to wait after a resource first responds correctly to the monitor before setting the resource to 'up'.\nDuring the interval, all responses from the resource must be correct.\nWhen the interval expires, the resource is marked 'up'.\nA value of 0 means the resource is marked up immediately upon receipt of the first correct response.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "Specifies the number of seconds the target has in which to respond to the monitor request.\nIf the target responds within the set time period, it is considered 'up'. If the target does not respond within the set time period, it is considered 'down'. When this value is set to 0 (zero), the system uses the interval from the parent monitor.\nNote that C(timeout) and C(time_until_up) combine to control when a resource is set to up.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "up_interval": {
          "aliases": [],
          "description": "Specifies the interval for the system to use to perform the health check when a resource is up.\nWhen C(0), specifies the system uses the interval specified in C(interval) to check the health of the resource.\nWhen any other number, enables you to specify a different interval to use when checking the health of a resource that is up.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "C(always) will update passwords if the C(target_password) is specified.\nC(on_create) will only set the password for newly created monitors.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_create"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages BIG-IP LDAP monitors",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a LDAP monitor\n  bigip_monitor_ldap:\n    name: foo\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_monitor_mysql": {
    "doc": {
      "description": "Manages BIG-IP MySQL monitors.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "app_service": {
          "aliases": [],
          "description": "The iApp service to be associated with this profile. When no service is specified, the default is None.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "count": {
          "aliases": [],
          "description": "Specifies the number of monitor probes after which the connection to the database is terminated.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "database": {
          "aliases": [],
          "description": "Specifies the name of the database that the monitor tries to access.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug": {
          "aliases": [],
          "description": "Specifies whether the monitor sends error messages and additional information to a log file created and labeled specifically for this monitor.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Specifies descriptive text that identifies the monitor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "Specifies the frequency at which the system issues the monitor check.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, then the default value is '*'.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "manual_resume": {
          "aliases": [],
          "description": "Specifies whether the system automatically changes the status of a resource to B(enabled) at the next successful monitor check.\nIf you set this option to C(yes), you must manually re-enable the resource before the system can use it for load balancing connections.\nWhen C(yes), specifies you must manually re-enable the resource after an unsuccessful monitor check.\nWhen C(no), specifies the system automatically changes the status of a resource to B(enabled) at the next successful monitor check.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Monitor name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed.\nBy default, this value is the C(mysql) parent on the C(Common) partition.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'.\nIf specifying an IP address, you must specify a value between 1 and 65535.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "recv": {
          "aliases": [],
          "description": "Specifies the text string the monitor looks for in the returned resource.\nThe most common receive expressions contain a text string that is included in a field in your database.\nIf you do not specify both a Send String and a Receive String, the monitor performs a simple service check and connect only.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "recv_column": {
          "aliases": [],
          "description": "Specifies the column in the database where the system expects the specified Receive String to be located.\nThis is an optional setting, and is applicable only if you configure the C(send) and C(recv) options.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "recv_row": {
          "aliases": [],
          "description": "Specifies the row in the database where the system expects the specified Receive String to be located.\nThis is an optional setting, and is applicable only if you configure the C(send) and C(recv) options.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "send": {
          "aliases": [],
          "description": "Specifies the SQL query the monitor sends to the target object.\nBecause the string may have special characters, the system may require the string be enclosed with single quotation marks. If this value is C(none), then a valid connection suffices to determine that the service is up. In this case, the system does not need the recv, recv-row, and recv-column options and ignores them even if not C(none).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target_password": {
          "aliases": [],
          "description": "Specifies the password if the monitored target requires authentication.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_username": {
          "aliases": [],
          "description": "Specifies the user name if the monitored target requires authentication.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "time_until_up": {
          "aliases": [],
          "description": "Specifies the number of seconds to wait after a resource first responds correctly to the monitor before setting the resource to 'up'.\nDuring the interval, all responses from the resource must be correct.\nWhen the interval expires, the resource is marked 'up'.\nA value of 0, means that the resource is marked up immediately upon receipt of the first correct response.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "Specifies the number of seconds the target has in which to respond to the monitor request.\nIf the target responds within the set time period, it is considered 'up'. If the target does not respond within the set time period, it is considered 'down'. When this value is set to 0 (zero), the system uses the interval from the parent monitor.\nNote that C(timeout) and C(time_until_up) combine to control when a resource is set to up.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "up_interval": {
          "aliases": [],
          "description": "Specifies the interval for the system to use to perform the health check when a resource is up.\nWhen C(0), specifies the system uses the interval specified in C(interval) to check the health of the resource.\nWhen any other number, enables you to specify a different interval to use when checking the health of a resource that is up.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "C(always) will update passwords if the C(target_password) is specified.\nC(on_create) will only set the password for newly created monitors.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_create"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages BIG-IP MySQL monitors",
      "version_added": "1.3.0"
    },
    "examples": "\n- name: Create an mysql monitor\n  bigip_monitor_mysql:\n    ip: 10.10.10.10\n    port: 10923\n    name: my_mysql_monitor\n    send: \"SELECT status FROM v$instance\"\n    recv: OPEN\n    recv_column: 2\n    recv_row: 1\n    database: primary1\n    target_username: bigip\n    target_password: secret\n    update_password: on_create\n    state: present\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Modify an mysql monitor\n  bigip_monitor_mysql:\n    name: my_mysql_monitor\n    recv_column: 4\n    recv_row: 3\n    database: primary2\n    state: present\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Remove mysql monitor\n  bigip_monitor_mysql:\n    state: absent\n    name: my_mysql_monitor\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_monitor_oracle": {
    "doc": {
      "description": "Manages BIG-IP Oracle monitors.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "app_service": {
          "aliases": [],
          "description": "The iApp service to be associated with this profile. When no service is specified, the default is None.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "count": {
          "aliases": [],
          "description": "Specifies the number of monitor probes after which the connection to the database will be terminated.\nCount value of zero indicates that the connection will never be terminated.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "database": {
          "aliases": [],
          "description": "Specifies the name of the database the monitor tries to access.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug": {
          "aliases": [],
          "description": "Specifies whether the monitor sends error messages and additional information to a log file created and labeled specifically for this monitor.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Specifies descriptive text that identifies the monitor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "Specifies the frequency, in seconds, at which the system issues the monitor check when either the resource is down or the status of the resource is unknown.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "manual_resume": {
          "aliases": [],
          "description": "Specifies whether the system automatically changes the status of a resource to B(enabled) at the next successful monitor check.\nIf you set this option to C(yes), you must manually re-enable the resource before the system can use it for load balancing connections.\nWhen C(yes), specifies you must manually re-enable the resource after an unsuccessful monitor check.\nWhen C(no), specifies the system automatically changes the status of a resource to B(enabled) at the next successful monitor check.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Monitor name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed.\nBy default, this value is the C(oracle) parent on the C(Common) partition.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'.\nIf specifying an IP address, you must specify a value between 1 and 65535.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "recv": {
          "aliases": [],
          "description": "Specifies the text string that the monitor looks for in the returned resource.\nThe most common receive expressions contain a text string that is included in a field in your database.\nIf you do not specify both C(send) and a C(recv) parameters, the monitor performs a simple service check and connect only.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "recv_column": {
          "aliases": [],
          "description": "Specifies the column in the database where the specified C(recv) string should be located.\nThis is an optional setting and is applicable only if you configure the C(send) and the C(recv) parameters.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "recv_row": {
          "aliases": [],
          "description": "Specifies the row in the database where the specified C(recv) string should be located.\nThis is an optional setting, and is applicable only if you configure the C(send) and the C(recv) parameters.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "send": {
          "aliases": [],
          "description": "Specifies the SQL query the monitor sends to the target object.\nSince the string may have special characters, the system may require the string be enclosed with single quotation marks. If this value is C(none), a valid connection suffices to determine the service is up. In this case, the system does not need the recv, recv-row, and recv-column options and ignores them even if not C(none).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target_password": {
          "aliases": [],
          "description": "Specifies the password, if the monitored target requires authentication.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "target_username": {
          "aliases": [],
          "description": "Specifies the user name, if the monitored target requires authentication.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "time_until_up": {
          "aliases": [],
          "description": "Specifies the number of seconds to wait after a resource first responds correctly to the monitor before setting the resource to 'up'.\nDuring the interval, all responses from the resource must be correct.\nWhen the interval expires, the resource is marked 'up'.\nA value of 0 means the resource is marked up immediately upon receipt of the first correct response.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "Specifies the number of seconds the target has in which to respond to the monitor request.\nIf the target responds within the set time period, it is considered 'up'. If the target does not respond within the set time period, it is considered 'down'. When this value is set to 0 (zero), the system uses the interval from the parent monitor.\nNote that C(timeout) and C(time_until_up) combine to control when a resource is set to up.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "up_interval": {
          "aliases": [],
          "description": "Specifies the interval for the system to use to perform the health check when a resource is up.\nWhen C(0), specifies the system uses the interval in C(interval) to check the health of the resource.\nWhen any other number, enables you to specify a different interval to use when checking the health of a resource that is up.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "C(always) will update passwords if the C(target_password) is specified.\nC(on_create) will only set the password for newly created monitors.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_create"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages BIG-IP Oracle monitors",
      "version_added": "1.3.0"
    },
    "examples": "\n- name: Create an oracle monitor\n  bigip_monitor_oracle:\n    ip: 10.10.10.10\n    port: 10923\n    name: my_oracle_monitor\n    send: \"SELECT status FROM v$instance\"\n    recv: OPEN\n    recv_column: 2\n    recv_row: 1\n    database: primary1\n    target_username: bigip\n    target_password: secret\n    update_password: on_create\n    state: present\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Modify an oracle monitor\n  bigip_monitor_oracle:\n    name: my_oracle_monitor\n    recv_column: 4\n    recv_row: 3\n    database: primary2\n    state: present\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Remove oracle monitor\n  bigip_monitor_oracle:\n    state: absent\n    name: my_oracle_monitor\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_monitor_smtp": {
    "doc": {
      "description": "Manage SMTP monitors on a BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "app_service": {
          "aliases": [],
          "description": "The iApp service to be associated with this profile. When no service is specified, the default is None.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "debug": {
          "aliases": [],
          "description": "Specifies whether the monitor sends error messages and additional information to a log file created and labeled specifically for this monitor.\nWhen C(yes) the system redirects error messages and additional information to the C(/var/log/monitors/<monitor_name>-<node_name>-<port>.log) file.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the monitor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "domain": {
          "aliases": [],
          "description": "Specifies the domain name to check.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "The interval specifying how frequently the monitor instance of this template will run.\nThis value B(must) be less than the C(timeout) value.\nWhen creating a new monitor, if this parameter is not provided, the default C(5) will be used.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "manual_resume": {
          "aliases": [],
          "description": "Specifies whether the system automatically changes the status of a resource to B(enabled) at the next successful monitor check.\nIf you set this option to C(yes), you must manually re-enable the resource before the system can use it for load balancing connections.\nWhen creating a new monitor, if this parameter is not specified, the default value is C(no).\nWhen C(yes), specifies you must manually re-enable the resource after an unsuccessful monitor check.\nWhen C(no), specifies the system automatically changes the status of a resource to B(enabled) at the next successful monitor check.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the monitor.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed.\nWhen creating a new monitor, if this parameter is not specified, the default is the system-supplied C(smtp) monitor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'. If specifying an IP address, you must specify a value between 1 and 65535.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "time_until_up": {
          "aliases": [],
          "description": "Specifies the amount of time in seconds after the first successful response before a node will be marked up.\nA value of C(0) will cause a node to be marked up immediately after a valid response is received from the node.\nIf this parameter is not provided when creating a new monitor, then the default value will be C(0).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "The number of seconds in which the node or service must respond to the monitor request.\nIf the target responds within the set time period, it is considered up.\nIf the target does not respond within the set time period, it is considered down.\nYou can change this to any number, however, it should be 3 times the interval number of seconds plus 1 second.\nIf this parameter is not provided when creating a new monitor, the default value will be C(31).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "up_interval": {
          "aliases": [],
          "description": "Specifies the interval for the system to use to perform the health check when a resource is up.\nWhen C(0), specifies the system uses the interval specified in C(interval) to check the health of the resource.\nWhen any other number, enables you to specify a different interval to use when checking the health of a resource that is up.\nWhen creating a new monitor, if this parameter is not provided, the default C(0) will be used.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage SMTP monitors on a BIG-IP",
      "version_added": "1.1.0"
    },
    "examples": "\n- name: Create SMTP Monitor\n  bigip_monitor_smtp:\n    state: present\n    ip: 10.10.10.10\n    name: my_smtp_monitor\n    domain: foo.com\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Remove SMTP Monitor\n  bigip_monitor_smtp:\n    state: absent\n    name: my_smtp_monitor\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_monitor_snmp_dca": {
    "doc": {
      "description": "The BIG-IP has an SNMP data collecting agent (DCA) that can query remote SNMP agents of various types, including the UC Davis agent (UCD) and the Windows 2000 Server agent (WIN2000).",
      "has_action": false,
      "notes": "Requires BIG-IP software version >= 12\nThis module does not support the C(variables) option because it is broken in the REST API and does not function correctly in C(tmsh); for example you cannot remove user-defined params. Therefore, there is no way to automatically configure it.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "agent_type": {
          "aliases": [],
          "description": "Specifies the SNMP agent running on the monitored server. When creating a new monitor, the default is C(UCD) (UC-Davis).",
          "type": "str",
          "required": false,
          "choices": [
            "UCD",
            "WIN2000",
            "GENERIC"
          ],
          "suboptions": {}
        },
        "community": {
          "aliases": [],
          "description": "Specifies the community name the system must use to authenticate with the host server through SNMP. When creating a new monitor, the default value is C(public). This value is case sensitive.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cpu_coefficient": {
          "aliases": [],
          "description": "Specifies the coefficient the system uses to calculate the weight of the CPU threshold in the dynamic ratio load balancing algorithm. When creating a new monitor, the default is C(1.5).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cpu_threshold": {
          "aliases": [],
          "description": "Specifies the maximum acceptable CPU usage on the target server. When creating a new monitor, the default is C(80) percent.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Specifies descriptive text that identifies the monitor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "disk_coefficient": {
          "aliases": [],
          "description": "Specifies the coefficient the system uses to calculate the weight of the disk threshold in the dynamic ratio load balancing algorithm. When creating a new monitor, the default is C(2.0).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "disk_threshold": {
          "aliases": [],
          "description": "Specifies the maximum acceptable disk usage on the target server. When creating a new monitor, the default is C(90) percent.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "Specifies the frequency, in seconds, at which the system issues the monitor check when either the resource is down or the status of the resource is unknown. When creating a new monitor, the default is C(10).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "memory_coefficient": {
          "aliases": [],
          "description": "Specifies the coefficient the system uses to calculate the weight of the memory threshold in the dynamic ratio load balancing algorithm. When creating a new monitor, the default is C(1.0).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "memory_threshold": {
          "aliases": [],
          "description": "Specifies the maximum acceptable memory usage on the target server. When creating a new monitor, the default is C(70) percent.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Monitor name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is the C(snmp_dca) parent on the C(Common) partition.",
          "default": "/Common/snmp_dca",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "time_until_up": {
          "aliases": [],
          "description": "Specifies the number of seconds to wait after a resource first responds correctly to the monitor before setting the resource to 'up'. During the interval, all responses from the resource must be correct. When the interval expires, the resource is marked 'up'. A value of 0, means that the resource is marked up immediately upon receipt of the first correct response. When creating a new monitor, the default is C(0).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "Specifies the number of seconds the target has in which to respond to the monitor request. When creating a new monitor, the default is C(30) seconds. If the target responds within the set time period, it is considered 'up'. If the target does not respond within the set time period, it is considered 'down'. When this value is set to 0 (zero), the system uses the interval from the parent monitor. Note that C(timeout) and C(time_until_up) combine to control when a resource is set to up.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Specifies the version of SNMP the host server uses. When creating a new monitor, the default is C(v1). When C(v1), specifies the host server uses SNMP version 1. When C(v2c), specifies that the host server uses SNMP version 2c.",
          "type": "str",
          "required": false,
          "choices": [
            "v1",
            "v2c"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages BIG-IP SNMP data collecting agent (DCA) monitors",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create SNMP DCS monitor\n  bigip_monitor_snmp_dca:\n    name: my_monitor\n    state: present\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Remove TCP Echo Monitor\n  bigip_monitor_snmp_dca:\n    name: my_monitor\n    state: absent\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_monitor_tcp": {
    "doc": {
      "description": "Manages F5 BIG-IP LTM TCP monitors via iControl REST API.",
      "has_action": false,
      "notes": "Requires BIG-IP software version >= 12\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "The description of the monitor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "The interval specifying how frequently the monitor instance of this template will run. If this parameter is not provided when creating a new monitor, the default value is 5. This value B(must) be less than the C(timeout) value.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [
            "alias_address"
          ],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'.\nIf this value is an IP address, and the C(type) is C(tcp) (the default), then a C(port) number must be specified.\nIn BIG IP Management UI, this field is B(Alias Address).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Monitor name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is the C(tcp) parent on the C(Common) partition.",
          "default": "/Common/tcp",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [
            "alias_service_port"
          ],
          "description": "Port address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'. If specifying an IP address, you must specify a value between 1 and 65535.\nThis argument is not supported for TCP Echo types.\nIn BIG IP Management UI, this field is B(Alias Service Port).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "receive": {
          "aliases": [],
          "description": "The Receive string for the monitor call.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "receive_disable": {
          "aliases": [],
          "description": "The Receive Disable string for the monitor call. This setting works like C(receive), except the system marks the node or pool member disabled when its response matches the C(receive_disable) string but not C(receive). To use this setting, you must specify both C(receive_disable) and C(receive).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "send": {
          "aliases": [],
          "description": "The Send string for the monitor call.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "time_until_up": {
          "aliases": [],
          "description": "Specifies the amount of time in seconds after the first successful response before a node will be marked up. A value of C(0) causes a node to be marked up immediately after a valid response is received from the node. If this parameter is not provided when creating a new monitor, the default value is C(0).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "The number of seconds in which the node or service must respond to the monitor request. If the target responds within the set time period, it is considered up. If the target does not respond within the set time period, it is considered down. You can change this number to any number you want, however, it should be 3 times the interval number of seconds plus 1 second. If this parameter is not provided when creating a new monitor, the default value is 16.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP LTM TCP monitors",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create TCP Monitor\n  bigip_monitor_tcp:\n    state: present\n    name: my_tcp_monitor\n    send: tcp string to send\n    receive: tcp string to receive\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Remove TCP Monitor\n  bigip_monitor_tcp:\n    state: absent\n    name: my_tcp_monitor\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_monitor_tcp_echo": {
    "doc": {
      "description": "Manages F5 BIG-IP LTM TCP echo monitors.",
      "has_action": false,
      "notes": "Requires BIG-IP software version >= 12\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "The description of the monitor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "The interval specifying how frequently the monitor instance of this template will run. If this parameter is not provided when creating a new monitor, the default value is 5. This value B(must) be less than the C(timeout) value.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Monitor name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is the C(tcp_echo) parent on the C(Common) partition.",
          "default": "/Common/tcp_echo",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "time_until_up": {
          "aliases": [],
          "description": "Specifies the amount of time in seconds after the first successful response before a node will be marked up. A value of C(0) will cause a node to be marked up immediately after a valid response is received from the node. If this parameter is not provided when creating a new monitor, the default value is be C(0).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "The number of seconds in which the node or service must respond to the monitor request. If the target responds within the set time period, it is considered up. If the target does not respond within the set time period, it is considered down. You can change this to any number, however, it should be 3 times the interval number of seconds plus 1 second. If this parameter is not provided when creating a new monitor, the default value is 16.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP LTM TCP echo monitors",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create TCP Echo Monitor\n  bigip_monitor_tcp_echo:\n    state: present\n    ip: 10.10.10.10\n    name: my_tcp_monitor\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove TCP Echo Monitor\n  bigip_monitor_tcp_echo:\n    state: absent\n    name: my_tcp_monitor\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_monitor_tcp_half_open": {
    "doc": {
      "description": "Manages F5 BIG-IP LTM TCP half-open monitors.",
      "has_action": false,
      "notes": "Requires BIG-IP software version >= 12\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "The description of the monitor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "The interval specifying how frequently the monitor instance of this template will run. If this parameter is not provided when creating a new monitor, the default value is 5. This value B(must) be less than the C(timeout) value.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'.\nIf this value is an IP address, and the C(type) is C(tcp) (the default), then a C(port) number must be specified.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Monitor name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is the C(tcp_half_open) parent on the C(Common) partition.",
          "default": "/Common/tcp_half_open",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'. If specifying an IP address, you must specify a value between 1 and 65535.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "time_until_up": {
          "aliases": [],
          "description": "Specifies the amount of time in seconds after the first successful response before a node will be marked up. A value of C(0) will cause a node to be marked up immediately after a valid response is received from the node. If this parameter is not provided when creating a new monitor, the default value is be 0.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "The number of seconds in which the node or service must respond to the monitor request. If the target responds within the set time period, it is considered up. If the target does not respond within the set time period, it is considered down. You can change this to any number, however, it should be 3 times the interval number of seconds plus 1 second. If this parameter is not provided when creating a new monitor, then the default value is 16.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP LTM TCP half-open monitors",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create TCP half-open Monitor\n  bigip_monitor_tcp_half_open:\n    state: present\n    ip: 10.10.10.10\n    name: my_tcp_monitor\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Remove TCP half-open Monitor\n  bigip_monitor_tcp_half_open:\n    state: absent\n    name: my_tcp_monitor\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add half-open monitor for all addresses, port 514\n  bigip_monitor_tcp_half_open:\n    port: 514\n    name: my_tcp_monitor\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_monitor_udp": {
    "doc": {
      "description": "Manages F5 BIG-IP LTM UDP monitors.",
      "has_action": false,
      "notes": "Requires BIG-IP software version >= 12\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "The description of the monitor.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "The interval specifying how frequently the monitor instance of this template will run. If this parameter is not provided when creating a new monitor, the default value is 5. This value B(must) be less than the C(timeout) value.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip": {
          "aliases": [],
          "description": "IP address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Monitor name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is the C(udp) parent on the C(Common) partition.",
          "default": "/Common/udp",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port address part of the IP/port definition. If this parameter is not provided when creating a new monitor, the default value is '*'. If specifying an IP address, you must specify a value between 1 and 65535.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "receive": {
          "aliases": [],
          "description": "The Receive string for the monitor call.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "receive_disable": {
          "aliases": [],
          "description": "This setting works like C(receive), except the system marks the node or pool member disabled when its response matches the C(receive_disable) string but not C(receive). To use this setting, you must specify both C(receive_disable) and C(receive).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "send": {
          "aliases": [],
          "description": "The Send string for the monitor call. When creating a new monitor, if this value is not provided, the default C(default send string) is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the monitor exists.\nWhen C(absent), ensures the monitor is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "time_until_up": {
          "aliases": [],
          "description": "Specifies the amount of time in seconds after the first successful response before a node will be marked up. A value of C(0) causes a node to be marked up immediately after a valid response is received from the node. If this parameter is not provided when creating a new monitor, the default value is C(0).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "The number of seconds in which the node or service must respond to the monitor request. If the target responds within the set time period, it is considered 'up'. If the target does not respond within the set time period, it is considered 'down'. You can change this to any number, however it should be 3 times the interval number of seconds plus 1 second. If this parameter is not provided when creating a new monitor, the default value is 16.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP LTM UDP monitors",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create UDP Monitor\n  bigip_monitor_udp:\n    state: present\n    ip: 10.10.10.10\n    name: my_udp_monitor\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Remove UDP Monitor\n  bigip_monitor_udp:\n    state: absent\n    name: my_udp_monitor\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_network_globals": {
    "doc": {
      "description": "Module to manage STP, Multicast, DAG, LLDP and Self Allow global settings on a BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "dag": {
          "aliases": [],
          "description": "Manage global disaggregation settings.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "dag_ipv6_prefix_len": {
              "aliases": [],
              "description": "Specifies whether SPDAG or IPv6 prefix DAG should be used to disaggregate IPv6 traffic when vlan cmp hash is set to C(src-ip) or C(dst-ip).\nThe valid value range is 0 - 128, with C(128) value SPAG is in use.\nThis option is only available in TMOS version C(13.x) and above.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "icmp_hash": {
              "aliases": [],
              "description": "Specifies the ICMP hash for ICMP echo request and ICMP echo reply in SW DAG.\nWhen C(icmp), ICMP echo request and ICMP echo reply are disaggregated based on ICMP id.\nWhen C(ipicmp), ICMP echo request and ICMP echo reply are disaggregated based on ICMP id and IP addresses.\nThis option is only available in C(TMOS) version C(13.x) and above.",
              "type": "str",
              "required": false,
              "choices": [
                "icmp",
                "ipicmp"
              ],
              "suboptions": {}
            },
            "round_robin_mode": {
              "aliases": [],
              "description": "Specifies whether the round robin disaggregator (DAG) on a blade can disaggregate packets to all the TMMs in the system or only to the TMMs local to the blade.\nWhen C(global), the DAG will disaggregate packets to all TMMs in the system.\nWhen C(local), the DAG will disaggregate packets only to the TMMs local to the blade.",
              "type": "str",
              "required": false,
              "choices": [
                "global",
                "local"
              ],
              "suboptions": {}
            }
          }
        },
        "lldp": {
          "aliases": [],
          "description": "Manage LLDP configuration options.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enabled": {
              "aliases": [],
              "description": "Specifies the current status of LLDP.\nWhen C(yes), the LLDP is enabled globally on the device.\nWhen C(no), the LLDP is disabled globally on the device.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "max_neighbors_per_port": {
              "aliases": [],
              "description": "Specifies the maximum number of neighbors per port.\nThe valid value range is 0 - 65535.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "reinit_delay": {
              "aliases": [],
              "description": "Specifies the maximum number of seconds to wait after reaching the TTL interval before resetting TTL timer.\nThe valid value range is 0 - 65535.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "tx_delay": {
              "aliases": [],
              "description": "Specifies the number of seconds to wait for LLDP to initialize on an interface before sending LLDP message.\nThe valid value range is 0 - 65535.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "tx_hold": {
              "aliases": [],
              "description": "Specifies the multiplier that determines the LLDP Time to Live (TTL). TTL is determined by multiplying this value and C(tx_interval).\nThe valid value range is 0 - 65535.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "tx_interval": {
              "aliases": [],
              "description": "Specifies the interval devices use to send LLDP information from each of their interfaces.\nThe valid value range is 0 - 65535.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "multicast": {
          "aliases": [],
          "description": "Manage multicast traffic configuration options.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "max_pending_packets": {
              "aliases": [],
              "description": "Specifies the maximum number of packet queued on behalf of a single incomplete MFC entry.\nThe valid range is 0 - 4294967295.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_pending_routes": {
              "aliases": [],
              "description": "Specifies the number of incomplete MFC entries each TMM will allow to exist at one time.\nThe valid range is 0 - 4294967295.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "rate_limit": {
              "aliases": [],
              "description": "When C(yes), the DB variable C(switchboard.maxmcastrate) setting controls the multicast packet per second rate limiting in the switch.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "route_lookup_timeout": {
              "aliases": [],
              "description": "Specifies maximum lifetime of an incomplete MFC entry, in seconds.\nThe valid range is 0 - 4294967295.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "self_allow": {
          "aliases": [],
          "description": "Manage Self Allow global configuration options.",
          "type": "dict",
          "required": false,
          "version_added": "1.1.0",
          "suboptions": {
            "all": {
              "aliases": [],
              "description": "Sets B(all) or B(none) ports and protocols as a system wide C(self_allow) setting.\nWhen C(yes), the self_allow allows all protocols and ports. This is the equivalent of setting B(all) option in C(TMSH).\nWhen C(no), the self_allow allows no protocols and ports. This is the equivalent of setting B(none) option in C(TMSH).",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "defaults": {
              "aliases": [],
              "description": "The default set of protocols and ports allowed by a self IP if the self IP allow-service setting is B(default).",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "port": {
                  "aliases": [],
                  "description": "The port number to be set.\nThe valid value range is 0 - 65535.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "protocol": {
                  "aliases": [],
                  "description": "The protocol name to be set.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "stp": {
          "aliases": [],
          "description": "Manage global settings for STP on BIG-IP.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "config_name": {
              "aliases": [],
              "description": "Specifies the configuration name. The accepted length is from 1 to 32 characters.\nOnly has effect when the C(mode) is C(mstp).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "config_revision": {
              "aliases": [],
              "description": "Specifies the revision level of the MSTP configuration, when C(mode) is C(mstp).\nYou must specify a number in the range of 0 to 65535.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "User-defined description.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "fwd_delay": {
              "aliases": [],
              "description": "The number of seconds for which an interface was blocked from forwarding network traffic after a reconfiguration of the spanning tree topology. This parameter has no effect when C(rstp) or C(mstp) modes are used, as long as all bridges in the spanning tree use the RSTP or MSTP protocol.\nIf any legacy STP bridges are present, neighboring bridges must fall back to the old protocol, whose reconfiguration time is affected by the forward delay value.\nThe valid range is 4 to 30.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "hello_time": {
              "aliases": [],
              "description": "Specifies the time interval in seconds between the periodic transmissions that communicate spanning tree information to the adjacent bridges in the network.\nThe hello time set by default on the device is optimal in virtually all cases. F5 recommends that you do not change the hello time.\nThe valid range is 1 to 10.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_age": {
              "aliases": [],
              "description": "Specifies the number of seconds for which spanning tree information received from other bridges is considered valid.\nThe valid range is 6 to 40 seconds.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_hops": {
              "aliases": [],
              "description": "Specifies the maximum number of hops an MSTP packet may travel before it is discarded.\nThis option only takes effect when C(mode) is C(mstp).\nThe number of hops must be in the range of 1 to 255.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "mode": {
              "aliases": [],
              "description": "Specifies the spanning tree mode.\nThe C(mstp), C(rstp) and C(stp) options are only supported on hardware platforms. Attempting to set these modes on VE type platforms will result in failure. The only valid options on VE type platforms are: C(passthru) and C(disabled).",
              "type": "str",
              "required": false,
              "choices": [
                "disabled",
                "mstp",
                "passthru",
                "rstp",
                "stp"
              ],
              "suboptions": {}
            },
            "transmit_hold": {
              "aliases": [],
              "description": "Specifies the absolute limit on the number of spanning tree protocol packets the traffic management system may transmit on a port in any hello time interval.\nThe valid range is 1 to 10 packets.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "short_description": "Manage network global settings on BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Update STP settings\n  bigip_network_globals:\n    stp:\n      config_name: foobar\n      config_revision: 1\n      max_hops: 20\n      mode: mstp\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Update DAG settings\n  bigip_network_globals:\n    dag:\n      icmp_hash: ipicmp\n      round_robin_mode: local\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Update multiple settings\n  bigip_network_globals:\n    stp:\n      config_name: foobar\n      config_revision: 1\n      max_hops: 20\n      mode: mstp\n    dag:\n      icmp_hash: ipicmp\n      round_robin_mode: local\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_node": {
    "doc": {
      "description": "Manages F5 BIG-IP LTM nodes.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "address": {
          "aliases": [
            "ip",
            "host"
          ],
          "description": "IP address of the node. This can be either IPv4 or IPv6. When creating a new node, you must provide one of either C(address) or C(fqdn). This parameter cannot be updated after it is set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "availability_requirements": {
          "aliases": [],
          "description": "If you activate more than one health monitor, specifies the number of health monitors that must receive successful responses in order for the link to be considered available.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "at_least": {
              "aliases": [],
              "description": "Specifies the minimum number of active health monitors that must be successful before the link is considered up.\nThis parameter is only relevant when a C(type) of C(at_least) is used.\nThis parameter will be ignored if a type of C(all) is used.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "Monitor rule type when C(monitors) is specified.\nWhen creating a new pool, if this value is not specified, the default of 'all' will be used.",
              "type": "str",
              "required": true,
              "choices": [
                "all",
                "at_least"
              ],
              "suboptions": {}
            }
          }
        },
        "connection_limit": {
          "aliases": [],
          "description": "Node connection limit. Setting this to C(0) disables the limit.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Specifies descriptive text that identifies the node.\nYou can remove a description by either specifying an empty string, or by specifying the special value C(none).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dynamic_ratio": {
          "aliases": [],
          "description": "The dynamic ratio number for the node. Used for dynamic ratio load balancing.\nWhen creating a new node, if this parameter is not specified, the default of C(1) will be used.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "fqdn": {
          "aliases": [
            "hostname"
          ],
          "description": "FQDN name of the node. This can be any name that is a valid RFC 1123 DNS name. Therefore, the only characters that can be used are \"A\" to \"Z\", \"a\" to \"z\", \"0\" to \"9\", the hyphen (\"-\") and the period (\".\").\nFQDN names must include at least one period; delineating the host from the domain. For example, C(host.domain).\nFQDN names must end with a letter or a number.\nWhen creating a new node, you must provide one of either C(address) or C(fqdn) provided. This parameter cannot be updated after it is set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fqdn_address_type": {
          "aliases": [],
          "description": "Specifies whether the FQDN of the node resolves to an IPv4 or IPv6 address.\nWhen creating a new node, if this parameter is not specified and C(fqdn) is specified, this parameter will default to C(ipv4).\nThis parameter cannot be changed after it has been set.",
          "type": "str",
          "required": false,
          "choices": [
            "ipv4",
            "ipv6",
            "all"
          ],
          "suboptions": {}
        },
        "fqdn_auto_populate": {
          "aliases": [],
          "description": "Specifies whether the system automatically creates ephemeral nodes using the IP addresses returned by the resolution of a DNS query for a node defined by an FQDN.\nWhen C(yes), the system generates an ephemeral node for each IP address returned in response to a DNS query for the FQDN of the node. Additionally, when a DNS response indicates the IP address of an ephemeral node no longer exists, the system deletes the ephemeral node.\nWhen C(no), the system resolves a DNS query for the FQDN of the node with the single IP address associated with the FQDN.\nWhen creating a new node, if this parameter is not specified and C(fqdn) is specified, this parameter will default to C(yes).\nThis parameter cannot be changed after it has been set.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fqdn_down_interval": {
          "aliases": [],
          "description": "Specifies the interval in which a query occurs, when the DNS server is down. The associated monitor continues polling as long as the DNS server is down.\nWhen creating a new node, if this parameter is not specified and C(fqdn) is specified, this parameter will default to C(5).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "fqdn_up_interval": {
          "aliases": [],
          "description": "Specifies the interval at which a query occurs, when the DNS server is up. The associated monitor attempts to probe three times, and marks the server down if it there is no response within the span of three times the interval value, in seconds.\nThis parameter accepts a value of C(ttl) to query, based off of the TTL of the FQDN. The default TTL interval is similar to specifying C(3600).\nWhen creating a new node, if this parameter is not specified and C(fqdn) is specified, this parameter will default to C(3600).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "monitors": {
          "aliases": [],
          "description": "Specifies the health monitors the system currently uses to monitor this node.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the node.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rate_limit": {
          "aliases": [],
          "description": "Node rate limit (connections-per-second). Setting this to C(0) disables the limit.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ratio": {
          "aliases": [],
          "description": "Node ratio weight. Valid values range from 1 through 100.\nWhen creating a new node, if this parameter is not specified, the default of C(1) will be used.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Specifies the current state of the node. C(enabled) (All traffic allowed), specifies the system sends traffic to this node regardless of the node's state. C(disabled) (Only persistent or active connections allowed), specifies the node can handle only persistent or active connections. C(offline) (Only active connections allowed), specifies the node can handle only active connections. In all cases except C(absent), the node will be created if it does not yet exist.\nBe particularly careful about changing the status of a node whose FQDN cannot be resolved. These situations disable your ability to change their C(state) to C(disabled) or C(offline). They will remain in an *Unavailable - Enabled* state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "enabled",
            "disabled",
            "offline"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP LTM nodes",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add node\n  bigip_node:\n    host: 10.20.30.40\n    name: 10.20.30.40\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add node with a single 'ping' monitor\n  bigip_node:\n    host: 10.20.30.40\n    name: mytestserver\n    monitors:\n      - /Common/icmp\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Modify node description\n  bigip_node:\n    name: 10.20.30.40\n    description: Our best server yet\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Delete node\n  bigip_node:\n    state: absent\n    name: 10.20.30.40\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Force node offline\n  bigip_node:\n    state: disabled\n    name: 10.20.30.40\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add node by their FQDN\n  bigip_node:\n    fqdn: foo.bar.com\n    name: foobar.net\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_partition": {
    "doc": {
      "description": "Manage partitions on the BIG-IP.",
      "has_action": false,
      "notes": "Requires BIG-IP software version >= 12\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "The description to attach to the partition.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the partition.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "route_domain": {
          "aliases": [],
          "description": "The default Route Domain to assign to the partition. If no route domain is specified, the default route domain for the system (typically zero) will be used only when creating a new partition.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the partition should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage BIG-IP partitions",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create partition \"foo\" using the default route domain\n  bigip_partition:\n    name: foo\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create partition \"bar\" using a custom route domain\n  bigip_partition:\n    name: bar\n    route_domain: 3\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Change route domain of partition \"foo\"\n  bigip_partition:\n    name: foo\n    route_domain: 8\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Set a description for partition \"foo\"\n  bigip_partition:\n    name: foo\n    description: Tenant CompanyA\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Delete the \"foo\" partition\n  bigip_partition:\n    name: foo\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_password_policy": {
    "doc": {
      "description": "Manages the authentication password policy on a BIG-IP device.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "expiration_warning": {
          "aliases": [],
          "description": "Specifies the number of days before a password expires.\nThis value determines when the BIG-IP system automatically warns users their password is about to expire.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "max_duration": {
          "aliases": [],
          "description": "Specifies the maximum number of days a password is valid.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "max_login_failures": {
          "aliases": [],
          "description": "Specifies the number of consecutive unsuccessful login attempts the system allows before locking out the user.\nSpecify zero (0) to disable this parameter.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "min_duration": {
          "aliases": [],
          "description": "Specifies the minimum number of days a password is valid.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "min_length": {
          "aliases": [],
          "description": "Specifies the minimum number of characters in a valid password.\nThis value must be between 6 and 255.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "password_memory": {
          "aliases": [],
          "description": "Specifies whether the user has configured the BIG-IP system to remember a password on a specific computer and how many passwords to remember.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "policy_enforcement": {
          "aliases": [],
          "description": "Enables or disables the password policy on the BIG-IP system.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "required_lowercase": {
          "aliases": [],
          "description": "Specifies the number of lowercase alpha characters that must be present in a password for the password to be valid.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "required_numeric": {
          "aliases": [],
          "description": "Specifies the number of numeric characters that must be present in a password for the password to be valid.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "required_special": {
          "aliases": [],
          "description": "Specifies the number of special characters that must be present in a password for the password to be valid.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "required_uppercase": {
          "aliases": [],
          "description": "Specifies the number of uppercase alpha characters that must be present in a password for the password to be valid.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages the authentication password policy on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Change password policy to require 2 numeric characters\n  bigip_password_policy:\n    required_numeric: 2\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_policy": {
    "doc": {
      "description": "Manages general policy configuration on a BIG-IP. This module is best used in conjunction with the C(bigip_policy_rule) module. This module can handle general configuration, like setting the draft state of the policy, the description, and items unrelated to the policy rules themselves. It is also the first module that should be used when creating rules, as the C(bigip_policy_rule) module requires a policy parameter.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "The description to attach to the policy.\nThis parameter is only supported on versions of BIG-IP >= 12.1.0. On earlier versions it is simply ignored.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the policy to create.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rules": {
          "aliases": [],
          "description": "Specifies a list of rules you want associated with this policy. The order of this list is the order they will be evaluated by BIG-IP. If the specified rules do not exist (for example when creating a new policy) they will be created.\nThe C(conditions) for a default rule are C(all).\nThe C(actions) for a default rule are C(ignore).\nThe C(bigip_policy_rule) module can be used to create and edit existing and new rules.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(state) is C(present), ensures the policy exists and is published. When C(state) is C(absent), ensures the policy is removed, even if it is currently drafted.\nWhen C(state) is C(draft), ensures the policy exists and is drafted. When modifying rules, it is required that policies first be in a draft.\nDrafting is only supported on versions of BIG-IP >= 12.1.0. On versions prior to that, specifying a C(state) of C(draft) will raise an error.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "draft"
          ],
          "suboptions": {}
        },
        "strategy": {
          "aliases": [],
          "description": "Specifies the method to determine which actions get executed when there are multiple rules that match. When creating new policies, the default is C(first).\nThis module does not allow you to specify the C(best) strategy to use. It will choose the system default (C(/Common/best-match)) instead.",
          "type": "str",
          "required": false,
          "choices": [
            "first",
            "all",
            "best"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage general policy configuration on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create policy which is immediately published\n  bigip_policy:\n    name: Policy-Foo\n    state: present\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add a rule to the new policy - Immediately published\n  bigip_policy_rule:\n    policy: Policy-Foo\n    name: ABC\n    conditions:\n      - type: http_uri\n        path_starts_with:\n          - /ABC\n          - foo\n          - bar\n        path_ends_with:\n          - baz\n    actions:\n      - forward: yes\n        select: yes\n        pool: pool-svrs\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add multiple rules to the new policy - Added in the order they are specified\n  bigip_policy_rule:\n    policy: Policy-Foo\n    name: \"{{ item.name }}\"\n    conditions: \"{{ item.conditions }}\"\n    actions: \"{{ item.actions }}\"\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n  loop:\n    - name: rule1\n      actions:\n        - type: forward\n          pool: pool-svrs\n      conditions:\n        - type: http_uri\n          path_starts_with: /euro\n    - name: HomePage\n      actions:\n        - type: forward\n          pool: pool-svrs\n      conditions:\n        - type: http_uri\n          path_starts_with: /HomePage/\n\n- name: Create policy specify default rules - Immediately published\n  bigip_policy:\n    name: Policy-Bar\n    state: present\n    rules:\n      - rule1\n      - rule2\n      - rule3\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Create policy specify default rules - Left in a draft\n  bigip_policy:\n    name: Policy-Baz\n    state: draft\n    rules:\n      - rule1\n      - rule2\n      - rule3\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_policy_rule": {
    "doc": {
      "description": "This module manages LTM policy rules on a BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "actions": {
          "aliases": [],
          "description": "The actions you want the policy rule to perform.\nThe available attributes vary by the action, however, each action requires you specify a C(type).\nThese conditions can be specified in any order. Despite the fact they are in a list, the order in the list does not matter to the BIG-IP.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "asm_policy": {
              "aliases": [],
              "description": "ASM policy to enable.\nThis parameter is only valid with the C(enable) type.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "cookie_expiry": {
              "aliases": [],
              "description": "Optional argument, specifying the time for which the session is persisted.\nThis parameter is only valid with the C(persist) type.",
              "type": "int",
              "required": false,
              "version_added": "1.1.0",
              "suboptions": {}
            },
            "cookie_insert": {
              "aliases": [],
              "description": "Cookie name on which you want to persist.\nThis parameter is only valid with the C(persist) type.",
              "type": "str",
              "required": false,
              "version_added": "1.1.0",
              "suboptions": {}
            },
            "disable_target": {
              "aliases": [],
              "description": "Target you want to disable.\nThis parameter is only valid with the C(disable) type.",
              "type": "str",
              "required": false,
              "choices": [
                "server_ssl",
                "persist"
              ],
              "version_added": "1.8.0",
              "suboptions": {}
            },
            "event": {
              "aliases": [],
              "description": "Events on which actions, such as reset and forward, can be triggered.\nWith the C(set_variable) action, it is used for specifying an action event, such as request or response.\nValid event choices for C(forward) action type are: client_accepted, proxy_request request, ssl_client_hello and ssl_client_server_hello_send.\nValid event choices for C(reset) acton type are: client_accepted, proxy_connect proxy_request, proxy_response, request, response, server_connected, ssl_client_hello, ssl_client_server_hello_send, ssl_server_handshake, ssl_server_hello, websocket_request, websocket_response.\nValid event choices for C(disable) acton type are: client_accepted, proxy_connect proxy_request, proxy_response, request, server_connected.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "expression": {
              "aliases": [],
              "description": "A Tcl expression used with the C(set_variable) action.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "http_connect": {
              "aliases": [],
              "description": "HTTP Connect header you want to replace.\nThis parameter is only valid with the C(replace) type.",
              "type": "dict",
              "required": false,
              "version_added": "1.8.0",
              "suboptions": {
                "event": {
                  "aliases": [],
                  "description": "Type of event when the C(http_connect) header is replaced.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "client_accepted",
                    "proxy_connect",
                    "proxy_request",
                    "proxy_response",
                    "request",
                    "server_connected",
                    "ssl_client_hello"
                  ],
                  "suboptions": {}
                },
                "port": {
                  "aliases": [],
                  "description": "The port number.\nIf a port number is not provided, the value is set to 0 by default.\nBe explicit when defining rules, so the system does not override port values.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "The value of C(http_connect).",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "http_cookie": {
              "aliases": [],
              "description": "HTTP Cookie header you want to remove or insert.\nThis parameter is only valid with the C(remove) and C(insert) type.",
              "type": "dict",
              "required": false,
              "version_added": "1.8.0",
              "suboptions": {
                "event": {
                  "aliases": [],
                  "description": "Type of event when the C(http_cookie) is removed or inserted.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "request",
                    "proxy_connect",
                    "proxy_request"
                  ],
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "The name of C(http_cookie).",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "The value of C(http_cookie).\nThis is a mandatory parameter when configured with C(insert) type action.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "http_header": {
              "aliases": [],
              "description": "HTTP Header that you want to remove or insert.\nThis parameter is only valid with the C(remove), C(insert) and C(replace) type.",
              "type": "dict",
              "required": false,
              "version_added": "1.8.0",
              "suboptions": {
                "event": {
                  "aliases": [],
                  "description": "Type of event when the C(http_header) is removed, replaced, or inserted.\nThe C(request) and C(response) events are only choices with C(remove) and C(insert) type.\nAll of events are valid with C(replace) type action.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "request",
                    "response",
                    "proxy_connect",
                    "proxy_request",
                    "proxy_response"
                  ],
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "The name of C(http_header).",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "The value of C(http_header).\nMandatory parameter when configured with C(insert) or C(replace) type.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "http_host": {
              "aliases": [],
              "description": "HTTP Host header you want to replace.\nThis parameter is only valid with the C(replace) type.",
              "type": "dict",
              "required": false,
              "version_added": "1.8.0",
              "suboptions": {
                "event": {
                  "aliases": [],
                  "description": "Type of event when the C(http_host) is replaced.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "request",
                    "proxy_connect",
                    "proxy_request"
                  ],
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "The value of C(http_host).",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "http_referer": {
              "aliases": [],
              "description": "HTTP Referer header you want to remove, replace, or insert.\nThis parameter is only valid with the C(remove), C(insert) and C(replace) type.",
              "type": "dict",
              "required": false,
              "version_added": "1.8.0",
              "suboptions": {
                "event": {
                  "aliases": [],
                  "description": "Type of event when the c(http_referer) is removed, replaced, or inserted.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "request",
                    "proxy_connect",
                    "proxy_request"
                  ],
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "The value of C(http_referer).\nThis is a mandatory parameter when configured with C(insert) type action.\nThis parameter is ignored for the C(remove) type.\nThis parameter is optional for the C(replace) type.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "http_set_cookie": {
              "aliases": [],
              "description": "HTTP Set-Cookie header you want to remove or insert.\nThis parameter is only valid with the C(remove) or c(insert) type.",
              "type": "dict",
              "required": false,
              "version_added": "1.8.0",
              "suboptions": {
                "name": {
                  "aliases": [],
                  "description": "The name of C(http_set_cookie).",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "The value of C(http_set_cookie).\nThis is a mandatory parameter when configured with C(insert) type action.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "http_uri": {
              "aliases": [],
              "description": "Replaces HTTP URI, path, or string.\nThis parameter is only valid with the C(replace) type.",
              "type": "dict",
              "required": false,
              "version_added": "1.8.0",
              "suboptions": {
                "event": {
                  "aliases": [],
                  "description": "Type of event when the C(http_uri) is replaced.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "request",
                    "proxy_connect",
                    "proxy_request"
                  ],
                  "suboptions": {}
                },
                "type": {
                  "aliases": [],
                  "description": "Specifies the part of the C(http_uri) to be replaced.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "path",
                    "query_string",
                    "full_string"
                  ],
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "The value of C(http_uri).",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "location": {
              "aliases": [],
              "description": "The new URL for which a redirect response is sent.\nA Tcl command substitution can be used for this field.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "node": {
              "aliases": [],
              "description": "Node to which you want to forward traffic.\nThis parameter is only valid with the C(forward) type.",
              "type": "str",
              "required": false,
              "version_added": "1.2.0",
              "suboptions": {}
            },
            "pool": {
              "aliases": [],
              "description": "Pool to which you want to forward traffic.\nThis parameter is only valid with the C(forward) type.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "The action type. This value controls which of the following options are required.\nWhen C(type) is C(forward), the system associates a given C(pool), or C(virtual), or C(node) with this rule.\nWhen C(type) is C(enable), the system associates a given C(asm_policy) with this rule.\nWhen C(type) is C(ignore), the system removes all existing actions from this rule.\nWhen C(type) is C(redirect), the system redirects an HTTP request to a different URL.\nWhen C(type) is C(reset), the system resets the connection upon C(event).\nWhen C(type) is C(persist), the system associates C(cookie_insert) and C(cookie_expiry) with this rule.\nWhen C(type) is C(set_variable), the system sets a variable based on the evaluated Tcl C(expression) based on C(event).\nWhen C(type) is C(remove), the system removes C(http_set_cookie), C(http_referer), C(http_header) or C(http_cookie) with this rule.\nWhen C(type) is C(insert), the system inserts C(http_set_cookie), C(http_referer), C(http_header) or C(http_cookie) with this rule.\nWhen C(type) is C(replace), the system replaces C(http_connect), C(http_referer), C(http_header), C(http_uri) or C(http_host) with this rule.\nWhen C(type) is C(disable), the system disables C(disable_target) with this rule.",
              "type": "str",
              "required": true,
              "choices": [
                "forward",
                "enable",
                "ignore",
                "redirect",
                "reset",
                "persist",
                "set_variable",
                "remove",
                "insert",
                "replace",
                "disable"
              ],
              "suboptions": {}
            },
            "variable_name": {
              "aliases": [],
              "description": "Variable name used with the C(set_variable) action.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "virtual": {
              "aliases": [],
              "description": "Virtual server to which you want to forward traffic.\nThis parameter is only valid with the C(forward) type.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "conditions": {
          "aliases": [],
          "description": "A list of attributes that describe the condition.\nSee suboptions for details on how to construct each list entry.\nThe ordering of this list is important, the module ensures the order is kept when modifying the task.\nThe suboption options below are not required for all condition types, read the description for more details.\nThese conditions can be specified in any order. Despite the fact they are in a list, the order in the list does not matter to the BIG-IP.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "address_matches_with_any": {
              "aliases": [],
              "description": "A list of IP Subnet address strings the IP address should match.\nThis parameter is only valid with the C(tcp) type.",
              "type": "list",
              "required": false,
              "elements": "str",
              "version_added": "1.8.0",
              "suboptions": {}
            },
            "address_matches_with_datagroup": {
              "aliases": [],
              "description": "A list of internal datagroup strings the IP address should match.\nThis parameter is only valid with the C(tcp) type.",
              "type": "list",
              "required": false,
              "elements": "str",
              "version_added": "1.8.0",
              "suboptions": {}
            },
            "address_matches_with_external_datagroup": {
              "aliases": [],
              "description": "A list of external datagroup strings the IP address should match.\nThis parameter is only valid with the C(tcp) type.",
              "type": "list",
              "required": false,
              "elements": "str",
              "version_added": "1.10.0",
              "suboptions": {}
            },
            "event": {
              "aliases": [],
              "description": "Events on which conditions type match rules can be triggered.\nSupported only for C(http_header), C(http_method), C(ssl_extension) and C(tcp).\nValid choices for C(http_header) condition types are: C(proxy_connect), C(proxy_request), C(proxy_response), C(request) and C(response).\nValid choices for C(http_method) condition types are: C(proxy_connect), C(proxy_request), C(proxy_response), C(request) and C(response).\nValid choices for C(tcp) condition types are: C(request), C(client_accepted), C(proxy_connect), C(proxy_request), C(proxy_response), C(ssl_client_hello), and C(ssl_client_server_hello_send).\nValid choices for C(ssl_extension) are: C(ssl_client_hello), and C(ssl_client_server_hello_send).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "header_is_any": {
              "aliases": [],
              "description": "A list of strings of characters the HTTP Header value should match.\nThis parameter is only valid with the C(http_header) type.",
              "type": "list",
              "required": false,
              "elements": "str",
              "version_added": "1.8.0",
              "suboptions": {}
            },
            "header_name": {
              "aliases": [],
              "description": "A name of C(http_header).\nThis parameter is only valid with the C(http_header) type.",
              "type": "str",
              "required": false,
              "version_added": "1.8.0",
              "suboptions": {}
            },
            "host_begins_with_any": {
              "aliases": [],
              "description": "A list of strings of characters the HTTP Host should start with.\nThis parameter is only valid with the C(http_host) type.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "host_ends_with_any": {
              "aliases": [],
              "description": "A list of strings of characters the HTTP Host should end with.\nThis parameter is only valid with the C(http_host) type.",
              "type": "list",
              "required": false,
              "elements": "str",
              "version_added": "1.8.0",
              "suboptions": {}
            },
            "host_is_any": {
              "aliases": [],
              "description": "A list of strings of characters the HTTP Host should match.\nThis parameter is only valid with the C(http_host) type.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "host_is_not_any": {
              "aliases": [],
              "description": "A list of strings of characters the HTTP Host should not match.\nThis parameter is only valid with the C(http_host) type.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "method_matches_with_any": {
              "aliases": [],
              "description": "A list of strings of characters the HTTP Method value should match.\nThis parameter is only valid with the C(http_method) type.",
              "type": "list",
              "required": false,
              "elements": "str",
              "version_added": "1.10.0",
              "suboptions": {}
            },
            "path_begins_with_any": {
              "aliases": [],
              "description": "A list of strings of characters the HTTP URI should start with.\nThis parameter is only valid with the C(http_uri) type.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "path_contains": {
              "aliases": [],
              "description": "A list of strings of characters the HTTP URI should contain.\nThis parameter is only valid with the C(http_uri) type.",
              "type": "list",
              "required": false,
              "elements": "str",
              "version_added": "1.8.0",
              "suboptions": {}
            },
            "path_is_any": {
              "aliases": [],
              "description": "A list of strings of characters the HTTP URI should match.\nThis parameter is only valid with the C(http_uri) type.",
              "type": "list",
              "required": false,
              "elements": "str",
              "version_added": "1.8.0",
              "suboptions": {}
            },
            "server_name_is_any": {
              "aliases": [],
              "description": "A list of strings of characters the SSL Extension should match.\nThis parameter is only valid with the C(ssl_extension) type.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "The condition type. This value controls which of the following options are required.\nWhen C(type) is C(http_uri), the valid choices are: C(path_begins_with_any), C(path_contains) or C(path_is_any).\nWhen C(type) is C(http_host), the valid choices are: C(host_is_any), C(host_is_not_any), C(host_begins_with_any) or C(host_ends_with_any).\nWhen C(type) is C(http_header), the C(header_name) parameter is mandatory and the valid choice is: C(header_is_any).\nWhen C(type) is C(http_method), the valid choices are: C(method_matches_with_any).\nWhen C(type) is C(all_traffic), the system removes all existing conditions from this rule.",
              "type": "str",
              "required": true,
              "choices": [
                "http_uri",
                "all_traffic",
                "http_host",
                "http_header",
                "http_method",
                "ssl_extension",
                "tcp"
              ],
              "suboptions": {}
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "Description of the policy rule.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the rule.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "policy": {
          "aliases": [],
          "description": "The name of the policy you want to associate this rule with.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "replace_with": {
          "aliases": [],
          "description": "Specifies if the C(conditions)/C(actions) given by the user should overwrite what exists on the device.\nThe option is useful when a subset of C(conditions)/C(actions) needs to be removed. This option is similar to the replace-all-with flag available in TMSH commands.\nUsing this option is not idempotent.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "rule_order": {
          "aliases": [],
          "description": "Specifies a number that indicates the order of this rule relative to other rules in the policy.\nWhen not set, the device sets the parameter to 0.\nIf there are rules with the same rule order number, the device uses rule names to determine how the rules are ordered.\nThe lower the number, the lower the rule is in the general order, with the lowest number C(0) being the topmost one.\nValid range of values is between C(0) and C(4294967295) inclusive.",
          "type": "int",
          "required": false,
          "version_added": "1.10.0",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the key is uploaded to the device. When C(absent), ensures the key is removed from the device. If the key is currently in use, the module will not be able to remove the key.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "BIG-IP >= v12.1.0"
      ],
      "short_description": "Manage LTM policy rules on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create policies\n  bigip_policy:\n    name: Policy-Foo\n    state: present\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add a rule to the new policy\n  bigip_policy_rule:\n    policy: Policy-Foo\n    name: rule3\n    conditions:\n      - type: http_uri\n        path_begins_with_any:\n          - /ABC\n    actions:\n      - type: forward\n        pool: pool-svrs\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add multiple rules to the new policy\n  bigip_policy_rule:\n    policy: Policy-Foo\n    name: \"{{ item.name }}\"\n    conditions: \"{{ item.conditions }}\"\n    actions: \"{{ item.actions }}\"\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n  loop:\n    - name: rule1\n      actions:\n        - type: forward\n          pool: pool-svrs\n      conditions:\n        - type: http_uri\n          path_begins_with_any:\n            - /euro\n    - name: rule2\n      actions:\n        - type: forward\n          pool: pool-svrs\n      conditions:\n        - type: http_uri\n          path_begins_with_any:\n            - /HomePage/\n    - name: rule3\n      actions:\n        - type: set_variable\n          variable_name: user-agent\n          expression: tcl:[HTTP::header User-Agent]\n          event: request\n      conditions:\n        - type: http_uri\n          path_begins_with_any:\n            - /HomePage/\n\n- name: Remove all rules and conditions from the rule\n  bigip_policy_rule:\n    policy: Policy-Foo\n    name: rule1\n    conditions:\n      - type: all_traffic\n    actions:\n      - type: ignore\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_pool": {
    "doc": {
      "description": "Manages F5 BIG-IP LTM pools via iControl REST API.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "aggregate": {
          "aliases": [
            "pools"
          ],
          "description": "List of pool definitions to be created, modified, or removed.\nWhen using C(aggregates), if one of the aggregate definitions is invalid, the aggregate run will fail, indicating the error it last encountered.\nThe module will B(NOT) rollback any changes it has made prior to encountering the error.\nThe module also will not indicate which changes were made prior to failure. Therefore we strongly advise you run the module in C(check) mode to ensure basic validation prior to executing this module.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Specifies descriptive text that identifies the pool.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lb_method": {
          "aliases": [],
          "description": "Load balancing method. When creating a new pool, if this value is not specified, the default of C(round-robin) is used.",
          "type": "str",
          "required": false,
          "choices": [
            "dynamic-ratio-member",
            "dynamic-ratio-node",
            "fastest-app-response",
            "fastest-node",
            "least-connections-member",
            "least-connections-node",
            "least-sessions",
            "observed-member",
            "observed-node",
            "predictive-member",
            "predictive-node",
            "ratio-least-connections-member",
            "ratio-least-connections-node",
            "ratio-member",
            "ratio-node",
            "ratio-session",
            "round-robin",
            "weighted-least-connections-member",
            "weighted-least-connections-node"
          ],
          "suboptions": {}
        },
        "metadata": {
          "aliases": [],
          "description": "Arbitrary key/value pairs you can attach to a pool. This is useful in situations where you might want to annotate a pool to be managed by Ansible.\nKey names are stored as strings; this includes names that are numbers.\nValues for all of the keys are stored as strings; this includes values that are numbers.\nData will be persisted, not ephemeral.",
          "type": "raw",
          "required": false,
          "suboptions": {}
        },
        "monitor_type": {
          "aliases": [],
          "description": "Monitor rule type when C(monitors) is specified.\nWhen creating a new pool, if this value is not specified, the default of C(and_list) is used.\nWhen C(single), ensures all specified monitors are checked, but additionally includes checks to make sure you only specified a single monitor.\nWhen C(and_list), ensures B(all) monitors are checked.\nWhen C(m_of_n), ensures C(quorum) of C(monitors) are checked. C(m_of_n) B(requires) a C(quorum) of 1 or greater be set either in the playbook, or already exist on the device.\nBoth C(single) and C(and_list) are functionally identical, as BIG-IP considers all monitors as \"a list\".",
          "type": "str",
          "required": false,
          "choices": [
            "and_list",
            "m_of_n",
            "single"
          ],
          "suboptions": {}
        },
        "monitors": {
          "aliases": [],
          "description": "Monitor template name list. If the partition is not provided as part of the monitor name, the C(partition) option is used instead.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "pool"
          ],
          "description": "Pool name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "priority_group_activation": {
          "aliases": [
            "minimum_active_members"
          ],
          "description": "Specifies whether the system load balances traffic according to the priority number assigned to the pool member.\nWhen creating a new pool, if this parameter is not specified, the default of C(0) is used.\nTo disable this setting, provide the value C(0).\nOnce you enable this setting, you can specify pool member priority when you create a new pool or on a pool member's properties screen.\nThe system treats same-priority pool members as a group.\nTo enable priority group activation, provide a number from C(0) to C(65535) that represents the minimum number of members that must be available in one priority group before the system directs traffic to members in a lower priority group.\nWhen a sufficient number of members become available in the higher priority group, the system again directs traffic to the higher priority group.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "quorum": {
          "aliases": [],
          "description": "Monitor quorum value when C(monitor_type) is C(m_of_n).\nQuorum must be a value of 1 or greater when C(monitor_type) is C(m_of_n).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "replace_all_with": {
          "aliases": [
            "purge"
          ],
          "description": "Removes pools not defined in the C(aggregate) parameter.\nThis operation is all or none, meaning it will stop if there are some pools that cannot be removed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "reselect_tries": {
          "aliases": [],
          "description": "Sets the number of times the system tries to contact a pool member after a passive failure.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "service_down_action": {
          "aliases": [],
          "description": "Sets the action to take when node goes down in pool.",
          "type": "str",
          "required": false,
          "choices": [
            "none",
            "reset",
            "drop",
            "reselect"
          ],
          "suboptions": {}
        },
        "slow_ramp_time": {
          "aliases": [],
          "description": "Sets the ramp-up time (in seconds) to gradually ramp up the load on newly added or freshly detected up pool members.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), guarantees the pool exists with the provided attributes.\nWhen C(absent), removes the pool from the system.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP LTM pools",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create pool\n  bigip_pool:\n    state: present\n    name: my-pool\n    partition: Common\n    lb_method: least-connections-member\n    slow_ramp_time: 120\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Modify load balancer method\n  bigip_pool:\n    state: present\n    name: my-pool\n    partition: Common\n    lb_method: round-robin\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Set a single monitor (with enforcement)\n  bigip_pool:\n    state: present\n    name: my-pool\n    partition: Common\n    monitor_type: single\n    monitors:\n      - http\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Set a single monitor (without enforcement)\n  bigip_pool:\n    state: present\n    name: my-pool\n    partition: Common\n    monitors:\n      - http\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Set multiple monitors (all must succeed)\n  bigip_pool:\n    state: present\n    name: my-pool\n    partition: Common\n    monitor_type: and_list\n    monitors:\n      - http\n      - tcp\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Set multiple monitors (at least 1 must succeed)\n  bigip_pool:\n    state: present\n    name: my-pool\n    partition: Common\n    monitor_type: m_of_n\n    quorum: 1\n    monitors:\n      - http\n      - tcp\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Delete pool\n  bigip_pool:\n    state: absent\n    name: my-pool\n    partition: Common\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add metadata to pool\n  bigip_pool:\n    state: present\n    name: my-pool\n    partition: Common\n    metadata:\n      ansible: 2.4\n      updated_at: 2017-12-20T17:50:46Z\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add pools Aggregate\n  bigip_pool:\n    aggregate:\n      - name: my-pool\n        partition: Common\n        lb_method: least-connections-member\n        slow_ramp_time: 120\n      - name: my-pool2\n        partition: Common\n        lb_method: least-sessions\n        slow_ramp_time: 120\n      - name: my-pool3\n        partition: Common\n        lb_method: round-robin\n        slow_ramp_time: 120\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add pools Aggregate, purge others\n  bigip_pool:\n    aggregate:\n      - name: my-pool\n        partition: Common\n        lb_method: least-connections-member\n        slow_ramp_time: 120\n      - name: my-pool2\n        partition: Common\n        lb_method: least-sessions\n        slow_ramp_time: 120\n      - name: my-pool3\n        partition: Common\n        lb_method: round-robin\n        slow_ramp_time: 120\n    replace_all_with: yes\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_pool_member": {
    "doc": {
      "description": "Manages F5 BIG-IP LTM pool members via the REST API.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "address": {
          "aliases": [
            "ip",
            "host"
          ],
          "description": "IP address of the pool member. This can be either IPv4 or IPv6. When creating a new pool member, one of either C(address) or C(fqdn) must be provided. This parameter cannot be updated after it is set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aggregate": {
          "aliases": [
            "members"
          ],
          "description": "List of pool member definitions to be created, modified, or removed.\nWhen using C(aggregates), if one of the aggregate definitions is invalid, the aggregate run will fail, indicating the error it last encountered.\nThe module will B(NOT) rollback any changes it has made prior to encountering the error.\nThe module also will not indicate what changes were made prior to failure. Therefore we strong advise you run the module in C(check) mode to ensure basic validation prior to executing this module.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        },
        "availability_requirements": {
          "aliases": [],
          "description": "If you activate more than one health monitor, specifies the number of health monitors that must receive successful responses in order for the link to be considered available.\nSpecifying an empty string will remove the monitors and revert to inheriting from the pool (default).\nSpecifying C(none) will remove any health monitoring from the member completely.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "at_least": {
              "aliases": [],
              "description": "Specifies the minimum number of active health monitors that must be successful before the link is considered up.\nThis parameter is only relevant when a C(type) of C(at_least) is used.\nThis parameter will be ignored if a type of C(all) is used.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "Monitor rule type when C(monitors) is specified.\nWhen creating a new pool, if this value is not specified, the default of C(all) will be used.",
              "type": "str",
              "required": true,
              "choices": [
                "all",
                "at_least"
              ],
              "suboptions": {}
            }
          }
        },
        "connection_limit": {
          "aliases": [],
          "description": "Pool member connection limit. Setting this to C(0) disables the limit.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Pool member description.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fqdn": {
          "aliases": [
            "hostname"
          ],
          "description": "FQDN name of the pool member. This can be any name that is a valid RFC 1123 DNS name. Therefore, the only characters that can be used are \"A\" to \"Z\", \"a\" to \"z\", \"0\" to \"9\", the hyphen (\"-\") and the period (\".\").\nFQDN names must include at least one period; delineating the host from the domain. For example, C(host.domain).\nFQDN names must end with a letter or a number.\nWhen creating a new pool member, one of either C(address) or C(fqdn) must be provided. This parameter cannot be updated after it is set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fqdn_auto_populate": {
          "aliases": [],
          "description": "Specifies whether the system automatically creates ephemeral nodes using the IP addresses returned by the resolution of a DNS query for a node defined by an FQDN.\nWhen C(yes), the system generates an ephemeral node for each IP address returned in response to a DNS query for the FQDN of the node. Additionally, when a DNS response indicates the IP address of an ephemeral node no longer exists, the system deletes the ephemeral node.\nWhen C(no), the system resolves a DNS query for the FQDN of the node with the single IP address associated with the FQDN.\nWhen creating a new pool member, the default for this parameter is C(yes).\nOnce set this parameter cannot be changed afterwards.\nThis parameter is ignored when C(reuse_nodes) is C(yes).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ip_encapsulation": {
          "aliases": [],
          "description": "Specifies the IP encapsulation using either IPIP (IP encapsulation within IP, RFC 2003) or GRE (Generic Router Encapsulation, RFC 2784) on outbound packets (from BIG-IP system to server-pool member).\nWhen C(none), disables IP encapsulation.\nWhen C(inherit), inherits the IP encapsulation setting from the member's pool.\nWhen any other value, the options are None, Inherit from Pool, and Member Specific.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "monitors": {
          "aliases": [],
          "description": "Specifies the health monitors the system currently uses to monitor this resource.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the node to create, or re-use, when creating a new pool member.\nThis parameter is optional. If not specified, a node name will be created automatically from either the specified C(address) or C(fqdn).\nThe C(enabled) state is an alias of C(present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "pool": {
          "aliases": [],
          "description": "Pool name. This pool must exist.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Pool member port.\nThis value cannot be changed after it has been set.\nParameter must be provided when using aggregates.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "preserve_node": {
          "aliases": [],
          "description": "When state is C(absent), the system attempts to remove the node the pool member references.\nThe node will not be removed if it is still referenced by other pool members. If this happens, the module will not raise an error.\nSetting this to C(yes) disables this behavior.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "priority_group": {
          "aliases": [],
          "description": "Specifies a number representing the priority group for the pool member.\nWhen adding a new member, the default is C(0), meaning the member has no priority.\nTo specify a priority, you must activate priority group usage when you create a new pool or when adding or removing pool members. When activated, the system load balances traffic according to the priority group number assigned to the pool member.\nThe higher the number, the higher the priority. So a member with a priority of 3 has higher priority than a member with a priority of 1.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rate_limit": {
          "aliases": [],
          "description": "Pool member rate limit (connections-per-second). Setting this to C(0) disables the limit.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ratio": {
          "aliases": [],
          "description": "Pool member ratio weight. Valid values range from 1 through 100. New pool members -- unless overridden with this value -- default to 1.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "replace_all_with": {
          "aliases": [
            "purge"
          ],
          "description": "Removes members not defined in the C(aggregate) parameter.\nThis operation is all or none, meaning it will stop if there are some pool members that cannot be removed.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "reuse_nodes": {
          "aliases": [],
          "description": "Reuses node definitions if requested.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Pool member state.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "enabled",
            "disabled",
            "forced_offline"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages F5 BIG-IP LTM pool members",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add pool member\n  bigip_pool_member:\n    pool: my-pool\n    partition: Common\n    host: \"{{ ansible_default_ipv4['address'] }}\"\n    port: 80\n    description: web server\n    connection_limit: 100\n    rate_limit: 50\n    ratio: 2\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Modify pool member ratio and description\n  bigip_pool_member:\n    pool: my-pool\n    partition: Common\n    host: \"{{ ansible_default_ipv4['address'] }}\"\n    port: 80\n    ratio: 1\n    description: nginx server\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Remove pool member from pool\n  bigip_pool_member:\n    state: absent\n    pool: my-pool\n    partition: Common\n    host: \"{{ ansible_default_ipv4['address'] }}\"\n    port: 80\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Force pool member offline\n  bigip_pool_member:\n    state: forced_offline\n    pool: my-pool\n    partition: Common\n    host: \"{{ ansible_default_ipv4['address'] }}\"\n    port: 80\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Create members with priority groups\n  bigip_pool_member:\n    pool: my-pool\n    partition: Common\n    host: \"{{ item.address }}\"\n    name: \"{{ item.name }}\"\n    priority_group: \"{{ item.priority_group }}\"\n    port: 80\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n  loop:\n    - address: 1.1.1.1\n      name: web1\n      priority_group: 4\n    - address: 2.2.2.2\n      name: web2\n      priority_group: 3\n    - address: 3.3.3.3\n      name: web3\n      priority_group: 2\n    - address: 4.4.4.4\n      name: web4\n      priority_group: 1\n\n- name: Add pool members aggregate\n  bigip_pool_member:\n    pool: my-pool\n    aggregate:\n      - host: 192.168.1.1\n        partition: Common\n        port: 80\n        description: web server\n        connection_limit: 100\n        rate_limit: 50\n        ratio: 2\n      - host: 192.168.1.2\n        partition: Common\n        port: 80\n        description: web server\n        connection_limit: 100\n        rate_limit: 50\n        ratio: 2\n      - host: 192.168.1.3\n        partition: Common\n        port: 80\n        description: web server\n        connection_limit: 100\n        rate_limit: 50\n        ratio: 2\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add pool members aggregate, remove non aggregates\n  bigip_pool_member:\n    pool: my-pool\n    aggregate:\n      - host: 192.168.1.1\n        partition: Common\n        port: 80\n        description: web server\n        connection_limit: 100\n        rate_limit: 50\n        ratio: 2\n      - host: 192.168.1.2\n        partition: Common\n        port: 80\n        description: web server\n        connection_limit: 100\n        rate_limit: 50\n        ratio: 2\n      - host: 192.168.1.3\n        partition: Common\n        port: 80\n        description: web server\n        connection_limit: 100\n        rate_limit: 50\n        ratio: 2\n    replace_all_with: yes\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_profile_analytics": {
    "doc": {
      "description": "Manage HTTP analytics profiles on a BIG-IP device.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "collect_geo": {
          "aliases": [],
          "description": "Enables or disables the collection of the names of the countries from where the traffic was sent.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "collect_ip": {
          "aliases": [],
          "description": "Enables or disables the collection of client IPs statistics.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "collect_max_tps_and_throughput": {
          "aliases": [],
          "description": "Enables or disables the collection of maximum TPS and throughput for all collected entities.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "collect_page_load_time": {
          "aliases": [],
          "description": "Enables or disables the collection of the page load time statistics.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "collect_url": {
          "aliases": [],
          "description": "Enables or disables the collection of requested URL statistics.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "collect_user_agent": {
          "aliases": [],
          "description": "Enables or disables the collection of user agents.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "collect_user_sessions": {
          "aliases": [],
          "description": "Enables or disables the collection of the unique user sessions.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "collected_stats_external_logging": {
          "aliases": [],
          "description": "Enables or disables the external logging of the collected statistics.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "collected_stats_internal_logging": {
          "aliases": [],
          "description": "Enables or disables the internal logging of the collected statistics.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "external_logging_publisher": {
          "aliases": [],
          "description": "Specifies the external logging publisher used to send statistical data to one or more destinations.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "notification_by_email": {
          "aliases": [],
          "description": "Enables or disables sending the analytics alerts by email.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "notification_by_syslog": {
          "aliases": [],
          "description": "Enables or disables logging of the analytics alerts into the Syslog.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "notification_email_addresses": {
          "aliases": [],
          "description": "Specifies which email addresses receive alerts by email when C(notification_by_email) is enabled.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "Specifies the profile from which this profile inherits settings.\nWhen creating a new profile, if this parameter is not specified, the default is the system-supplied C(analytics) profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the profile exists.\nWhen C(absent), ensures the profile is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage HTTP analytics profiles on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a profile\n  bigip_profile_analytics:\n    name: profile1\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_profile_client_ssl": {
    "doc": {
      "description": "Manages client SSL profiles on a BIG-IP device.",
      "has_action": false,
      "notes": "Requires BIG-IP software version >= 12\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "advertised_cert_authority": {
          "aliases": [],
          "description": "Specifies the CAs the system advertises to clients is being trusted by the profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "allow_expired_crl": {
          "aliases": [],
          "description": "Instructs the system to use the specified CRL file even if it has expired.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "allow_non_ssl": {
          "aliases": [],
          "description": "Enables or disables acceptance of non-SSL connections.\nWhen creating a new profile, the setting is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "cache_size": {
          "aliases": [],
          "description": "Specifies the number of sessions in the SSL session cache.\nThe valid value range is between 0 and 4194304 inclusive.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "int",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {}
        },
        "cache_timeout": {
          "aliases": [],
          "description": "Specifies the timeout value in seconds of the SSL session cache entries.\nAcceptable values are between 0 and 86400 inclusive.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "int",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {}
        },
        "cert_auth_depth": {
          "aliases": [],
          "description": "Specifies the maximum number of certificates to be traversed in a client certificate chain.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "cert_key_chain": {
          "aliases": [],
          "description": "One or more certificates and keys to associate with the SSL profile. This option is always a list. The keys in the list dictate the details of the client/key/chain combination. Note that BIG-IPs can only have one of each type of each certificate/key type. This means you can only have one RSA, one DSA, and one ECDSA per profile. If you attempt to assign two RSA, DSA, or ECDSA certificate/key combo, the device rejects it.\nThis list is a complex list that specifies a number of keys.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "cert": {
              "aliases": [],
              "description": "Specifies a certificate name for use.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "chain": {
              "aliases": [],
              "description": "Contains a certificate chain relevant to the certificate and key mentioned previously.\nThis key is optional.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "key": {
              "aliases": [],
              "description": "Contains a key name.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "passphrase": {
              "aliases": [],
              "description": "Contains the passphrase of the key file, if required.\nPassphrases are encrypted on the remote BIG-IP device. Therefore, there is no way to compare them when updating a client SSL profile. Due to this, if you specify a passphrase, this module will always register a C(changed) event.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "true_names": {
              "aliases": [],
              "description": "When C(yes), the module will not append C(.crt) and C(.key) extensions to the given certificate and key names.\nWhen C(no), the module will append C(.crt) and C(.key) extensions to the given certificate and key names.",
              "default": "False",
              "type": "bool",
              "required": false,
              "version_added": "1.1.0",
              "suboptions": {}
            }
          }
        },
        "cipher_group": {
          "aliases": [],
          "description": "Specifies the cipher group to assign to this profile.\nWhen the C(ciphers) parameter is in use, the C(cipher_group) must be set to either C(none) or C('').\nWhen creating a new profile with C(cipher_group), if the parent profile has C(ciphers) set by default, the C(cipher) parameter must be set to C(none) or C('') during creation.\nThe parameter only works on TMOS version 13.x and later.",
          "type": "str",
          "required": false,
          "version_added": "1.2.0",
          "suboptions": {}
        },
        "ciphers": {
          "aliases": [],
          "description": "Specifies the list of ciphers the system supports.\nWhen the C(cipher_group) parameter is in use, the C(ciphers) parameter needs to be set to either C(none) or C('').",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client_auth_crl": {
          "aliases": [],
          "description": "Specifies the name of a file containing a list of revoked client certificates.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "client_auth_frequency": {
          "aliases": [],
          "description": "Specifies the frequency of client authentication for an SSL session.\nWhen C(once), specifies the system authenticates the client once for an SSL session.\nWhen C(always), specifies the system authenticates the client once for an SSL session and also upon reuse of that session.",
          "type": "str",
          "required": false,
          "choices": [
            "once",
            "always"
          ],
          "suboptions": {}
        },
        "client_certificate": {
          "aliases": [],
          "description": "Specifies the way the system handles client certificates.\nWhen C(ignore), specifies the system ignores certificates from client systems.\nWhen C(require), specifies the system requires a client to present a valid certificate.\nWhen C(request), specifies the system requests a valid certificate from a client but always authenticate the client.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "require",
            "request"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "options": {
          "aliases": [],
          "description": "Options the system uses for SSL processing in the form of a list. When creating a new profile, the list is provided by the parent profile.\nWhen C('') or C(none), all options for SSL processing are disabled.",
          "type": "list",
          "required": false,
          "choices": [
            "netscape-reuse-cipher-change-bug",
            "microsoft-big-sslv3-buffer",
            "msie-sslv2-rsa-padding",
            "ssleay-080-client-dh-bug",
            "tls-d5-bug",
            "tls-block-padding-bug",
            "dont-insert-empty-fragments",
            "no-ssl",
            "no-dtls",
            "no-session-resumption-on-renegotiation",
            "no-tlsv1.1",
            "no-tlsv1.2",
            "no-tlsv1.3",
            "single-dh-use",
            "ephemeral-rsa",
            "cipher-server-preference",
            "tls-rollback-bug",
            "no-sslv2",
            "no-sslv3",
            "no-tls",
            "no-tlsv1",
            "pkcs1-check-1",
            "pkcs1-check-2",
            "netscape-ca-dn-bug",
            "netscape-demo-cipher-change-bug",
            "none"
          ],
          "elements": "str",
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is the C(clientssl) parent on the C(Common) partition.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "renegotiation": {
          "aliases": [],
          "description": "Enables or disables SSL renegotiation.\nWhen creating a new profile, the setting is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "retain_certificate": {
          "aliases": [],
          "description": "When C(yes), the client certificate is retained in SSL session.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "secure_renegotiation": {
          "aliases": [],
          "description": "Specifies the method of secure renegotiations for SSL connections. When creating a new profile, the setting is provided by the parent profile.\nWhen C(request), the system requests secure renegotiation of SSL connections.\nC(require) is a default setting and when set, the system permits initial SSL handshakes from clients, but terminates renegotiations from unpatched clients.\nWith the C(require-strict) setting, the system requires strict renegotiation of SSL connections. In this mode, the system refuses connections to insecure servers, and terminates existing SSL connections to insecure servers.",
          "type": "str",
          "required": false,
          "choices": [
            "require",
            "require-strict",
            "request"
          ],
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "Specifies the fully qualified DNS hostname of the server used in Server Name Indication communications. When creating a new profile, the setting is provided by the parent profile.\nThe server name can also be a wildcard string containing the asterisk C(*) character.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sni_default": {
          "aliases": [],
          "description": "Indicates the system uses this profile as the default SSL profile when there is no match to the server name, or when the client provides no SNI extension support.\nWhen creating a new profile, the setting is provided by the parent profile.\nThere can be only one SSL profile with this setting enabled.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "sni_require": {
          "aliases": [],
          "description": "Requires the network peers also provide SNI support. This setting only takes effect when C(sni_default) is set to C(true).\nWhen creating a new profile, the setting is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the profile exists.\nWhen C(absent), ensures the profile is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "strict_resume": {
          "aliases": [],
          "description": "Enables or disables the resumption of SSL sessions after an unclean shutdown.\nWhen creating a new profile, the setting is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "trusted_cert_authority": {
          "aliases": [],
          "description": "Specifies a client CA the system trusts.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages client SSL profiles on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create client SSL profile\n  bigip_profile_client_ssl:\n    state: present\n    name: my_profile\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Create client SSL profile with specific ciphers\n  bigip_profile_client_ssl:\n    state: present\n    name: my_profile\n    ciphers: \"!SSLv3:!SSLv2:ECDHE+AES-GCM+SHA256:ECDHE-RSA-AES128-CBC-SHA\"\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Create client SSL profile with specific cipher group\n  bigip_profile_client_ssl:\n    state: present\n    name: my_profile\n    ciphers: \"none\"\n    cipher_group: \"/Common/f5-secure\"\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Create client SSL profile with specific SSL options\n  bigip_profile_client_ssl:\n    state: present\n    name: my_profile\n    options:\n      - no-sslv2\n      - no-sslv3\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Create client SSL profile require secure renegotiation\n  bigip_profile_client_ssl:\n    state: present\n    name: my_profile\n    secure_renegotiation: request\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Create a client SSL profile with a cert/key/chain setting\n  bigip_profile_client_ssl:\n    state: present\n    name: my_profile\n    cert_key_chain:\n      - cert: bigip_ssl_cert1\n        key: bigip_ssl_key1\n        chain: bigip_ssl_cert1\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_profile_dns": {
    "doc": {
      "description": "Manage DNS profiles on a BIG-IP. There are many DNS profiles options, each with their own adjustments to the standard C(dns) profile. Users of this module should be aware that many of the configurable options have no module default. Instead, the default is assigned by the BIG-IP system itself which, in most cases, is acceptable.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "cache_name": {
          "aliases": [],
          "description": "Specifies the user-created cache the system uses to cache DNS responses.\nWhen you select a cache for the system to use, you must also set C(enable_dns_cache) to C(yes)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enable_cache": {
          "aliases": [],
          "description": "Specifies whether the system caches DNS responses.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.\nWhen C(yes), the BIG-IP system caches DNS responses handled by the virtual servers associated with this profile. When you enable this setting, you must also specify a value for C(cache_name).\nWhen C(no), the BIG-IP system does not cache DNS responses handled by the virtual servers associated with this profile. However, the profile retains the association with the DNS cache in the C(cache_name) parameter. Disable this setting when you want to debug the system.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_dns_express": {
          "aliases": [],
          "description": "Specifies whether the DNS Express engine is enabled.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.\nThe DNS Express engine receives zone transfers from the authoritative DNS server for the zone. If the C(enable_zone_transfer) setting is also C(yes) on this profile, the DNS Express engine also responds to zone transfer requests made by the nameservers configured as zone transfer clients for the DNS Express zone.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_dns_firewall": {
          "aliases": [],
          "description": "Specifies whether the DNS firewall is enabled.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_dnssec": {
          "aliases": [],
          "description": "Specifies whether the system signs responses with DNSSEC keys and replies to DNSSEC specific queries (for example, DNSKEY query type).\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_gtm": {
          "aliases": [],
          "description": "Specifies whether the system uses Global Traffic Manager (now BIG-IP DNS) to manage the response.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_zone_transfer": {
          "aliases": [],
          "description": "Specifies whether the system answers zone transfer requests for a DNS zone created on the system.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.\nThe C(enable_dns_express) and C(enable_zone_transfer) settings on a DNS profile affect how the system responds to zone transfer requests.\nWhen the C(enable_dns_express) and C(enable_zone_transfer) settings are both C(yes), if a zone transfer request matches a DNS Express zone, DNS Express answers the request.\nWhen the C(enable_dns_express) setting is C(no) and the C(enable_zone_transfer) setting is C(yes), the BIG-IP system processes zone transfer requests based on the last action and answers the request from local BIND or a pool member.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the DNS profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "Specifies the profile from which this profile inherits settings.\nWhen creating a new profile, if this parameter is not specified, the default is the system-supplied C(dns) profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "process_recursion_desired": {
          "aliases": [],
          "description": "Specifies whether to process client-side DNS packets with Recursion Desired set in the header.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.\nIf set to C(no), processing of the packet is subject to the unhandled-query-action option.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the profile exists.\nWhen C(absent), ensures the profile is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "unhandled_query_action": {
          "aliases": [],
          "description": "Specifies the action to take when a query does not match a Wide IP or a DNS Express Zone.\nWhen C(allow), the BIG-IP system forwards queries to a DNS server or pool member. If a pool is not associated with a listener and the Use BIND Server on BIG-IP setting is set to Enabled, requests are forwarded to the local BIND server.\nWhen C(drop), the BIG-IP system does not respond to the query.\nWhen C(reject), the BIG-IP system returns the query with the REFUSED return code.\nWhen C(hint), the BIG-IP system returns the query with a list of root name servers.\nWhen C(no-error), the BIG-IP system returns the query with the NOERROR return code.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "str",
          "required": false,
          "choices": [
            "allow",
            "drop",
            "reject",
            "hint",
            "no-error"
          ],
          "suboptions": {}
        },
        "use_local_bind": {
          "aliases": [],
          "description": "Specifies whether the system forwards non-wide IP queries to the local BIND server on the BIG-IP system.\nFor best performance, disable this setting when using a DNS cache.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage DNS profiles on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a DNS profile\n  bigip_profile_dns:\n    name: foo\n    enable_dns_express: no\n    enable_dnssec: no\n    enable_gtm: no\n    process_recursion_desired: no\n    use_local_bind: no\n    enable_dns_firewall: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_profile_fastl4": {
    "doc": {
      "description": "Manages Fast L4 profiles. Using the FastL4 profile can increase virtual server performance and throughput for supported platforms by using the embedded Packet Velocity Acceleration (ePVA) chip to accelerate traffic.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "client_timeout": {
          "aliases": [],
          "description": "Specifies a timeout for Late Binding.\nThis is the time limit for the client to provide the application data required to select a back-end server, meaning the maximum time the BIG-IP system waits for information about the sender and the target.\nThis information typically arrives at the beginning of the FIX logon packet.\nWhen C(0), or C(immediate), allows for no time beyond the moment of the first packet transmission.\nWhen C(indefinite), disables the limit. This allows the client unlimited time to send the sender and target information.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "explicit_flow_migration": {
          "aliases": [],
          "description": "Specifies whether a qualified late-binding connection requires an explicit iRule command to migrate down to ePVA hardware.\nWhen C(no), a late-binding connection migrates down to ePVA immediately after establishing the server-side connection.\nWhen C(yes), this parameter stops automatic migration to ePVA, and requires the iRule explicitly trigger ePVA processing by invoking the C(release_flow) iRule command. This allows an iRule author to control when the connection uses the ePVA hardware.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "hardware_syn_cookie": {
          "aliases": [],
          "description": "Enables or disables hardware SYN cookie support when PVA10 is present on the system.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "idle_timeout": {
          "aliases": [],
          "description": "Specifies the length of time a connection is idle (has no traffic) before the connection is eligible for deletion.\nWhen creating a new profile, if this parameter is not specified, the remote device will choose a default value appropriate for the profile, based on its C(parent) profile.\nWhen a number is specified, indicates the number of seconds the TCP connection can remain idle before the system deletes it.\nWhen C(indefinite), specifies the system does not delete TCP connections regardless of how long they remain idle.\nWhen C(0), or C(immediate), specifies the system deletes connections immediately when they become idle.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ip_df_mode": {
          "aliases": [],
          "description": "Specifies the Don't Fragment (DF) bit setting in the IP Header of the outgoing TCP packet.\nWhen C(pmtu), sets the outgoing IP Header DF bit based on IP pmtu setting.\nWhen C(preserve), sets the outgoing Packet's IP Header DF bit to be same as incoming IP Header DF bit.\nWhen C(set), sets the outgoing packet's IP Header DF bit.\nWhen C(clear), clears the outgoing packet's IP Header DF bit.",
          "type": "str",
          "required": false,
          "choices": [
            "pmtu",
            "preserve",
            "set",
            "clear"
          ],
          "suboptions": {}
        },
        "ip_tos_to_client": {
          "aliases": [],
          "description": "For IP traffic passing through the system to clients, specifies whether the system modifies the IP type-of-service (ToS) setting in an IP packet header.\nMay be a number between 0 and 255 (inclusive). When a number, specifies the IP ToS setting that the system inserts in the IP packet header.\nWhen C(pass-through), specifies the IP ToS setting remains unchanged.\nWhen C(mimic), specifies the system sets the ToS level of outgoing packets to the same ToS level of the most-recently received incoming packet.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ip_tos_to_server": {
          "aliases": [],
          "description": "For IP traffic passing through the system to back-end servers, specifies whether the system modifies the IP type-of-service (ToS) setting in an IP packet header.\nMay be a number between 0 and 255 (inclusive). When a number, specifies the IP ToS setting that the system inserts in the IP packet header.\nWhen C(pass-through), specifies that IP ToS setting remains unchanged.\nWhen C(mimic), specifies the system sets the ToS level of outgoing packets to the same ToS level of the most-recently received incoming packet.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ip_ttl_mode": {
          "aliases": [],
          "description": "Specifies the outgoing TCP packet's IP Header TTL mode.\nWhen C(proxy), sets the outgoing IP Header TTL value to 255/64 for IPv4/IPv6 respectively.\nWhen C(preserve), sets the outgoing IP Header TTL value to be same as the incoming IP Header TTL value.\nWhen C(decrement), sets the outgoing IP Header TTL value to be one less than the incoming TTL value.\nWhen C(set), sets the outgoing IP Header TTL value to a specific value(as specified by C(ip_ttl_v4) or C(ip_ttl_v6).",
          "type": "str",
          "required": false,
          "choices": [
            "proxy",
            "preserve",
            "decrement",
            "set"
          ],
          "suboptions": {}
        },
        "ip_ttl_v4": {
          "aliases": [],
          "description": "Specifies the outgoing packet's IP Header TTL value for IPv4 traffic.\nThe maximum TTL value is 255.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip_ttl_v6": {
          "aliases": [],
          "description": "Specifies the outgoing packet's IP Header TTL value for IPv6 traffic.\nThe maximum TTL value is 255.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "keep_alive_interval": {
          "aliases": [],
          "description": "Specifies the keep-alive probe interval, in seconds.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "late_binding": {
          "aliases": [],
          "description": "Enables intelligent selection of a back-end server or pool, using an iRule to make the selection.\nEnabling C(late_binding) on BIG-IP running TMOS 12.x branch requires software syn cookie is enabled.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "link_qos_to_client": {
          "aliases": [],
          "description": "For IP traffic passing through the system to clients, specifies whether the system modifies the link quality-of-service (QoS) setting in an IP packet header.\nThe link QoS value prioritizes the IP packet relative to other Layer 2 traffic.\nYou can specify a number between 0 (lowest priority) and 7 (highest priority).\nWhen a number, specifies the link QoS setting that the system inserts in the IP packet header.\nWhen C(pass-through), specifies the link QoS setting remains unchanged.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "link_qos_to_server": {
          "aliases": [],
          "description": "For IP traffic passing through the system to back-end servers, specifies whether the system modifies the link quality-of-service (QoS) setting in an IP packet header.\nThe link QoS value prioritizes the IP packet relative to other Layer 2 traffic.\nYou can specify a number between 0 (lowest priority) and 7 (highest priority).\nWhen a number, specifies the link QoS setting that the system inserts in the IP packet header.\nWhen C(pass-through), specifies the link QoS setting remains unchanged.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "loose_close": {
          "aliases": [],
          "description": "When C(yes), specifies the system closes a loosely-initiated connection when the system receives the first FIN packet from either the client or the server.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "loose_initialization": {
          "aliases": [],
          "description": "When C(yes), specifies the system initializes a connection when it receives any TCP packet, rather than requiring a SYN packet for connection initiation.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "mss_override": {
          "aliases": [],
          "description": "Specifies a maximum segment size (MSS) override for server-side connections.\nValid range is 256 to 9162 or 0 to disable.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "Specifies the profile from which this profile inherits settings.\nWhen creating a new profile, if this parameter is not specified, the default is the system-supplied C(fastL4) profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "pva_acceleration": {
          "aliases": [],
          "description": "Specifies the Packet Velocity ASIC acceleration policy.",
          "type": "str",
          "required": false,
          "choices": [
            "full",
            "dedicated",
            "partial",
            "none"
          ],
          "version_added": "1.3.0",
          "suboptions": {}
        },
        "reassemble_fragments": {
          "aliases": [],
          "description": "When C(yes), specifies the system reassembles IP fragments.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "receive_window_size": {
          "aliases": [],
          "description": "Specifies the amount of data the BIG-IP system can accept without acknowledging the server.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "reset_on_timeout": {
          "aliases": [],
          "description": "When C(yes), specifies the system sends a reset packet (RST) in addition to deleting the connection, when a connection exceeds the idle timeout value.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "rtt_from_client": {
          "aliases": [],
          "description": "When C(yes), specifies the system uses TCP timestamp options to measure the round-trip time to the client.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "rtt_from_server": {
          "aliases": [],
          "description": "When C(yes), specifies the system uses TCP timestamp options to measure the round-trip time to the server.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "server_sack": {
          "aliases": [],
          "description": "Specifies whether the BIG-IP system processes Selective ACK (Sack) packets in cookie responses from the server.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "server_timestamp": {
          "aliases": [],
          "description": "Specifies whether the BIG-IP system processes timestamp request packets in cookie responses from the server.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the profile exists.\nWhen C(absent), ensures the profile is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "syn_cookie_enable": {
          "aliases": [],
          "description": "Specifies whether or not to use SYN Cookie.",
          "type": "bool",
          "required": false,
          "version_added": "1.11.0",
          "suboptions": {}
        },
        "syn_cookie_mss": {
          "aliases": [],
          "description": "Specifies a value that overrides the SYN cookie maximum segment size (MSS) value in the SYN-ACK packet that is returned to the client.\nValid values are 0, and values from 256 through 9162.\nParameter only available on TMOS 13.0.0 and higher.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "tcp_close_timeout": {
          "aliases": [],
          "description": "Specifies the length of time a connection can remain idle before deletion.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tcp_generate_isn": {
          "aliases": [],
          "description": "When C(yes), specifies the system generates initial sequence numbers for SYN packets, according to RFC 1948.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "tcp_handshake_timeout": {
          "aliases": [],
          "description": "Specifies the acceptable duration for a TCP handshake (the maximum idle time between a client synchronization (SYN) and a client acknowledgment (ACK)). If the TCP handshake takes longer than the timeout, the system automatically closes the connection.\nWhen a number, specifies how long the system can try to establish a TCP handshake before timing out.\nWhen C(disabled), specifies the system does not apply a timeout to a TCP handshake.\nWhen C(indefinite), specifies attempting a TCP handshake never times out.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tcp_strip_sack": {
          "aliases": [],
          "description": "When C(yes), specifies the system blocks a TCP selective ACK SackOK option from passing to the server on an initiating SYN.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "tcp_time_wait_timeout": {
          "aliases": [],
          "description": "Specifies the number of milliseconds a connection is in the TIME-WAIT state before closing.\nThis parameter is only available on TMOS 13.0.0 and later.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "tcp_timestamp_mode": {
          "aliases": [],
          "description": "Specifies the action the system should take on TCP timestamps.",
          "type": "str",
          "required": false,
          "choices": [
            "preserve",
            "rewrite",
            "strip"
          ],
          "suboptions": {}
        },
        "tcp_wscale_mode": {
          "aliases": [],
          "description": "Specifies the action the system should take on TCP windows.",
          "type": "str",
          "required": false,
          "choices": [
            "preserve",
            "rewrite",
            "strip"
          ],
          "suboptions": {}
        },
        "timeout_recovery": {
          "aliases": [],
          "description": "Specifies how to handle client-timeout errors for Late Binding.\nTimeout errors may be caused by a DoS attack or a lossy connection.\nWhen C(disconnect), causes the BIG-IP system to drop the connection.\nWhen C(fallback), reverts the connection to normal FastL4 load-balancing, based on the client's TCP header. This causes the BIG-IP system to choose a back-end server based only on the source address and port.",
          "type": "str",
          "required": false,
          "choices": [
            "disconnect",
            "fallback"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages Fast L4 profiles",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a fastL4 profile\n  bigip_profile_fastl4:\n    name: foo\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_profile_ftp": {
    "doc": {
      "description": "Manages FTP profiles on the BIG-IP system.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "allow_ftps": {
          "aliases": [],
          "description": "Allows explicit FTPS negotiation.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "inherit_parent_profile": {
          "aliases": [],
          "description": "Enables the FTP data channel to inherit the TCP profile used by the control channel.\nWhen C(no), the data channel uses FastL4 (BigProto) only.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "log_profile": {
          "aliases": [],
          "description": "Configures the ALG log profile that controls logging.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_publisher": {
          "aliases": [],
          "description": "Configures the log publisher that handles events logging for this profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "Specifies the profile from which this profile inherits settings.\nWhen creating a new profile, if this parameter is not specified, the default is the system-supplied C(ftp) profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Specifies a service for the data channel port used for this FTP profile.\nValid range of values is between C(0) and C(65535) inclusive.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "security": {
          "aliases": [],
          "description": "Enables secure FTP traffic for the BIG-IP Application Security Manager.\nThis option can only be used if the system is licensed for the BIG-IP ASM.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(state) is C(present), ensures the ftp profile exists.\nWhen C(state) is C(absent), ensures the ftp profile is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "translate_extended": {
          "aliases": [],
          "description": "Translates RFC 2428 extended requests C(EPSV) and C(EPRT) to C(PASV) and C(PORT) when communicating with IPv4 servers.\nThis option can only be used if the system is licensed for the BIG-IP Application Security Manager (ASM).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages FTP profiles",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create an ftp profile\n  bigip_profile_ftp:\n    name: foo\n    parent: /Common/barfoo\n    port: 2221\n    allow_ftps: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Modify an ftp profile\n  bigip_profile_ftp:\n    name: foo\n    log_profile: /Common/alg_log\n    log_publisher: /Common/foo_publisher\n    security: yes\n    description: my description\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove an ftp profile\n  bigip_profile_ftp:\n    name: foo\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_profile_http": {
    "doc": {
      "description": "Manage HTTP profiles on a BIG-IP device.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "accept_xff": {
          "aliases": [],
          "description": "Enables or disables trusting the client IP address, and statistics from the client IP address, based on the request's XFF (X-forwarded-for) headers, if they exist.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dns_resolver": {
          "aliases": [],
          "description": "Specifies the name of a configured DNS resolver, this option is mandatory when C(proxy_type) is set to C(explicit).\nFormat of the name can be either be prepended by partition (C(/Common/foo)), or specified just as an object name (C(foo)).\nTo remove the entry, you can set a value of C(none) or C(''), however the profile C(proxy_type) must not be set as C(explicit).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "encrypt_cookie_secret": {
          "aliases": [],
          "description": "Passphrase for cookie encryption.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "encrypt_cookies": {
          "aliases": [],
          "description": "Cookie names for the system to encrypt.\nTo remove the entry completely, set a value of C(none) or C('').\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "enforcement": {
          "aliases": [],
          "description": "Specifies protocol enforcement settings for the HTTP profile.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "excess_client_headers": {
              "aliases": [],
              "description": "Specifies the behavior when too many client headers are received.\nIf set to C(pass-through), it switches to pass-through mode, when C(reject), the connection is rejected.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
              "type": "str",
              "required": false,
              "choices": [
                "reject",
                "pass-through"
              ],
              "suboptions": {}
            },
            "excess_server_headers": {
              "aliases": [],
              "description": "Specifies the behavior when too many server headers are received.\nIf set to C(pass-through), it switches to pass-through mode, when C(reject) the connection is rejected.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
              "type": "str",
              "required": false,
              "choices": [
                "reject",
                "pass-through"
              ],
              "suboptions": {}
            },
            "known_methods": {
              "aliases": [],
              "description": "Specifies which HTTP methods count as being known, removing RFC-defined methods from this list will cause the HTTP filter to not recognize them.\nThe default list provided with the system include: C(CONNECT), C(DELETE), C(GET), C(HEAD), C(LOCK), C(OPTIONS), C(POST), C(PROPFIND), C(PUT), C(TRACE) ,C(UNLOCK). The list can be appended by by specifying the C(default) keyword as one of the list elements.\nThe C(default) keyword can also be used to restore the default C(known_methods) on the system.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "max_header_count": {
              "aliases": [],
              "description": "Specifies the maximum number of headers allowed in HTTP request/response.\nThe valid value range is between 16 and 4096 inclusive.\nWhen set to C(default), the value is C(64).\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "max_header_size": {
              "aliases": [],
              "description": "Specifies the maximum header size specified in bytes.\nThe valid value range is between 0 and 4294967295 inclusive.\nWhen set to C(default), the value is C(32768) bytes\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "max_requests": {
              "aliases": [],
              "description": "Specifies the number of requests the system accepts on a per-connection basis.\nThe valid value range is between 0 and 4294967295 inclusive.\nWhen set to C(default), the value is C(0), which means the system will not limit the number of requests per connection.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "oversize_client_headers": {
              "aliases": [],
              "description": "Specifies the behavior when too-large client headers are received.\nIf set to C(pass-through),it switches to pass-through mode, when C(reject) the connection is rejected.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
              "type": "str",
              "required": false,
              "choices": [
                "reject",
                "pass-through"
              ],
              "suboptions": {}
            },
            "oversize_server_headers": {
              "aliases": [],
              "description": "Specifies the behavior when too-large server headers are received.\nIf set to C(pass-through), it switches to pass-through mode, when C(reject) the connection is rejected.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
              "type": "str",
              "required": false,
              "choices": [
                "reject",
                "pass-through"
              ],
              "suboptions": {}
            },
            "pipeline": {
              "aliases": [],
              "description": "Enables HTTP/1.1 pipelining, allowing clients to make requests even when prior requests have not received a response.\nIn order for this to succeed, destination servers must include support for pipelining.\nIf set to C(pass-through), pipelined data causes the BIG-IP to immediately switch to pass-through mode and disable the HTTP filter.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
              "type": "str",
              "required": false,
              "choices": [
                "allow",
                "reject",
                "pass-through"
              ],
              "suboptions": {}
            },
            "truncated_redirects": {
              "aliases": [],
              "description": "Specifies what happens if a truncated redirect is seen from a server.\nIf C(yes), the redirect is forwarded to the client, otherwise the malformed HTTP is silently ignored.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "unknown_method": {
              "aliases": [],
              "description": "Specifies whether to allow, reject or switch to pass-through mode when an unknown HTTP method is parsed.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
              "type": "str",
              "required": false,
              "choices": [
                "allow",
                "reject",
                "pass-through"
              ],
              "suboptions": {}
            }
          }
        },
        "fallback_host": {
          "aliases": [],
          "description": "Specifies an HTTP fallback host.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fallback_status_codes": {
          "aliases": [],
          "description": "Specifies one or more HTTP error codes from server responses that should trigger a redirection to the fallback host.\nThe accepted valid error codes are as defined by RFC2616.\nThe codes can be specified as individual items or as valid ranges, for example C(400-417) or C(500-505).\nMixing response code range across error types is invalid, for example defining C(400-505) will raise an error.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "header_erase": {
          "aliases": [],
          "description": "The name of a header in an HTTP request, which the system removes from request.\nTo remove the entry completely, set a value of C(none) or C('').\nThe format of the header must be in C(KEY:VALUE) format, otherwise an error occurs.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "header_insert": {
          "aliases": [],
          "description": "A string the system inserts as a header in an HTTP request.\nTo remove the entry completely, set a value of C(none) or C('').\nThe format of the header must be in C(KEY:VALUE) format, otherwise an error occurs.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "hsts_mode": {
          "aliases": [],
          "description": "When set to C(yes), enables the HSTS settings.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "include_subdomains": {
          "aliases": [],
          "description": "When set to C(yes), applies the HSTS policy to the HSTS host and its sub-domains.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "insert_xforwarded_for": {
          "aliases": [],
          "description": "Specifies the system inserts an X-Forwarded-For header in an HTTP request with the client IP address, to use with connection pooling.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "maximum_age": {
          "aliases": [],
          "description": "Specifies the maximum length of time, in seconds, that HSTS functionality requests clients only use HTTPS to connect to the current host and any sub-domains of the current host's domain name.\nThe accepted value range is C(0 - 4294967295) seconds. A value of C(0) seconds re-enables plaintext HTTP access, while specifying C(indefinite) sets it to the maximum value.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "oneconnect_transformations": {
          "aliases": [],
          "description": "Enables the system to perform HTTP header transformations for keeping server-side connections open. This feature requires a OneConnect profile.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "Specifies the profile from which this profile inherits settings.\nWhen creating a new profile, if this parameter is not specified, the default is the system-supplied C(http) profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "proxy_type": {
          "aliases": [],
          "description": "Specifies the proxy mode for the profile.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "str",
          "required": false,
          "choices": [
            "reverse",
            "transparent",
            "explicit"
          ],
          "suboptions": {}
        },
        "redirect_rewrite": {
          "aliases": [],
          "description": "Specifies whether the system rewrites the URIs that are part of HTTP redirect (3XX) responses.\nWhen set to C(none), the system will not rewrite the URI in any HTTP redirect responses.\nWhen set to C(all), the system rewrites the URI in all HTTP redirect responses.\nWhen set to C(matching), the system rewrites the URI in any HTTP redirect responses that match the request URI.\nWhen set to C(nodes), if the URI contains a node IP address instead of a host name, the system changes it to the virtual server address.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "str",
          "required": false,
          "choices": [
            "none",
            "all",
            "matching",
            "nodes"
          ],
          "suboptions": {}
        },
        "request_chunking": {
          "aliases": [],
          "description": "Specifies how to handle chunked and unchunked requests.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "str",
          "required": false,
          "choices": [
            "rechunk",
            "selective",
            "preserve",
            "sustain",
            "unchunk"
          ],
          "suboptions": {}
        },
        "response_chunking": {
          "aliases": [],
          "description": "Specifies how to handle chunked and unchunked responses.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "str",
          "required": false,
          "choices": [
            "rechunk",
            "selective",
            "preserve",
            "sustain",
            "unchunk"
          ],
          "suboptions": {}
        },
        "server_agent_name": {
          "aliases": [],
          "description": "Specifies the string used as the server name in traffic generated by BIG-IP.\nTo remove the entry completely, set a value of C(none) or C('').\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sflow": {
          "aliases": [],
          "description": "Specifies sFlow settings for the HTTP profile.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "poll_interval": {
              "aliases": [],
              "description": "Specifies the maximum interval in seconds between two pollings.\nThe valid value range is between 0 and 4294967295 seconds inclusive.\nFor this setting to take effect the C(poll_interval_global) parameter must be set to C(no).\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "poll_interval_global": {
              "aliases": [],
              "description": "Specifies whether the global HTTP poll-interval setting overrides the object-level C(poll-interval) setting.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "sampling_rate": {
              "aliases": [],
              "description": "Specifies the ratio of packets observed to the samples generated. For example, a sampling rate of C(2000) specifies 1 sample will be randomly generated for every 2000 packets observed.\nThe valid value range is between 0 and 4294967295 packets inclusive.\nFor this setting to take effect the C(sampling_rate_global) parameter must be set to C(no).\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "sampling_rate_global": {
              "aliases": [],
              "description": "Specifies whether the global HTTP sampling-rate setting overrides the object-level sampling-rate setting.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the profile exists.\nWhen C(absent), ensures the profile is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "C(always) will update passwords if the C(encrypt_cookie_secret) is specified.\nC(on_create) will only set the password for newly created profiles.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_create"
          ],
          "suboptions": {}
        },
        "xff_alternative_names": {
          "aliases": [],
          "description": "Specifies alternative XFF headers instead of the default X-forwarded-for header.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "short_description": "Manage HTTP profiles on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create HTTP profile\n  bigip_profile_http:\n    name: my_profile\n    insert_xforwarded_for: yes\n    redirect_rewrite: all\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Remove HTTP profile\n  bigip_profile_http:\n    name: my_profile\n    state: absent\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add HTTP profile for transparent proxy\n  bigip_profile_http:\n    name: my_profile\n    proxy_type: transparent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_profile_http2": {
    "doc": {
      "description": "Manage HTTP2 profiles on a BIG-IP system.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "activation_modes": {
          "aliases": [],
          "description": "Specifies what will cause an incoming connection to be handled as a HTTP/2 connection.\nThe C(alpn) and C(always) are mutually exclusive.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "list",
          "required": false,
          "choices": [
            "alpn",
            "always"
          ],
          "elements": "str",
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enforce_tls_requirements": {
          "aliases": [],
          "description": "Specifies whether the system requires TLS for communications between specified senders and recipients.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "frame_size": {
          "aliases": [],
          "description": "Specifies the size of data frames, in bytes, that HTTP/2 sends to the client.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.\nThe valid value range in bytes is C(1024 - 16384).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "header_table_size": {
          "aliases": [],
          "description": "Specifies the size of the header table, in bytes.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.\nThe valid value range in bytes is C(0 - 65535).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "idle_timeout": {
          "aliases": [],
          "description": "Specifies the number of seconds an HTTP/2 connection is idly left open before being shut down.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "insert_header": {
          "aliases": [],
          "description": "Specifies whether an HTTP header indicating the use of HTTP/2 should be inserted into the request that goes to the server.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "insert_header_name": {
          "aliases": [],
          "description": "Specifies the name of the HTTP header controlled by C(insert_header) parameter.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "Specifies the profile from which this profile inherits settings.\nWhen creating a new profile, if this parameter is not specified, the default is the system-supplied C(http2) profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "receive_window": {
          "aliases": [],
          "description": "Specifies the way the HTTP/2 profile performs flow control.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.\nThe valid value range in kilobytes is C(16 - 128).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the profile exists.\nWhen C(absent), ensures the profile is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "streams": {
          "aliases": [],
          "description": "Specifies the number of outstanding concurrent requests allowed on a single HTTP/2 connection.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.\nThe valid value range is C(1 - 256).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "write_size": {
          "aliases": [],
          "description": "Specifies the total size of combined data frames, in bytes, that HTTP/2 sends in a single write.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.\nThe valid value range in bytes is C(2048 - 32768).",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage HTTP2 profiles on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create HTTP2 profile\n  bigip_profile_http2:\n    name: my_profile\n    insert_header: yes\n    insert_header_name: FOO\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Remove HTTP profile\n  bigip_profile_http2:\n    name: my_profile\n    state: absent\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add HTTP profile set activation modes\n  bigip_profile_http:\n    name: my_profile\n    activation_modes:\n      - always\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_profile_http_compression": {
    "doc": {
      "description": "Manage HTTP compression profiles on a BIG-IP device.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "buffer_size": {
          "aliases": [],
          "description": "Maximum number of compressed bytes the system buffers before inserting a Content-Length header (which specifies the compressed size) into the response.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the HTTP compression profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "gzip_level": {
          "aliases": [],
          "description": "Specifies the degree to which the system compresses the content.\nHigher compression levels cause the compression process to be slower.\nValid values are between 1 (least compression and fastest) to 9 (most compression and slowest).",
          "type": "int",
          "required": false,
          "choices": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9"
          ],
          "suboptions": {}
        },
        "gzip_memory_level": {
          "aliases": [],
          "description": "Number of kilobytes of memory the system uses for internal compression buffers when compressing a server response.",
          "type": "int",
          "required": false,
          "choices": [
            "1",
            "2",
            "4",
            "8",
            "16",
            "32",
            "64",
            "128",
            "256"
          ],
          "suboptions": {}
        },
        "gzip_window_size": {
          "aliases": [],
          "description": "Number of kilobytes in the window size the system uses when compressing a server response.",
          "type": "int",
          "required": false,
          "choices": [
            "1",
            "2",
            "4",
            "8",
            "16",
            "32",
            "64",
            "128"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the compression profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "Specifies the profile from which this profile inherits settings.\nWhen creating a new profile, if this parameter is not specified, the default is the system-supplied C(httpcompression) profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the profile exists.\nWhen C(absent), ensures the profile is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage HTTP compression profiles on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create an HTTP compression profile\n  bigip_profile_http_compression:\n    name: profile1\n    description: Custom HTTP Compression Profile\n    buffer_size: 131072\n    gzip_level: 6\n    gzip_memory_level: 16k\n    gzip_window_size: 64k\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_profile_oneconnect": {
    "doc": {
      "description": "Manage OneConnect profiles on a BIG-IP system.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "Description of the profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "idle_timeout_override": {
          "aliases": [],
          "description": "Specifies the number of seconds a connection is idle before the connection flow is eligible for deletion.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.\nYou may specify a number of seconds for the timeout override.\nWhen C(disabled), specifies there is no timeout override for the connection.\nWhen C(indefinite), specifies a connection may be idle with no timeout override.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "limit_type": {
          "aliases": [],
          "description": "When C(none), simultaneous in-flight requests and responses over TCP connections to a pool member are counted toward the limit. This is the historical behavior.\nWhen C(idle), idle connections will be dropped as the TCP connection limit is reached. For short intervals, during the overlap of the idle connection being dropped and the new connection being established, the TCP connection limit may be exceeded.\nWhen C(strict), the TCP connection limit is honored with no exceptions. This means that idle connections will prevent new TCP connections from being made until they expire, even if they could otherwise be reused.\nC(strict) is not a recommended configuration except in very special cases with short expiration timeouts.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "str",
          "required": false,
          "choices": [
            "none",
            "idle",
            "strict"
          ],
          "suboptions": {}
        },
        "maximum_age": {
          "aliases": [],
          "description": "Specifies the maximum number of seconds allowed for a connection in the connection reuse pool.\nFor any connection with an age higher than this value, the system removes that connection from the re-use pool.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "maximum_reuse": {
          "aliases": [],
          "description": "Specifies the maximum number of times that a server-side connection can be reused.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "maximum_size": {
          "aliases": [],
          "description": "Specifies the maximum number of connections the system holds in the connection reuse pool.\nIf the pool is already full, a server-side connection closes after the response is completed.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the OneConnect profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "Specifies the profile from which this profile inherits settings.\nWhen creating a new profile, if this parameter is not specified, the default is the system-supplied C(oneconnect) profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "share_pools": {
          "aliases": [],
          "description": "Indicates connections may be shared not only within a virtual server, but also among similar virtual servers.\nWhen C(yes), all virtual servers that use the same OneConnect and other internal network profiles can share connections.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "source_mask": {
          "aliases": [],
          "description": "Specifies a value the system applies to the source address to determine its eligibility for reuse.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.\nThe system applies the value of this setting to the server-side source address to determine its eligibility for reuse.\nA mask of C(0) causes the system to share reused connections across all source addresses. A host mask of C(32) causes the system to share only those reused connections originating from the same source address.\nWhen you are using a SNAT or SNAT pool, the server-side source address is translated first and then the OneConnect mask is applied to the translated address.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the profile exists.\nWhen C(absent), ensures the profile is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage OneConnect profiles on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a OneConnect profile\n  bigip_profile_oneconnect:\n    name: foo\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_profile_persistence_cookie": {
    "doc": {
      "description": "Manage cookie persistence profiles on BIG-IP system.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "always_send": {
          "aliases": [],
          "description": "Sends the cookie persistence entry on every reply, even if the entry has previously been supplied to the client.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "cookie_encryption": {
          "aliases": [],
          "description": "Specifies the way in which the cookie encryption format is used.\nWhen C(disabled), generates the cookie format unencrypted.\nWhen C(preferred), generates an encrypted cookie, but accepts both encrypted and unencrypted formats.\nWhen C(required), cookie format must be encrypted.",
          "type": "str",
          "required": false,
          "choices": [
            "disabled",
            "preferred",
            "required"
          ],
          "suboptions": {}
        },
        "cookie_method": {
          "aliases": [],
          "description": "Specifies the type of cookie processing the system uses.\nWhen C(hash), specifies the server provides the cookie, which the system then maps consistently to a specific node. This persistence type requires a C(cookie_name) value.\nWhen C(insert), specifies the system inserts server information, in the form of a cookie, into the header of the server response.\nWhen C(passive), specifies the server provides the cookie, formatted with the correct server information and timeout. This persistence type requires a C(cookie_name) value.\nWhen C(rewrite), specifies the system intercepts the BIGipCookie header, sent from the server, and overwrites the name and value of that cookie.",
          "type": "str",
          "required": false,
          "choices": [
            "hash",
            "insert",
            "passive",
            "rewrite"
          ],
          "suboptions": {}
        },
        "cookie_name": {
          "aliases": [],
          "description": "Specifies a unique name for the cookie.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "encrypt_cookie_pool_name": {
          "aliases": [],
          "description": "Specifies whether the pool-name in the inserted BIG-IP default cookie should be encrypted.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "encryption_passphrase": {
          "aliases": [],
          "description": "Specifies a passphrase to be used for cookie encryption.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "expiration": {
          "aliases": [],
          "description": "Specifies the expiration time of the cookie. By default the system generates and uses a session cookie. This cookie expires when the user session expires (when the browser is closed).",
          "type": "dict",
          "required": false,
          "suboptions": {
            "days": {
              "aliases": [],
              "description": "Cookie expiration time in days. The value must be in range from C(0) to C(24855) days.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "hours": {
              "aliases": [],
              "description": "Cookie expiration time in hours. The value must be in the range from C(0) to C(23) hours.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "minutes": {
              "aliases": [],
              "description": "Cookie expiration time in minutes. The value must be in the range from C(0) to C(59) minutes.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "seconds": {
              "aliases": [],
              "description": "Cookie expiration time in seconds. The value must be in the range from C(0) to C(59) seconds.",
              "default": "0",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "http_only": {
          "aliases": [],
          "description": "Specifies whether the httponly attribute should be enabled or disabled for the inserted cookies.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "match_across_pools": {
          "aliases": [],
          "description": "When C(yes), specifies the system can use any pool that contains this persistence record.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "match_across_services": {
          "aliases": [],
          "description": "When C(yes), specifies all persistent connections from a client IP address that go to the same virtual IP address also go to the same node.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "match_across_virtuals": {
          "aliases": [],
          "description": "When C(yes), specifies all persistent connections from the same client IP address go to the same node.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "override_connection_limit": {
          "aliases": [],
          "description": "When C(yes), specifies the system allows you to specify that pool member connection limits will be overridden for persisted clients.\nPer-virtual connection limits remain hard limits and are not overridden.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "Specifies the profile from which this profile inherits settings.\nWhen creating a new profile, if this parameter is not specified, the default is the system-supplied C(cookie) profile.",
          "default": "cookie",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "secure": {
          "aliases": [],
          "description": "Specifies whether the secure attribute should be enabled or disabled for the inserted cookies.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the profile exists.\nWhen C(absent), ensures the profile is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "C(always) will allow updating passphrases if the user chooses to do so. C(on_create) will only set the passphrase for newly created profiles.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_create"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage cookie persistence profiles on BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a persistence cookie profile\n  bigip_profile_persistence_cookie:\n    name: foo\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n- name: Create a persistence cookie profile with expiration time\n  bigip_profile_persistence_cookie:\n    name: foo\n    expiration:\n      days: 7\n      hours: 12\n      minutes: 30\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_profile_persistence_src_addr": {
    "doc": {
      "description": "Manages source address persistence profiles on a BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "entry_timeout": {
          "aliases": [],
          "description": "Specifies the duration of the persistence entries.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.\nTo specify an indefinite timeout, use the value C(indefinite).\nIf specifying a numeric timeout, the value must be between C(1) and C(4294967295).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "hash_algorithm": {
          "aliases": [],
          "description": "Specifies the algorithm the system uses for hash persistence load balancing. The hash result is the input for the algorithm.\nWhen C(default), specifies the system uses the index of pool members to obtain the hash result for the input to the algorithm.\nWhen C(carp), specifies the system uses the Cache Array Routing Protocol (CARP) to obtain the hash result for the input to the algorithm.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "str",
          "required": false,
          "choices": [
            "default",
            "carp"
          ],
          "suboptions": {}
        },
        "mask": {
          "aliases": [],
          "description": "Specifies a value the system applies as the prefix length.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "match_across_pools": {
          "aliases": [],
          "description": "When C(yes), specifies the system can use any pool that contains this persistence record.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "match_across_services": {
          "aliases": [],
          "description": "When C(yes), specifies all persistent connections from a client IP address that go to the same virtual IP address also go to the same node.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "match_across_virtuals": {
          "aliases": [],
          "description": "When C(yes), specifies all persistent connections from the same client IP address go to the same node.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "mirror": {
          "aliases": [],
          "description": "When C(yes), specifies that if the active unit goes into the standby mode, the system mirrors any persistence records to its peer.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "override_connection_limit": {
          "aliases": [],
          "description": "When C(yes), specifies the system allows you to specify that pool member connection limits will be overridden for persisted clients.\nPer-virtual connection limits remain hard limits and are not overridden.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "Specifies the profile from which this profile inherits settings.\nWhen creating a new profile, if this parameter is not specified, the default is the system-supplied C(source_addr) profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the profile exists.\nWhen C(absent), ensures the profile is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage source address persistence profiles",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a profile\n  bigip_profile_persistence_src_addr:\n    name: foo\n    state: present\n    hash_algorithm: carp\n    match_across_services: yes\n    match_across_virtuals: yes\n    mirror: yes\n    mask: 255.255.255.255\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_profile_persistence_universal": {
    "doc": {
      "description": "Manages universal persistence profiles on the BIG-IP system.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "app_service": {
          "aliases": [],
          "description": "The iApp service to be associated with this profile. When no service is specified, the default is None.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "match_across_pools": {
          "aliases": [],
          "description": "When C(yes), specifies the system can use any pool that contains this persistence record.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "match_across_services": {
          "aliases": [],
          "description": "When C(yes), specifies all persistent connections from a client IP address that go to the same virtual IP address also go to the same node.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "match_across_virtuals": {
          "aliases": [],
          "description": "When C(yes), specifies all persistent connections from the same client IP address go to the same node.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "mirror": {
          "aliases": [],
          "description": "When C(yes), specifies if the active unit goes into the standby mode, the system mirrors any persistence records to its peer.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "override_connection_limit": {
          "aliases": [],
          "description": "When C(yes), specifies the system allows you to specify that pool member connection limits will be overridden for persisted clients.\nPer-virtual connection limits remain hard limits and are not overridden.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "Specifies the profile from which this profile inherits settings.\nWhen creating a new profile, if this parameter is not specified, the default is the system-supplied C(universal) profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rule": {
          "aliases": [],
          "description": "Specifies the iRule used to select a persistence entry.\nWhen creating a new profile, if this parameter is not specified, the default is C(None), which disables this setting.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the profile exists.\nWhen C(absent), ensures the profile is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "Specifies the duration of the persistence entries.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.\nTo specify an indefinite timeout, use the value C(indefinite).\nIf specifying a numeric timeout, the value must be between C(1) and C(4294967295).",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage universal persistence profiles",
      "version_added": "1.1.0"
    },
    "examples": "\n- name: Create a profile\n  bigip_profile_persistence_universal:\n    name: foo\n    state: present\n    match_across_services: yes\n    match_across_virtuals: yes\n    mirror: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_profile_server_ssl": {
    "doc": {
      "description": "Manages server SSL profiles on a BIG-IP system.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "certificate": {
          "aliases": [],
          "description": "Specifies the name of the certificate the system uses for server-side SSL processing.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "chain": {
          "aliases": [],
          "description": "Specifies the certificates-key chain to associate with the SSL profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cipher_group": {
          "aliases": [],
          "description": "Specifies the cipher group to assign to this profile.\nWhen the C(ciphers) parameter is in use, the C(cipher_group) must be set to either C(none) or C('').\nWhen creating a new profile with C(cipher_group), if the parent profile has C(ciphers) set by default, the C(cipher) parameter must be set to C(none) or C('') during creation.\nThe parameter only works on TMOS version 13.x and later.",
          "type": "str",
          "required": false,
          "version_added": "1.12.0",
          "suboptions": {}
        },
        "ciphers": {
          "aliases": [],
          "description": "Specifies the list of ciphers the system supports. When creating a new profile, the default cipher list is provided by the parent profile.\nWhen the C(cipher_group) parameter is in use, the C(ciphers) parameter needs to be set to either C(none) or C('').",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key": {
          "aliases": [],
          "description": "Specifies the file name of the SSL key.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ocsp_profile": {
          "aliases": [],
          "description": "Specifies the name of the OCSP profile for purpose of validating the status of server certificate.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed.",
          "default": "/Common/serverssl",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "passphrase": {
          "aliases": [],
          "description": "Specifies a passphrase used to encrypt the key.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "renegotiation": {
          "aliases": [],
          "description": "Enables or disables SSL renegotiation.\nWhen creating a new profile, the setting is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "secure_renegotiation": {
          "aliases": [],
          "description": "Specifies the method of secure renegotiations for SSL connections. When creating a new profile, the setting is provided by the parent profile.\nWhen C(request) is set, the system requests secure renegotation of SSL connections.\nC(require) is a default setting and when set, the system permits initial SSL handshakes from clients but terminates renegotiations from unpatched clients.\nWith the C(require-strict) setting, the system requires strict renegotiation of SSL connections. In this mode the system refuses connections to insecure servers, and terminates existing SSL connections to insecure servers.",
          "type": "str",
          "required": false,
          "choices": [
            "require",
            "require-strict",
            "request"
          ],
          "suboptions": {}
        },
        "server_certificate": {
          "aliases": [],
          "description": "Specifies the way the system handles server certificates.\nWhen C(ignore), specifies the system ignores certificates from server systems.\nWhen C(require), specifies the system requires a server to present a valid certificate.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "require"
          ],
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "Specifies the fully qualified DNS hostname of the server used in Server Name Indication communications. When creating a new profile, the setting is provided by the parent profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sni_default": {
          "aliases": [],
          "description": "Indicates the system uses this profile as the default SSL profile when there is no match to the server name, or when the client provides no SNI extension support.\nWhen creating a new profile, the setting is provided by the parent profile.\nThere can be only one SSL profile with this setting enabled.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "sni_require": {
          "aliases": [],
          "description": "Requires the network peers also provide SNI support. This setting only takes effect when C(sni_default) is C(yes).\nWhen creating a new profile, the setting is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the profile exists.\nWhen C(absent), ensures the profile is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "C(always) allows users to update passwords if they choose to do so. C(on_create) only sets the password for newly created profiles.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_create"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages server SSL profiles on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a new server SSL profile\n  bigip_profile_server_ssl:\n    name: foo\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create server SSL profile with specific cipher group\n  bigip_profile_server_ssl:\n    state: present\n    name: foo_group\n    ciphers: \"none\"\n    cipher_group: \"/Common/f5-secure\"\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_profile_sip": {
    "doc": {
      "description": "Manage SIP profiles on a BIG-IP system.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "community": {
          "aliases": [],
          "description": "When the C(dialog_aware) is C(yes) and the configuration requires multiple SIP virtual server-profile pairings, this string value indicates whether the pair belongs to the same SIP proxy functional group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the profile.\nTo remove the entry completely, set a value of C('').",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dialog_aware": {
          "aliases": [],
          "description": "When C(yes), the system gathers SIP dialog information and automatically forwards SIP messages belonging to the known SIP dialog.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_sip_firewall": {
          "aliases": [],
          "description": "Specifies whether the Advanced Firewall Manager (AFM) policy is enabled.\nWhen C(yes), the SIP Security settings configured in the DoS Profile in AFM apply to the virtual servers that use this profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "insert_record_route_header": {
          "aliases": [],
          "description": "When C(yes), inserts a Record-Route SIP header, which indicates the next hop for the following SIP request messages.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "insert_via_header": {
          "aliases": [],
          "description": "When C(yes), inserts a Via header in the forwarded SIP request.\nVia headers indicate the path taken through proxy devices and transports used. The response message uses this routing information.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "log_profile": {
          "aliases": [],
          "description": "Specifies the logging settings the publisher uses to send log messages.\nThe format of the name can be either be prepended by partition (C(/Common/foo)), or specified just as an object name (C(foo)).\nTo remove the entry. set a value of C(''), however the profile C(log_publisher) must also be set as C('').",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_publisher": {
          "aliases": [],
          "description": "Specifies the publisher defined to log messages.\nFormat of the name can be either be prepended by partition (C(/Common/foo)), or specified just as an object name (C(foo)).\nTo remove the entry. set a value of C(''), however the profile C(log_profile) must also be set as C('').",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "max_size": {
          "aliases": [],
          "description": "Specifies the maximum SIP message size that the BIG-IP system accepts.\nThe accepted value range is C(0 - 4294967295) bytes.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the SIP profile to manage.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "Specifies the profile from which this profile inherits settings.\nWhen creating a new profile, if this parameter is not specified, the default is the system-supplied C(sip) profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "secure_via_header": {
          "aliases": [],
          "description": "When checked (enabled), inserts a secure Via header in the forwarded SIP request.\nA secure Via header indicates where the message originated.\nThis parameter causes the inserted Via header to specify Transport Layer Security. For this option to take effect, C(insert_via_header) must be set to (yes).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "security": {
          "aliases": [],
          "description": "When C(yes). enables the use of enhanced Horizontal Security Layer (HSL) security checking.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the profile exists.\nWhen C(absent), ensures the profile is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "terminate_on_bye": {
          "aliases": [],
          "description": "When C(yes), closes a connection when a BYE transaction finishes.\nA BYE transaction is a message an application sends to another application when it is ready to close the connection between the two.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "user_via_header": {
          "aliases": [],
          "description": "When C(insert_via_header) is C(yes), specifies the Via value the system inserts as the top Via header in a SIP REQUEST message.\nThe valid value must include SIP protocol and sent_by settings, for example: C(SIP/2.0/UDP 10.10.10.10:5060).\nTo remove the entry completely, set a value of C('').",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage SIP profiles on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a SIP profile\n  bigip_profile_sip:\n    name: foo\n    parent: sip\n    log_profile: alg_log\n    log_publisher: foo-publisher\n    description: this is a new profile\n    security: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Update SIP profile\n  bigip_profile_sip:\n    name: foo\n    insert_record_route_header: yes\n    enable_sip_firewall: yes\n    insert_via_header: yes\n    user_via_header: \"SIP/2.0/UDP 10.10.10.10:5060\"\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Delete a SIP profile\n  bigip_profile_sip:\n    name: foo\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_profile_tcp": {
    "doc": {
      "description": "Manage TCP profiles on a BIG-IP system. There are many TCP profiles, each with their own adjustments to the standard C(tcp) profile. Users of this module should be aware that many of the available options have no module default. Instead, the default is assigned by the BIG-IP system itself which, in most cases, is acceptable.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "delayed_acks": {
          "aliases": [],
          "description": "When C(yes), the system sends fewer than one ACK segment per data segment received.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "early_retransmit": {
          "aliases": [],
          "description": "When C(yes), the system uses early fast retransmits to reduce the recovery time for connections that are receive-buffer or user-data limited.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "idle_timeout": {
          "aliases": [],
          "description": "Specifies the length of time a connection is idle (has no traffic) before the connection is eligible for deletion.\nWhen creating a new profile, if this parameter is not specified, the remote device will choose a default value appropriate for the profile, based on its C(parent) profile.\nWhen a number is specified, indicates the number of seconds the TCP connection can remain idle before the system deletes it.\nWhen C(0), or C(indefinite), specifies the system does not delete TCP connections regardless of how long they remain idle.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "initial_congestion_window_size": {
          "aliases": [],
          "description": "Specifies the initial congestion window size for connections to this destination. The actual window size is this value multiplied by the MSS for the same connection.\nWhen set to C(0), the system uses the values specified in RFC2414.\nThe valid value range is 0 - 16 inclusive.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "initial_receive_window_size": {
          "aliases": [],
          "description": "Specifies the initial receive window size for connections to this destination. The actual window size is this value multiplied by the MSS for the same connection.\nWhen set to C(0), the system uses the Slow Start value.\nThe valid value range is 0 - 16 inclusive.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip_tos_to_client": {
          "aliases": [],
          "description": "Specifies the L3 Type of Service level the system inserts in TCP packets destined for clients.\nWhen C(pass-through), the IP ToS setting remains unchanged.\nWhen C(mimic), the system sets the ToS level of outgoing packets to the same ToS level of the most-recently received incoming packet.\nWhen set as a number, the number indicates the IP ToS setting the system inserts in the IP packet header. Valid number range is 0 - 255 inclusive.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "nagle": {
          "aliases": [],
          "description": "When C(enabled) the system applies Nagle's algorithm to reduce the number of short segments on the network.\nWhen C(auto), the use of Nagle's algorithm is decided based on network conditions.\nFor interactive protocols such as Telnet, rlogin, or SSH, F5 recommends disabling this setting on high-latency networks, to improve application responsiveness.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "Specifies the profile from which this profile inherits settings.\nWhen creating a new profile, if this parameter is not specified, the default is the system-supplied C(tcp) profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "proxy_options": {
          "aliases": [],
          "description": "When C(yes), the system advertises an option, such as a time-stamp, to the server only if it was negotiated with the client.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the profile exists.\nWhen C(absent), ensures the profile is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "syn_rto_base": {
          "aliases": [],
          "description": "Specifies the initial RTO C(Retransmission TimeOut) base multiplier for SYN retransmission, in C(milliseconds).\nThis value is modified by the exponential backoff table to select the interval for subsequent retransmissions.\nThe valid value range is 0 - 5000 inclusive.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "time_wait_recycle": {
          "aliases": [],
          "description": "Specifies connections in a TIME-WAIT state are reused if a SYN packet (indicating a request for a new connection) is received.\nWhen C(no), connections in a TIME-WAIT state remain unused for a specified length of time.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "time_wait_timeout": {
          "aliases": [],
          "description": "Specifies the number of milliseconds a connection is in the TIME-WAIT state before closing.\nWhen C(immediate), the system closes the connection immediately after the connection enters the TIME-WAIT state.\nWhen C(indefinite) or C(0), the system does not close TCP connections regardless of how long they remain in the TIME-WAIT state.\nThe valid number range is from 0 to 600000 milliseconds.\nWhen creating a new profile, if this parameter is not specified, the default is provided by the parent profile.",
          "type": "str",
          "required": false,
          "version_added": "1.3.0",
          "suboptions": {}
        }
      },
      "short_description": "Manage TCP profiles on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a TCP profile\n  bigip_profile_tcp:\n    name: foo\n    parent: f5-tcp-progressive\n    time_wait_recycle: no\n    idle_timeout: 300\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_profile_udp": {
    "doc": {
      "description": "Manage UDP profiles on a BIG-IP system. There are many UDP profiles, each with their own adjustments to the standard C(udp) profile. Users of this module should be aware that many of the available options have no module default. Instead, the default is assigned by the BIG-IP system itself which, in most cases, is acceptable.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "datagram_load_balancing": {
          "aliases": [],
          "description": "When C(yes), specifies the system load balances UDP traffic packet-by-packet.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "idle_timeout": {
          "aliases": [],
          "description": "Specifies the length of time a connection is idle (has no traffic) before the connection is eligible for deletion.\nWhen creating a new profile, if this parameter is not specified, the remote device will choose a default value appropriate for the profile, based on its C(parent) profile.\nWhen a number is specified, indicates the number of seconds the UDP connection can remain idle before the system deletes it.\nWhen C(indefinite), specifies UDP connections can remain idle indefinitely.\nWhen C(0) or C(immediate), specifies you do not want the UDP connection to remain idle, and it is therefore immediately eligible for deletion.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "Specifies the profile from which this profile inherits settings.\nWhen creating a new profile, if this parameter is not specified, the default is the system-supplied C(udp) profile.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the profile exists.\nWhen C(absent), ensures the profile is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage UDP profiles on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a TCP profile\n  bigip_profile_tcp:\n    name: foo\n    parent: udp\n    idle_timeout: 300\n    datagram_load_balancing: no\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_provision": {
    "doc": {
      "description": "Manage BIG-IP module provisioning. This module will only provision at the standard levels of Dedicated, Nominal, and Minimum.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "level": {
          "aliases": [],
          "description": "Sets the provisioning level for the requested modules. Changing the level for one module may require modifying the level of another module. For example, changing one module to C(dedicated) requires setting all others to C(none). Setting the level of a module to C(none) means the module is not activated.\nUse a C(state) of B(absent) to set c(level) to none and de-provision the module.\nThis parameter is not relevant to C(cgnat - pre tmos 15.0) or C(mgmt) and will not be applied to the C(cgnat - pre tmos 15.0) or C(mgmt) module.",
          "default": "nominal",
          "type": "str",
          "required": false,
          "choices": [
            "dedicated",
            "nominal",
            "minimum"
          ],
          "suboptions": {}
        },
        "memory": {
          "aliases": [],
          "description": "Sets additional memory for the management module. This is in addition to minimum allocated RAM of 1264MB.\nThe accepted value range is C(0 - 8192). Maximum value is restricted by the available RAM in the system.\nSpecifying C(large) reserves an additional 500MB for the mgmt module.\nSpecifying C(medium) reserves an additional 200MB for the mgmt module.\nSpecifying C(small) reserves no additional RAM for the mgmt module.\nUse C(large) for configurations containing more than 2000 objects, or more specifically, for any configuration that exceeds 1000 objects per 2 GB of installed memory. Changing the Management C(mgmt) size after initial provisioning causes a reprovision operation.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "module": {
          "aliases": [
            "name"
          ],
          "description": "The module to provision in BIG-IP.",
          "type": "str",
          "required": true,
          "choices": [
            "am",
            "afm",
            "apm",
            "asm",
            "avr",
            "cgnat",
            "fps",
            "gtm",
            "ilx",
            "lc",
            "ltm",
            "mgmt",
            "pem",
            "sam",
            "sslo",
            "swg",
            "urldb",
            "vcmp"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "The state of the provisioned module on the system. When C(present), guarantees the specified module is provisioned at the requested level, provided there are sufficient resources on the device (such as physical RAM) to support the module.\nWhen C(absent), de-provision the module.\nC(absent), is not a relevent option for the C(mgmt) module, as it can not be de-provisioned.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage BIG-IP module provisioning",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Provision PEM at \"nominal\" level\n  bigip_provision:\n    module: pem\n    level: nominal\n    provider:\n      server: lb.mydomain.com\n      password: secret\n      user: admin\n  delegate_to: localhost\n\n- name: Provision a dedicated SWG. This will unprovision every other module\n  bigip_provision:\n    module: swg\n    level: dedicated\n    provider:\n      server: lb.mydomain.com\n      password: secret\n      user: admin\n  delegate_to: localhost\n\n- name: Provision mgmt with medium amount of memory.\n  bigip_provision:\n    module: mgmt\n    memory: medium\n    provider:\n      server: lb.mydomain.com\n      password: secret\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_qkview": {
    "doc": {
      "description": "Manages creating and downloading QKviews from a BIG-IP. The qkview utility automatically collects configuration and diagnostic information from BIG-IP systems, and combines the data into a QKView file. F5 Support may request you send or upload this QKview to assist in troubleshooting.",
      "has_action": false,
      "notes": "This module does not include the \"max time\" or \"restrict to blade\" options.\nIf you are using this module with either Ansible Tower or Ansible AWX, you should be aware of how these Ansible products execute jobs in restricted environments. More information can be found here https://clouddocs.f5.com/products/orchestration/ansible/devel/usage/module-usage-with-tower.html\nSome longer running tasks might cause the REST interface on BIG-IP to time out, to avoid this adjust the timers as per this KB article https://support.f5.com/csp/article/K94602685\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "asm_request_log": {
          "aliases": [],
          "description": "When C(true), includes ASM request log data. When C(False), excludes ASM request log data.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "complete_information": {
          "aliases": [],
          "description": "Include complete (all applicable) information in the QKview.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "dest": {
          "aliases": [],
          "description": "Destination on your local filesystem where you want to save the QKview.",
          "type": "path",
          "required": true,
          "suboptions": {}
        },
        "exclude": {
          "aliases": [],
          "description": "Exclude various file from the QKview.",
          "type": "list",
          "required": false,
          "choices": [
            "all",
            "audit",
            "secure",
            "bash_history"
          ],
          "elements": "str",
          "suboptions": {}
        },
        "exclude_core": {
          "aliases": [],
          "description": "Exclude core files from the QKview.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "filename": {
          "aliases": [],
          "description": "Name of the QKview file to create on the remote BIG-IP.",
          "default": "localhost.localdomain.qkview",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "If C(no), the file will only be transferred if the destination does not exist.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "max_file_size": {
          "aliases": [],
          "description": "Maximum file size of the QKview file, in bytes. By default, no max file size is specified.",
          "default": "0",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "short_description": "Manage QKviews on the device",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Fetch a qkview from the remote device\n  bigip_qkview:\n    asm_request_log: yes\n    exclude:\n      - audit\n      - secure\n    dest: /tmp/localhost.localdomain.qkview\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_remote_role": {
    "doc": {
      "description": "Manages remote roles on a BIG-IP system. Remote roles are used in situations where user authentication is handled off-box. Local access control to the BIG-IP is controlled by the defined remote role, and authentication (and by extension, assignment to the role) is handled off-box.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "assigned_role": {
          "aliases": [],
          "description": "Specifies the authorization (level of access) for the account.\nWhen creating a new remote role, if this parameter is not provided, the default is C(none).\nThe C(partition_access) parameter controls which partitions the account can access.\nThe role you choose may affect the partitions that one is allowed to specify. Specifically, roles such as C(administrator), C(auditor) and C(resource-administrator) require a C(partition_access) of C(all).\nA set of pre-existing roles ship with the system. They are C(none), C(guest), C(operator), C(application-editor), C(manager), C(certificate-manager), C(irule-manager), C(user-manager), C(resource-administrator), C(auditor), C(administrator), and C(firewall-manager).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "attribute_string": {
          "aliases": [],
          "description": "Specifies the user account attributes saved in the group, in the format C(cn=, ou=, dc=).\nWhen creating a new remote role, this parameter is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "line_order": {
          "aliases": [],
          "description": "Specifies the order of the line in the file C(/config/bigip/auth/remoterole).\nThe LDAP and Active Directory servers read this file line by line.\nThe order of the information is important; therefore, F5 recommends you set the first line at 1000. This allows you to insert lines before the first line in the future.\nWhen creating a new remote role, this parameter is required.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the remote role.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition_access": {
          "aliases": [],
          "description": "Specifies the accessible partitions for the account.\nThis parameter supports the reserved names C(all) and C(Common), as well as specific partitions a user may access.\nUsers who have access to a partition can operate on objects in that partition, as determined by the permissions conferred by the user's C(assigned_role).\nWhen creating a new remote role, if this parameter is not specified, the default is C(all).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "remote_access": {
          "aliases": [],
          "description": "Enables or disables remote access for the specified group of remotely authenticated users.\nWhen creating a new remote role, if this parameter is not specified, the default is C(yes).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), guarantees the remote role exists.\nWhen C(absent), removes the remote role from the system.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "terminal_access": {
          "aliases": [],
          "description": "Specifies terminal-based accessibility for remote accounts not already explicitly assigned a user role.\nCommon values for this include C(tmsh) and C(none), but you can also specify custom values.\nWhen creating a new remote role, if this parameter is not specified, the default is C(none).",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage remote roles on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a remote role\n  bigip_remote_role:\n    name: foo\n    group_name: ldap_group\n    line_order: 1\n    attribute_string: memberOf=cn=ldap_group,cn=ldap.group,ou=ldap\n    remote_access: enabled\n    assigned_role: administrator\n    partition_access: all\n    terminal_access: none\n    state: present\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_remote_syslog": {
    "doc": {
      "description": "Manipulate remote syslog settings on a BIG-IP system.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "local_ip": {
          "aliases": [],
          "description": "Specifies the local IP address of the system that is logging. To provide no local IP, specify the value C(none).\nWhen creating a remote syslog, if this parameter is not specified, the default value is C(none).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the syslog object.\nThis option is required when multiple C(remote_host)s with the same IP or hostname are present on the device.\nIf C(name) is not provided, C(remote_host) is used by default.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "remote_host": {
          "aliases": [],
          "description": "Specifies the IP address or hostname for the remote system, to which the system sends log messages.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "remote_port": {
          "aliases": [],
          "description": "Specifies the port the system uses to send messages to the remote logging server.\nWhen creating a remote syslog, if this parameter is not specified, the default value is C(514).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), guarantees the remote syslog exists with the provided attributes.\nWhen C(absent), removes the remote syslog from the system.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manipulate remote syslog settings on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add a remote syslog server to log to\n  bigip_remote_syslog:\n    remote_host: 10.10.10.10\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Add a remote syslog server on a non-standard port to log to\n  bigip_remote_syslog:\n    remote_host: 10.10.10.10\n    remote_port: 1234\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_remote_user": {
    "doc": {
      "description": "Manages the default settings for remote user accounts on a BIG-IP system.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "console_access": {
          "aliases": [],
          "description": "Enables or disables the default console access for all remote user accounts.\nThe default system value is C(disabled).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "default_partition": {
          "aliases": [],
          "description": "Specifies the default partition for all remote user accounts.\nThe default system value is C(all) for all partitions.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "default_role": {
          "aliases": [],
          "description": "Specifies the default role for all remote user accounts.\nThe default system value is C(no-access).",
          "type": "str",
          "required": false,
          "choices": [
            "acceleration-policy-editor",
            "admin",
            "application-editor",
            "auditor",
            "certificate-manager",
            "firewall-manager",
            "fraud-protection-manager",
            "guest",
            "irule-manager",
            "manager",
            "no-access",
            "operator",
            "resource-admin",
            "user-manager",
            "web-application-security-administrator",
            "web-application-security-editor"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "User-defined description.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "short_description": "Manages default settings for remote user accounts on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Modify default partition and console access\n  bigip_remote_user:\n    default_partition: Common\n    console_access: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Modify default role, partition and console access\n  bigip_remote_user:\n    default_partition: Common\n    default_role: manager\n    console_access: yes\n    description: \"Changed new settings\"\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Revert to default settings\n  bigip_remote_user:\n    default_partition: all\n    default_role: \"no-access\"\n    console_access: no\n    description: \"\"\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_routedomain": {
    "doc": {
      "description": "Manage route domains on a BIG-IP system. A route domain is a BIG-IP configuration object that isolates network traffic for a particular application on the network.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "bwc_policy": {
          "aliases": [],
          "description": "The bandwidth controller for the route domain.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "connection_limit": {
          "aliases": [],
          "description": "The maximum number of concurrent connections allowed for the route domain. Setting this to C(0) turns off connection limits.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Specifies descriptive text that identifies the route domain.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "flow_eviction_policy": {
          "aliases": [],
          "description": "The eviction policy to use with this route domain. Apply an eviction policy to provide customized responses to flow overflows and slow flows on the route domain.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fw_enforced_policy": {
          "aliases": [],
          "description": "Specifies an AFM policy to be attached to route domain.\nTo remove attached AFM policy use C(\"\") or C(none) as values.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "id": {
          "aliases": [],
          "description": "The unique identifying integer representing the route domain.\nThis field is required when creating a new route domain.\nIn version 2.5, this value is no longer used to reference a route domain when making modifications to it (for instance during update and delete operations). Instead, the C(name) parameter is used. In version 2.6, the C(name) value will become a required parameter.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the route domain.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "Specifies the route domain the system searches when it cannot find a route in the configured domain.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Partition on which you want to create the route domain. Partitions cannot be updated once they are created.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "routing_protocol": {
          "aliases": [],
          "description": "Dynamic routing protocols for the system to use in the route domain.",
          "type": "list",
          "required": false,
          "choices": [
            "none",
            "BFD",
            "BGP",
            "IS-IS",
            "OSPFv2",
            "OSPFv3",
            "PIM",
            "RIP",
            "RIPng"
          ],
          "elements": "str",
          "suboptions": {}
        },
        "service_policy": {
          "aliases": [],
          "description": "Service policy to associate with the route domain.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the route domain should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "strict": {
          "aliases": [],
          "description": "Specifies whether the system enforces cross-routing restrictions or not.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vlans": {
          "aliases": [],
          "description": "VLANs for the system to use in the route domain.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "short_description": "Manage route domains on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a route domain\n  bigip_routedomain:\n    name: foo\n    id: 1234\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Set VLANs on the route domain\n  bigip_routedomain:\n    name: bar\n    state: present\n    vlans:\n      - net1\n      - foo\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_selfip": {
    "doc": {
      "description": "Manage Self-IP addresses on a BIG-IP system.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "address": {
          "aliases": [],
          "description": "The IP addresses for the new self IP. This value is ignored upon update as addresses themselves cannot be changed after they are created.\nThis value is required when creating new self IPs.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "allow_service": {
          "aliases": [],
          "description": "Configure port lockdown for the self IP. By default, the self IP has a \"default deny\" policy. This can be changed to allow TCP and UDP ports, as well as specific protocols. This list should contain C(protocol):C(port) values.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the traffic selector.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fw_enforced_policy": {
          "aliases": [],
          "description": "Specifies an AFM policy to attach to Self IP.",
          "type": "str",
          "required": false,
          "version_added": "1.1.0",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the self IP to create.\nIf this parameter is not specified, it defaults to the value supplied in the C(address) parameter.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "netmask": {
          "aliases": [],
          "description": "The netmask for the self IP. When creating a new self IP, this value is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on. You can set different partitions for self IPs, but the address used may not match any other address used by a self IP. Thus, self IPs are not isolated by partitions as other resources on a BIG-IP are.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "route_domain": {
          "aliases": [],
          "description": "The route domain id of the system. When creating a new self IP, if this value is not specified, the default value is C(0).\nThis value cannot be changed after it is set.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), guarantees the self IP exists with the provided attributes.\nWhen C(absent), removes the self IP from the system.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "traffic_group": {
          "aliases": [],
          "description": "The traffic group for the self IP addresses in an active-active, redundant load balancer configuration. When creating a new self IP, if this value is not specified, the default is C(/Common/traffic-group-local-only).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vlan": {
          "aliases": [],
          "description": "The VLAN for the new self IPs. When creating a new self IP, this value is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage Self-IPs on a BIG-IP system",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create Self IP\n  bigip_selfip:\n    address: 10.10.10.10\n    name: self1\n    netmask: 255.255.255.0\n    vlan: vlan1\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create Self IP with a Route Domain\n  bigip_selfip:\n    name: self1\n    address: 10.10.10.10\n    netmask: 255.255.255.0\n    vlan: vlan1\n    route_domain: 10\n    allow_service: default\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Delete Self IP\n  bigip_selfip:\n    name: self1\n    state: absent\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Allow management web UI to be accessed on this Self IP\n  bigip_selfip:\n    name: self1\n    state: absent\n    allow_service:\n      - tcp:443\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Allow HTTPS and SSH access to this Self IP\n  bigip_selfip:\n    name: self1\n    state: absent\n    allow_service:\n      - tcp:443\n      - tcp:22\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Allow all services access to this Self IP\n  bigip_selfip:\n    name: self1\n    state: absent\n    allow_service:\n      - all\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Allow only GRE and IGMP protocols access to this Self IP\n  bigip_selfip:\n    name: self1\n    state: absent\n    allow_service:\n      - gre:0\n      - igmp:0\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Allow all TCP, but no other protocols access to this Self IP\n  bigip_selfip:\n    name: self1\n    state: absent\n    allow_service:\n      - tcp:0\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_service_policy": {
    "doc": {
      "description": "Service policies allow you to configure timers and port misuse rules (if enabled) on a per rule or per context basis.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "Description of the service policy.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the service policy.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port_misuse_policy": {
          "aliases": [],
          "description": "The port misuse policy to attach to the service policy.\nRequires C(afm) (Advanced Firewall Manager) be provisioned to use. If C(afm) is not provisioned, this parameter is ignored.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Whether the resource should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "timer_policy": {
          "aliases": [],
          "description": "The timer policy to attach to the service policy.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages service policies on a BIG-IP.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a service policy\n  bigip_service_policy:\n    name: foo\n    timer_policy: timer1\n    port_misuse_policy: misuse1\n    timer_policy_enabled: yes\n    port_misuse_policy_enabled: yes\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_smtp": {
    "doc": {
      "description": "Allows configuring of the BIG-IP to send mail via an SMTP server by configuring the parameters of an SMTP server.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "authentication": {
          "aliases": [],
          "description": "Credentials can be set on an SMTP server's configuration even if that authentication is not used (for example, staging configs or emergency changes). This parameter acts as a switch to make the specified C(smtp_server_username) and C(smtp_server_password) parameters active or not.\nWhen C(yes), the authentication parameters are active.\nWhen C(no), the authentication parameters are inactive.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "encryption": {
          "aliases": [],
          "description": "Specifies whether the SMTP server requires an encrypted connection in order to send mail.",
          "type": "str",
          "required": false,
          "choices": [
            "none",
            "ssl",
            "tls"
          ],
          "suboptions": {}
        },
        "from_address": {
          "aliases": [],
          "description": "Email address the email is being sent from. This is the \"Reply-to\" address the recipient sees.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "local_host_name": {
          "aliases": [],
          "description": "Hostname used in SMTP headers in the format of a fully qualified domain name. This setting does not refer to the hostname of the BIG-IP system.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the SMTP server configuration.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "smtp_server": {
          "aliases": [],
          "description": "SMTP server host name in the format of a fully qualified domain name.\nThis value is required when creating a new SMTP configuration.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "smtp_server_password": {
          "aliases": [],
          "description": "Password the SMTP server requires when validating a user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "smtp_server_port": {
          "aliases": [],
          "description": "Specifies the SMTP port number.\nWhen creating a new SMTP configuration, the default is C(25) when C(encryption) is C(none) or C(tls). The default is C(465) when C(ssl) is selected.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "smtp_server_username": {
          "aliases": [],
          "description": "User name the SMTP server requires when validating a user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the SMTP configuration exists.\nWhen C(absent), ensures the SMTP configuration does not exist.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "Passwords are stored encrypted, so the module cannot know if the supplied C(smtp_server_password) is the same or different than the existing password. This parameter controls the updating of the C(smtp_server_password) credential.\nWhen C(always), the system always updates the password.\nWhen C(on_create), the system only sets the password for newly created SMTP server configurations.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_create"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages SMTP settings on the BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a base SMTP server configuration\n  bigip_smtp:\n    name: my-smtp\n    smtp_server: 1.1.1.1\n    smtp_server_username: mail-admin\n    smtp_server_password: mail-secret\n    local_host_name: smtp.mydomain.com\n    from_address: no-reply@mydomain.com\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_snat_pool": {
    "doc": {
      "description": "Manage SNAT pools on a BIG-IP system.",
      "has_action": false,
      "notes": "When the C(bigip_snat_pool) object is removed, it also removes any associated C(bigip_snat_translation) objects.\nThis is a BIG-IP behavior not module behavior, and it only occurs when the C(bigip_snat_translation) objects are also not referenced by another C(bigip_snat_pool).\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "An optional description of the SNAT pool.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "members": {
          "aliases": [
            "member"
          ],
          "description": "List of members to put in the SNAT pool. When C(state) is C(present), this parameter is required, otherwise it is optional.\nThe members can be either IP addresses or names of the SNAT translation objects.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the SNAT pool.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Whether the SNAT pool should exist or not.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage SNAT pools on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add the SNAT pool 'my-snat-pool'\n  bigip_snat_pool:\n    name: my-snat-pool\n    state: present\n    members:\n      - 10.10.10.10\n      - 20.20.20.20\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Change the SNAT pool's members to a single member\n  bigip_snat_pool:\n    name: my-snat-pool\n    state: present\n    member: 30.30.30.30\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Remove the SNAT pool 'my-snat-pool'\n  bigip_snat_pool:\n    name: johnd\n    state: absent\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add the SNAT pool 'my-snat-pool' with a description\n  bigip_snat_pool:\n    name: my-snat-pool\n    state: present\n    members:\n      - 10.10.10.10\n      - 20.20.20.20\n    description: A SNAT pool description\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_snat_translation": {
    "doc": {
      "description": "Manage SNAT translations on a BIG-IP system.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "address": {
          "aliases": [
            "ip"
          ],
          "description": "Specifies the IP address of the SNAT translation. When C(state) is C(present), C(enabled), or C(disabled), this parameter is required.\nThis parameter cannot be updated after it is set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "arp": {
          "aliases": [],
          "description": "If C(yes), specifies the NAT sends ARP requests.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "connection_limit": {
          "aliases": [],
          "description": "Specifies a limit on the number of connections a translation address must reach before it no longer initiates a connection. The default value of C(0) indicates the setting is disabled.\nThe accepted value range is C(0 - 65535).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of snat-translation. C(none or '') sets a default description of null.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ip_idle_timeout": {
          "aliases": [],
          "description": "Specifies the amount of time connections to an IP address initiated using a SNAT address are allowed to remain idle before being automatically disconnected. C(indefinite) prevents the connection from timing out.\nThe accepted value range is C(0 - 4294967295) seconds. Specifying C(indefinite) sets it to the maximum value.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of SNAT translation.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.\nRequired with state C(absent) when a partition other than Common is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "The SNAT translation state. If C(absent), deletes the SNAT translation if it exists. C(present) creates the SNAT translation and enables it. If C(enabled), enables the SNAT translation if it exists. If C(disabled), creates the SNAT translation if needed, and sets the state to C(disabled).",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "tcp_idle_timeout": {
          "aliases": [],
          "description": "Specifies the amount of time that TCP connections initiated using a SNAT address are allowed to remain idle before being automatically disconnected. C(indefinite) prevents the connection from timing out.\nThe accepted value range is C(0 - 4294967295) seconds. Specifying C(indefinite) sets it to the maximum value.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "traffic_group": {
          "aliases": [],
          "description": "The traffic group for the snat-translation address. When creating a new address, if this value is not specified, the default is C(/Common/traffic-group-1).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "udp_idle_timeout": {
          "aliases": [],
          "description": "Specifies the amount of time UDP connections initiated using a SNAT address are allowed to remain idle before being automatically disconnected. C(indefinite) prevents the connection from timing out.\nThe accepted value range is C(0 - 4294967295) seconds. Specifying C(indefinite) sets it to the maximum value.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage SNAT translations on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a SNAT translation 'my-snat-translation'\n  bigip_snat_translation:\n    name: my-snat-pool\n    state: present\n    address: 10.10.10.10\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Modify a SNAT translation 'my-snat-translation'\n  bigip_snat_translation:\n    name: my-snat-pool\n    state: present\n    address: 10.10.10.10\n    arp: no\n    connection_limit: 300\n    ip_idle_timeout: 1800\n    tcp_idle_timeout: 1800\n    udp_idle_timeout: 1800\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Disable a SNAT translation 'my-snat-translation'\n  bigip_snat_translation:\n    name: my-snat-pool\n    state: disabled\n    address: 10.10.10.10\n    arp: no\n    connection_limit: 300\n    ip_idle_timeout: 1800\n    tcp_idle_timeout: 1800\n    udp_idle_timeout: 1800\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Enable a SNAT translation 'my-snat-translation'\n  bigip_snat_translation:\n    name: my-snat-pool\n    state: enabled\n    address: 10.10.10.10\n    arp: no\n    connection_limit: 300\n    ip_idle_timeout: 1800\n    tcp_idle_timeout: 1800\n    udp_idle_timeout: 1800\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Create using partition other then /Common on a SNAT translation 'my-new-snat-translation'\n  bigip_snat_translation:\n    name: my-new-snat-pool\n    state: enabled\n    address: 10.10.10.10\n    arp: no\n    connection_limit: 300\n    ip_idle_timeout: 1800\n    partition: ansible\n    tcp_idle_timeout: 1800\n    udp_idle_timeout: 1800\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Modify using traffic group other then /Common/traffic-group-1 on a SNAT translation 'my-new-snat-translation'\n  bigip_snat_translation:\n    name: my-new-snat-pool\n    state: enabled\n    address: 10.10.10.10\n    arp: no\n    connection_limit: 300\n    ip_idle_timeout: 1800\n    partition: ansible\n    tcp_idle_timeout: 1800\n    traffic_group: /Common/ansible\n    udp_idle_timeout: 1800\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n"
  },
  "f5networks.f5_modules.bigip_snmp": {
    "doc": {
      "description": "Manipulate general SNMP settings on a BIG-IP system.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "agent_authentication_traps": {
          "aliases": [],
          "description": "When C(enabled), ensures the system sends authentication warning traps to the trap destinations. This is usually disabled by default on a BIG-IP.",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "agent_status_traps": {
          "aliases": [],
          "description": "When C(enabled), ensures the system sends a trap whenever the SNMP agent starts running or stops running. This is usually enabled by default on a BIG-IP.",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "allowed_addresses": {
          "aliases": [],
          "description": "Configures the IP addresses of the SNMP clients from which the snmpd daemon accepts requests.\nThis value can be hostnames, IP addresses, or IP networks.\nYou may specify a single list item of C(default) to set the value back to the system default of C(127.0.0.0/8).\nYou can remove all allowed addresses by either providing the word C(none), or by providing the empty string C(\"\").",
          "type": "raw",
          "required": false,
          "suboptions": {}
        },
        "contact": {
          "aliases": [],
          "description": "Specifies the name of the person who administers the SNMP service for this system.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "device_warning_traps": {
          "aliases": [],
          "description": "When C(enabled), ensures the system sends device warning traps to the trap destinations. This is usually enabled by default on a BIG-IP.",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Specifies the description of this system's physical location.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "short_description": "Manipulate general SNMP settings on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Set snmp contact\n  bigip_snmp:\n    contact: Joe User\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Set snmp location\n  bigip_snmp:\n    location: US West 1\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_snmp_community": {
    "doc": {
      "description": "Assists in managing Simple Network Management Protocol (SNMP) communities on a BIG-IP system. Different SNMP versions are supported by this module. Note the different parameters offered by this module, as different parameters work for different versions of SNMP. This is important if you are mixing versions C(v2c) and C(3).",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "access": {
          "aliases": [],
          "description": "Specifies the user's access level to the MIB.\nWhen creating a new community, if this parameter is not specified, the default is C(ro).\nWhen C(ro), specifies the user can view the MIB, but cannot modify the MIB.\nWhen C(rw), specifies the user can view and modify the MIB.",
          "type": "str",
          "required": false,
          "choices": [
            "ro",
            "rw",
            "read-only",
            "read-write"
          ],
          "suboptions": {}
        },
        "community": {
          "aliases": [],
          "description": "Specifies the community string (password) for access to the MIB.\nThis parameter is only relevant when C(version) is C(v1) or C(v2c). If C(version) is something else, this parameter is ignored.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ip_version": {
          "aliases": [],
          "description": "Specifies whether the record applies to IPv4 or IPv6 addresses.\nWhen creating a new community, if this value is not specified, the default is C(4).\nThis parameter is only relevant when C(version) is C(v1) or C(v2c). If C(version) is something else, this parameter is ignored.",
          "type": "str",
          "required": false,
          "choices": [
            "4",
            "6"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name that identifies the SNMP community.\nWhen C(version) is C(v1) or C(v2c), this parameter is required.\nThe name C(public) is a reserved name on the BIG-IP. This module handles that name differently than others. Functionally, you should not see a difference.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "oid": {
          "aliases": [],
          "description": "Specifies the object identifier (OID) for the record.\nWhen C(version) is C(v3), this parameter is required.\nWhen C(version) is either C(v1) or C(v2c), if this value is specified, then C(source) must not be set to C(all).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Specifies the port for the trap destination.\nThis parameter is only relevant when C(version) is C(v1) or C(v2c). If C(version) is something else, this parameter is ignored.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "snmp_auth_password": {
          "aliases": [],
          "description": "Specifies the password for the user.\nWhen creating a new SNMP C(v3) community, this parameter is required.\nThis value must be at least 8 characters long.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "snmp_auth_protocol": {
          "aliases": [],
          "description": "Specifies the authentication method for the user.\nWhen C(md5), specifies the system uses the MD5 algorithm to authenticate the user.\nWhen C(sha), specifies the secure hash algorithm (SHA) to authenticate the user.\nWhen C(none), specifies the user does not require authentication.\nWhen creating a new SNMP C(v3) community, if this parameter is not specified, the default is C(sha).",
          "type": "str",
          "required": false,
          "choices": [
            "md5",
            "sha",
            "none"
          ],
          "suboptions": {}
        },
        "snmp_privacy_password": {
          "aliases": [],
          "description": "Specifies the password for the user.\nWhen creating a new SNMP C(v3) community, this parameter is required.\nThis value must be at least 8 characters long.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "snmp_privacy_protocol": {
          "aliases": [],
          "description": "Specifies the encryption protocol.\nWhen C(aes), specifies the system encrypts the user information using AES (Advanced Encryption Standard).\nWhen C(des), specifies the system encrypts the user information using DES (Data Encryption Standard).\nWhen C(none), specifies the system does not encrypt the user information.\nWhen creating a new SNMP C(v3) community, if this parameter is not specified, the default is C(aes).",
          "type": "str",
          "required": false,
          "choices": [
            "aes",
            "des",
            "none"
          ],
          "suboptions": {}
        },
        "snmp_username": {
          "aliases": [],
          "description": "Specifies the name of the user for whom you want to grant access to the SNMP v3 MIB.\nThis parameter is only relevant when C(version) is C(v3). If C(version) is something else, this parameter is ignored.\nWhen creating a new SNMP C(v3) community, this parameter is required.\nThis parameter cannot be changed once it has been set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source": {
          "aliases": [],
          "description": "Specifies the source address for access to the MIB.\nThis parameter can accept a value of C(all).\nIf this parameter is not specified, the value is C(all).\nThis parameter is only relevant when C(version) is C(v1) or C(v2c). If C(version) is something else, this parameter is ignored.\nIf C(source) is set to C(all), it is not possible to specify an C(oid). This will raise an error.\nYou should provide this parameter when C(state) is C(absent), so the correct community is removed. To remove the C(public) SNMP community that comes with a BIG-IP, this parameter should be C(default).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the address list and entries exists.\nWhen C(absent), ensures the address list is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "C(always) allows users to update passwords. C(on_create) only sets the password for newly created resources.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_create"
          ],
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Specifies to which SNMP version the trap destination applies.",
          "default": "v2c",
          "type": "str",
          "required": false,
          "choices": [
            "v1",
            "v2c",
            "v3"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manages SNMP communities on a BIG-IP.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create an SMNP v2c read-only community\n  bigip_snmp_community:\n    name: foo\n    version: v2c\n    source: all\n    oid: .1\n    access: ro\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create an SMNP v3 read-write community\n  bigip_snmp_community:\n    name: foo\n    version: v3\n    snmp_username: foo\n    snmp_auth_protocol: sha\n    snmp_auth_password: secret\n    snmp_privacy_protocol: aes\n    snmp_privacy_password: secret\n    oid: .1\n    access: rw\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove the default 'public' SNMP community\n  bigip_snmp_community:\n    name: public\n    source: default\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_snmp_trap": {
    "doc": {
      "description": "Manipulate SNMP trap information on a BIG-IP system.",
      "has_action": false,
      "notes": "This module only supports version v1 and v2c of SNMP.\nThe C(network) option is not supported on versions of BIG-IP prior to 12.1.0 because the platform did not support that option until 12.1.0. If used on versions prior to 12.1.0, it is simply be ignored.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "community": {
          "aliases": [],
          "description": "Specifies the community name for the trap destination.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "destination": {
          "aliases": [],
          "description": "Specifies the address for the trap destination. This can be either an IP address or a hostname.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the SNMP configuration endpoint.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network": {
          "aliases": [],
          "description": "Specifies the name of the trap network. This option is not supported in versions of BIG-IP prior to 12.1.0, and is simply ignored on those versions.\nThe value C(default) was removed in BIG-IP version 13.1.0. Specifying this value when configuring a BIG-IP causes the module to stop and report an error. In this case, choose one of the other options, such as C(management).",
          "type": "str",
          "required": false,
          "choices": [
            "other",
            "management",
            "default"
          ],
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Specifies the port for the trap destination.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "snmp_version": {
          "aliases": [],
          "description": "Specifies to which Simple Network Management Protocol (SNMP) version the trap destination applies.",
          "type": "str",
          "required": false,
          "choices": [
            "1",
            "2c"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource does not exist.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manipulate SNMP trap information on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create snmp v1 trap\n  bigip_snmp_trap:\n    community: general\n    destination: 1.2.3.4\n    name: my-trap1\n    network: management\n    port: 9000\n    snmp_version: 1\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Create snmp v2 trap\n  bigip_snmp_trap:\n    community: general\n    destination: 5.6.7.8\n    name: my-trap2\n    network: default\n    port: 7000\n    snmp_version: 2c\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_software_image": {
    "doc": {
      "description": "Manages software images on a BIG-IP. These images may include both base images and hotfix images.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "force": {
          "aliases": [],
          "description": "When C(yes), uploads the file every time and replaces the file on the device.\nWhen C(no), the file is only uploaded if it does not already exist.\nGenerally should be C(yes) only in cases where you have reason to believe the image was corrupted during upload.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "image": {
          "aliases": [],
          "description": "The image to put on the remote device.\nThis may be an absolute or relative location on the Ansible controller.\nImage names, whether they are base ISOs or hotfix ISOs, B(must) be unique.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the image is uploaded.\nWhen C(absent), ensures the image is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage software images on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Upload relative image to the BIG-IP\n  bigip_software_image:\n    image: BIGIP-13.0.0.0.0.1645.iso\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Upload absolute image to the BIG-IP\n  bigip_software_image:\n    image: /path/to/images/BIGIP-13.0.0.0.0.1645.iso\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Upload image in a role to the BIG-IP\n  bigip_software_image:\n    image: \"{{ role_path }}/files/BIGIP-13.0.0.0.0.1645.iso\"\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_software_install": {
    "doc": {
      "description": "Install new software images on a BIG-IP system.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "block_device_image": {
          "aliases": [],
          "description": "Image to install on the remote device. In the case of a VCMP guest, ensure this image is present on the VCMP host and is referenced from there, and not from the VCMP guest. An ISO image directly uploaded to the VCMP guest will not work.",
          "type": "str",
          "required": false,
          "version_added": "1.2.0",
          "suboptions": {}
        },
        "image": {
          "aliases": [],
          "description": "Image to install on the remote device.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(installed), ensures the software is installed on the volume and the volume is set to be booted from. The device is B(not) rebooted into the new software.\nWhen C(activated), performs the same operation as C(installed), but the system is rebooted to the new software.",
          "default": "activated",
          "type": "str",
          "required": false,
          "choices": [
            "activated",
            "installed"
          ],
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "The type of the BIG-IP.\nDefaults to C(standard), the other choice is C(vcmp).",
          "default": "standard",
          "type": "str",
          "required": false,
          "choices": [
            "standard",
            "vcmp"
          ],
          "version_added": "1.2.0",
          "suboptions": {}
        },
        "volume": {
          "aliases": [],
          "description": "The volume on which to install the software image.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Install software images on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Ensure an existing image is installed in specified volume\n  bigip_software_install:\n    image: BIGIP-13.0.0.0.0.1645.iso\n    volume: HD1.2\n    state: installed\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Ensure an existing image is activated in specified volume\n  bigip_software_install:\n    image: BIGIP-13.0.0.0.0.1645.iso\n    state: activated\n    volume: HD1.2\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Ensure an existing image is activated in specified volume in a VCMP guest\n  bigip_software_install:\n    block_device_image: BIGIP-13.0.0.0.0.1645.iso\n    type: vcmp\n    state: activated\n    volume: HD1.2\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_software_update": {
    "doc": {
      "description": "Manage the software update settings of a BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "auto_check": {
          "aliases": [],
          "description": "Specifies whether to automatically check for updates on the F5 Networks downloads server.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auto_phone_home": {
          "aliases": [],
          "description": "Specifies whether to automatically send phone home data to the F5 Networks PhoneHome server.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "frequency": {
          "aliases": [],
          "description": "Specifies the schedule for the automatic update check.",
          "type": "str",
          "required": false,
          "choices": [
            "daily",
            "monthly",
            "weekly"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "short_description": "Manage the software update settings of a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Enable automatic update checking\n  bigip_software_update:\n    auto_check: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Disable automatic update checking and phoning home\n  bigip_software_update:\n    auto_check: no\n    auto_phone_home: no\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_ssl_certificate": {
    "doc": {
      "description": "This module imports/deletes SSL certificates on BIG-IP LTM. Certificates can be imported from certificate and key files on the local disk, in PEM format.",
      "has_action": false,
      "notes": "This module does not behave like other modules that you might include in roles, where referencing files or templates first looks in the role's files or templates directory. To have it behave that way, use the Ansible file or template lookup (see Examples). The lookups behave as expected in a role context.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "content": {
          "aliases": [
            "cert_content"
          ],
          "description": "Sets the contents of a certificate directly to the specified value. This is used with lookup plugins or for anything with formatting, or\nC(content) must be provided when C(state) is C(present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "issuer_cert": {
          "aliases": [],
          "description": "Issuer certificate used for OCSP monitoring.\nThis parameter is only valid on versions of BIG-IP 13.0.0 or above.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "SSL Certificate Name. This is the cert name used when importing a certificate into the BIG-IP. It also determines the filenames of the objects on the LTM.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Certificate state. This determines if the provided certificate and key is to be made C(present) on the device or C(absent).",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "BIG-IP >= v12"
      ],
      "short_description": "Import/Delete certificates from BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Use a file lookup to import PEM Certificate\n  bigip_ssl_certificate:\n    name: certificate-name\n    state: present\n    content: \"{{ lookup('file', '/path/to/cert.crt') }}\"\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Use a file lookup to import CA certificate chain\n  bigip_ssl_certificate:\n    name: ca-chain-name\n    state: present\n    content: \"{{ lookup('file', '/path/to/ca-chain.crt') }}\"\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Delete Certificate\n  bigip_ssl_certificate:\n    name: certificate-name\n    state: absent\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_ssl_csr": {
    "doc": {
      "description": "This module will create SSL CSR files on a BIG-IP. CSRs require an associated SSL key to pre-exist on the BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "common_name": {
          "aliases": [],
          "description": "The certificate common name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dest": {
          "aliases": [],
          "description": "Destination on your local filesystem when you want to save the CSR file.",
          "type": "path",
          "required": true,
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "If C(no), the file will only be transferred if the destination does not exist.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "key_name": {
          "aliases": [],
          "description": "The SSL key to be used to generate the CSR.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the CSR file.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource does not exist.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Create SSL CSR files on the BIG-IP",
      "version_added": "1.3.0"
    },
    "examples": "\n- name: Create an SSL csr\n  bigip_ssl_csr:\n    name: csr-name\n    key_name: key-name\n    common_name: csr-name\n    dest: /tmp/csr-name\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_ssl_key": {
    "doc": {
      "description": "This module imports/deletes SSL keys on a BIG-IP. Keys can be imported from key files on the local disk, in PEM format.",
      "has_action": false,
      "notes": "This module does not behave like other modules that you might include in roles, where referencing files or templates first looks in the role's files or templates directory. To have it behave that way, use the Ansible file or template lookup (see Examples). The lookups behave as expected in a role context.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "content": {
          "aliases": [
            "key_content"
          ],
          "description": "Sets the contents of a key directly to the specified value. This is used with lookup plugins or for anything with formatting or templating. This must be provided when C(state) is C(present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the key.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "passphrase": {
          "aliases": [],
          "description": "Passphrase on key.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the key is uploaded to the device. When C(absent), ensures the key is removed from the device. If the key is currently in use, the module is not able to remove the key.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "BIG-IP >= v12"
      ],
      "short_description": "Import/Delete SSL keys from BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Use a file lookup to import key\n  bigip_ssl_key:\n    name: key-name\n    state: present\n    content: \"{{ lookup('file', '/path/to/key.key') }}\"\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Delete key\n  bigip_ssl_key:\n    name: key-name\n    state: absent\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_ssl_key_cert": {
    "doc": {
      "description": "This module imports/deletes SSL keys and certificates on a BIG-IP. Keys can be imported from key files on the local disk, in PEM format. Certificates can be imported from certificate and key files on the local disk, in PEM format.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "cert_content": {
          "aliases": [],
          "description": "Sets the contents of a certificate directly to the specified value. This is used with lookup plugins or for anything with formatting or\nC(content) must be provided when C(state) is C(present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cert_name": {
          "aliases": [],
          "description": "SSL Certificate Name. This is the cert name used when importing a certificate into the BIG-IP. It also determines the filenames of the objects on the LTM.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "issuer_cert": {
          "aliases": [],
          "description": "Issuer certificate used for OCSP monitoring.\nThis parameter is only valid on versions of BIG-IP 13.0.0 or above.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key_content": {
          "aliases": [],
          "description": "Sets the contents of a key directly to the specified value. This is used with lookup plugins, or for anything with formatting or templating. This must be provided when C(state) is C(present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key_name": {
          "aliases": [],
          "description": "The name of the key.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "passphrase": {
          "aliases": [],
          "description": "Passphrase on key.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the key and/or cert is uploaded to the device. When C(absent), ensures the key and/or cert is removed from the device. If the key and/or cert is currently in use, the module will not be able to remove the key.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Import/Delete SSL keys and certs from BIG-IP",
      "version_added": "1.6.0"
    },
    "examples": "\n- name: Import both key and cert\n  bigip_ssl_key_cert:\n    key_content: \"{{ lookup('file', 'key.pem') }}\"\n    key_name: cert1\n    cert_content: \"{{ lookup('file', 'cert.pem') }}\"\n    cert_name: cert1\n    state: present\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_ssl_ocsp": {
    "doc": {
      "description": "Manage OCSP configurations on a BIG-IP system.",
      "has_action": false,
      "notes": "Requires BIG-IP >= 13.x.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "cache_error_timeout": {
          "aliases": [],
          "description": "Specifies the lifetime of an error response in the cache, in seconds.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "cache_timeout": {
          "aliases": [],
          "description": "Specifies the lifetime of the OCSP response in the cache, in seconds.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "certificate": {
          "aliases": [],
          "description": "Specifies a certificate used to sign an OCSP request.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "clock_skew": {
          "aliases": [],
          "description": "Specifies the tolerable absolute difference in the clocks of the responder and the BIG-IP system, in seconds.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "connection_timeout": {
          "aliases": [],
          "description": "Specifies the time interval the BIG-IP system waits for before ending the connection to the OCSP responder, in seconds.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "connections_limit": {
          "aliases": [],
          "description": "Specifies the maximum number of connections per second allowed for the OCSP certificate validator.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "dns_resolver": {
          "aliases": [],
          "description": "Specifies the internal DNS resolver the BIG-IP system uses to fetch the OCSP response.\nThis involves specifying one or more DNS servers in the DNS resolver configuration.\nUse this option when either there is a DNS server that can do the name-resolution of the OCSP responders, or the OCSP responder can be reached on one of BIG-IP system's interfaces.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "hash_algorithm": {
          "aliases": [],
          "description": "Specifies a hash algorithm used to sign an OCSP request.",
          "type": "str",
          "required": false,
          "choices": [
            "sha256",
            "sha1"
          ],
          "suboptions": {}
        },
        "key": {
          "aliases": [],
          "description": "Specifies a key used to sign an OCSP request.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the OCSP certificate validator.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "passphrase": {
          "aliases": [],
          "description": "Specifies a passphrase used to sign an OCSP request.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "proxy_server_pool": {
          "aliases": [],
          "description": "Specifies the proxy server pool the BIG-IP system uses to fetch the OCSP response.\nThis involves creating a pool with proxy-servers.\nUse this option when either the OCSP responder cannot be reached on any of BIG-IP system's interfaces, or one or more servers can proxy an HTTP request to an external server and fetch the response.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "responder_url": {
          "aliases": [],
          "description": "Specifies the absolute URL that overrides the OCSP responder URL obtained from the certificate's AIA extensions. This should be an HTTP-based URL.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "route_domain": {
          "aliases": [],
          "description": "Specifies the route domain for fetching an OCSP response using HTTP forward proxy.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource does not exist.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "status_age": {
          "aliases": [],
          "description": "Specifies the maximum allowed lag time the BIG-IP system accepts for the 'thisUpdate' time in the OCSP response.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "strict_responder_checking": {
          "aliases": [],
          "description": "Specifies whether the responder's certificate is checked for an OCSP signing extension.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "trusted_responders": {
          "aliases": [],
          "description": "Specifies the certificates used for validating the OCSP response when the responder's certificate has been omitted from the response.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "C(always) allows the user to update passwords. C(on_create) only sets the password for newly created OCSP validators.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_create"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage OCSP configurations on BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a OCSP validator\n  bigip_ssl_ocsp:\n    name: foo\n    proxy_server_pool: validators-pool\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_static_route": {
    "doc": {
      "description": "Manipulate static routes on a BIG-IP system.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "Descriptive text that identifies the route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "destination": {
          "aliases": [],
          "description": "Specifies an IP address for the static entry in the routing table. When creating a new static route, this value is required.\nThis value cannot be changed once it is set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "gateway_address": {
          "aliases": [],
          "description": "Specifies the router for the system to use when forwarding packets to the destination host or network. Also known as the next-hop router address. This can be either an IPv4 or IPv6 address. When it is an IPv6 address that starts with C(FE80:), the address is treated as a link-local address. This requires the C(vlan) parameter also be supplied.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mtu": {
          "aliases": [],
          "description": "Specifies a specific maximum transmission unit (MTU).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the static route.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "netmask": {
          "aliases": [],
          "description": "The netmask for the static route. When creating a new static route, this value is required.\nThis value can be in either IP or CIDR format.\nThis value cannot be changed once it is set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "pool": {
          "aliases": [],
          "description": "Specifies the pool through which the system forwards packets to the destination.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "reject": {
          "aliases": [],
          "description": "Specifies the system drops packets sent to the destination.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "route_domain": {
          "aliases": [],
          "description": "The route domain ID of the system. When creating a new static route, if this value is not specified, the default value is C(0).\nThis value cannot be changed once it is set.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the static route exists.\nWhen C(absent), ensures the static does not exist.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "vlan": {
          "aliases": [],
          "description": "Specifies the VLAN or Tunnel through which the system forwards packets to the destination. When C(gateway_address) is a link-local IPv6 address, this value is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manipulate static routes on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create static route with gateway address\n  bigip_static_route:\n    destination: 10.10.10.10\n    netmask: 255.255.255.255\n    gateway_address: 10.2.2.3\n    name: test-route\n    provider:\n      password: secret\n      server: lb.mydomain.come\n      user: admin\n      validate_certs: no\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_sys_daemon_log_tmm": {
    "doc": {
      "description": "Manage BIG-IP tmm log settings.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "arp_log_level": {
          "aliases": [],
          "description": "Specifies the lowest level of ARP messages from the tmm daemon to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "debug",
            "error",
            "informational",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "http_compression_log_level": {
          "aliases": [],
          "description": "Specifies the lowest level of HTTP compression messages from the tmm daemon to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "debug",
            "error",
            "informational",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "http_log_level": {
          "aliases": [],
          "description": "Specifies the lowest level of HTTP messages from the tmm daemon to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "debug",
            "error",
            "informational",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "ip_log_level": {
          "aliases": [],
          "description": "Specifies the lowest level of IP address messages from the tmm daemon to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "debug",
            "informational",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "irule_log_level": {
          "aliases": [],
          "description": "Specifies the lowest level of iRule messages from the tmm daemon to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "debug",
            "error",
            "informational",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "layer4_log_level": {
          "aliases": [],
          "description": "Specifies the lowest level of Layer 4 messages from the tmm daemon to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "debug",
            "informational",
            "notice"
          ],
          "suboptions": {}
        },
        "net_log_level": {
          "aliases": [],
          "description": "Specifies the lowest level of network messages from the tmm daemon to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "critical",
            "debug",
            "error",
            "informational",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "os_log_level": {
          "aliases": [],
          "description": "Specifies the lowest level of operating system messages from the tmm daemon to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "alert",
            "critical",
            "debug",
            "emergency",
            "error",
            "informational",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "pva_log_level": {
          "aliases": [],
          "description": "Specifies the lowest level of PVA messages from the tmm daemon to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "debug",
            "informational",
            "notice"
          ],
          "suboptions": {}
        },
        "ssl_log_level": {
          "aliases": [],
          "description": "Specifies the lowest level of SSL messages from the tmm daemon to include in the system log.",
          "type": "str",
          "required": false,
          "choices": [
            "alert",
            "critical",
            "debug",
            "emergency",
            "error",
            "informational",
            "notice",
            "warning"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the log level on the system. When C(present), guarantees an existing log level is set to C(value).",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage BIG-IP tmm daemon log settings",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Set SSL log level to debug\n  bigip_sys_daemon_log_tmm:\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n    ssl_log_level: debug\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_sys_db": {
    "doc": {
      "description": "Manage BIG-IP system database variables.",
      "has_action": false,
      "notes": "Requires BIG-IP version 12.0.0 or later.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "key": {
          "aliases": [],
          "description": "The database variable to manipulate.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "The state of the variable on the system. When C(present), guarantees an existing variable is set to C(value). When C(reset), sets the variable back to the default value. At least one of value and state C(reset) are required.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "reset"
          ],
          "suboptions": {}
        },
        "value": {
          "aliases": [],
          "description": "The value to set the key to. At least one of value and state C(reset) are required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage BIG-IP system database variables",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Set the boot.quiet DB variable on the BIG-IP\n  bigip_sys_db:\n    key: boot.quiet\n    value: disable\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Disable the initial setup screen\n  bigip_sys_db:\n    key: setup.run\n    value: false\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Reset the initial setup screen\n  bigip_sys_db:\n    key: setup.run\n    state: reset\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_sys_global": {
    "doc": {
      "description": "Manage BIG-IP global settings.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "banner_text": {
          "aliases": [],
          "description": "Specifies the text to present in the advisory banner.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "console_timeout": {
          "aliases": [],
          "description": "Specifies the number of seconds of inactivity before the system logs off a user that is logged on.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "gui_setup": {
          "aliases": [],
          "description": "C(yes) or C(no), the Setup utility in the browser-based Configuration utility.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "lcd_display": {
          "aliases": [],
          "description": "When C(yes), specifies the system menu displays on the LCD screen on the front of the unit. This setting has no effect when used on the VE platform.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "mgmt_dhcp": {
          "aliases": [],
          "description": "Specifies whether or not to enable DHCP client on the management interface.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "net_reboot": {
          "aliases": [],
          "description": "When C(yes), specifies the next time you reboot the system, the system boots to an ISO image on the network, rather than an internal media drive.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "quiet_boot": {
          "aliases": [],
          "description": "When C(yes), specifies the system suppresses informational text on the console during the boot cycle. When C(no), the system presents messages and informational text on the console during the boot cycle.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "security_banner": {
          "aliases": [],
          "description": "Specifies whether the system displays an advisory message on the login screen.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the variable on the system. When C(present), guarantees an existing variable is set to C(value).",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage BIG-IP global settings",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Disable the setup utility\n  bigip_sys_global:\n    gui_setup: no\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_timer_policy": {
    "doc": {
      "description": "Manage timer policies on a BIG-IP system.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "Specifies descriptive text that identifies the timer policy.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the timer policy.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rules": {
          "aliases": [],
          "description": "Rules you want assigned to the timer policy.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "destination_ports": {
              "aliases": [],
              "description": "The list of destination ports on which to match the rule.\nSpecify a port range by specifying start and end ports separated by a dash (-).\nThis field is only available if you have selected the C(sctp), C(tcp), or C(udp) protocol.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "idle_timeout": {
              "aliases": [],
              "description": "Specifies an idle timeout, in seconds, for protocol and port pairs that match the timer policy rule.\nWhen C(infinite), specifies the protocol and port pairs that match the timer policy rule have no idle timeout.\nWhen specifying rules, if this parameter is not specified, the default is C(unspecified).",
              "default": "unspecified",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The name of the rule.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "protocol": {
              "aliases": [],
              "description": "Specifies the IP protocol entry for which the timer policy rule is being configured. This could be a layer-4 protocol (such as C(tcp), C(udp) or C(sctp).\nOnly flows matching the configured protocol will make use of this rule.\nWhen C(all-other) is specified, if there are no specific ip-protocol rules that match the flow, the flow matches all the other ip-protocol rules.\nWhen specifying rules, if this parameter is not specified, the default is C(all-other).",
              "default": "all-other",
              "type": "str",
              "required": false,
              "choices": [
                "all-other",
                "ah",
                "bna",
                "esp",
                "etherip",
                "gre",
                "icmp",
                "ipencap",
                "ipv6",
                "ipv6-auth",
                "ipv6-crypt",
                "ipv6-icmp",
                "isp-ip",
                "mux",
                "ospf",
                "sctp",
                "tcp",
                "udp",
                "udplite"
              ],
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage timer policies on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a timer policy\n  bigip_timer_policy:\n    name: timer1\n    description: My timer policy\n    rules:\n      - name: rule1\n        protocol: tcp\n        idle_timeout: indefinite\n        destination_ports:\n          - 443\n          - 80\n      - name: rule2\n        protocol: 200\n      - name: rule3\n        protocol: sctp\n        idle_timeout: 200\n        destination_ports:\n          - 21\n    state: present\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove a timer policy and all its associated rules\n  bigip_timer_policy:\n    name: timer1\n    description: My timer policy\n    state: absent\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_traffic_selector": {
    "doc": {
      "description": "Manage IPSec Traffic Selectors on BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "Description of the traffic selector.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "destination_address": {
          "aliases": [],
          "description": "Specifies the host or network IP address to which the application traffic is destined.\nWhen creating a new traffic selector, this parameter is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ipsec_policy": {
          "aliases": [],
          "description": "Specifies the IPsec policy that tells the BIG-IP system how to handle the packets.\nWhen creating a new traffic selector, if this parameter is not specified, the default is C(default-ipsec-policy).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the traffic selector.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "order": {
          "aliases": [],
          "description": "Specifies the order in which traffic is matched, if traffic can be matched to multiple traffic selectors.\nTraffic is matched to the traffic selector with the highest priority (lowest order number).\nWhen creating a new traffic selector, if this parameter is not specified, the default is C(last).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "source_address": {
          "aliases": [],
          "description": "Specifies the host or network IP address from which the application traffic originates.\nWhen creating a new traffic selector, this parameter is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage IPSec Traffic Selectors on BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a traffic selector\n  bigip_traffic_selector:\n    name: selector1\n    destination_address: 1.1.1.1\n    ipsec_policy: policy1\n    order: 1\n    source_address: 2.2.2.2\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_trunk": {
    "doc": {
      "description": "Manages trunks on a BIG-IP.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "Description of the trunk.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "frame_distribution_hash": {
          "aliases": [],
          "description": "Specifies the basis for the hash the system uses as the frame distribution algorithm. The system uses the resulting hash to determine which interface to use for forwarding traffic.\nWhen creating a new trunk, if this parameter is not specified, the default is C(source-destination-ip).\nWhen C(source-destination-mac), specifies the system bases the hash on the combined MAC addresses of the source and the destination.\nWhen C(destination-mac), specifies the system bases the hash on the MAC address of the destination.\nWhen C(source-destination-ip), specifies the system bases the hash on the combined IP addresses of the source and the destination.",
          "type": "str",
          "required": false,
          "choices": [
            "destination-mac",
            "source-destination-ip",
            "source-destination-mac"
          ],
          "suboptions": {}
        },
        "interfaces": {
          "aliases": [],
          "description": "The interfaces that are part of the trunk.\nTo clear the list of interfaces, specify an empty list.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "lacp_enabled": {
          "aliases": [],
          "description": "When C(yes), specifies the system supports the link aggregation control protocol (LACP), which monitors the trunk by exchanging control packets over the member links to determine the health of the links.\nIf LACP detects a failure in a member link, it removes the link from the link aggregation.\nWhen creating a new trunk, if this parameter is not specified, LACP is C(no).\nLACP is disabled by default for backward compatibility. If this does not apply to your network, we recommend that you enable LACP.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "lacp_mode": {
          "aliases": [],
          "description": "Specifies the operation mode for link aggregation control protocol (LACP), if LACP is enabled for the trunk.\nWhen creating a new trunk, if this parameter is not specified, the default is C(active).\nWhen C(active), specifies the system periodically sends control packets regardless of whether the partner system has issued a request.\nWhen C(passive), specifies the system sends control packets only when the partner system has issued a request.",
          "type": "str",
          "required": false,
          "choices": [
            "active",
            "passive"
          ],
          "suboptions": {}
        },
        "lacp_timeout": {
          "aliases": [],
          "description": "Specifies the rate at which the system sends the LACP control packets.\nWhen creating a new trunk, if this parameter is not specified, the default is C(long).\nWhen C(long), specifies the system sends an LACP control packet every 30 seconds.\nWhen C(short), specifies the system sends an LACP control packet every second.",
          "type": "str",
          "required": false,
          "choices": [
            "long",
            "short"
          ],
          "suboptions": {}
        },
        "link_selection_policy": {
          "aliases": [],
          "description": "Once the trunk is configured, specifies the policy the trunk uses to determine which member link (interface) can handle new traffic.\nWhen creating a new trunk, if this value is not specified, the default is C(auto).\nWhen C(auto), specifies the system automatically determines which interfaces can handle new traffic. For the C(auto) option, the member links must all be the same media type and speed.\nWhen C(maximum-bandwidth), specifies the system determines which interfaces can handle new traffic based on the members' maximum bandwidth.",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "maximum-bandwidth"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the trunk.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "qinq_ethertype": {
          "aliases": [],
          "description": "Specifies the ether-type value used for the packets handled on this trunk when it is a member in a QinQ VLAN.\nThe ether-type can be set to any string containing a valid hexadecimal 16 bits number, or any of the well known ether-types; C(0x8100), C(0x9100), C(0x88a8).\nThis parameter is not supported on Virtual Editions.\nYou should always wrap this value in quotes to prevent Ansible from interpreting the value as a literal hexadecimal number and converting it to an integer.",
          "type": "raw",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the resource exists.\nWhen C(absent), ensures the resource is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage trunks on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a trunk on hardware\n  bigip_trunk:\n    name: trunk1\n    interfaces:\n      - 1.1\n      - 1.2\n    link_selection_policy: maximum-bandwidth\n    frame_distribution_hash: destination-mac\n    lacp_enabled: yes\n    lacp_mode: passive\n    lacp_timeout: short\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_tunnel": {
    "doc": {
      "description": "Manages tunnels on a BIG-IP. Tunnels are usually based upon a tunnel profile which defines both default arguments and constraints for the tunnel.\nDue to this, this module exposes a number of settings that may or may not be related to the type of tunnel you are working with. It is important that you take this into consideration when declaring your tunnel config.\nIf a specific tunnel does not support the parameter you are considering, the documentation of the parameter will usually make mention of this. Otherwise, when configuring that parameter on the device, the device will notify you.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "auto_last_hop": {
          "aliases": [],
          "description": "Allows you to configure auto last hop on a per-tunnel basis.\nWhen creating a new tunnel, if this parameter is supported by the tunnel profile but not specified, the default is C(default).\nWhen C(default), means that the system uses the global auto-lasthop setting to send back the request.\nWhen C(enabled), allows the system to send return traffic to the MAC address that transmitted the request, even if the routing table points to a different network or interface. As a result, the system can send return traffic to clients even when there is no matching route.",
          "type": "str",
          "required": false,
          "choices": [
            "default",
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the tunnel.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key": {
          "aliases": [],
          "description": "When applied to a GRE tunnel, this value specifies an optional field in the GRE header, used to authenticate the source of the packet.\nWhen applied to a VXLAN or Geneve tunnel, this value specifies the Virtual Network Identifier (VNI).\nWhen applied to an NVGRE tunnel, this value specifies the Virtual Subnet Identifier (VSID).\nWhen creating a new tunnel, if this parameter is supported by the tunnel profile but not specified, the default value is C(0).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "local_address": {
          "aliases": [],
          "description": "Specifies the IP address of the local endpoint of the tunnel.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Specifies how the tunnel carries traffic.\nWhen creating a new tunnel, if this parameter is supported by the tunnel profile but not specified, the default is C(bidirectional).\nWhen C(bidirectional), specifies that the tunnel carries both inbound and outbound traffic.\nWhen C(inbound), specifies that the tunnel carries only incoming traffic.\nWhen C(outbound), specifies that the tunnel carries only outgoing traffic.",
          "type": "str",
          "required": false,
          "choices": [
            "bidirectional",
            "inbound",
            "outbound"
          ],
          "suboptions": {}
        },
        "mtu": {
          "aliases": [],
          "description": "Specifies the maximum transmission unit (MTU) of the tunnel.\nWhen creating a new tunnel, if this parameter is supported by the tunnel profile but not specified, the default value is C(0).\nThe valid range is from C(0) to C(65515).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the tunnel.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Specifies the profile to associate with the tunnel for handling traffic.\nDepending on your selection, other settings become available or disappear.\nThis parameter may not be changed after it is set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "remote_address": {
          "aliases": [],
          "description": "Specifies the IP address of the remote endpoint of the tunnel.\nFor C(dslite), C(fec) (when configuring the FEC tunnel for receiving traffic only), C(v6rd) (configured as a border relay), or C(map), the tunnel must have an unspecified remote address (any).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secondary_address": {
          "aliases": [],
          "description": "Specifies a non-floating IP address for the tunnel, to be used with host-initiated traffic.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures that the tunnel exists.\nWhen C(absent), ensures the tunnel is removed.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tos": {
          "aliases": [],
          "description": "Specifies the Type of Service (TOS) value to insert in the encapsulating header of transmitted packets.\nWhen creating a new tunnel, if this parameter is supported by the tunnel profile but not specified, the default value is C(preserve).\nWhen C(preserve), the system copies the TOS value from the inner header to the outer header.\nYou may also specify a numeric value. The possible values are from C(0) to C(255).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "traffic_group": {
          "aliases": [],
          "description": "Specifies the traffic group to associate with the tunnel.\nThis value cannot be changed after it is set. This is a limitation of BIG-IP.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "transparent": {
          "aliases": [],
          "description": "Specifies that the tunnel operates in transparent mode.\nWhen C(yes), you can inspect and manipulate the encapsulated traffic flowing through the BIG-IP system.\nA transparent tunnel terminates a tunnel while presenting the illusion that the tunnel transits the device unmodified (that is, the BIG-IP system appears as if it were an intermediate router that simply routes IP traffic through the device).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "use_pmtu": {
          "aliases": [],
          "description": "Enables or disables the tunnel to use the PMTU (Path MTU) information provided by ICMP NeedFrag error messages.\nIf C(yes) and the tunnel C(mtu) is set to C(0), the tunnel will use the PMTU information.\nIf C(yes) and the tunnel C(mtu) is fixed to a non-zero value, the tunnel will use the minimum of PMTU and MTU.\nIf C(no), the tunnel will use fixed MTU or calculate its MTU using tunnel encapsulation configurations.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage tunnels on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a VXLAN tunnel\n  bigip_tunnel:\n    name: openshift-tunnel\n    local_address: 192.1681.240\n    key: 0\n    secondary_address: 192.168.1.100\n    mtu: 0\n    use_pmtu: yes\n    tos: preserve\n    auto_last_hop: default\n    traffic_group: traffic-group-1\n    state: present\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_ucs": {
    "doc": {
      "description": "Manage the upload, installation, and removal of UCS files on a BIG-IP system. A user configuration set (UCS) is a backup file that contains BIG-IP configuration data that can be used to fully restore a BIG-IP system in the event of a failure or RMA replacement.",
      "has_action": false,
      "notes": "Only the most basic checks are performed by this module. Other checks and considerations need to be taken into account. See https://support.f5.com/kb/en-us/solutions/public/11000/300/sol11318.html\nThis module does not handle devices with the FIPS 140 HSM.\nThis module does not handle BIG-IPs systems on the 6400, 6800, 8400, or 8800 hardware platforms.\nThis module does not verify the new or replaced SSH keys from the UCS file are synchronized between the BIG-IP system and the SCCP.\nThis module does not support the 'rma' option.\nThis module does not support restoring a UCS archive on a BIG-IP 1500, 3400, 4100, 6400, 6800, or 8400 hardware platforms other than the system from which the backup was created.\nThe UCS restore operation restores the full configuration only if the hostname of the target system matches the hostname on which the UCS archive was created. If the hostname does not match, only the shared configuration is restored. You can ensure hostnames match by using the C(bigip_hostname) Ansible module in a task before using this module.\nThis module does not support re-licensing a BIG-IP restored from a UCS.\nThis module does not support restoring encrypted archives on replacement RMA unit.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "force": {
          "aliases": [],
          "description": "If C(yes), the system uploads the file every time and replaces the file on the device. If C(no), the file is only uploaded if it does not already exist. Generally should only be C(yes) in cases where you believe the image was corrupted during upload.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "include_chassis_level_config": {
          "aliases": [],
          "description": "During restoration of the UCS file, includes chassis level configuration that is shared among boot volume sets. For example, the cluster default configuration.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "no_license": {
          "aliases": [],
          "description": "Performs a full restore of the UCS file and all the files it contains, with the exception of the license file. The option must be used to restore a UCS on RMA (Returned Materials Authorization) devices.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "no_platform_check": {
          "aliases": [],
          "description": "Bypasses the platform check and allows installation of a UCS that was created using a different platform. By default (without this option), installation of a UCS created from a different platform is not allowed.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "passphrase": {
          "aliases": [],
          "description": "Specifies the passphrase that is necessary to load the specified UCS file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "reset_trust": {
          "aliases": [],
          "description": "When specified, the device and trust domain certs and keys are not loaded from the UCS. Instead, a new set is generated.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "When C(installed), ensures the UCS is uploaded and installed on the system. When C(present), ensures the UCS is uploaded. When C(absent), the UCS is removed from the system. When C(installed), the uploading of the UCS is idempotent, however the installation of that configuration is not idempotent.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "installed",
            "present"
          ],
          "suboptions": {}
        },
        "ucs": {
          "aliases": [],
          "description": "The path to the UCS file to install. The parameter must be provided if the C(state) is either C(installed) or C(activated). When C(state) is C(absent), the full path for this parameter is ignored and only the filename is used to select a UCS for removal. Therefore you could specify C(/foo/bar/test.ucs) and this module would only look for C(test.ucs).",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "short_description": "Manage upload, installation, and removal of UCS files",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Upload UCS\n  bigip_ucs:\n    ucs: /root/bigip.localhost.localdomain.ucs\n    state: present\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Install (upload, install) UCS.\n  bigip_ucs:\n    ucs: /root/bigip.localhost.localdomain.ucs\n    state: installed\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Install (upload, install) UCS without installing the license portion\n  bigip_ucs:\n    ucs: /root/bigip.localhost.localdomain.ucs\n    state: installed\n    no_license: yes\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Install (upload, install) UCS except the license, and bypassing the platform check\n  bigip_ucs:\n    ucs: /root/bigip.localhost.localdomain.ucs\n    state: installed\n    no_license: yes\n    no_platform_check: yes\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Install (upload, install) UCS using a passphrase necessary to load the UCS\n  bigip_ucs:\n    ucs: /root/bigip.localhost.localdomain.ucs\n    state: installed\n    passphrase: MyPassphrase1234\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Remove uploaded UCS file\n  bigip_ucs:\n    ucs: bigip.localhost.localdomain.ucs\n    state: absent\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_ucs_fetch": {
    "doc": {
      "description": "This module is used for fetching UCS files from remote machines and storing them locally in a file tree, organized by hostname. This module was written to create and transfer UCS files that might not be present, it does not require UCS file to be pre-created. So a missing remote UCS is not an error unless C(fail_on_missing) is set to 'yes'.",
      "has_action": false,
      "notes": "BIG-IP provides no way to get a checksum of the UCS files on the system via any interface with the possible exception of logging in directly to the box (which would not support appliance mode). Therefore, the best this module can do is check for the existence of the file on disk; no check-summing.\nIf you are using this module with either Ansible Tower or Ansible AWX, you should be aware of how these Ansible products execute jobs in restricted environments. More information can be found here https://clouddocs.f5.com/products/orchestration/ansible/devel/usage/module-usage-with-tower.html\nSome longer running tasks might cause the REST interface on BIG-IP to time out, to avoid this adjust the timers as per this KB article https://support.f5.com/csp/article/K94602685\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "async_timeout": {
          "aliases": [],
          "description": "Parameter used when creating new UCS file on a device.\nThe amount of time to wait for the API async interface to complete its task, in seconds.\nThe accepted value range is between C(150) and C(1800) seconds.",
          "default": "150",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "backup": {
          "aliases": [],
          "description": "Creates a backup file including the timestamp information so you can get the original file back if you overwrote it incorrectly.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "create_on_missing": {
          "aliases": [],
          "description": "Creates the UCS based on the value of C(src), if the file does not already exist on the remote system.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "dest": {
          "aliases": [],
          "description": "A directory to save the UCS file into.\nThis option is mandatory when C(only_create_file) is set to C(no).",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "encryption_password": {
          "aliases": [],
          "description": "Password to use to encrypt the UCS file if desired.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fail_on_missing": {
          "aliases": [],
          "description": "Make the module fail if the UCS file on the remote system is missing.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "If C(no), the file is only transferred if the destination does not exist.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "only_create_file": {
          "aliases": [],
          "description": "If C(yes), the file is created on device and not downloaded. If the UCS archive exists on device, no change is made and file is not be downloaded.\nTo recreate UCS files left on the device, remove them with C(bigip_ucs) module before running this module with C(only_create_file) set to C(yes).",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "1.12.0",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "src": {
          "aliases": [],
          "description": "The name of the UCS file to create on the remote server for downloading.\nThe file is retrieved or created in /var/local/ucs/.\nThis option is mandatory when C(only_create_file) is set to C(yes).",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Fetches a UCS file from remote nodes",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Download a new UCS\n  bigip_ucs_fetch:\n    src: cs_backup.ucs\n    dest: /tmp/cs_backup.ucs\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Only create new UCS, no download\n  bigip_ucs_fetch:\n    src: cs_backup.ucs\n    only_create_file: yes\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Recreate UCS file left on device - remove file first\n  bigip_ucs:\n    ucs: cs_backup.ucs\n    state: absent\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Recreate UCS file left on device - create new file\n  bigip_ucs_fetch:\n    src: cs_backup.ucs\n    only_create_file: yes\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_user": {
    "doc": {
      "description": "Manage user accounts and user attributes on a BIG-IP system. Typically this module operates only on REST API users and not CLI users. When specifying C(root), you may only change the password. Your other parameters are ignored in this case. Changing the C(root) password is not an idempotent operation. Therefore, it changes the password every time this module attempts to change it.",
      "has_action": false,
      "notes": "Requires BIG-IP versions >= 12.0.0\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "full_name": {
          "aliases": [],
          "description": "Full name of the user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition_access": {
          "aliases": [],
          "description": "Specifies the administrative partition to which the user has access. C(partition_access) is required when creating a new account, and should be in the form \"partition:role\".\nValid roles include C(acceleration-policy-editor), C(admin), C(application-editor), C(auditor), C(certificate-manager), C(guest), C(irule-manager), C(manager), C(no-access), C(operator), C(resource-admin), C(user-manager), C(web-application-security-administrator), and C(web-application-security-editor).\nThe partition portion the of tuple should be an existing partition or the value 'all'.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "password_credential": {
          "aliases": [],
          "description": "Set the users password to this unencrypted value. C(password_credential) is required when creating a new account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "shell": {
          "aliases": [],
          "description": "Optionally set the users shell.",
          "type": "str",
          "required": false,
          "choices": [
            "bash",
            "none",
            "tmsh"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the account should exist or not, taking action if the state is different from what is stated.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "C(always) allows the user to update passwords. C(on_create) only sets the password for newly created users.\nWhen C(username_credential) is C(root), this value is forced to C(always).",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "on_create"
          ],
          "suboptions": {}
        },
        "username_credential": {
          "aliases": [
            "name"
          ],
          "description": "Name of the user to create, remove, or modify.\nThe C(root) user may not be removed.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "short_description": "Manage user accounts and user attributes on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add the user 'johnd' as an admin\n  bigip_user:\n    username_credential: johnd\n    password_credential: password\n    full_name: John Doe\n    partition_access:\n      - all:admin\n    update_password: on_create\n    state: present\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Change the user \"johnd's\" role and shell\n  bigip_user:\n    username_credential: johnd\n    partition_access:\n      - NewPartition:manager\n    shell: tmsh\n    state: present\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Make the user 'johnd' an admin and set to advanced shell\n  bigip_user:\n    name: johnd\n    partition_access:\n      - all:admin\n    shell: bash\n    state: present\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Remove the user 'johnd'\n  bigip_user:\n    name: johnd\n    state: absent\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Update password\n  bigip_user:\n    state: present\n    username_credential: johnd\n    password_credential: newsupersecretpassword\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n# Note that the second time this task runs, it would fail because\n# The password has been changed. Therefore, it is recommended that\n# you either,\n#\n#   * Put this in its own playbook that you run when you need to\n#   * Put this task in a `block`\n#   * Include `ignore_errors` on this task\n- name: Change the Admin password\n  bigip_user:\n    state: present\n    username_credential: admin\n    password_credential: NewSecretPassword\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Change the root user's password\n  bigip_user:\n    username_credential: root\n    password_credential: secret\n    state: present\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_vcmp_guest": {
    "doc": {
      "description": "Manages vCMP (Virtual Clustered Multiprocessing) guests on a BIG-IP. This functionality only exists on actual hardware and must be enabled by provisioning C(vcmp) with the C(bigip_provision) module.",
      "has_action": false,
      "notes": "This module can take a lot of time to deploy vCMP guests. This is an intrinsic limitation of the vCMP system, because it is booting real VMs on the BIG-IP device. This boot time is very similar in length to the time it takes to boot VMs on any other virtualization platform; public or private.\nWhen BIG-IP starts, the VMs are booted sequentially; not in parallel. This means it is not unusual for a vCMP host with many guests to take a long time (60+ minutes) to reboot and bring all the guests online. The BIG-IP chassis will be available before all vCMP guests are online.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "allowed_slots": {
          "aliases": [],
          "description": "Contains those slots to which the guest is allowed to be assigned.\nWhen the host determines which slots this guest should be assigned, only slots in this list are considered.\nThis is a good way to force guests to be assigned only to particular slots, or, by configuring disjoint C(allowed_slots) on two guests, that those guests are never assigned to the same slot.\nBy default, this list includes every available slot in the cluster. This means the guest may be assigned to any slot by default.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "cores_per_slot": {
          "aliases": [],
          "description": "Specifies the number of cores the system allocates to the guest.\nEach core represents a portion of CPU and memory. Therefore, the amount of memory allocated per core is directly tied to the amount of CPU. This amount of memory varies per hardware platform type.\nThe number you can specify depends on the type of hardware you have.\nIn the event of a reboot, the system persists the guest to the same slot on which it ran prior to the reboot.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "delete_virtual_disk": {
          "aliases": [],
          "description": "When C(state) is C(absent), the system additionally deletes the virtual disk associated with the vCMP guest. By default, this value is C(no).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "initial_hotfix": {
          "aliases": [],
          "description": "Specifies the hotfix ISO image file which is applied on top of the base image.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "initial_image": {
          "aliases": [],
          "description": "Specifies the base software release ISO image file for installing the TMOS hypervisor instance and any licensed BIG-IP modules onto the guest's virtual disk. When creating a new guest, this parameter is required. Ensure this image is present on the VCMP host and not only on the VCMP guest. Also, the file reference for this image should be the one present on the host and not on the guest.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mgmt_address": {
          "aliases": [],
          "description": "Specifies the IP address and subnet or subnet mask you use to access the guest when you want to manage a module running within the guest. This parameter is required if the C(mgmt_network) parameter is C(bridged).\nWhen creating a new guest, if you do not specify a network or network mask, a default of C(/24) (C(255.255.255.0)) is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mgmt_network": {
          "aliases": [],
          "description": "Specifies the method by which the management address is used in the vCMP guest.\nWhen C(bridged), specifies the guest can communicate with the vCMP host's management network.\nWhen C(isolated), specifies the guest is isolated from the vCMP host's management network. In this case, the only way a guest can communicate with the vCMP host is through the console port or through a self IP address on the guest that allows traffic through port 22.\nWhen C(host only), prevents the guest from installing images and hotfixes other than those provided by the hypervisor.\nIf the guest setting is C(isolated) or C(host only), the C(mgmt_address) does not apply.\nFor mode changing, changing C(bridged) to C(isolated) causes the vCMP host to remove all of the guest's management interfaces from its bridged management network. This immediately disconnects the guest's VMs from the physical management network. Changing C(isolated) to C(bridged) causes the vCMP host to dynamically add the guest's management interfaces to the bridged management network. This immediately connects all of the guest's VMs to the physical management network. Changing this property while the guest is in the C(configured) or C(provisioned) state has no immediate effect.",
          "type": "str",
          "required": false,
          "choices": [
            "bridged",
            "isolated",
            "host only"
          ],
          "suboptions": {}
        },
        "mgmt_route": {
          "aliases": [],
          "description": "Specifies the gateway address for the C(mgmt_address).\nIf this value is not specified when creating a new guest, it is set to C(none).\nThe value C(none) can be used during an update to remove this value.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "min_number_of_slots": {
          "aliases": [],
          "description": "Specifies the minimum number of slots the guest must be assigned to in order to deploy.\nThis field dictates the number of slots to which the guest must be assigned.\nAt the end of any allocation attempt, if the guest is not assigned to at least this many slots, the attempt fails and the change that initiated it is reverted.\nA guest's C(min_number_of_slots) value cannot be greater than its C(number_of_slots).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the vCMP guest to manage.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "number_of_slots": {
          "aliases": [],
          "description": "Specifies the number of slots for the system to use when creating the guest.\nThis value dictates how many cores a guest is allocated from each slot to which it is assigned.\nPossible values are dependent on the type of blades being used in this cluster.\nThe default value depends on the type of blades being used in this cluster.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "The state of the vCMP guest on the system. Each state implies the actions of all states before it.\nWhen C(configured), guarantees the vCMP guest exists with the provided attributes. Additionally, ensures the vCMP guest is turned off.\nWhen C(disabled), behaves the same way as C(configured), it is just a more user-friendly name.\nWhen C(provisioned), ensures the guest is created and installed. This state does not start the guest; use C(deployed) for that purpose. This state is one step beyond C(present), as C(present) does not install the guest; only sets up the configuration for it to be installed.\nWhen C(present), ensures the guest is properly provisioned and starts the guest so that it is in a running state.\nWhen C(absent), removes the vCMP from the system.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "configured",
            "disabled",
            "provisioned",
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "vlans": {
          "aliases": [],
          "description": "VLANs the guest uses to communicate with other guests, the host, and with the external network. The available VLANs in the list are those that are currently configured on the vCMP host.\nThe order of these VLANs is not important and is ignored. This module orders the VLANs automatically. Therefore, if you deliberately re-order them in subsequent tasks, this module does B(not) register a change.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "short_description": "Manages vCMP guests on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a vCMP guest\n  bigip_vcmp_guest:\n    name: foo\n    mgmt_network: bridge\n    mgmt_address: 10.20.30.40/24\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Create a vCMP guest with specific VLANs\n  bigip_vcmp_guest:\n    name: foo\n    mgmt_network: bridge\n    mgmt_address: 10.20.30.40/24\n    vlans:\n      - vlan1\n      - vlan2\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove vCMP guest and disk\n  bigip_vcmp_guest:\n    name: guest1\n    state: absent\n    delete_virtual_disk: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  register: result\n"
  },
  "f5networks.f5_modules.bigip_virtual_address": {
    "doc": {
      "description": "Manage LTM virtual addresses on a BIG-IP system.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "address": {
          "aliases": [],
          "description": "Specifies the virtual address. This value cannot be modified after it is set.\nIf you never created a virtual address, but did create virtual servers, a virtual address for each virtual server was created automatically. The name of this virtual address is its IP address value.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "arp": {
          "aliases": [],
          "description": "Specifies whether the system accepts ARP requests.\nWhen C(no), specifies the system does not accept ARP requests.\nWhen C(yes), the packets are dropped.\nBoth ARP and ICMP Echo must be disabled in order for forwarding virtual servers using that virtual address to forward ICMP packets.\nWhen creating a new virtual address, if this parameter is not specified, the default value is C(yes).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auto_delete": {
          "aliases": [],
          "description": "Specifies whether the system automatically deletes the virtual address with the deletion of the last associated virtual server. When C(no), specifies the system leaves the virtual address, even when all associated virtual servers have been deleted. When creating the virtual address, the default value is C(yes).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "availability_calculation": {
          "aliases": [
            "advertise_route"
          ],
          "description": "Specifies which routes of the virtual address the system advertises. When C(when_any_available), advertises the route when any virtual server is available. When C(when_all_available), advertises the route when all virtual servers are available. When (always), always advertises the route regardless of the virtual servers available.",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "when_all_available",
            "when_any_available"
          ],
          "suboptions": {}
        },
        "connection_limit": {
          "aliases": [],
          "description": "Specifies the number of concurrent connections the system allows on this virtual address.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "icmp_echo": {
          "aliases": [],
          "description": "Specifies how the system sends responses to (ICMP) echo requests on a per-virtual address basis for enabling route advertisement. When C(enabled), the BIG-IP system intercepts ICMP echo request packets and responds to them directly. When C(disabled), the BIG-IP system passes ICMP echo requests through to the backend servers. When (selective), causes the BIG-IP system to internally enable or disable responses based on virtual server state; C(when_any_available), C(when_all_available, or C(always), regardless of the state of any virtual servers.",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled",
            "selective"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the virtual address.\nIf this parameter is not provided, the system uses the value of C(address).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "netmask": {
          "aliases": [],
          "description": "Specifies the netmask of the provided virtual address. This value cannot be modified after it is set.\nWhen creating a new virtual address, if this parameter is not specified, the default value is C(255.255.255.255) for IPv4 addresses and C(ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff) for IPv6 addresses.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "route_advertisement": {
          "aliases": [],
          "description": "Specifies whether the system uses route advertisement for this virtual address.\nWhen disabled, the system does not advertise routes for this virtual address.\nThe majority of these options are only supported on versions 13.0.0-HF1 or later. On versions prior than this, all choices expect C(disabled) translate to C(enabled).\nWhen C(always), the BIG-IP system always advertises the route for the virtual address, regardless of availability status. This requires an C(enabled) virtual address.\nWhen C(enabled), the BIG-IP system advertises the route for the available virtual address, based on the calculation method in the availability calculation.\nWhen C(disabled), the BIG-IP system does not advertise the route for the virtual address, regardless of the availability status.\nWhen C(selective), you can also selectively enable ICMP echo responses, which causes the BIG-IP system to internally enable or disable responses based on virtual server state.\nWhen C(any), the BIG-IP system advertises the route for the virtual address when any virtual server is available.\nWhen C(all), the BIG-IP system advertises the route for the virtual address when all virtual servers are available.",
          "type": "str",
          "required": false,
          "choices": [
            "disabled",
            "enabled",
            "always",
            "selective",
            "any",
            "all"
          ],
          "suboptions": {}
        },
        "route_domain": {
          "aliases": [],
          "description": "The route domain of the C(address) you want to use.\nThis value cannot be modified after it is set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "spanning": {
          "aliases": [],
          "description": "Enables all BIG-IP systems in a device group to listen for and process traffic on the same virtual address.\nSpanning for a virtual address occurs when you enable the C(spanning) option on a device, and then sync the virtual address to the other members of the device group.\nSpanning also relies on the upstream router to distribute application flows to the BIG-IP systems using ECMP routes. ECMP defines a route to the virtual address using distinct Floating self-IP addresses configured on each BIG-IP system.\nYou must also configure MAC masquerade addresses and disable C(arp) on the virtual address when Spanning is enabled.\nWhen creating a new virtual address, if this parameter is not specified, the default valus is C(no).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The virtual address state. If C(absent), the system makes an attempt to delete the virtual address. This will only succeed if this virtual address is not in use by a virtual server. C(present) creates the virtual address and enables it. If C(enabled), enables the virtual address if it exists. If C(disabled), creates the virtual address if needed, and sets the state to C(disabled).",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "traffic_group": {
          "aliases": [],
          "description": "The traffic group for the virtual address. When creating a new address, if this value is not specified, the default is C(/Common/traffic-group-1).",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage LTM virtual addresses on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add virtual address\n  bigip_virtual_address:\n    state: present\n    partition: Common\n    address: 10.10.10.10\n    provider:\n      server: lb.mydomain.net\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Enable route advertisement on the virtual address\n  bigip_virtual_address:\n    state: present\n    address: 10.10.10.10\n    route_advertisement: any\n    provider:\n      server: lb.mydomain.net\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_virtual_server": {
    "doc": {
      "description": "Manage LTM virtual servers on a BIG-IP system.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "address_translation": {
          "aliases": [],
          "description": "When C(enabled), specifies the system translates the address of the virtual server.\nWhen C(disabled), specifies the system uses the address without translation.\nThis option is useful when the system is load balancing devices that have the same IP address.\nWhen creating a new virtual server, the default is C(enabled).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auto_last_hop": {
          "aliases": [],
          "description": "Allows the BIG-IP system to track the source MAC address of incoming connections and return traffic from pools to the source MAC address, regardless of the routing table.",
          "type": "str",
          "required": false,
          "choices": [
            "default",
            "enabled",
            "disabled"
          ],
          "version_added": "1.13.0",
          "suboptions": {}
        },
        "bypass_module_checks": {
          "aliases": [],
          "description": "Disables all built-in module verification checks that require BIG-IP device calls. Using this option cuts down on the number of REST calls made by this module. The trade off is that most parameters are sent as is, which requires extra care when defining them.\nThe device is the final source of truth for such configurations, usable in cases where speed is preferred over accuracy.\nIf set to C(yes), the module ignores the value op C(check_profiles) parameter.\nThis parameter can be used when creating new or updating existing resources.",
          "default": "False",
          "type": "bool",
          "required": false,
          "version_added": "1.3.0",
          "suboptions": {}
        },
        "check_profiles": {
          "aliases": [],
          "description": "Specifies whether the client and server SSL profiles specified by the user should be verified to be correct against the existing profiles. This is useful in cases where a large number of profiles are being added at once.\nNot recommended for common use. In case of duplicate profiles, or erroneous profiles, the BIG-IP throws an error.",
          "default": "True",
          "type": "bool",
          "required": false,
          "version_added": "1.2.0",
          "suboptions": {}
        },
        "clone_pools": {
          "aliases": [],
          "description": "Specifies a pool or list of pools that the virtual server uses to replicate either client-side or server-side traffic.\nTypically this option is used for intrusion detection.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "context": {
              "aliases": [],
              "description": "The context option for a clone pool to replicate either client-side or server-side traffic.",
              "type": "str",
              "required": true,
              "choices": [
                "clientside",
                "serverside"
              ],
              "suboptions": {}
            },
            "pool_name": {
              "aliases": [],
              "description": "The pool name to which the server replicates the traffic.\nOnly pools created on the Common partition or on the same partition as the virtual server can be used.\nReferencing a pool on the Common partition needs to be done in the full path format, for example, C(/Common/pool_name).",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "default_persistence_profile": {
          "aliases": [],
          "description": "Default profile which manages the session persistence.\nIf you want to remove the existing default persistence profile, specify an empty value; C(\"\"). See the documentation for an example.\nWhen C(type) is C(dhcp), this parameter is ignored.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Virtual server description.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "destination": {
          "aliases": [
            "address",
            "ip"
          ],
          "description": "Destination IP of the virtual server.\nRequired when C(state) is C(present) and the virtual server does not exist.\nWhen C(type) is C(internal), this parameter is ignored. For all other types, it is required.\nDestination can also be specified as a name for an existing Virtual Address.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "disabled_vlans": {
          "aliases": [],
          "description": "List of VLANs to be disabled. If the partition is not specified in the VLAN, the C(partition) option of this module is used.\nThis parameter is mutually exclusive with the C(enabled_vlans) parameters.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "enabled_vlans": {
          "aliases": [],
          "description": "List of VLANs to enable. When a VLAN named C(all) is used, all VLANs will be allowed. VLANs can be specified with or without the leading partition. If the partition is not specified in the VLAN, the C(partition) option of this module is used.\nThis parameter is mutually exclusive with the C(disabled_vlans) parameter.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "fallback_persistence_profile": {
          "aliases": [],
          "description": "Specifies the persistence profile you want the system to use if it cannot use the specified default persistence profile.\nIf you want to remove the existing fallback persistence profile, specify an empty value; C(\"\"). See the documentation for an example.\nWhen C(type) is C(dhcp), this parameter is ignored.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "firewall_enforced_policy": {
          "aliases": [],
          "description": "Applies the specified AFM policy to the virtual in an enforcing way.\nWhen creating a new virtual, if this parameter is not specified, the enforced policy is disabled.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "firewall_staged_policy": {
          "aliases": [],
          "description": "Applies the specified AFM policy to the virtual in an enforcing way.\nA staged policy shows the results of the policy rules in the log, while not actually applying the rules to traffic.\nWhen creating a new virtual, if this parameter is not specified, the staged policy is disabled.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "insert_metadata": {
          "aliases": [],
          "description": "When set to C(no), the module does not set metadata on the device.\nCurrently there is a limitation that non-admin users cannot set metadata on the object, despite being able to create and modify virtual server objects. Setting this option to C(no) allows such users to use this module to manage virtual server objects on the device.\nAttempting to change C(state) on Virtual Server that belongs to an iAPP with strict updates enabled will result in error message returned by device, unless C(insert_metadata) parameter is set to C(no).",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ip_intelligence_policy": {
          "aliases": [],
          "description": "Specifies the IP intelligence policy applied to the virtual server.\nThis parameter requires a valid BIG-IP security module is provisioned, such as ASM or AFM.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ip_protocol": {
          "aliases": [],
          "description": "Specifies a network protocol name you want the system to use to direct traffic on this virtual server.\nWhen creating a new virtual server, if this parameter is not specified, the default is C(tcp).\nThe Protocol setting is not available when you select Performance (HTTP) as the C(Type).\nThe value of this argument can be specified in either its numeric value, or in a select number of named values. Refer to C(choices) for examples.\nFor a list of valid IP protocol numbers, refer to https://en.wikipedia.org/wiki/List_of_IP_protocol_numbers.\nWhen C(type) is C(dhcp), this module forces the C(ip_protocol) parameter to C(17) (UDP).",
          "type": "str",
          "required": false,
          "choices": [
            "ah",
            "any",
            "bna",
            "esp",
            "etherip",
            "gre",
            "icmp",
            "ipencap",
            "ipv6",
            "ipv6-auth",
            "ipv6-crypt",
            "ipv6-icmp",
            "isp-ip",
            "mux",
            "ospf",
            "sctp",
            "tcp",
            "udp",
            "udplite"
          ],
          "suboptions": {}
        },
        "irules": {
          "aliases": [
            "all_rules"
          ],
          "description": "Specifies a list of rules to be applied in priority order.\nIf you want to remove existing iRules, specify a single empty value; C(\"\"). See the documentation for an example.\nThe order in which iRules are specified does matter, so a list that contains the same list elements but in a different order in the playbook will make changes on the device.\nWhen C(type) is C(dhcp), C(stateless), C(reject), or C(internal), this parameter is ignored.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "mask": {
          "aliases": [],
          "description": "Specifies the destination address network mask. This parameter works with IPv4 and IPv6 addresses.\nThis is an optional parameter which can be specified when creating or updating virtual server.\nIf C(destination) is set in CIDR notation format and C(mask) is provided, the C(mask) parameter takes precedence.\nIf you specify a catchall destination (for example, C(0.0.0.0) for IPv4, C(::) for IPv6) the mask parameter is set to C(any) or C(any6) respectively.\nWhen the C(destination) is not in CIDR notation and a C(mask) is not specified, C(255.255.255.255) or C(ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff) is set for IPv4 and IPv6 addresses respectively.\nWhen C(destination) is provided in CIDR notation format and a C(mask) is not specified, the mask parameter is inferred from C(destination).\nWhen C(destination) is provided as a virtual address name, and a C(mask) is not specified, the mask will be C(None), allowing device set it with its internal defaults.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "metadata": {
          "aliases": [],
          "description": "Arbitrary key/value pairs you can attach to a virtual server. This is useful in situations where you want to annotate a virtual to be managed by Ansible.\nKey names are stored as strings; this includes names that are numbers.\nValues for all of the keys are stored as strings; this includes values that are numbers.\nData is persisted, not ephemeral.",
          "type": "raw",
          "required": false,
          "suboptions": {}
        },
        "mirror": {
          "aliases": [],
          "description": "Specifies the system mirrors connections on each member of a redundant pair.\nWhen creating a new virtual server, if this parameter is not specified, the default is C(disabled).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "vs"
          ],
          "description": "Virtual server name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "policies": {
          "aliases": [
            "all_policies"
          ],
          "description": "Specifies the policies for the virtual server.\nWhen C(type) is C(dhcp), C(reject), or C(internal), this parameter is ignored.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "pool": {
          "aliases": [],
          "description": "Default pool for the virtual server.\nIf you want to remove the existing pool, specify an empty value; C(\"\"). See the documentation for an example.\nWhen creating a new virtual server, and C(type) is C(stateless), this parameter is required.\nIf C(type) is C(stateless), the C(pool) must not have any members which define a C(rate_limit).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "Port of the virtual server. Required when C(state) is C(present) and the virtual server does not exist.\nIf you do not want to specify a particular port, use the value C(0). This means the virtual server listens on any port.\nWhen C(type) is C(dhcp), this module forces the C(port) parameter to C(67).\nWhen C(type) is C(internal), this module forces the C(port) parameter to C(0).\nIn addition to specifying a port number, a select number of service names may also be provided.\nThe string C(ftp) may be substituted for for port C(21).\nThe string C(http) may be substituted for for port C(80).\nThe string C(https) may be substituted for for port C(443).\nThe string C(telnet) may be substituted for for port C(23).\nThe string C(smtp) may be substituted for for port C(25).\nThe string C(snmp) may be substituted for for port C(161).\nThe string C(snmp-trap) may be substituted for for port C(162).\nThe string C(ssh) may be substituted for for port C(22).\nThe string C(tftp) may be substituted for for port C(69).\nThe string C(isakmp) may be substituted for for port C(500).\nThe string C(mqtt) may be substituted for for port C(1883).\nThe string C(mqtt-tls) may be substituted for for port C(8883).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port_translation": {
          "aliases": [],
          "description": "When C(enabled), specifies the system translates the port of the virtual server.\nWhen C(disabled), specifies the system uses the port without translation. Turning off port translation for a virtual server is useful if you want to use the virtual server to load balance connections to any service.\nWhen creating a new virtual server, the default is C(enabled).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "profiles": {
          "aliases": [
            "all_profiles"
          ],
          "description": "List of profiles (HTTP, ClientSSL, ServerSSL, etc) to apply to both sides of the connection (client-side and server-side).\nIf you only want to apply a particular profile to the client-side of the connection, specify C(client-side) for the profile's C(context).\nIf you only want to apply a particular profile to the server-side of the connection, specify C(server-side) for the profile's C(context).\nIf C(context) is not provided, it will default to C(all).\nIf you want to remove a profile from the list of profiles currently active on the virtual, simply remove it from the C(profiles) list. See examples for an illustration of this.\nIf you want to add a profile to the list of profiles currently active on the virtual, simply add it to the C(profiles) list. See examples for an illustration of this.\nB(Profiles are important). This module will fail to configure a BIG-IP if you mix up your profiles, or if you attempt to set an IP protocol which your current, or new, profiles do not support. Both this module, and BIG-IP, will report an error if this is incorrect, resembling C(lists profiles incompatible with its protocol).\nIf you are unsure what the correct profile combinations are, we suggest having a BIG-IP available in which you can make changes and copy what the correct combinations are.\nTo use C(http2) in full proxy to enable C(HTTP MRF Router) option seen in the GUI you need to assign C(/Common/httprouter) profile with C(context) set to C(all). See the bottom of examples section below.",
          "type": "raw",
          "required": false,
          "suboptions": {
            "context": {
              "aliases": [],
              "description": "The side of the connection on which the profile should be applied.",
              "default": "all",
              "type": "str",
              "required": false,
              "choices": [
                "all",
                "server-side",
                "client-side"
              ],
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the profile.\nThis must be specified if a context is specified.\nIf this is not specified, it is assumed the profile item is only a name of a profile.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rate_limit": {
          "aliases": [],
          "description": "Virtual server rate limit (connections-per-second). Setting this to C(0) disables the limit.\nThe valid value range is C(0) - C(4294967295).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "rate_limit_dst_mask": {
          "aliases": [],
          "description": "Specifies a mask, in bits, to be applied to the destination address as part of the rate limiting.\nThe default value is C(0), which is equivalent to using the entire address - C(32) in IPv4, or C(128) in IPv6.\nThe valid value range is C(0) - C(4294967295).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "rate_limit_mode": {
          "aliases": [],
          "description": "Indicates whether the rate limit is applied per virtual object, per source address, per destination address, or some combination thereof.\nThe default value is C(object), which does not use the source or destination address as part of the key.",
          "default": "object",
          "type": "str",
          "required": false,
          "choices": [
            "object",
            "object-source",
            "object-destination",
            "object-source-destination",
            "destination",
            "source",
            "source-destination"
          ],
          "suboptions": {}
        },
        "rate_limit_src_mask": {
          "aliases": [],
          "description": "Specifies a mask, in bits, to be applied to the source address as part of the rate limiting.\nThe default value is C(0), which is equivalent to using the entire address - C(32) in IPv4, or C(128) in IPv6.\nThe valid value range is C(0) - C(4294967295).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "security_log_profiles": {
          "aliases": [],
          "description": "Specifies the log profile applied to the virtual server.\nTo make use of this feature, the AFM module must be licensed and provisioned.\nThe C(Log all requests) and C(Log illegal requests) are mutually exclusive and therefore, this module raises an error if the two are specified together.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_nat_policy": {
          "aliases": [],
          "description": "Specify the Firewall NAT policies for the virtual server.\nYou can specify one or more NAT policies to use.\nThe most specific policy is used. For example, if you specify the virtual server should use the device policy and the route domain policy, the route domain policy overrides the device policy.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "policy": {
              "aliases": [],
              "description": "Specifies the policy to apply a NAT policy directly to the virtual server.\nThe virtual server NAT policy is the most specific, and overrides a route domain and device policy, if specified.\nTo remove the policy, specify an empty string value.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "use_device_policy": {
              "aliases": [],
              "description": "Specifies the virtual server uses the device NAT policy, as specified in the Firewall Options.\nThe device policy is used if no route domain or virtual server NAT setting is specified.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "use_route_domain_policy": {
              "aliases": [],
              "description": "Specifies the virtual server uses the route domain policy, as specified in the Route Domain Security settings.\nWhen specified, the route domain policy overrides the device policy, and is overridden by a virtual server policy.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "snat": {
          "aliases": [],
          "description": "Source network address policy.\nWhen C(type) is C(dhcp), C(reject), or C(internal), this parameter is ignored.\nThe name of a SNAT pool (like \"/Common/snat_pool_name\") can be specified to enable SNAT with the specific pool.\nTo remove SNAT, specify the word C(none).\nTo specify automap, use the word C(automap).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source": {
          "aliases": [],
          "description": "Specifies an IP address or network from which the virtual server accepts traffic.\nThe virtual server accepts clients only from one of these IP addresses.\nFor this setting to function effectively, specify a value other than 0.0.0.0/0 or ::/0 (that is, any/0, any6/0).\nIn order to maximize the utility of this setting, specify the most specific address prefixes covering all customer addresses and no others.\nSpecify the IP address in Classless Inter-Domain Routing (CIDR) format; address/prefix, where the prefix length is in bits. For example, for IPv4, 10.0.0.1/32 or 10.0.0.0/24, and for IPv6, ffe1::0020/64 or 2001:ed8:77b5:2:10:10:100:42/64.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_port": {
          "aliases": [],
          "description": "Specifies whether the system preserves the source port of the connection.\nWhen creating a new virtual server, if this parameter is not specified, the default is C(preserve).",
          "type": "str",
          "required": false,
          "choices": [
            "preserve",
            "preserve-strict",
            "change"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The virtual server state. If C(absent), deletes the virtual server if it exists. If C(present), creates the virtual server and enables it. If C(enabled), enables the virtual server if it exists. If C(disabled), creates the virtual server if needed, and sets the state to C(disabled).\nAttempting to change C(state) on a virtual server that belongs to an iAPP with strict updates enabled will result in an error message returned by device, unless C(insert_metadata) parameter is set to C(no).",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Specifies the network service provided by this virtual server.\nWhen creating a new virtual server, if this parameter is not provided, the default is C(standard).\nThis value cannot be changed after it is set.\nWhen C(standard), specifies a virtual server that directs client traffic to a load balancing pool, and is the most basic type of virtual server. When you first create the virtual server, you assign an existing default pool to it. From then on, the virtual server automatically directs traffic to that default pool.\nWhen C(forwarding-l2), specifies a virtual server that shares the same IP address as a node in an associated VLAN.\nWhen C(forwarding-ip), specifies a virtual server like other virtual servers, except the virtual server has no pool members to load balance. The virtual server simply forwards the packet directly to the destination IP address specified in the client request.\nWhen C(performance-http), specifies a virtual server with which you associate a Fast HTTP profile. Together, the virtual server and profile increase the speed at which the virtual server processes HTTP requests.\nWhen C(performance-l4), specifies a virtual server with which you associate a Fast L4 profile. Together, the virtual server and profile increase the speed at which the virtual server processes layer 4 requests.\nWhen C(stateless), specifies a virtual server that accepts traffic matching the virtual server address and load balances the packet to the pool members without attempting to match the packet to a pre-existing connection in the connection table. New connections are immediately removed from the connection table. This addresses the requirement for one-way UDP traffic that needs to be processed at very high throughput levels, for example, load balancing syslog traffic to a pool of syslog servers. Stateless virtual servers are not suitable for processing traffic requiring stateful tracking, such as TCP traffic. Stateless virtual servers do not support iRules, persistence, connection mirroring, rateshaping, or SNAT automap.\nWhen C(reject), specifies the BIG-IP system rejects any traffic destined for the virtual server IP address.\nWhen C(dhcp), specifies a virtual server that relays Dynamic Host Control Protocol (DHCP) client requests for an IP address to one or more DHCP servers, and provides DHCP server responses with an available IP address for the client.\nWhen C(internal), specifies a virtual server that supports modification of HTTP requests and responses. Internal virtual servers enable the use of ICAP (Internet Content Adaptation Protocol) servers to modify HTTP requests and responses by creating and applying an ICAP profile and adding Request Adapt or Response Adapt profiles to the virtual server.\nWhen C(message-routing), specifies a virtual server that uses a SIP application protocol and functions in accordance with a SIP session profile and SIP router profile.",
          "default": "standard",
          "type": "str",
          "required": false,
          "choices": [
            "standard",
            "forwarding-l2",
            "forwarding-ip",
            "performance-http",
            "performance-l4",
            "stateless",
            "reject",
            "dhcp",
            "internal",
            "message-routing"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage LTM virtual servers on a BIG-IP",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Modify Port of the Virtual Server\n  bigip_virtual_server:\n    state: present\n    partition: Common\n    name: my-virtual-server\n    port: 8080\n    provider:\n      server: lb.mydomain.net\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Delete virtual server\n  bigip_virtual_server:\n    state: absent\n    partition: Common\n    name: my-virtual-server\n    provider:\n      server: lb.mydomain.net\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add virtual server\n  bigip_virtual_server:\n    state: present\n    partition: Common\n    name: my-virtual-server\n    destination: 10.10.10.10\n    port: 443\n    pool: my-pool\n    snat: Automap\n    description: Test Virtual Server\n    profiles:\n      - http\n      - fix\n      - name: clientssl\n        context: server-side\n      - name: ilx\n        context: client-side\n    policies:\n      - my-ltm-policy-for-asm\n      - ltm-uri-policy\n      - ltm-policy-2\n      - ltm-policy-3\n    enabled_vlans:\n      - /Common/vlan2\n    provider:\n      server: lb.mydomain.net\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add FastL4 virtual server\n  bigip_virtual_server:\n    destination: 1.1.1.1\n    name: fastl4_vs\n    port: 80\n    profiles:\n      - fastL4\n    state: present\n    provider:\n      server: lb.mydomain.net\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add iRules to the Virtual Server\n  bigip_virtual_server:\n    name: my-virtual-server\n    irules:\n      - irule1\n      - irule2\n    provider:\n      server: lb.mydomain.net\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Remove one iRule from the Virtual Server\n  bigip_virtual_server:\n    name: my-virtual-server\n    irules:\n      - irule2\n    provider:\n      server: lb.mydomain.net\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Remove all iRules from the Virtual Server\n  bigip_virtual_server:\n    name: my-virtual-server\n    irules: \"\"\n    provider:\n      server: lb.mydomain.net\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Remove pool from the Virtual Server\n  bigip_virtual_server:\n    name: my-virtual-server\n    pool: \"\"\n    provider:\n      server: lb.mydomain.net\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add metadata to virtual\n  bigip_virtual_server:\n    name: my-virtual-server\n    partition: Common\n    metadata:\n      ansible: 2.4\n      updated_at: 2017-12-20T17:50:46Z\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add virtual with two profiles\n  bigip_virtual_server:\n    name: my-virtual-server\n    partition: Common\n    profiles:\n      - http\n      - tcp\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Remove HTTP profile from previous virtual\n  bigip_virtual_server:\n    name: my-virtual-server\n    partition: Common\n    profiles:\n      - tcp\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add the HTTP profile back to the previous virtual\n  bigip_virtual_server:\n    name: my-virtual-server\n    partition: Common\n    profiles:\n      - http\n      - tcp\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add virtual server with rate limit\n  bigip_virtual_server:\n    state: present\n    partition: Common\n    name: my-virtual-server\n    destination: 10.10.10.10\n    port: 443\n    pool: my-pool\n    snat: Automap\n    description: Test Virtual Server\n    profiles:\n      - http\n      - fix\n      - name: clientssl\n        context: server-side\n      - name: ilx\n        context: client-side\n    policies:\n      - my-ltm-policy-for-asm\n      - ltm-uri-policy\n      - ltm-policy-2\n      - ltm-policy-3\n    enabled_vlans:\n      - /Common/vlan2\n    rate_limit: 400\n    rate_limit_mode: destination\n    rate_limit_dst_mask: 32\n    provider:\n      server: lb.mydomain.net\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add FastL4 virtual server with clone_pools\n  bigip_virtual_server:\n    destination: 1.1.1.1\n    name: fastl4_vs\n    port: 80\n    profiles:\n      - fastL4\n    state: present\n    clone_pools:\n      - pool_name: FooPool\n        context: clientside\n    provider:\n      server: lb.mydomain.net\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Add virtual with MRF router option set\n  bigip_virtual_server:\n    name: my-virtual-server\n    destination: 10.10.10.10\n    port: 443\n    partition: Common\n    profiles:\n      - http\n      - tcp\n      - name: noneg-ssl\n        context: client-side\n      - name: http2\n        context: client-side\n      - name: httprouter\n        context: all\n    provider:\n      server: lb.mydomain.net\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_vlan": {
    "doc": {
      "description": "Manage VLANs on a BIG-IP system",
      "has_action": false,
      "notes": "Requires BIG-IP versions >= 12.0.0\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "cmp_hash": {
          "aliases": [],
          "description": "Specifies how the traffic on the VLAN is disaggregated. The value you select determines the traffic disaggregation method. You can choose to disaggregate traffic based on C(source-address) (the source IP address), C(destination-address) (destination IP address), or C(default), which specifies the default CMP hash uses L4 ports.\nWhen creating a new VLAN, if this parameter is not specified, the default is C(default).",
          "type": "str",
          "required": false,
          "choices": [
            "default",
            "destination-address",
            "source-address",
            "dst-ip",
            "src-ip",
            "dest",
            "destination",
            "source",
            "dst",
            "src"
          ],
          "suboptions": {}
        },
        "dag_round_robin": {
          "aliases": [],
          "description": "Specifies whether some of the stateless traffic on the VLAN should be disaggregated in a round-robin order instead of using a static hash. The stateless traffic includes non-IP L2 traffic, ICMP, some UDP protocols, and so on.\nWhen creating a new VLAN, if this parameter is not specified, the default is (no).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "dag_tunnel": {
          "aliases": [],
          "description": "Specifies how the disaggregator (DAG) distributes received tunnel-encapsulated packets to TMM instances. Select C(inner) to distribute packets based on information in inner headers. Select C(outer) to distribute packets based on information in outer headers without inspecting inner headers.\nWhen creating a new VLAN, if this parameter is not specified, the default is C(outer).\nThis parameter is not supported on Virtual Editions (VEs) of BIG-IP.",
          "type": "str",
          "required": false,
          "choices": [
            "inner",
            "outer"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description of the VLAN.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "fail_safe": {
          "aliases": [],
          "description": "When C(yes), specifies the VLAN takes the specified C(fail_safe_action) if the system detects a loss of traffic on this VLAN's interfaces.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "fail_safe_action": {
          "aliases": [],
          "description": "Specifies the action the system takes when it does not detect any traffic on this VLAN, and the C(fail_safe_timeout) has expired.",
          "type": "str",
          "required": false,
          "choices": [
            "reboot",
            "restart-all",
            "failover"
          ],
          "suboptions": {}
        },
        "fail_safe_timeout": {
          "aliases": [],
          "description": "Specifies the number of seconds a system can run without detecting network traffic on this VLAN before it takes the C(fail_safe_action).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "hw_syn_cookie": {
          "aliases": [],
          "description": "Enables hardware syncookie mode on a VLAN.\nWhen C(yes), the hardware per-VLAN SYN cookie protection is triggered when the certain traffic threshold is reached on supported platforms.",
          "type": "bool",
          "required": false,
          "version_added": "1.3.0",
          "suboptions": {}
        },
        "interfaces": {
          "aliases": [],
          "description": "Interfaces you want to add to the VLAN. This can include both tagged and untagged interfaces, as the C(tagging) parameter specifies.\nThis parameter is mutually exclusive with the C(untagged_interfaces) and C(tagged_interfaces) parameters.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "interface": {
              "aliases": [],
              "description": "The name of the interface",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "tagging": {
              "aliases": [],
              "description": "Whether the interface is C(tagged) or C(untagged).",
              "type": "str",
              "required": false,
              "choices": [
                "tagged",
                "untagged"
              ],
              "suboptions": {}
            }
          }
        },
        "mtu": {
          "aliases": [],
          "description": "Specifies the maximum transmission unit (MTU) for traffic on this VLAN. When creating a new VLAN, if this parameter is not specified, the default value used is C(1500).\nThis number must be between 576 to 9198.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The VLAN to manage. If the special VLAN C(ALL) is specified with the C(state) value of C(absent), all VLANs will be removed.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "partition": {
          "aliases": [],
          "description": "Device partition to manage resources on.",
          "default": "Common",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "sflow_poll_interval": {
          "aliases": [],
          "description": "Specifies the maximum interval in seconds between two pollings.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "sflow_sampling_rate": {
          "aliases": [],
          "description": "Specifies the ratio of packets observed to the samples generated.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "source_check": {
          "aliases": [],
          "description": "When C(yes), specifies the system verifies the return route to an initial packet is the same VLAN from which the packet originated.\nThe system performs this verification only if the C(auto_last_hop) option is C(no).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the VLAN on the system. When C(present), guarantees the VLAN exists with the provided attributes. When C(absent), removes the VLAN from the system.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "tag": {
          "aliases": [],
          "description": "Tag number for the VLAN. The tag number can be any integer between 1 and 4094. The system automatically assigns a tag number if you do not specify a value.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "tagged_interfaces": {
          "aliases": [
            "tagged_interface"
          ],
          "description": "Specifies a list of tagged interfaces and trunks you want to configure for the VLAN. Use tagged interfaces or trunks when you want to assign a single interface or trunk to multiple VLANs.\nThis parameter is mutually exclusive with the C(untagged_interfaces) and C(interfaces) parameters.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "untagged_interfaces": {
          "aliases": [
            "untagged_interface"
          ],
          "description": "Specifies a list of untagged interfaces and trunks you want to configure for the VLAN.\nThis parameter is mutually exclusive with the C(tagged_interfaces) and C(interfaces) parameters.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "short_description": "Manage VLANs on a BIG-IP system",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create VLAN\n  bigip_vlan:\n    name: net1\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Set VLAN tag\n  bigip_vlan:\n    name: net1\n    tag: 2345\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Add VLAN 2345 as tagged to interface 1.1\n  bigip_vlan:\n    tagged_interface: 1.1\n    name: net1\n    tag: 2345\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Add VLAN 1234 as tagged to interfaces 1.1 and 1.2\n  bigip_vlan:\n    tagged_interfaces:\n      - 1.1\n      - 1.2\n    name: net1\n    tag: 1234\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigip_wait": {
    "doc": {
      "description": "With this module, you can wait for BIG-IP to be \"ready\", meaning the BIG-IP is ready to accept configuration.\nThis module can take into account situations where the device is in the middle of rebooting due to a configuration change.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "delay": {
          "aliases": [],
          "description": "Number of seconds to wait before starting to poll.",
          "default": "0",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "msg": {
          "aliases": [],
          "description": "This overrides the normal error message from a failure to meet the required conditions.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH keyfile to use to authenticate the connection to the remote device.  This argument is only used for I(cli) transports.\nYou may omit this option by setting the environment variable C(ANSIBLE_NET_SSH_KEYFILE).",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "cli",
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "sleep": {
          "aliases": [],
          "description": "Number of seconds to sleep between checks. Before version 2.3 this was hardcoded to 1 second.",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "Maximum number of seconds to wait.\nWhen used without other conditions, it is equivalent of just sleeping.\nThe default timeout is deliberately set to 2 hours because there is no individual REST API.",
          "default": "7200",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "The type of the BIG-IP.\nDefaults to C(standard), the other choice is C(vcmp).\nThis choice defines which module or service Ansible looks for to establish that the device has recovered, so ensure to specify the correct choice, especially when running this against VCMP.",
          "default": "standard",
          "type": "str",
          "required": false,
          "choices": [
            "standard",
            "vcmp"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Wait for a BIG-IP condition before continuing",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Wait for BIG-IP to be ready to take configuration\n  bigip_wait:\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Wait a maximum of 300 seconds for BIG-IP to be ready to take configuration\n  bigip_wait:\n    timeout: 300\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Wait for BIG-IP to be ready, don't start checking for 10 seconds\n  bigip_wait:\n    delay: 10\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigiq_application_fasthttp": {
    "doc": {
      "description": "Manages BIG-IQ applications used for load balancing an HTTP-based application, speeding up connections and reducing the number of connections to the back-end server.",
      "has_action": false,
      "notes": "This module does not support updating of your application (whether deployed or not). If you need to update the application, we recommended removing and re-creating it.\nThis module does not work on BIG-IQ version 6.1.x or greater.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "add_analytics": {
          "aliases": [],
          "description": "Collects statistics of the BIG-IP to which the application is deployed.\nThis parameter is only relevant when specifying a C(service_environment) which is a BIG-IP; not an SSG.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the application.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "inbound_virtual": {
          "aliases": [],
          "description": "Settings to configure the virtual which receives the inbound connection.\nThis virtual is used to host the HTTP endpoint of the application.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "address": {
              "aliases": [],
              "description": "Specifies destination IP address information to which the virtual server sends traffic.\nThis parameter is required when creating a new application.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "netmask": {
              "aliases": [],
              "description": "Specifies the netmask to associate with the given C(destination).\nThis parameter is required when creating a new application.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port on which the virtual listens for connections.\nWhen creating a new application, if this parameter is not specified, the default value is C(80).",
              "default": "80",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the new application.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "servers": {
          "aliases": [],
          "description": "A list of servers on which the application is hosted.\nIf you are familiar with other BIG-IP settings, you might also refer to this list as the list of pool members.\nWhen creating a new application, at least one server is required.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "address": {
              "aliases": [],
              "description": "The IP address of the server.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port of the server.\nWhen creating a new application and specifying a server, if this parameter is not provided, the default is C(80).",
              "default": "80",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "service_environment": {
          "aliases": [],
          "description": "Specifies the name of the service environment to which the application is.\nWhen creating a new application, this parameter is required.\nThe service environment type is automatically discovered by this module. Therefore, it is crucial you maintain unique names for items in the different service environment types (at this time, SSGs and BIGIPs).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the resource on the system.\nWhen C(present), guarantees the resource exists with the provided attributes.\nWhen C(absent), removes the resource from the system.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "If the module should wait for the application to be created, deleted, or updated.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages BIG-IQ FastHTTP applications",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Load balance an HTTP application on port 80 on BIG-IP\n  bigiq_application_fasthttp:\n    name: my-app\n    description: Fast HTTP\n    service_environment: my-ssg\n    servers:\n      - address: 1.2.3.4\n        port: 8080\n      - address: 5.6.7.8\n        port: 8080\n    inbound_virtual:\n      name: foo\n      address: 2.2.2.2\n      netmask: 255.255.255.255\n      port: 80\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n    state: present\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigiq_application_fastl4_tcp": {
    "doc": {
      "description": "Manages BIG-IQ applications used for load balancing a TCP-based application with a FastL4 profile.",
      "has_action": false,
      "notes": "This module does not support updating of your application (whether deployed or not). If you need to update the application, we recommend removing and re-creating it.\nThis module will not work on BIG-IQ version 6.1.x or greater.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "add_analytics": {
          "aliases": [],
          "description": "Collects statistics of the BIG-IP to which the application is deployed.\nThis parameter is only relevant when specifying a C(service_environment) which is a BIG-IP; not an SSG.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the application.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "inbound_virtual": {
          "aliases": [],
          "description": "Settings to configure the virtual which will receive the inbound connection.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "address": {
              "aliases": [],
              "description": "Specifies destination IP address information to which the virtual server sends traffic.\nThis parameter is required when creating a new application.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "netmask": {
              "aliases": [],
              "description": "Specifies the netmask to associate with the given C(destination).\nThis parameter is required when creating a new application.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port on which the virtual listens for connections.\nWhen creating a new application, if this parameter is not specified, the default value is C(8080).",
              "default": "8080",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the new application.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "servers": {
          "aliases": [],
          "description": "A list of servers on which the application is hosted.\nIf you are familiar with other BIG-IP settings, you might also refer to this list as the list of pool members.\nWhen creating a new application, at least one server is required.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "address": {
              "aliases": [],
              "description": "The IP address of the server.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port of the server.\nWhen creating a new application and specifying a server, if this parameter is not provided, the default is C(8000).",
              "default": "8000",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "service_environment": {
          "aliases": [],
          "description": "Specifies the name of service environment to which the application is deployed.\nWhen creating a new application, this parameter is required.\nThe service environment type is automatically discovered by this module. Therefore, it is crucial that you maintain unique names for items in the different service environment types.\nSSGs are not supported for this type of application.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the resource on the system.\nWhen C(present), guarantees the resource exists with the provided attributes.\nWhen C(absent), removes the resource from the system.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "If the module should wait for the application to be created, deleted, or updated.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages BIG-IQ FastL4 TCP applications",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Load balance a TCP-based application with a FastL4 profile\n  bigiq_application_fastl4_tcp:\n    name: my-app\n    description: My description\n    service_environment: my-bigip-device\n    servers:\n      - address: 1.2.3.4\n        port: 8080\n      - address: 5.6.7.8\n        port: 8080\n    inbound_virtual:\n      name: foo\n      address: 2.2.2.2\n      netmask: 255.255.255.255\n      port: 443\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n    state: present\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigiq_application_fastl4_udp": {
    "doc": {
      "description": "Manages BIG-IQ applications used for load balancing a UDP-based application. with a FastL4 profile.",
      "has_action": false,
      "notes": "This module does not support updating of your application (whether deployed or not). If you need to update the application, we recommend removing and recreating it.\nThis module will not work on BIG-IQ version 6.1.x or greater.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "add_analytics": {
          "aliases": [],
          "description": "Collects statistics of the BIG-IP to which the application is deployed.\nThis parameter is only relevant when specifying a C(service_environment) which is a BIG-IP; not an SSG.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the application.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "inbound_virtual": {
          "aliases": [],
          "description": "Settings to configure the virtual which receives the inbound connection.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "address": {
              "aliases": [],
              "description": "Specifies destination IP address information to which the virtual server sends traffic.\nThis parameter is required when creating a new application.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "netmask": {
              "aliases": [],
              "description": "Specifies the netmask to associate with the given C(destination).\nThis parameter is required when creating a new application.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port on which the virtual listens for connections.\nWhen creating a new application, if this parameter is not specified, the default value is C(53).",
              "default": "53",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the new application.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "servers": {
          "aliases": [],
          "description": "A list of servers on which the application is hosted.\nIf you are familiar with other BIG-IP settings, you might also refer to this list as the list of pool members.\nWhen creating a new application, at least one server is required.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "address": {
              "aliases": [],
              "description": "The IP address of the server.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port of the server.\nWhen creating a new application and specifying a server, if this parameter is not provided, the default is C(8000).",
              "default": "8000",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "service_environment": {
          "aliases": [],
          "description": "Specifies the name of service environment to which the application is deployed.\nWhen creating a new application, this parameter is required.\nThe service environment type is automatically discovered by this module. Therefore, it is crucial you maintain unique names for items in the different service environment types.\nSSGs are not supported for this type of application.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the resource on the system.\nWhen C(present), guarantees the resource exists with the provided attributes.\nWhen C(absent), removes the resource from the system.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "If the module should wait for the application to be created, deleted, or updated.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages BIG-IQ FastL4 UDP applications",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Load balance a UDP-based application with a FastL4 profile\n  bigiq_application_fastl4_udp:\n    name: my-app\n    description: My description\n    service_environment: my-bigip-device\n    servers:\n      - address: 1.2.3.4\n        port: 8080\n      - address: 5.6.7.8\n        port: 8080\n    inbound_virtual:\n      name: foo\n      address: 2.2.2.2\n      netmask: 255.255.255.255\n      port: 53\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n    state: present\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigiq_application_http": {
    "doc": {
      "description": "Manages BIG-IQ applications used for load balancing an HTTP application on port 80 on BIG-IP systems.",
      "has_action": false,
      "notes": "This module does not support updating of your application (whether deployed or not). If you need to update the application, we recommend removing and recreating it.\nThis module will not work on BIG-IQ version 6.1.x or greater.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "add_analytics": {
          "aliases": [],
          "description": "Collects statistics of the BIG-IP to which the application is deployed.\nThis parameter is only relevant when specifying a C(service_environment) which is a BIG-IP; not an SSG.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the application.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "inbound_virtual": {
          "aliases": [],
          "description": "Settings to configure the virtual which receives the inbound connection.\nThis virtual is used to host the HTTP endpoint of the application.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "address": {
              "aliases": [],
              "description": "Specifies destination IP address information to which the virtual server sends traffic.\nThis parameter is required when creating a new application.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "netmask": {
              "aliases": [],
              "description": "Specifies the netmask to associate with the given C(destination).\nThis parameter is required when creating a new application.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port on which the virtual listens for connections.\nWhen creating a new application, if this parameter is not specified, the default value is C(80).",
              "default": "80",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the new application.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "servers": {
          "aliases": [],
          "description": "A list of servers on which the application is hosted.\nIf you are familiar with other BIG-IP settings, you might also refer to this list as the list of pool members.\nWhen creating a new application, at least one server is required.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "address": {
              "aliases": [],
              "description": "The IP address of the server.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port of the server.\nWhen creating a new application and specifying a server, if this parameter is not provided, the default is C(80).",
              "default": "80",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "service_environment": {
          "aliases": [],
          "description": "Specifies the name of service environment to which the application is deployed.\nWhen creating a new application, this parameter is required.\nThe service environment type is automatically discovered by this module. Therefore, it is crucial that you maintain unique names for items in the different service environment types (at this time, SSGs and BIG-IPs).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the resource on the system.\nWhen C(present), guarantees the resource exists with the provided attributes.\nWhen C(absent), removes the resource from the system.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "If the module should wait for the application to be created, deleted, or updated.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages BIG-IQ HTTP applications",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Load balance an HTTP application on port 80 on BIG-IP\n  bigiq_application_http:\n    name: my-app\n    description: Redirect HTTP to HTTPS\n    service_environment: my-ssg\n    servers:\n      - address: 1.2.3.4\n        port: 8080\n      - address: 5.6.7.8\n        port: 8080\n    inbound_virtual:\n      name: foo\n      address: 2.2.2.2\n      netmask: 255.255.255.255\n      port: 443\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n    state: present\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigiq_application_https_offload": {
    "doc": {
      "description": "Manages BIG-IQ applications used for load balancing an HTTPS application on port 443 with SSL offloading on a BIG-IP.",
      "has_action": false,
      "notes": "This module will not work on BIGIQ version 6.1.x or greater.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "add_analytics": {
          "aliases": [],
          "description": "Collects statistics of the BIG-IP to which the application is deployed.\nThis parameter is only relevant when specifying a C(service_environment) which is a BIG-IP; not an SSG.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "client_ssl_profile": {
          "aliases": [],
          "description": "Specifies the SSL profile for managing client-side SSL traffic.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "cert_key_chain": {
              "aliases": [],
              "description": "One or more certificates and keys to associate with the SSL profile.\nThis option is always a list. The keys in the list dictate the details of the client/key/chain/passphrase combination.\nBIG-IPs can only have one of each type of each certificate/key type. This means you can only have one RSA, one DSA, and one ECDSA per profile.\nIf you attempt to assign two RSA, DSA, or ECDSA certificate/key combo, the device rejects it.\nThis list is a complex list that specifies a number of keys.\nWhen creating a new profile, if this parameter is not specified, the default value is C(inherit).",
              "type": "raw",
              "required": false,
              "suboptions": {
                "cert": {
                  "aliases": [],
                  "description": "Specifies a cert name for use.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "chain": {
                  "aliases": [],
                  "description": "Specifies a certificate chain that is relevant to the specified certificate and key.\nThis key is optional.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "key": {
                  "aliases": [],
                  "description": "Specifies a key name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "passphrase": {
                  "aliases": [],
                  "description": "Contains the passphrase of the key file, should it require one.\nPassphrases are encrypted on the remote BIG-IP device.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "The name of the client SSL profile to created and used.\nWhen creating a new application, if this value is not specified, the default value is C(clientssl).",
              "default": "clientssl",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "Description of the application.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "inbound_virtual": {
          "aliases": [],
          "description": "Settings to configure the virtual which receives the inbound connection.\nThis virtual is used to host the HTTPS endpoint of the application.\nTraffic destined to the C(redirect_virtual) is offloaded to this parameter to ensure proper redirection from insecure to secure occurs.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "address": {
              "aliases": [],
              "description": "Specifies destination IP address information to which the virtual server sends traffic.\nThis parameter is required when creating a new application.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "netmask": {
              "aliases": [],
              "description": "Specifies the netmask to associate with the given C(address).\nThis parameter is required when creating a new application.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port on which the virtual listens for connections.\nWhen creating a new application, if this parameter is not specified, the default value is C(443).",
              "default": "443",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the new application.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "redirect_virtual": {
          "aliases": [],
          "description": "Settings to configure the virtual which receives the connection to be redirected.\nThis virtual is used to host the HTTP endpoint of the application.\nTraffic destined to this parameter is offloaded to the C(inbound_virtual) parameter to ensure proper redirection from insecure to secure occurs.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "address": {
              "aliases": [],
              "description": "Specifies destination IP address information to which the virtual server sends traffic.\nThis parameter is required when creating a new application.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "netmask": {
              "aliases": [],
              "description": "Specifies the netmask to associate with the given C(address).\nThis parameter is required when creating a new application.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port on which the virtual listens for connections.\nWhen creating a new application, if this parameter is not specified, the default value is C(80).",
              "default": "80",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "servers": {
          "aliases": [],
          "description": "A list of servers on which the application is hosted.\nIf you are familiar with other BIG-IP settings, you might also refer to this list as the list of pool members.\nWhen creating a new application, at least one server is required.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "address": {
              "aliases": [],
              "description": "The IP address of the server.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port of the server.",
              "default": "80",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "service_environment": {
          "aliases": [],
          "description": "Specifies the name of service environment or the hostname of the BIG-IP to which the application will be deployed.\nWhen creating a new application, this parameter is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the resource on the system.\nWhen C(present), guarantees the resource exists with the provided attributes.\nWhen C(absent), removes the resource from the system.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "If the module should wait for the application to be created, deleted or updated.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages BIG-IQ HTTPS offload applications",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Load balance an HTTPS application on port 443 with SSL offloading on BIG-IP\n  bigiq_application_https_offload:\n    name: my-app\n    description: Redirect HTTP to HTTPS\n    service_environment: my-ssg\n    servers:\n      - address: 1.2.3.4\n        port: 8080\n      - address: 5.6.7.8\n        port: 8080\n    inbound_virtual:\n      address: 2.2.2.2\n      netmask: 255.255.255.255\n      port: 443\n    redirect_virtual:\n      address: 2.2.2.2\n      netmask: 255.255.255.255\n      port: 80\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n    state: present\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigiq_application_https_waf": {
    "doc": {
      "description": "Manages BIG-IQ applications used for load balancing an HTTPS application on port 443 with a Web Application Firewall (WAF) using an ASM (Application Security Manager) Rapid Deployment policy.",
      "has_action": false,
      "notes": "This module does not work on BIG-IQ version 6.1.x or greater.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "add_analytics": {
          "aliases": [],
          "description": "Collects statistics of the BIG-IP that the application is deployed to.\nThis parameter is only relevant when specifying a C(service_environment) which is a BIG-IP; not an SSG.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "client_ssl_profile": {
          "aliases": [],
          "description": "Specifies the SSL profile for managing client-side SSL traffic.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "cert_key_chain": {
              "aliases": [],
              "description": "One or more certificates and keys to associate with the SSL profile.\nThis option is always a list. The keys in the list dictate the details of the client/key/chain/passphrase combination.\nBIG-IPs can only have one of each type of each certificate/key type. This means you can only have one RSA, one DSA, and one ECDSA per profile.\nIf you attempt to assign two RSA, DSA, or ECDSA certificate/key combo, the device rejects it.\nThis list is a complex list that specifies a number of keys.\nWhen creating a new profile, if this parameter is not specified, the default value is C(inherit).",
              "type": "raw",
              "required": false,
              "suboptions": {
                "cert": {
                  "aliases": [],
                  "description": "Specifies a cert name for use.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "chain": {
                  "aliases": [],
                  "description": "Specifies a certificate chain that is relevant to the certificate and key.\nThis key is optional.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "key": {
                  "aliases": [],
                  "description": "Specifies a key name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "passphrase": {
                  "aliases": [],
                  "description": "Contains the passphrase of the key file, should it require one.\nPassphrases are encrypted on the remote BIG-IP device.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "The name of the client SSL profile to created and used.\nWhen creating a new application, if this value is not specified, the default value of C(clientssl) will be used.",
              "default": "clientssl",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "Description of the application.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "domain_names": {
          "aliases": [],
          "description": "Specifies host names that are used to access the web application that this security policy protects.\nWhen creating a new application, this parameter is required.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "inbound_virtual": {
          "aliases": [],
          "description": "Settings to configure the virtual which receives the inbound connection.\nThis virtual is used to host the HTTPS endpoint of the application.\nTraffic destined to the C(redirect_virtual) is offloaded to this parameter to ensure proper redirection from insecure to secure occurs.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "address": {
              "aliases": [],
              "description": "Specifies destination IP address information to which the virtual server sends traffic.\nThis parameter is required when creating a new application.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "netmask": {
              "aliases": [],
              "description": "Specifies the netmask to associate with the given C(destination).\nThis parameter is required when creating a new application.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port on which the virtual listens for connections.\nWhen creating a new application, if this parameter is not specified, the default value is C(443).",
              "default": "443",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the new application.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "redirect_virtual": {
          "aliases": [],
          "description": "Settings to configure the virtual which receives the connection to be redirected.\nThis virtual is used to host the HTTP endpoint of the application.\nTraffic destined to this parameter is offloaded to the C(inbound_virtual) parameter to ensure proper redirection from insecure to secure occurs.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "address": {
              "aliases": [],
              "description": "Specifies destination IP address information to which the virtual server sends traffic.\nThis parameter is required when creating a new application.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "netmask": {
              "aliases": [],
              "description": "Specifies the netmask to associate with the given C(destination).\nThis parameter is required when creating a new application.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port on which the virtual listens for connections.\nWhen creating a new application, if this parameter is not specified, the default value of C(80) will be used.",
              "default": "80",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "servers": {
          "aliases": [],
          "description": "A list of servers on which the application is hosted.\nIf you are familiar with other BIG-IP settings, you might also refer to this list as the list of pool members.\nWhen creating a new application, at least one server is required.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "address": {
              "aliases": [],
              "description": "The IP address of the server.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port of the server.",
              "default": "80",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "service_environment": {
          "aliases": [],
          "description": "Specifies the name of service environment the application will be deployed to.\nWhen creating a new application, this parameter is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the resource on the system.\nWhen C(present), guarantees the resource exists with the provided attributes.\nWhen C(absent), removes the resource from the system.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "wait": {
          "aliases": [],
          "description": "If the module should wait for the application to be created, deleted, or updated.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages BIG-IQ HTTPS WAF applications",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Load balance an HTTPS application on port 443 with a WAF using ASM\n  bigiq_application_https_waf:\n    name: my-app\n    description: Redirect HTTP to HTTPS via WAF\n    service_environment: my-ssg\n    servers:\n      - address: 1.2.3.4\n        port: 8080\n      - address: 5.6.7.8\n        port: 8080\n    inbound_virtual:\n      address: 2.2.2.2\n      netmask: 255.255.255.255\n      port: 443\n    redirect_virtual:\n      address: 2.2.2.2\n      netmask: 255.255.255.255\n      port: 80\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n    state: present\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigiq_device_discovery": {
    "doc": {
      "description": "Discovers and imports BIG-IP device configuration on the BIG-IQ.",
      "has_action": false,
      "notes": "BIG-IQ >= 6.1.0.\nThis module does not support atomic removal of discovered modules on the device.\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "access_conflict_policy": {
          "aliases": [],
          "description": "Sets the conflict resolution policy for Access module C(apm) objects. Only used when the C(apm) module is specified.",
          "type": "str",
          "required": false,
          "choices": [
            "use_bigiq",
            "use_bigip",
            "keep_version"
          ],
          "suboptions": {}
        },
        "access_group_first_device": {
          "aliases": [],
          "description": "Specifies if the imported device is the first device in the access group to import shared configuration for that access group.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "access_group_name": {
          "aliases": [],
          "description": "Access group name to import Access configuration for devices. Once set it cannot be changed.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "conflict_policy": {
          "aliases": [],
          "description": "Sets the conflict resolution policy for shared objects across BIG-IP devices, except LTM profiles and monitors.",
          "default": "use_bigiq",
          "type": "str",
          "required": false,
          "choices": [
            "use_bigiq",
            "use_bigip"
          ],
          "suboptions": {}
        },
        "device_address": {
          "aliases": [],
          "description": "The IP address of the BIG-IP device to be imported/managed.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "device_conflict_policy": {
          "aliases": [],
          "description": "Sets the conflict resolution policy for objects that are specific to a particular to a BIG-IP device and not shared among BIG-IP devices.",
          "default": "use_bigiq",
          "type": "str",
          "required": false,
          "choices": [
            "use_bigiq",
            "use_bigip"
          ],
          "suboptions": {}
        },
        "device_password": {
          "aliases": [],
          "description": "The administrator password for the BIG-IP device.\nThis parameter is only required when adding a new BIG-IP device to be managed.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "device_port": {
          "aliases": [],
          "description": "The port on which a device trust setup between BIG-IQ and BIG-IP should happen.",
          "default": "443",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "device_username": {
          "aliases": [],
          "description": "The administrator username for the BIG-IP device.\nThis parameter is only required when adding a new BIG-IP device to be managed.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "Forces rediscovery and import of existing modules on the managed BIG-IP.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ha_name": {
          "aliases": [],
          "description": "DSC cluster name of the BIG-IP device to be managed.\nThis is optional if the managed device is not a part of a cluster group.\nWhen C(use_bigiq_sync) is set to C(yes), this parameter is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "modules": {
          "aliases": [],
          "description": "List of modules to be discovered and imported into the device.\nThese modules must be provisioned on the target device, otherwise operation will fail.\nThe C(ltm) module must always be specified when performing discovery or re-discovery of the the device.\nWhen C(asm) or C(afm) are specified, the C(shared_security) module also needs to be declared.",
          "type": "list",
          "required": false,
          "choices": [
            "ltm",
            "asm",
            "apm",
            "afm",
            "dns",
            "websafe",
            "security_shared"
          ],
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "The state of the managed device on the system.\nWhen C(present), enables new device addition as well as device rediscovery/import.\nWhen C(absent), completely removes the device from the system.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "statistics": {
          "aliases": [],
          "description": "Specify the statistics collection for discovered device.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enable": {
              "aliases": [],
              "description": "Enables statistics collection on a device.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "interval": {
              "aliases": [],
              "description": "Specifies the interval the data is collected from the discovered device, in seconds.",
              "default": "60",
              "type": "int",
              "required": false,
              "choices": [
                "30",
                "60",
                "120",
                "500"
              ],
              "suboptions": {}
            },
            "stat_modules": {
              "aliases": [],
              "description": "Specifies for which modules the data is being collected.",
              "default": "['device', 'ltm']",
              "type": "list",
              "required": false,
              "choices": [
                "device",
                "ltm",
                "dns"
              ],
              "elements": "str",
              "suboptions": {}
            },
            "zone": {
              "aliases": [],
              "description": "Specifies in which DCD zone is collecting the data from device.",
              "default": "default",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "use_bigiq_sync": {
          "aliases": [],
          "description": "When set to true, BIG-IQ manually synchronizes configuration changes between members in a DSC cluster.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "versioned_conflict_policy": {
          "aliases": [],
          "description": "Sets the conflict resolution policy for LTM profile and monitor objects that are specific to a BIG-IP software version.",
          "type": "str",
          "required": false,
          "choices": [
            "use_bigiq",
            "use_bigip",
            "keep_version"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage BIG-IP devices through BIG-IQ",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Discover a new device and import config, use default conflict policy.\n  bigiq_device_discovery:\n    device_address: 192.168.1.1\n    device_username: bigipadmin\n    device_password: bigipsecret\n    modules:\n      - ltm\n      - afm\n      - shared_security\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Discover a new device and import config, use non- default conflict policy.\n  bigiq_device_discovery:\n    device_address: 192.168.1.1\n    modules:\n      - ltm\n      - dns\n    conflict_policy: use_bigip\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Force full device rediscovery\n  bigiq_device_discovery:\n    device_address: 192.168.1.1\n    modules:\n      - ltm\n      - afm\n      - dns\n      - shared_security\n    force: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove discovered device and its config\n  bigiq_device_discovery:\n    device_address: 192.168.1.1\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigiq_device_info": {
    "doc": {
      "description": "Collect information from F5 BIG-IQ devices.\nThis module was called C(bigiq_device_facts) before Ansible 2.9. The usage did not change.",
      "has_action": false,
      "notes": "This module is supported with all BIG-IQ versions\nWith BIGIQ 7.0 and later, a few metadata fields not included/supported (for example, uptime, product_changelist, product_jobid)\nFor more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "gather_subset": {
          "aliases": [],
          "description": "When supplied, this argument restricts the information returned to a given subset.\nYou can specify a list of values to include a larger subset.\nValues can also be used with an initial C(!) to specify a specific subset should not be collected.",
          "type": "list",
          "required": true,
          "choices": [
            "all",
            "applications",
            "managed-devices",
            "purchased-pool-licenses",
            "regkey-pools",
            "system-info",
            "vlans",
            "!all",
            "!applications",
            "!managed-devices",
            "!purchased-pool-licenses",
            "!regkey-pools",
            "!system-info",
            "!vlans"
          ],
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "short_description": "Collect information from F5 BIG-IQ devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Collect BIG-IQ information\n  bigiq_device_info:\n    gather_subset:\n      - system-info\n      - vlans\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Collect all BIG-IQ information\n  bigiq_device_info:\n    gather_subset:\n      - all\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n\n- name: Collect all BIG-IP information except trunks\n  bigiq_device_info:\n    gather_subset:\n      - all\n      - \"!trunks\"\n    provider:\n      server: lb.mydomain.com\n      user: admin\n      password: secret\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigiq_regkey_license": {
    "doc": {
      "description": "Manages licenses in a BIG-IQ registration key pool.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "accept_eula": {
          "aliases": [],
          "description": "A key that signifies you accept the F5 EULA for this license.\nA copy of the EULA can be found here https://askf5.f5.com/csp/article/K12902\nThis is required when C(state) is C(present).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the license.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "license_key": {
          "aliases": [],
          "description": "The license key to put in the pool.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "regkey_pool": {
          "aliases": [],
          "description": "The registration key pool in which you want to place the license.\nYou must give your registration pools unique names. While BIG-IQ does not require this, this module does. If you do not, the behavior of the module is undefined and you may end up putting licenses in the wrong registration key pool.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the regkey license in the pool on the system.\nWhen C(present), guarantees the license exists in the pool.\nWhen C(absent), removes the license from the pool.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "BIG-IQ >= 5.3.0"
      ],
      "short_description": "Manages licenses in a BIG-IQ registration key pool",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add a registration key license to a pool\n  bigiq_regkey_license:\n    regkey_pool: foo-pool\n    license_key: XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\n    accept_eula: yes\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Remove a registration key license from a pool\n  bigiq_regkey_license:\n    regkey_pool: foo-pool\n    license_key: XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\n    state: absent\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigiq_regkey_license_assignment": {
    "doc": {
      "description": "Manages the assignment of regkey licenses on a BIG-IQ. Assignment means the license is assigned to a BIG-IP, or it needs to be assigned to a BIG-IP. Additionally, this module supports revoking the assignments from BIG-IP devices.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "device": {
          "aliases": [],
          "description": "When C(managed) is C(no), specifies the address, or hostname, where the BIG-IQ can reach the remote device to register.\nWhen C(managed) is C(yes), specifies the managed device, or device UUID, that you want to register.\nIf C(managed) is C(yes), it is very important you do not have more than one device with the same name. BIG-IQ internally recognizes devices by their ID, and therefore, this module cannot guarantee the correct device will be registered. The device returned is the device that is used.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "device_password": {
          "aliases": [],
          "description": "The password of the C(device_username).\nWhen C(managed) is C(no), this parameter is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "device_port": {
          "aliases": [],
          "description": "Specifies the port of the remote device to connect to.\nIf this parameter is not specified, the default is C(443).",
          "default": "443",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "device_username": {
          "aliases": [],
          "description": "The username used to connect to the remote device.\nThis username should be one that has sufficient privileges on the remote device to do licensing. Usually this is the C(Administrator) role.\nWhen C(managed) is C(no), this parameter is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key": {
          "aliases": [],
          "description": "The registration key you want to assign from the pool.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "managed": {
          "aliases": [],
          "description": "Whether the specified device is a managed or un-managed device.\nWhen C(state) is C(present), this parameter is required.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "pool": {
          "aliases": [],
          "description": "The registration key pool to use.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the device is assigned the specified license.\nWhen C(absent), ensures the license is revoked from the remote device and freed on the BIG-IQ.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage regkey license assignment on BIG-IPs from a BIG-IQ",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Register an unmanaged device\n  bigiq_regkey_license_assignment:\n    pool: my-regkey-pool\n    key: XXXX-XXXX-XXXX-XXXX-XXXX\n    device: 1.1.1.1\n    managed: no\n    device_username: admin\n    device_password: secret\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Register a managed device, by name\n  bigiq_regkey_license_assignment:\n    pool: my-regkey-pool\n    key: XXXX-XXXX-XXXX-XXXX-XXXX\n    device: bigi1.foo.com\n    managed: yes\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Register a managed device, by UUID\n  bigiq_regkey_license_assignment:\n    pool: my-regkey-pool\n    key: XXXX-XXXX-XXXX-XXXX-XXXX\n    device: 7141a063-7cf8-423f-9829-9d40599fa3e0\n    managed: yes\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigiq_regkey_pool": {
    "doc": {
      "description": "Manages registration key (regkey) pools on a BIG-IQ. These pools function as a container in which you add lists of registration keys. To add registration keys, use the C(bigiq_regkey_license) module.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "description": {
          "aliases": [],
          "description": "A description to attach to the pool.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Specifies the name of the registration key pool.\nYou must name your registration pools unique names. While BIG-IQ does not require this, this module does. If you do not, the behavior of the module is undefined, and you may end up putting licenses in the wrong registration key pool.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "The state of the regkey pool on the system.\nWhen C(present), guarantees the pool exists.\nWhen C(absent), removes the pool, and the licenses it contains, from the system.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "BIG-IQ >= 5.3.0"
      ],
      "short_description": "Manages registration key pools on BIG-IQ",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a registration key (regkey) pool to hold individual device licenses\n  bigiq_regkey_pool:\n    name: foo-pool\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigiq_utility_license": {
    "doc": {
      "description": "Manages utility licenses on a BIG-IQ. Utility licenses are one form of license that BIG-IQ can distribute. These licenses, unlike regkey licenses, do not require a pool to be created before creation. Additionally, when assigning them, you assign by offering instead of key.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "accept_eula": {
          "aliases": [],
          "description": "A key that signifies you accept the F5 EULA for this license.\nA copy of the EULA can be found here https://askf5.f5.com/csp/article/K12902\nThis is required when C(state) is C(present).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "license_key": {
          "aliases": [],
          "description": "The license key to install and activate.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "The state of the utility license on the system.\nWhen C(present), guarantees the license exists.\nWhen C(absent), removes the license from the system.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "BIG-IQ >= 5.3.0"
      ],
      "short_description": "Manage utility licenses on a BIG-IQ",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Add a utility license to the system\n  bigiq_utility_license:\n    license_key: XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\n    accept_eula: yes\n    state: present\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n\n- name: Remove a utility license from the system\n  bigiq_utility_license:\n    license_key: XXXXX-XXXXX-XXXXX-XXXXX-XXXXX\n    state: absent\n    provider:\n      user: admin\n      password: secret\n      server: lb.mydomain.com\n  delegate_to: localhost\n"
  },
  "f5networks.f5_modules.bigiq_utility_license_assignment": {
    "doc": {
      "description": "Manages the assignment of utility licenses on a BIG-IQ. Assignment means the license is assigned to a BIG-IP, or it needs to be assigned to a BIG-IP. Additionally, this module supports revoking the assignments from BIG-IP devices.",
      "has_action": false,
      "notes": "For more information on using Ansible to manage F5 Networks devices see U(https://www.ansible.com/integrations/networks/f5).\nRequires BIG-IP software version >= 12.\nThe F5 modules only manipulate the running configuration of the F5 product. To ensure that BIG-IP specific configuration persists to disk, be sure to include at least one task that uses the M(f5networks.f5_modules.bigip_config) module to save the running configuration. Refer to the module's documentation for the correct usage of the module to save your running configuration.",
      "options": {
        "device": {
          "aliases": [],
          "description": "When C(managed) is C(no), specifies the address, or hostname, where the BIG-IQ can reach the remote device to register.\nWhen C(managed) is C(yes), specifies the managed device, or device UUID, you want to register.\nIf C(managed) is C(yes), it is very important you do not have more than one device with the same name. BIG-IQ internally recognizes devices by their ID, and therefore, this module cannot guarantee the correct device will be registered. The device returned is the device that is used.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "device_password": {
          "aliases": [],
          "description": "The password of the C(device_username).\nWhen C(managed) is C(no), this parameter is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "device_port": {
          "aliases": [],
          "description": "Specifies the port of the remote device to connect to.\nIf this parameter is not specified, the default is C(443).",
          "default": "443",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "device_username": {
          "aliases": [],
          "description": "The username used to connect to the remote device.\nThis username should be one that has sufficient privileges on the remote device to do licensing. Usually this is the C(Administrator) role.\nWhen C(managed) is C(no), this parameter is required.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key": {
          "aliases": [],
          "description": "The registration key from which you want choose an offering.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "managed": {
          "aliases": [],
          "description": "Whether the specified device is a managed or un-managed device.\nWhen C(state) is C(present), this parameter is required.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "offering": {
          "aliases": [],
          "description": "Name of the license offering to assign to the device.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "A dict object containing connection details.",
          "type": "dict",
          "required": false,
          "version_added": "1.0.0",
          "suboptions": {
            "auth_provider": {
              "aliases": [],
              "description": "Configures the auth provider for to obtain authentication tokens from the remote device.\nThis option is really used when working with BIG-IQ devices.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "no_f5_teem": {
              "aliases": [],
              "description": "If C(yes), TEEM telemetry data is not sent to F5.\nYou may omit this option by setting the environment variable C(F5_TELEMETRY_OFF).\nPreviously used variable C(F5_TEEM) is deprecated as its name was confusing.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [
                "pass",
                "pwd"
              ],
              "description": "The password for the user account used to connect to the BIG-IP.\nYou may omit this option by setting the environment variable C(F5_PASSWORD).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server": {
              "aliases": [],
              "description": "The BIG-IP host.\nYou may omit this option by setting the environment variable C(F5_SERVER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "server_port": {
              "aliases": [],
              "description": "The BIG-IP server port.\nYou may omit this option by setting the environment variable C(F5_SERVER_PORT).",
              "default": "443",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "transport": {
              "aliases": [],
              "description": "Configures the transport connection to use when connecting to the remote device.",
              "default": "rest",
              "type": "str",
              "required": false,
              "choices": [
                "rest"
              ],
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "The username to connect to the BIG-IP with. This user must have administrative privileges on the device.\nYou may omit this option by setting the environment variable C(F5_USER).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "validate_certs": {
              "aliases": [],
              "description": "If C(no), SSL certificates are not validated. Use this only on personally controlled sites using self-signed certificates.\nYou may omit this option by setting the environment variable C(F5_VALIDATE_CERTS).",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "When C(present), ensures the device is assigned the specified license.\nWhen C(absent), ensures the license is revokes from the remote device and freed on the BIG-IQ.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "unit_of_measure": {
          "aliases": [],
          "description": "Sets the rate at which this license usage is billed.\nDepending on your license, you may have different units of measure available to you. If a particular unit is not available to you, the module notifies you at licensing time.",
          "default": "hourly",
          "type": "str",
          "required": false,
          "choices": [
            "hourly",
            "daily",
            "monthly",
            "yearly"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage utility license assignment on BIG-IPs from a BIG-IQ",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Register an unmanaged device\n  bigiq_utility_license_assignment:\n    key: XXXX-XXXX-XXXX-XXXX-XXXX\n    offering: F5-BIG-MSP-AFM-10G-LIC\n    device: 1.1.1.1\n    managed: no\n    device_username: admin\n    device_password: secret\n    state: present\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Register a managed device, by name\n  bigiq_utility_license_assignment:\n    key: XXXX-XXXX-XXXX-XXXX-XXXX\n    offering: F5-BIG-MSP-AFM-10G-LIC\n    device: bigi1.foo.com\n    managed: yes\n    state: present\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n\n- name: Register a managed device, by UUID\n  bigiq_utility_license_assignment:\n    key: XXXX-XXXX-XXXX-XXXX-XXXX\n    offering: F5-BIG-MSP-AFM-10G-LIC\n    device: 7141a063-7cf8-423f-9829-9d40599fa3e0\n    managed: yes\n    state: present\n    provider:\n      password: secret\n      server: lb.mydomain.com\n      user: admin\n  delegate_to: localhost\n"
  }
}