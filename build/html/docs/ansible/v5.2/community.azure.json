{
  "community.azure.azure_rm_aks_facts": {
    "doc": {
      "description": "Get facts for a specific Azure Kubernetes Service or all Azure Kubernetes Services.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired Azure Kubernetes Service.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "show_kubeconfig": {
          "aliases": [],
          "description": "Show kubeconfig of the AKS cluster.\nNote the operation will cost more network overhead, not recommended when listing AKS.",
          "type": "str",
          "required": false,
          "choices": [
            "user",
            "admin"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Kubernetes Service facts"
    },
    "examples": "\n    - name: Get facts for one Azure Kubernetes Service\n      community.azure.azure_rm_aks_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all Azure Kubernetes Services\n      community.azure.azure_rm_aks_info:\n\n    - name: Get facts by tags\n      community.azure.azure_rm_aks_info:\n        tags:\n          - testing\n"
  },
  "community.azure.azure_rm_aks_info": {
    "doc": {
      "description": "Get facts for a specific Azure Kubernetes Service or all Azure Kubernetes Services.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired Azure Kubernetes Service.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "show_kubeconfig": {
          "aliases": [],
          "description": "Show kubeconfig of the AKS cluster.\nNote the operation will cost more network overhead, not recommended when listing AKS.",
          "type": "str",
          "required": false,
          "choices": [
            "user",
            "admin"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Kubernetes Service facts"
    },
    "examples": "\n    - name: Get facts for one Azure Kubernetes Service\n      community.azure.azure_rm_aks_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all Azure Kubernetes Services\n      community.azure.azure_rm_aks_info:\n\n    - name: Get facts by tags\n      community.azure.azure_rm_aks_info:\n        tags:\n          - testing\n"
  },
  "community.azure.azure_rm_aksversion_facts": {
    "doc": {
      "description": "Get available kubernetes versions supported by Azure Kubernetes Service.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Get the versions available for creating a managed Kubernetes cluster.",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Get the upgrade versions available for a managed Kubernetes cluster version.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get available kubernetes versions supported by Azure Kubernetes Service"
    },
    "examples": "\n    - name: Get available versions for AKS in location eastus\n      community.azure.azure_rm_aksversion_info:\n        location: eastus\n    - name: Get  available versions an AKS can be upgrade to\n      community.azure.azure_rm_aksversion_info:\n        location: eastis\n        version: 1.11.6\n"
  },
  "community.azure.azure_rm_aksversion_info": {
    "doc": {
      "description": "Get available kubernetes versions supported by Azure Kubernetes Service.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Get the versions available for creating a managed Kubernetes cluster.",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Get the upgrade versions available for a managed Kubernetes cluster version.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get available kubernetes versions supported by Azure Kubernetes Service"
    },
    "examples": "\n    - name: Get available versions for AKS in location eastus\n      community.azure.azure_rm_aksversion_info:\n        location: eastus\n    - name: Get  available versions an AKS can be upgrade to\n      community.azure.azure_rm_aksversion_info:\n        location: eastis\n        version: 1.11.6\n"
  },
  "community.azure.azure_rm_applicationsecuritygroup_facts": {
    "doc": {
      "description": "Get facts of Azure Application Security Group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the application security group.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Application Security Group facts"
    },
    "examples": "\n  - name: List application security groups in specific resource group\n    community.azure.azure_rm_applicationsecuritygroup_info:\n      resource_group: myResourceGroup\n\n  - name: List application security groups in specific subscription\n    community.azure.azure_rm_applicationsecuritygroup_info:\n\n  - name: Get application security group by name\n    community.azure.azure_rm_applicationsecuritygroup_info:\n        resource_group: myResourceGroup\n        name: myApplicationSecurityGroup\n        tags:\n            - foo\n"
  },
  "community.azure.azure_rm_applicationsecuritygroup_info": {
    "doc": {
      "description": "Get facts of Azure Application Security Group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the application security group.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Application Security Group facts"
    },
    "examples": "\n  - name: List application security groups in specific resource group\n    community.azure.azure_rm_applicationsecuritygroup_info:\n      resource_group: myResourceGroup\n\n  - name: List application security groups in specific subscription\n    community.azure.azure_rm_applicationsecuritygroup_info:\n\n  - name: Get application security group by name\n    community.azure.azure_rm_applicationsecuritygroup_info:\n        resource_group: myResourceGroup\n        name: myApplicationSecurityGroup\n        tags:\n            - foo\n"
  },
  "community.azure.azure_rm_appserviceplan_facts": {
    "doc": {
      "description": "Get facts for a specific app service plan or all app service plans in a resource group, or all app service plan in current subscription.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific app service plan.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get azure app service plan facts"
    },
    "examples": "\n    - name: Get facts for app service plan by name\n      community.azure.azure_rm_appserviceplan_info:\n        resource_group: myResourceGroup\n        name: myAppServicePlan\n\n    - name: Get azure_rm_appserviceplan_facts for app service plan in resource group\n      community.azure.azure_rm_appserviceplan_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts for app service plan with tags\n      community.azure.azure_rm_appserviceplan_info:\n        tags:\n          - testtag\n          - foo:bar\n"
  },
  "community.azure.azure_rm_appserviceplan_info": {
    "doc": {
      "description": "Get facts for a specific app service plan or all app service plans in a resource group, or all app service plan in current subscription.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific app service plan.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get azure app service plan facts"
    },
    "examples": "\n    - name: Get facts for app service plan by name\n      community.azure.azure_rm_appserviceplan_info:\n        resource_group: myResourceGroup\n        name: myAppServicePlan\n\n    - name: Get azure_rm_appserviceplan_facts for app service plan in resource group\n      community.azure.azure_rm_appserviceplan_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts for app service plan with tags\n      community.azure.azure_rm_appserviceplan_info:\n        tags:\n          - testtag\n          - foo:bar\n"
  },
  "community.azure.azure_rm_automationaccount_facts": {
    "doc": {
      "description": "Get facts of automation account.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "list_keys": {
          "aliases": [],
          "description": "List keys for a automation account.\nNote this will cost network overhead, suggest only used when I(name) set.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "list_statistics": {
          "aliases": [],
          "description": "List statistics details for a automation account.\nNote this will cost network overhead, suggest only used when I(name) set.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "list_usages": {
          "aliases": [],
          "description": "List usage details for a automation account.\nNote this will cost network overhead, suggest only used when I(name) set.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the automation account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure automation account facts"
    },
    "examples": "\n- name: Get details of an automation account\n  community.azure.azure_rm_automationaccount_info:\n      name: Testing\n      resource_group: myResourceGroup\n      list_statistics: yes\n      list_usages: yes\n      list_keys: yes\n\n- name: List automation account in a resource group\n  community.azure.azure_rm_automationaccount_info:\n      resource_group: myResourceGroup\n\n- name: List automation account in a resource group\n  community.azure.azure_rm_automationaccount_info:\n"
  },
  "community.azure.azure_rm_automationaccount_info": {
    "doc": {
      "description": "Get facts of automation account.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "list_keys": {
          "aliases": [],
          "description": "List keys for a automation account.\nNote this will cost network overhead, suggest only used when I(name) set.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "list_statistics": {
          "aliases": [],
          "description": "List statistics details for a automation account.\nNote this will cost network overhead, suggest only used when I(name) set.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "list_usages": {
          "aliases": [],
          "description": "List usage details for a automation account.\nNote this will cost network overhead, suggest only used when I(name) set.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the automation account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure automation account facts"
    },
    "examples": "\n- name: Get details of an automation account\n  community.azure.azure_rm_automationaccount_info:\n      name: Testing\n      resource_group: myResourceGroup\n      list_statistics: yes\n      list_usages: yes\n      list_keys: yes\n\n- name: List automation account in a resource group\n  community.azure.azure_rm_automationaccount_info:\n      resource_group: myResourceGroup\n\n- name: List automation account in a resource group\n  community.azure.azure_rm_automationaccount_info:\n"
  },
  "community.azure.azure_rm_autoscale_facts": {
    "doc": {
      "description": "Get facts of Auto Scale Setting.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Auto Scale Setting.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Auto Scale Setting facts"
    },
    "examples": "\n  - name: Get instance of Auto Scale Setting\n    community.azure.azure_rm_autoscale_info:\n      resource_group: myResourceGroup\n      name: auto_scale_name\n\n  - name: List instances of Auto Scale Setting\n    community.azure.azure_rm_autoscale_info:\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_autoscale_info": {
    "doc": {
      "description": "Get facts of Auto Scale Setting.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Auto Scale Setting.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Auto Scale Setting facts"
    },
    "examples": "\n  - name: Get instance of Auto Scale Setting\n    community.azure.azure_rm_autoscale_info:\n      resource_group: myResourceGroup\n      name: auto_scale_name\n\n  - name: List instances of Auto Scale Setting\n    community.azure.azure_rm_autoscale_info:\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_availabilityset_facts": {
    "doc": {
      "description": "Get facts for a specific availability set or all availability sets.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific availability set.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired availability set.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "List of tags to be matched.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Availability Set facts"
    },
    "examples": "\n    - name: Get facts for one availability set\n      community.azure.azure_rm_availabilityset_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all availability sets in a specific resource group\n      community.azure.azure_rm_availabilityset_info:\n        resource_group: myResourceGroup\n\n"
  },
  "community.azure.azure_rm_availabilityset_info": {
    "doc": {
      "description": "Get facts for a specific availability set or all availability sets.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific availability set.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired availability set.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "List of tags to be matched.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Availability Set facts"
    },
    "examples": "\n    - name: Get facts for one availability set\n      community.azure.azure_rm_availabilityset_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all availability sets in a specific resource group\n      community.azure.azure_rm_availabilityset_info:\n        resource_group: myResourceGroup\n\n"
  },
  "community.azure.azure_rm_cdnendpoint_facts": {
    "doc": {
      "description": "Get facts for a specific Azure CDN endpoint or all Azure CDN endpoints.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific Azure CDN endpoint.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile_name": {
          "aliases": [],
          "description": "Name of CDN profile.",
          "required": true,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group where this CDN profile belongs to.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure CDN endpoint facts"
    },
    "examples": "\n  - name: Get facts for all endpoints in CDN profile\n    community.azure.azure_rm_cdnendpoint_info:\n      resource_group: myResourceGroup\n      profile_name: myCDNProfile\n\n  - name: Get facts of specific CDN endpoint\n    community.azure.azure_rm_cdnendpoint_info:\n      resource_group: myResourceGroup\n      profile_name: myCDNProfile\n      name: myEndpoint1\n"
  },
  "community.azure.azure_rm_cdnendpoint_info": {
    "doc": {
      "description": "Get facts for a specific Azure CDN endpoint or all Azure CDN endpoints.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific Azure CDN endpoint.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile_name": {
          "aliases": [],
          "description": "Name of CDN profile.",
          "required": true,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group where this CDN profile belongs to.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure CDN endpoint facts"
    },
    "examples": "\n  - name: Get facts for all endpoints in CDN profile\n    community.azure.azure_rm_cdnendpoint_info:\n      resource_group: myResourceGroup\n      profile_name: myCDNProfile\n\n  - name: Get facts of specific CDN endpoint\n    community.azure.azure_rm_cdnendpoint_info:\n      resource_group: myResourceGroup\n      profile_name: myCDNProfile\n      name: myEndpoint1\n"
  },
  "community.azure.azure_rm_cdnprofile_facts": {
    "doc": {
      "description": "Get facts for a specific Azure CDN profile or all CDN profiles.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific CDN profile.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired CDN profile.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure CDN profile facts"
    },
    "examples": "\n    - name: Get facts for one CDN profile\n      community.azure.azure_rm_cdnprofile_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all CDN profiles\n      community.azure.azure_rm_cdnprofile_info:\n\n    - name: Get facts by tags\n      community.azure.azure_rm_cdnprofile_info:\n        tags:\n          - Environment:Test\n"
  },
  "community.azure.azure_rm_cdnprofile_info": {
    "doc": {
      "description": "Get facts for a specific Azure CDN profile or all CDN profiles.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific CDN profile.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired CDN profile.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure CDN profile facts"
    },
    "examples": "\n    - name: Get facts for one CDN profile\n      community.azure.azure_rm_cdnprofile_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all CDN profiles\n      community.azure.azure_rm_cdnprofile_info:\n\n    - name: Get facts by tags\n      community.azure.azure_rm_cdnprofile_info:\n        tags:\n          - Environment:Test\n"
  },
  "community.azure.azure_rm_containerinstance_facts": {
    "doc": {
      "description": "Get facts of Container Instance.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the container instance.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Container Instance facts"
    },
    "examples": "\n  - name: Get specific Container Instance facts\n    community.azure.azure_rm_containerinstance_info:\n      resource_group: myResourceGroup\n      name: myContainer\n\n  - name: List Container Instances in a specified resource group name\n    community.azure.azure_rm_containerinstance_info:\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_containerinstance_info": {
    "doc": {
      "description": "Get facts of Container Instance.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the container instance.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Container Instance facts"
    },
    "examples": "\n  - name: Get specific Container Instance facts\n    community.azure.azure_rm_containerinstance_info:\n      resource_group: myResourceGroup\n      name: myContainer\n\n  - name: List Container Instances in a specified resource group name\n    community.azure.azure_rm_containerinstance_info:\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_containerregistry_facts": {
    "doc": {
      "description": "Get facts for Container Registry.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the container registry.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group to which the container registry belongs.",
          "required": true,
          "suboptions": {}
        },
        "retrieve_credentials": {
          "aliases": [],
          "description": "Retrieve credentials for container registry.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Container Registry facts"
    },
    "examples": "\n  - name: Get instance of Registry\n    community.azure.azure_rm_containerregistry_info:\n      resource_group: myResourceGroup\n      name: myRegistry\n\n  - name: List instances of Registry\n    community.azure.azure_rm_containerregistry_info:\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_containerregistry_info": {
    "doc": {
      "description": "Get facts for Container Registry.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the container registry.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group to which the container registry belongs.",
          "required": true,
          "suboptions": {}
        },
        "retrieve_credentials": {
          "aliases": [],
          "description": "Retrieve credentials for container registry.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Container Registry facts"
    },
    "examples": "\n  - name: Get instance of Registry\n    community.azure.azure_rm_containerregistry_info:\n      resource_group: myResourceGroup\n      name: myRegistry\n\n  - name: List instances of Registry\n    community.azure.azure_rm_containerregistry_info:\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_cosmosdbaccount_facts": {
    "doc": {
      "description": "Get facts of Azure Cosmos DB Account.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Cosmos DB database account name.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of an Azure resource group.",
          "required": false,
          "suboptions": {}
        },
        "retrieve_connection_strings": {
          "aliases": [],
          "description": "Retrieve connection strings.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "retrieve_keys": {
          "aliases": [],
          "description": "Retrieve keys and connection strings.",
          "type": "str",
          "required": false,
          "choices": [
            "all",
            "readonly"
          ],
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Cosmos DB Account facts"
    },
    "examples": "\n  - name: Get instance of Database Account\n    community.azure.azure_rm_cosmosdbaccount_info:\n      resource_group: myResourceGroup\n      name: testaccount\n\n  - name: List instances of Database Account\n    azure_rm_cosmosdbaccousnt_info:\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_cosmosdbaccount_info": {
    "doc": {
      "description": "Get facts of Azure Cosmos DB Account.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Cosmos DB database account name.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of an Azure resource group.",
          "required": false,
          "suboptions": {}
        },
        "retrieve_connection_strings": {
          "aliases": [],
          "description": "Retrieve connection strings.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "retrieve_keys": {
          "aliases": [],
          "description": "Retrieve keys and connection strings.",
          "type": "str",
          "required": false,
          "choices": [
            "all",
            "readonly"
          ],
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Cosmos DB Account facts"
    },
    "examples": "\n  - name: Get instance of Database Account\n    community.azure.azure_rm_cosmosdbaccount_info:\n      resource_group: myResourceGroup\n      name: testaccount\n\n  - name: List instances of Database Account\n    azure_rm_cosmosdbaccousnt_info:\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_deployment_facts": {
    "doc": {
      "description": "Get facts of Azure Deployment.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the deployment.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Deployment facts"
    },
    "examples": "\n  - name: Get instance of Deployment\n    community.azure.azure_rm_deployment_info:\n      resource_group: myResourceGroup\n      name: myDeployment\n"
  },
  "community.azure.azure_rm_deployment_info": {
    "doc": {
      "description": "Get facts of Azure Deployment.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the deployment.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Deployment facts"
    },
    "examples": "\n  - name: Get instance of Deployment\n    community.azure.azure_rm_deployment_info:\n      resource_group: myResourceGroup\n      name: myDeployment\n"
  },
  "community.azure.azure_rm_devtestlab_facts": {
    "doc": {
      "description": "Get facts of Azure DevTest Lab.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab facts"
    },
    "examples": "\n  - name: List instances of DevTest Lab by resource group\n    community.azure.azure_rm_devtestlab_info:\n      resource_group: testrg\n\n  - name: List instances of DevTest Lab in subscription\n    community.azure.azure_rm_devtestlab_info:\n\n  - name: Get instance of DevTest Lab\n    community.azure.azure_rm_devtestlab_info:\n      resource_group: testrg\n      name: testlab\n"
  },
  "community.azure.azure_rm_devtestlab_info": {
    "doc": {
      "description": "Get facts of Azure DevTest Lab.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab facts"
    },
    "examples": "\n  - name: List instances of DevTest Lab by resource group\n    community.azure.azure_rm_devtestlab_info:\n      resource_group: testrg\n\n  - name: List instances of DevTest Lab in subscription\n    community.azure.azure_rm_devtestlab_info:\n\n  - name: Get instance of DevTest Lab\n    community.azure.azure_rm_devtestlab_info:\n      resource_group: testrg\n      name: testlab\n"
  },
  "community.azure.azure_rm_devtestlabarmtemplate_facts": {
    "doc": {
      "description": "Get facts of Azure DevTest Lab ARM Template.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "artifact_source_name": {
          "aliases": [],
          "description": "The name of the artifact source.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the ARM template.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab ARM Template facts"
    },
    "examples": "\n  - name: Get information on DevTest Lab ARM Template\n    community.azure.azure_rm_devtestlabarmtemplate_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      artifact_source_name: public environment repo\n      name: WebApp\n"
  },
  "community.azure.azure_rm_devtestlabarmtemplate_info": {
    "doc": {
      "description": "Get facts of Azure DevTest Lab ARM Template.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "artifact_source_name": {
          "aliases": [],
          "description": "The name of the artifact source.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the ARM template.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab ARM Template facts"
    },
    "examples": "\n  - name: Get information on DevTest Lab ARM Template\n    community.azure.azure_rm_devtestlabarmtemplate_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      artifact_source_name: public environment repo\n      name: WebApp\n"
  },
  "community.azure.azure_rm_devtestlabartifact_facts": {
    "doc": {
      "description": "Get facts of Azure DevTest Lab Artifact.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "artifact_source_name": {
          "aliases": [],
          "description": "The name of the artifact source.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the artifact.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab Artifact facts"
    },
    "examples": "\n  - name: Get instance of DevTest Lab Artifact\n    community.azure.azure_rm_devtestlabartifact_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      artifact_source_name: myArtifactSource\n      name: myArtifact\n"
  },
  "community.azure.azure_rm_devtestlabartifact_info": {
    "doc": {
      "description": "Get facts of Azure DevTest Lab Artifact.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "artifact_source_name": {
          "aliases": [],
          "description": "The name of the artifact source.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the artifact.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab Artifact facts"
    },
    "examples": "\n  - name: Get instance of DevTest Lab Artifact\n    community.azure.azure_rm_devtestlabartifact_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      artifact_source_name: myArtifactSource\n      name: myArtifact\n"
  },
  "community.azure.azure_rm_devtestlabartifactsource_facts": {
    "doc": {
      "description": "Get facts of Azure DevTest Lab Artifact Source.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of DevTest Lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of DevTest Lab Artifact Source.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab Artifact Source facts"
    },
    "examples": "\n  - name: Get instance of DevTest Lab Artifact Source\n    community.azure.azure_rm_devtestlabartifactsource_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: myArtifactSource\n"
  },
  "community.azure.azure_rm_devtestlabartifactsource_info": {
    "doc": {
      "description": "Get facts of Azure DevTest Lab Artifact Source.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of DevTest Lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of DevTest Lab Artifact Source.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab Artifact Source facts"
    },
    "examples": "\n  - name: Get instance of DevTest Lab Artifact Source\n    community.azure.azure_rm_devtestlabartifactsource_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: myArtifactSource\n"
  },
  "community.azure.azure_rm_devtestlabcustomimage_facts": {
    "doc": {
      "description": "Get facts of Azure Azure DevTest Lab Custom Image.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the custom image.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab Custom Image facts"
    },
    "examples": "\n  - name: Get instance of Custom Image\n    community.azure.azure_rm_devtestlabcustomimage_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: myImage\n\n  - name: List instances of Custom Image in the lab\n    community.azure.azure_rm_devtestlabcustomimage_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: myImage\n"
  },
  "community.azure.azure_rm_devtestlabcustomimage_info": {
    "doc": {
      "description": "Get facts of Azure Azure DevTest Lab Custom Image.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the custom image.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab Custom Image facts"
    },
    "examples": "\n  - name: Get instance of Custom Image\n    community.azure.azure_rm_devtestlabcustomimage_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: myImage\n\n  - name: List instances of Custom Image in the lab\n    community.azure.azure_rm_devtestlabcustomimage_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: myImage\n"
  },
  "community.azure.azure_rm_devtestlabenvironment_facts": {
    "doc": {
      "description": "Get facts of Azure Environment.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the environment.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "user_name": {
          "aliases": [],
          "description": "The name of the user profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Environment facts"
    },
    "examples": "\n  - name: Get instance of Environment\n    community.azure.azure_rm_devtestlabenvironment_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      user_name: myUser\n      name: myEnvironment\n"
  },
  "community.azure.azure_rm_devtestlabenvironment_info": {
    "doc": {
      "description": "Get facts of Azure Environment.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the environment.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "user_name": {
          "aliases": [],
          "description": "The name of the user profile.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Environment facts"
    },
    "examples": "\n  - name: Get instance of Environment\n    community.azure.azure_rm_devtestlabenvironment_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      user_name: myUser\n      name: myEnvironment\n"
  },
  "community.azure.azure_rm_devtestlabpolicy_facts": {
    "doc": {
      "description": "Get facts of Azure DTL Policy.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the policy.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "policy_set_name": {
          "aliases": [],
          "description": "The name of the policy set.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DTL Policy facts"
    },
    "examples": "\n  - name: Get instance of Policy\n    community.azure.azure_rm_devtestlabpolicy_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      policy_set_name: myPolicySet\n      name: myPolicy\n"
  },
  "community.azure.azure_rm_devtestlabpolicy_info": {
    "doc": {
      "description": "Get facts of Azure DTL Policy.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the policy.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "policy_set_name": {
          "aliases": [],
          "description": "The name of the policy set.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DTL Policy facts"
    },
    "examples": "\n  - name: Get instance of Policy\n    community.azure.azure_rm_devtestlabpolicy_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      policy_set_name: myPolicySet\n      name: myPolicy\n"
  },
  "community.azure.azure_rm_devtestlabschedule_facts": {
    "doc": {
      "description": "Get facts of Azure Schedule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the schedule.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Schedule facts"
    },
    "examples": "\n  - name: Get instance of Schedule\n    community.azure.azure_rm_devtestlabschedule_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: mySchedule\n"
  },
  "community.azure.azure_rm_devtestlabschedule_info": {
    "doc": {
      "description": "Get facts of Azure Schedule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the schedule.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Schedule facts"
    },
    "examples": "\n  - name: Get instance of Schedule\n    community.azure.azure_rm_devtestlabschedule_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: mySchedule\n"
  },
  "community.azure.azure_rm_devtestlabvirtualmachine_facts": {
    "doc": {
      "description": "Get facts of Azure DevTest Lab Virtual Machine.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the virtual machine.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab Virtual Machine facts"
    },
    "examples": "\n  - name: Get instance of DTL Virtual Machine\n    community.azure.azure_rm_devtestlabvirtualmachine_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: myVm\n"
  },
  "community.azure.azure_rm_devtestlabvirtualmachine_info": {
    "doc": {
      "description": "Get facts of Azure DevTest Lab Virtual Machine.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of the lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the virtual machine.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab Virtual Machine facts"
    },
    "examples": "\n  - name: Get instance of DTL Virtual Machine\n    community.azure.azure_rm_devtestlabvirtualmachine_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: myVm\n"
  },
  "community.azure.azure_rm_devtestlabvirtualnetwork_facts": {
    "doc": {
      "description": "Get facts of Azure DevTest Lab Virtual Network.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of DevTest Lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of DevTest Lab Virtual Network.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab Virtual Network facts"
    },
    "examples": "\n  - name: Get instance of DevTest Lab Virtual Network\n    community.azure.azure_rm_devtestlabvirtualnetwork_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: myVirtualNetwork\n\n  - name: List all Virtual Networks in DevTest Lab\n    community.azure.azure_rm_devtestlabvirtualnetwork_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: myVirtualNetwork\n"
  },
  "community.azure.azure_rm_devtestlabvirtualnetwork_info": {
    "doc": {
      "description": "Get facts of Azure DevTest Lab Virtual Network.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "lab_name": {
          "aliases": [],
          "description": "The name of DevTest Lab.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of DevTest Lab Virtual Network.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure DevTest Lab Virtual Network facts"
    },
    "examples": "\n  - name: Get instance of DevTest Lab Virtual Network\n    community.azure.azure_rm_devtestlabvirtualnetwork_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: myVirtualNetwork\n\n  - name: List all Virtual Networks in DevTest Lab\n    community.azure.azure_rm_devtestlabvirtualnetwork_info:\n      resource_group: myResourceGroup\n      lab_name: myLab\n      name: myVirtualNetwork\n"
  },
  "community.azure.azure_rm_dnsrecordset_facts": {
    "doc": {
      "description": "Get facts for a specific DNS Record Set in a Zone, or a specific type in all Zones or in one Zone etc.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "record_type": {
          "aliases": [],
          "description": "Limit record sets by record type.",
          "required": false,
          "suboptions": {}
        },
        "relative_name": {
          "aliases": [],
          "description": "Only show results for a Record Set.",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group. Required when filtering by name or type.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "top": {
          "aliases": [],
          "description": "Limit the maximum number of record sets to return.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "zone_name": {
          "aliases": [],
          "description": "Limit results by zones. Required when filtering by name or type.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get DNS Record Set facts"
    },
    "examples": "\n- name: Get facts for one Record Set\n  community.azure.azure_rm_dnsrecordset_info:\n    resource_group: myResourceGroup\n    zone_name: example.com\n    relative_name: server10\n    record_type: A\n- name: Get facts for all Type A Record Sets in a Zone\n  community.azure.azure_rm_dnsrecordset_info:\n    resource_group: myResourceGroup\n    zone_name: example.com\n    record_type: A\n- name: Get all record sets in one zone\n  community.azure.azure_rm_dnsrecordset_info:\n    resource_group: myResourceGroup\n    zone_name: example.com\n"
  },
  "community.azure.azure_rm_dnsrecordset_info": {
    "doc": {
      "description": "Get facts for a specific DNS Record Set in a Zone, or a specific type in all Zones or in one Zone etc.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "record_type": {
          "aliases": [],
          "description": "Limit record sets by record type.",
          "required": false,
          "suboptions": {}
        },
        "relative_name": {
          "aliases": [],
          "description": "Only show results for a Record Set.",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group. Required when filtering by name or type.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "top": {
          "aliases": [],
          "description": "Limit the maximum number of record sets to return.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "zone_name": {
          "aliases": [],
          "description": "Limit results by zones. Required when filtering by name or type.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get DNS Record Set facts"
    },
    "examples": "\n- name: Get facts for one Record Set\n  community.azure.azure_rm_dnsrecordset_info:\n    resource_group: myResourceGroup\n    zone_name: example.com\n    relative_name: server10\n    record_type: A\n- name: Get facts for all Type A Record Sets in a Zone\n  community.azure.azure_rm_dnsrecordset_info:\n    resource_group: myResourceGroup\n    zone_name: example.com\n    record_type: A\n- name: Get all record sets in one zone\n  community.azure.azure_rm_dnsrecordset_info:\n    resource_group: myResourceGroup\n    zone_name: example.com\n"
  },
  "community.azure.azure_rm_dnszone_facts": {
    "doc": {
      "description": "Get facts for a specific DNS zone or all DNS zones within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific zone.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group. Required when filtering by name.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get DNS zone facts"
    },
    "examples": "\n- name: Get facts for one zone\n  community.azure.azure_rm_dnszone_info:\n    resource_group: myResourceGroup\n    name: foobar22\n\n- name: Get facts for all zones in a resource group\n  community.azure.azure_rm_dnszone_info:\n    resource_group: myResourceGroup\n\n- name: Get facts by tags\n  community.azure.azure_rm_dnszone_info:\n    tags:\n      - testing\n"
  },
  "community.azure.azure_rm_dnszone_info": {
    "doc": {
      "description": "Get facts for a specific DNS zone or all DNS zones within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific zone.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group. Required when filtering by name.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get DNS zone facts"
    },
    "examples": "\n- name: Get facts for one zone\n  community.azure.azure_rm_dnszone_info:\n    resource_group: myResourceGroup\n    name: foobar22\n\n- name: Get facts for all zones in a resource group\n  community.azure.azure_rm_dnszone_info:\n    resource_group: myResourceGroup\n\n- name: Get facts by tags\n  community.azure.azure_rm_dnszone_info:\n    tags:\n      - testing\n"
  },
  "community.azure.azure_rm_functionapp_facts": {
    "doc": {
      "description": "Get facts for one Azure Function App or all Function Apps within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific Function App.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [
            "resource_group_name"
          ],
          "description": "Limit results to a resource group. Required when filtering by name.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Function App facts"
    },
    "examples": "\n    - name: Get facts for one Function App\n      community.azure.azure_rm_functionapp_info:\n        resource_group: myResourceGroup\n        name: myfunctionapp\n\n    - name: Get facts for all Function Apps in a resource group\n      community.azure.azure_rm_functionapp_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts for all Function Apps by tags\n      community.azure.azure_rm_functionapp_info:\n        tags:\n          - testing\n"
  },
  "community.azure.azure_rm_functionapp_info": {
    "doc": {
      "description": "Get facts for one Azure Function App or all Function Apps within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific Function App.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [
            "resource_group_name"
          ],
          "description": "Limit results to a resource group. Required when filtering by name.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Function App facts"
    },
    "examples": "\n    - name: Get facts for one Function App\n      community.azure.azure_rm_functionapp_info:\n        resource_group: myResourceGroup\n        name: myfunctionapp\n\n    - name: Get facts for all Function Apps in a resource group\n      community.azure.azure_rm_functionapp_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts for all Function Apps by tags\n      community.azure.azure_rm_functionapp_info:\n        tags:\n          - testing\n"
  },
  "community.azure.azure_rm_hdinsightcluster_facts": {
    "doc": {
      "description": "Get facts of Azure HDInsight Cluster.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "HDInsight cluster name.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of an Azure resource group.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure HDInsight Cluster facts"
    },
    "examples": "\n  - name: Get instance of HDInsight Cluster\n    community.azure.azure_rm_hdinsightcluster_info:\n      resource_group: myResourceGroup\n      name: myCluster\n\n  - name: List instances of HDInsight Cluster\n    community.azure.azure_rm_hdinsightcluster_info:\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_hdinsightcluster_info": {
    "doc": {
      "description": "Get facts of Azure HDInsight Cluster.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "HDInsight cluster name.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of an Azure resource group.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure HDInsight Cluster facts"
    },
    "examples": "\n  - name: Get instance of HDInsight Cluster\n    community.azure.azure_rm_hdinsightcluster_info:\n      resource_group: myResourceGroup\n      name: myCluster\n\n  - name: List instances of HDInsight Cluster\n    community.azure.azure_rm_hdinsightcluster_info:\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_image_facts": {
    "doc": {
      "description": "List azure custom images. The images can be listed where scope of listing can be based on subscription, resource group, name or tags.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the image to filter from existing images.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "List of tags to be matched.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get facts about azure custom images"
    },
    "examples": "\n- name: List images with name\n  community.azure.azure_rm_image_info:\n    name: test-image\n    resource_group: myResourceGroup\n\n- name: List images by resource group\n  community.azure.azure_rm_image_info:\n    resource_group: myResourceGroup\n    tags:\n      - testing\n      - foo:bar\n\n- name: List all available images under current subscription\n  community.azure.azure_rm_image_info:\n"
  },
  "community.azure.azure_rm_image_info": {
    "doc": {
      "description": "List azure custom images. The images can be listed where scope of listing can be based on subscription, resource group, name or tags.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the image to filter from existing images.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "List of tags to be matched.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get facts about azure custom images"
    },
    "examples": "\n- name: List images with name\n  community.azure.azure_rm_image_info:\n    name: test-image\n    resource_group: myResourceGroup\n\n- name: List images by resource group\n  community.azure.azure_rm_image_info:\n    resource_group: myResourceGroup\n    tags:\n      - testing\n      - foo:bar\n\n- name: List all available images under current subscription\n  community.azure.azure_rm_image_info:\n"
  },
  "community.azure.azure_rm_loadbalancer_facts": {
    "doc": {
      "description": "Get facts for a specific load balancer or all load balancers.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific resource group.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired load balancer.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get load balancer facts"
    },
    "examples": "\n    - name: Get facts for one load balancer\n      community.azure.azure_rm_loadbalancer_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all load balancers\n      community.azure.azure_rm_loadbalancer_info:\n\n    - name: Get facts for all load balancers in a specific resource group\n      community.azure.azure_rm_loadbalancer_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts by tags\n      community.azure.azure_rm_loadbalancer_info:\n        tags:\n          - testing\n"
  },
  "community.azure.azure_rm_loadbalancer_info": {
    "doc": {
      "description": "Get facts for a specific load balancer or all load balancers.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific resource group.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired load balancer.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get load balancer facts"
    },
    "examples": "\n    - name: Get facts for one load balancer\n      community.azure.azure_rm_loadbalancer_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all load balancers\n      community.azure.azure_rm_loadbalancer_info:\n\n    - name: Get facts for all load balancers in a specific resource group\n      community.azure.azure_rm_loadbalancer_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts by tags\n      community.azure.azure_rm_loadbalancer_info:\n        tags:\n          - testing\n"
  },
  "community.azure.azure_rm_lock_facts": {
    "doc": {
      "description": "Create, delete an Azure lock.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "managed_resource_id": {
          "aliases": [],
          "description": "ID of the resource where need to manage the lock.\nGet this via facts module.\nCannot be set mutual with I(resource_group).\nManage subscription if both I(managed_resource_id) and I(resource_group) not defined.\n'/subscriptions/{subscriptionId}' for subscriptions.\n'/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' for resource groups.\n'/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{namespace}/{resourceType}/{resourceName}' for resources.\nCan get all locks with 'child scope' for this resource, use I(managed_resource_id) in response for further management.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the lock.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Resource group name where need to manage the lock.\nThe lock is in the resource group level.\nCannot be set mutual with I(managed_resource_id).\nQuery subscription if both I(managed_resource_id) and I(resource_group) not defined.\nCan get all locks with 'child scope' in this resource group, use the I(managed_resource_id) in response for further management.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure locks"
    },
    "examples": "\n- name: Get myLock details of myVM\n  community.azure.azure_rm_lock_info:\n    name: myLock\n    managed_resource_id: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourcegroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM\n\n- name: List locks of myVM\n  community.azure.azure_rm_lock_info:\n    managed_resource_id: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourcegroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM\n\n- name: List locks of myResourceGroup\n  community.azure.azure_rm_lock_info:\n    resource_group: myResourceGroup\n\n- name: List locks of myResourceGroup\n  community.azure.azure_rm_lock_info:\n    managed_resource_id: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourcegroups/myResourceGroup\n\n- name: List locks of mySubscription\n  community.azure.azure_rm_lock_info:\n\n- name: List locks of mySubscription\n  community.azure.azure_rm_lock_info:\n    managed_resource_id: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n"
  },
  "community.azure.azure_rm_lock_info": {
    "doc": {
      "description": "Create, delete an Azure lock.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "managed_resource_id": {
          "aliases": [],
          "description": "ID of the resource where need to manage the lock.\nGet this via facts module.\nCannot be set mutual with I(resource_group).\nManage subscription if both I(managed_resource_id) and I(resource_group) not defined.\n'/subscriptions/{subscriptionId}' for subscriptions.\n'/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}' for resource groups.\n'/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{namespace}/{resourceType}/{resourceName}' for resources.\nCan get all locks with 'child scope' for this resource, use I(managed_resource_id) in response for further management.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the lock.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Resource group name where need to manage the lock.\nThe lock is in the resource group level.\nCannot be set mutual with I(managed_resource_id).\nQuery subscription if both I(managed_resource_id) and I(resource_group) not defined.\nCan get all locks with 'child scope' in this resource group, use the I(managed_resource_id) in response for further management.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure locks"
    },
    "examples": "\n- name: Get myLock details of myVM\n  community.azure.azure_rm_lock_info:\n    name: myLock\n    managed_resource_id: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourcegroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM\n\n- name: List locks of myVM\n  community.azure.azure_rm_lock_info:\n    managed_resource_id: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourcegroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM\n\n- name: List locks of myResourceGroup\n  community.azure.azure_rm_lock_info:\n    resource_group: myResourceGroup\n\n- name: List locks of myResourceGroup\n  community.azure.azure_rm_lock_info:\n    managed_resource_id: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourcegroups/myResourceGroup\n\n- name: List locks of mySubscription\n  community.azure.azure_rm_lock_info:\n\n- name: List locks of mySubscription\n  community.azure.azure_rm_lock_info:\n    managed_resource_id: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n"
  },
  "community.azure.azure_rm_loganalyticsworkspace_facts": {
    "doc": {
      "description": "Get, query Azure Log Analytics workspaces.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the workspace.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "show_intelligence_packs": {
          "aliases": [],
          "description": "Show the intelligence packs for a workspace.\nNote this will cost one more network overhead for each workspace, expected slow response.",
          "required": false,
          "suboptions": {}
        },
        "show_management_groups": {
          "aliases": [],
          "description": "Show the management groups for a workspace.\nNote this will cost one more network overhead for each workspace, expected slow response.",
          "required": false,
          "suboptions": {}
        },
        "show_shared_keys": {
          "aliases": [],
          "description": "Show the shared keys for a workspace.\nNote this will cost one more network overhead for each workspace, expected slow response.",
          "required": false,
          "suboptions": {}
        },
        "show_usages": {
          "aliases": [],
          "description": "Show the list of usages for a workspace.\nNote this will cost one more network overhead for each workspace, expected slow response.",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get facts of Azure Log Analytics workspaces"
    },
    "examples": "\n- name: Query a workspace\n  community.azure.azure_rm_loganalyticsworkspace_info:\n      resource_group: myResourceGroup\n      name: myLogAnalyticsWorkspace\n      show_intelligence_packs: true\n      show_management_groups: true\n      show_shared_keys: true\n      show_usages: true\n"
  },
  "community.azure.azure_rm_loganalyticsworkspace_info": {
    "doc": {
      "description": "Get, query Azure Log Analytics workspaces.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the workspace.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "show_intelligence_packs": {
          "aliases": [],
          "description": "Show the intelligence packs for a workspace.\nNote this will cost one more network overhead for each workspace, expected slow response.",
          "required": false,
          "suboptions": {}
        },
        "show_management_groups": {
          "aliases": [],
          "description": "Show the management groups for a workspace.\nNote this will cost one more network overhead for each workspace, expected slow response.",
          "required": false,
          "suboptions": {}
        },
        "show_shared_keys": {
          "aliases": [],
          "description": "Show the shared keys for a workspace.\nNote this will cost one more network overhead for each workspace, expected slow response.",
          "required": false,
          "suboptions": {}
        },
        "show_usages": {
          "aliases": [],
          "description": "Show the list of usages for a workspace.\nNote this will cost one more network overhead for each workspace, expected slow response.",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get facts of Azure Log Analytics workspaces"
    },
    "examples": "\n- name: Query a workspace\n  community.azure.azure_rm_loganalyticsworkspace_info:\n      resource_group: myResourceGroup\n      name: myLogAnalyticsWorkspace\n      show_intelligence_packs: true\n      show_management_groups: true\n      show_shared_keys: true\n      show_usages: true\n"
  },
  "community.azure.azure_rm_managed_disk": {
    "doc": {
      "description": "Create, update and delete an Azure Managed Disk.",
      "has_action": false,
      "notes": "This module was called M(community.azure.azure_rm_managed_disk) before Ansible 2.8. The usage did not change.\nFor authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "attach_caching": {
          "aliases": [],
          "description": "Disk caching policy controlled by VM. Will be used when attached to the VM defined by C(managed_by).\nIf this option is different from the current caching policy, the managed disk will be deattached and attached with current caching option again.",
          "required": false,
          "choices": [
            "read_only",
            "read_write"
          ],
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "create_option": {
          "aliases": [],
          "description": "C(import) from a VHD file in I(source_uri) and C(copy) from previous managed disk I(source_uri).",
          "required": false,
          "choices": [
            "empty",
            "import",
            "copy"
          ],
          "suboptions": {}
        },
        "disk_size_gb": {
          "aliases": [],
          "description": "Size in GB of the managed disk to be created.\nIf I(create_option=copy) then the value must be greater than or equal to the source's size.",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lun": {
          "aliases": [],
          "description": "The logical unit number for data disk.\nThis value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "managed_by": {
          "aliases": [],
          "description": "Name of an existing virtual machine with which the disk is or will be associated, this VM should be in the same resource group.\nTo detach a disk from a vm, explicitly set to ''.\nIf this option is unset, the value will not be changed.",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the managed disk.",
          "required": true,
          "suboptions": {}
        },
        "os_type": {
          "aliases": [],
          "description": "Type of Operating System.\nUsed when I(create_option=copy) or I(create_option=import) and the source is an OS disk.\nIf omitted during creation, no value is set.\nIf omitted during an update, no change is made.\nOnce set, this value cannot be cleared.",
          "required": false,
          "choices": [
            "linux",
            "windows"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the managed disk exists or will be created.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_uri": {
          "aliases": [
            "source_resource_uri"
          ],
          "description": "URI to a valid VHD file to be used or the resource ID of the managed disk to copy.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the managed disk. Use C(present) to create or update a managed disk and C(absent) to delete a managed disk.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "storage_account_type": {
          "aliases": [],
          "description": "Type of storage for the managed disk.\nIf not specified, the disk is created as C(Standard_LRS).\nC(Standard_LRS) is for Standard HDD.\nC(StandardSSD_LRS) (added in 2.8) is for Standard SSD.\nC(Premium_LRS) is for Premium SSD.\nC(UltraSSD_LRS) (added in 2.8) is for Ultra SSD, which is in preview mode, and only available on select instance types.\nSee U(https://docs.microsoft.com/en-us/azure/virtual-machines/windows/disks-types) for more information about disk types.",
          "required": false,
          "choices": [
            "Standard_LRS",
            "StandardSSD_LRS",
            "Premium_LRS",
            "UltraSSD_LRS"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Tags to assign to the managed disk.\nFormat tags as 'key' or 'key:value'.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "The Azure managed disk's zone.\nAllowed values are C(1), C(2), C(3) and C(' ').",
          "required": false,
          "choices": [
            "1",
            "2",
            "3"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Manage Disks"
    },
    "examples": "\n    - name: Create managed disk\n      community.azure.azure_rm_manageddisk:\n        name: mymanageddisk\n        location: eastus\n        resource_group: myResourceGroup\n        disk_size_gb: 4\n\n    - name: Create managed operating system disk from page blob\n      community.azure.azure_rm_manageddisk:\n        name: mymanageddisk\n        location: eastus2\n        resource_group: myResourceGroup\n        create_option: import\n        source_uri: https://storageaccountname.blob.core.windows.net/containername/blob-name.vhd\n        os_type: windows\n        storage_account_type: Premium_LRS\n\n    - name: Mount the managed disk to VM\n      community.azure.azure_rm_manageddisk:\n        name: mymanageddisk\n        location: eastus\n        resource_group: myResourceGroup\n        disk_size_gb: 4\n        managed_by: testvm001\n        attach_caching: read_only\n\n    - name: Unmount the managed disk to VM\n      community.azure.azure_rm_manageddisk:\n        name: mymanageddisk\n        location: eastus\n        resource_group: myResourceGroup\n        disk_size_gb: 4\n\n    - name: Delete managed disk\n      community.azure.azure_rm_manageddisk:\n        name: mymanageddisk\n        location: eastus\n        resource_group: myResourceGroup\n        state: absent\n"
  },
  "community.azure.azure_rm_managed_disk_facts": {
    "doc": {
      "description": "Get facts for a specific managed disk or all managed disks.",
      "has_action": false,
      "notes": "This module was called M(community.azure.azure_rm_managed_disk_facts) before Ansible 2.8. The usage did not change.\nFor authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific managed disk.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results to a specific resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags.\nFormat tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get managed disk facts"
    },
    "examples": "\n- name: Get facts for one managed disk\n  community.azure.azure_rm_manageddisk_info:\n    name: Testing\n    resource_group: myResourceGroup\n\n- name: Get facts for all managed disks\n  community.azure.azure_rm_manageddisk_info:\n\n- name: Get facts by tags\n  community.azure.azure_rm_manageddisk_info:\n    tags:\n    - testing\n"
  },
  "community.azure.azure_rm_manageddisk": {
    "doc": {
      "description": "Create, update and delete an Azure Managed Disk.",
      "has_action": false,
      "notes": "This module was called M(community.azure.azure_rm_managed_disk) before Ansible 2.8. The usage did not change.\nFor authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "attach_caching": {
          "aliases": [],
          "description": "Disk caching policy controlled by VM. Will be used when attached to the VM defined by C(managed_by).\nIf this option is different from the current caching policy, the managed disk will be deattached and attached with current caching option again.",
          "required": false,
          "choices": [
            "read_only",
            "read_write"
          ],
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "create_option": {
          "aliases": [],
          "description": "C(import) from a VHD file in I(source_uri) and C(copy) from previous managed disk I(source_uri).",
          "required": false,
          "choices": [
            "empty",
            "import",
            "copy"
          ],
          "suboptions": {}
        },
        "disk_size_gb": {
          "aliases": [],
          "description": "Size in GB of the managed disk to be created.\nIf I(create_option=copy) then the value must be greater than or equal to the source's size.",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lun": {
          "aliases": [],
          "description": "The logical unit number for data disk.\nThis value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "managed_by": {
          "aliases": [],
          "description": "Name of an existing virtual machine with which the disk is or will be associated, this VM should be in the same resource group.\nTo detach a disk from a vm, explicitly set to ''.\nIf this option is unset, the value will not be changed.",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the managed disk.",
          "required": true,
          "suboptions": {}
        },
        "os_type": {
          "aliases": [],
          "description": "Type of Operating System.\nUsed when I(create_option=copy) or I(create_option=import) and the source is an OS disk.\nIf omitted during creation, no value is set.\nIf omitted during an update, no change is made.\nOnce set, this value cannot be cleared.",
          "required": false,
          "choices": [
            "linux",
            "windows"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the managed disk exists or will be created.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_uri": {
          "aliases": [
            "source_resource_uri"
          ],
          "description": "URI to a valid VHD file to be used or the resource ID of the managed disk to copy.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the managed disk. Use C(present) to create or update a managed disk and C(absent) to delete a managed disk.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "storage_account_type": {
          "aliases": [],
          "description": "Type of storage for the managed disk.\nIf not specified, the disk is created as C(Standard_LRS).\nC(Standard_LRS) is for Standard HDD.\nC(StandardSSD_LRS) (added in 2.8) is for Standard SSD.\nC(Premium_LRS) is for Premium SSD.\nC(UltraSSD_LRS) (added in 2.8) is for Ultra SSD, which is in preview mode, and only available on select instance types.\nSee U(https://docs.microsoft.com/en-us/azure/virtual-machines/windows/disks-types) for more information about disk types.",
          "required": false,
          "choices": [
            "Standard_LRS",
            "StandardSSD_LRS",
            "Premium_LRS",
            "UltraSSD_LRS"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Tags to assign to the managed disk.\nFormat tags as 'key' or 'key:value'.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "The Azure managed disk's zone.\nAllowed values are C(1), C(2), C(3) and C(' ').",
          "required": false,
          "choices": [
            "1",
            "2",
            "3"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure Manage Disks"
    },
    "examples": "\n    - name: Create managed disk\n      community.azure.azure_rm_manageddisk:\n        name: mymanageddisk\n        location: eastus\n        resource_group: myResourceGroup\n        disk_size_gb: 4\n\n    - name: Create managed operating system disk from page blob\n      community.azure.azure_rm_manageddisk:\n        name: mymanageddisk\n        location: eastus2\n        resource_group: myResourceGroup\n        create_option: import\n        source_uri: https://storageaccountname.blob.core.windows.net/containername/blob-name.vhd\n        os_type: windows\n        storage_account_type: Premium_LRS\n\n    - name: Mount the managed disk to VM\n      community.azure.azure_rm_manageddisk:\n        name: mymanageddisk\n        location: eastus\n        resource_group: myResourceGroup\n        disk_size_gb: 4\n        managed_by: testvm001\n        attach_caching: read_only\n\n    - name: Unmount the managed disk to VM\n      community.azure.azure_rm_manageddisk:\n        name: mymanageddisk\n        location: eastus\n        resource_group: myResourceGroup\n        disk_size_gb: 4\n\n    - name: Delete managed disk\n      community.azure.azure_rm_manageddisk:\n        name: mymanageddisk\n        location: eastus\n        resource_group: myResourceGroup\n        state: absent\n"
  },
  "community.azure.azure_rm_manageddisk_facts": {
    "doc": {
      "description": "Get facts for a specific managed disk or all managed disks.",
      "has_action": false,
      "notes": "This module was called M(community.azure.azure_rm_managed_disk_facts) before Ansible 2.8. The usage did not change.\nFor authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific managed disk.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results to a specific resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags.\nFormat tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get managed disk facts"
    },
    "examples": "\n- name: Get facts for one managed disk\n  community.azure.azure_rm_manageddisk_info:\n    name: Testing\n    resource_group: myResourceGroup\n\n- name: Get facts for all managed disks\n  community.azure.azure_rm_manageddisk_info:\n\n- name: Get facts by tags\n  community.azure.azure_rm_manageddisk_info:\n    tags:\n    - testing\n"
  },
  "community.azure.azure_rm_manageddisk_info": {
    "doc": {
      "description": "Get facts for a specific managed disk or all managed disks.",
      "has_action": false,
      "notes": "This module was called M(community.azure.azure_rm_managed_disk_facts) before Ansible 2.8. The usage did not change.\nFor authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific managed disk.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results to a specific resource group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags.\nFormat tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get managed disk facts"
    },
    "examples": "\n- name: Get facts for one managed disk\n  community.azure.azure_rm_manageddisk_info:\n    name: Testing\n    resource_group: myResourceGroup\n\n- name: Get facts for all managed disks\n  community.azure.azure_rm_manageddisk_info:\n\n- name: Get facts by tags\n  community.azure.azure_rm_manageddisk_info:\n    tags:\n    - testing\n"
  },
  "community.azure.azure_rm_mariadbconfiguration_facts": {
    "doc": {
      "description": "Get facts of Azure MariaDB Configuration.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Setting name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MariaDB Configuration facts"
    },
    "examples": "\n  - name: Get specific setting of MariaDB Server\n    community.azure.azure_rm_mariadbconfiguration_info:\n      resource_group: myResourceGroup\n      server_name: testserver\n      name: deadlock_timeout\n\n  - name: Get all settings of MariaDB Server\n    community.azure.azure_rm_mariadbconfiguration_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "community.azure.azure_rm_mariadbconfiguration_info": {
    "doc": {
      "description": "Get facts of Azure MariaDB Configuration.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Setting name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MariaDB Configuration facts"
    },
    "examples": "\n  - name: Get specific setting of MariaDB Server\n    community.azure.azure_rm_mariadbconfiguration_info:\n      resource_group: myResourceGroup\n      server_name: testserver\n      name: deadlock_timeout\n\n  - name: Get all settings of MariaDB Server\n    community.azure.azure_rm_mariadbconfiguration_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "community.azure.azure_rm_mariadbdatabase_facts": {
    "doc": {
      "description": "Get facts of MariaDB Database.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the database.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MariaDB Database facts"
    },
    "examples": "\n  - name: Get instance of MariaDB Database\n    community.azure.azure_rm_mariadbdatabase_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n      name: database_name\n\n  - name: List instances of MariaDB Database\n    community.azure.azure_rm_mariadbdatabase_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "community.azure.azure_rm_mariadbdatabase_info": {
    "doc": {
      "description": "Get facts of MariaDB Database.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the database.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MariaDB Database facts"
    },
    "examples": "\n  - name: Get instance of MariaDB Database\n    community.azure.azure_rm_mariadbdatabase_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n      name: database_name\n\n  - name: List instances of MariaDB Database\n    community.azure.azure_rm_mariadbdatabase_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "community.azure.azure_rm_mariadbfirewallrule_facts": {
    "doc": {
      "description": "Get facts of Azure MariaDB Firewall Rule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server firewall rule.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MariaDB Firewall Rule facts"
    },
    "examples": "\n  - name: Get instance of MariaDB Firewall Rule\n    community.azure.azure_rm_mariadbfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n      name: firewall_rule_name\n\n  - name: List instances of MariaDB Firewall Rule\n    community.azure.azure_rm_mariadbfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "community.azure.azure_rm_mariadbfirewallrule_info": {
    "doc": {
      "description": "Get facts of Azure MariaDB Firewall Rule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server firewall rule.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MariaDB Firewall Rule facts"
    },
    "examples": "\n  - name: Get instance of MariaDB Firewall Rule\n    community.azure.azure_rm_mariadbfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n      name: firewall_rule_name\n\n  - name: List instances of MariaDB Firewall Rule\n    community.azure.azure_rm_mariadbfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "community.azure.azure_rm_mariadbserver_facts": {
    "doc": {
      "description": "Get facts of MariaDB Server.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MariaDB Server facts"
    },
    "examples": "\n  - name: Get instance of MariaDB Server\n    community.azure.azure_rm_mariadbserver_info:\n      resource_group: myResourceGroup\n      name: server_name\n\n  - name: List instances of MariaDB Server\n    community.azure.azure_rm_mariadbserver_info:\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_mariadbserver_info": {
    "doc": {
      "description": "Get facts of MariaDB Server.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MariaDB Server facts"
    },
    "examples": "\n  - name: Get instance of MariaDB Server\n    community.azure.azure_rm_mariadbserver_info:\n      resource_group: myResourceGroup\n      name: server_name\n\n  - name: List instances of MariaDB Server\n    community.azure.azure_rm_mariadbserver_info:\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_mysqlconfiguration_facts": {
    "doc": {
      "description": "Get facts of Azure MySQL Configuration.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Setting name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MySQL Configuration facts"
    },
    "examples": "\n  - name: Get specific setting of MySQL Server\n    community.azure.azure_rm_mysqlconfiguration_info:\n      resource_group: myResourceGroup\n      server_name: testmysqlserver\n      name: deadlock_timeout\n\n  - name: Get all settings of MySQL Server\n    community.azure.azure_rm_mysqlconfiguration_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "community.azure.azure_rm_mysqlconfiguration_info": {
    "doc": {
      "description": "Get facts of Azure MySQL Configuration.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Setting name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MySQL Configuration facts"
    },
    "examples": "\n  - name: Get specific setting of MySQL Server\n    community.azure.azure_rm_mysqlconfiguration_info:\n      resource_group: myResourceGroup\n      server_name: testmysqlserver\n      name: deadlock_timeout\n\n  - name: Get all settings of MySQL Server\n    community.azure.azure_rm_mysqlconfiguration_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "community.azure.azure_rm_mysqldatabase_facts": {
    "doc": {
      "description": "Get facts of MySQL Database.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the database.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MySQL Database facts"
    },
    "examples": "\n  - name: Get instance of MySQL Database\n    community.azure.azure_rm_mysqldatabase_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n      name: database_name\n\n  - name: List instances of MySQL Database\n    community.azure.azure_rm_mysqldatabase_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "community.azure.azure_rm_mysqldatabase_info": {
    "doc": {
      "description": "Get facts of MySQL Database.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the database.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MySQL Database facts"
    },
    "examples": "\n  - name: Get instance of MySQL Database\n    community.azure.azure_rm_mysqldatabase_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n      name: database_name\n\n  - name: List instances of MySQL Database\n    community.azure.azure_rm_mysqldatabase_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "community.azure.azure_rm_mysqlfirewallrule_facts": {
    "doc": {
      "description": "Get facts of Azure MySQL Firewall Rule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server firewall rule.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MySQL Firewall Rule facts"
    },
    "examples": "\n  - name: Get instance of MySQL Firewall Rule\n    community.azure.azure_rm_mysqlfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n      name: firewall_rule_name\n\n  - name: List instances of MySQL Firewall Rule\n    community.azure.azure_rm_mysqlfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "community.azure.azure_rm_mysqlfirewallrule_info": {
    "doc": {
      "description": "Get facts of Azure MySQL Firewall Rule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server firewall rule.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MySQL Firewall Rule facts"
    },
    "examples": "\n  - name: Get instance of MySQL Firewall Rule\n    community.azure.azure_rm_mysqlfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n      name: firewall_rule_name\n\n  - name: List instances of MySQL Firewall Rule\n    community.azure.azure_rm_mysqlfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "community.azure.azure_rm_mysqlserver_facts": {
    "doc": {
      "description": "Get facts of MySQL Server.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MySQL Server facts"
    },
    "examples": "\n  - name: Get instance of MySQL Server\n    community.azure.azure_rm_mysqlserver_info:\n      resource_group: myResourceGroup\n      name: server_name\n\n  - name: List instances of MySQL Server\n    community.azure.azure_rm_mysqlserver_info:\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_mysqlserver_info": {
    "doc": {
      "description": "Get facts of MySQL Server.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure MySQL Server facts"
    },
    "examples": "\n  - name: Get instance of MySQL Server\n    community.azure.azure_rm_mysqlserver_info:\n      resource_group: myResourceGroup\n      name: server_name\n\n  - name: List instances of MySQL Server\n    community.azure.azure_rm_mysqlserver_info:\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_networkinterface_facts": {
    "doc": {
      "description": "Get facts for a specific network interface or all network interfaces within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific network interface.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group containing the network interface(s). Required when searching by name.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get network interface facts"
    },
    "examples": "\n    - name: Get facts for one network interface\n      community.azure.azure_rm_networkinterface_info:\n        resource_group: myResourceGroup\n        name: nic001\n\n    - name: Get network interfaces within a resource group\n      community.azure.azure_rm_networkinterface_info:\n        resource_group: myResourceGroup\n\n    - name: Get network interfaces by tag\n      community.azure.azure_rm_networkinterface_info:\n        resource_group: myResourceGroup\n        tags:\n          - testing\n          - foo:bar\n"
  },
  "community.azure.azure_rm_networkinterface_info": {
    "doc": {
      "description": "Get facts for a specific network interface or all network interfaces within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific network interface.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group containing the network interface(s). Required when searching by name.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get network interface facts"
    },
    "examples": "\n    - name: Get facts for one network interface\n      community.azure.azure_rm_networkinterface_info:\n        resource_group: myResourceGroup\n        name: nic001\n\n    - name: Get network interfaces within a resource group\n      community.azure.azure_rm_networkinterface_info:\n        resource_group: myResourceGroup\n\n    - name: Get network interfaces by tag\n      community.azure.azure_rm_networkinterface_info:\n        resource_group: myResourceGroup\n        tags:\n          - testing\n          - foo:bar\n"
  },
  "community.azure.azure_rm_postgresqlconfiguration_facts": {
    "doc": {
      "description": "Get facts of Azure PostgreSQL Configuration.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Setting name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure PostgreSQL Configuration facts"
    },
    "examples": "\n  - name: Get specific setting of PostgreSQL configuration\n    community.azure.azure_rm_postgresqlconfiguration_info:\n      resource_group: myResourceGroup\n      server_name: testpostgresqlserver\n      name: deadlock_timeout\n\n  - name: Get all settings of PostgreSQL Configuration\n    community.azure.azure_rm_postgresqlconfiguration_info:\n      resource_group: myResourceGroup\n      server_name: testpostgresqlserver\n"
  },
  "community.azure.azure_rm_postgresqlconfiguration_info": {
    "doc": {
      "description": "Get facts of Azure PostgreSQL Configuration.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Setting name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure PostgreSQL Configuration facts"
    },
    "examples": "\n  - name: Get specific setting of PostgreSQL configuration\n    community.azure.azure_rm_postgresqlconfiguration_info:\n      resource_group: myResourceGroup\n      server_name: testpostgresqlserver\n      name: deadlock_timeout\n\n  - name: Get all settings of PostgreSQL Configuration\n    community.azure.azure_rm_postgresqlconfiguration_info:\n      resource_group: myResourceGroup\n      server_name: testpostgresqlserver\n"
  },
  "community.azure.azure_rm_postgresqldatabase_facts": {
    "doc": {
      "description": "Get facts of PostgreSQL Database.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the database.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure PostgreSQL Database facts"
    },
    "examples": "\n  - name: Get instance of PostgreSQL Database\n    community.azure.azure_rm_postgresqldatabase_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n      name: database_name\n\n  - name: List instances of PostgreSQL Database\n    community.azure.azure_rm_postgresqldatabase_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "community.azure.azure_rm_postgresqldatabase_info": {
    "doc": {
      "description": "Get facts of PostgreSQL Database.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the database.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure PostgreSQL Database facts"
    },
    "examples": "\n  - name: Get instance of PostgreSQL Database\n    community.azure.azure_rm_postgresqldatabase_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n      name: database_name\n\n  - name: List instances of PostgreSQL Database\n    community.azure.azure_rm_postgresqldatabase_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "community.azure.azure_rm_postgresqlfirewallrule_facts": {
    "doc": {
      "description": "Get facts of Azure PostgreSQL Firewall Rule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server firewall rule.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure PostgreSQL Firewall Rule facts"
    },
    "examples": "\n  - name: Get instance of PostgreSQL Firewall Rule\n    community.azure.azure_rm_postgresqlfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n      name: firewall_rule_name\n\n  - name: List instances of PostgreSQL Firewall Rule\n    community.azure.azure_rm_postgresqlfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "community.azure.azure_rm_postgresqlfirewallrule_info": {
    "doc": {
      "description": "Get facts of Azure PostgreSQL Firewall Rule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server firewall rule.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure PostgreSQL Firewall Rule facts"
    },
    "examples": "\n  - name: Get instance of PostgreSQL Firewall Rule\n    community.azure.azure_rm_postgresqlfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n      name: firewall_rule_name\n\n  - name: List instances of PostgreSQL Firewall Rule\n    community.azure.azure_rm_postgresqlfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n"
  },
  "community.azure.azure_rm_postgresqlserver_facts": {
    "doc": {
      "description": "Get facts of PostgreSQL Server.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure PostgreSQL Server facts"
    },
    "examples": "\n  - name: Get instance of PostgreSQL Server\n    community.azure.azure_rm_postgresqlserver_info:\n      resource_group: myResourceGroup\n      name: server_name\n\n  - name: List instances of PostgreSQL Server\n    community.azure.azure_rm_postgresqlserver_info:\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_postgresqlserver_info": {
    "doc": {
      "description": "Get facts of PostgreSQL Server.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "type": "list",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure PostgreSQL Server facts"
    },
    "examples": "\n  - name: Get instance of PostgreSQL Server\n    community.azure.azure_rm_postgresqlserver_info:\n      resource_group: myResourceGroup\n      name: server_name\n\n  - name: List instances of PostgreSQL Server\n    community.azure.azure_rm_postgresqlserver_info:\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_publicipaddress_facts": {
    "doc": {
      "description": "Get facts for a specific public IP or all public IPs within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific Public IP.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group. Required when using name parameter.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get public IP facts"
    },
    "examples": "\n    - name: Get facts for one Public IP\n      community.azure.azure_rm_publicipaddress_info:\n        resource_group: myResourceGroup\n        name: publicip001\n\n    - name: Get facts for all Public IPs within a resource groups\n      community.azure.azure_rm_publicipaddress_info:\n        resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_publicipaddress_info": {
    "doc": {
      "description": "Get facts for a specific public IP or all public IPs within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific Public IP.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group. Required when using name parameter.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get public IP facts"
    },
    "examples": "\n    - name: Get facts for one Public IP\n      community.azure.azure_rm_publicipaddress_info:\n        resource_group: myResourceGroup\n        name: publicip001\n\n    - name: Get facts for all Public IPs within a resource groups\n      community.azure.azure_rm_publicipaddress_info:\n        resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_rediscache_facts": {
    "doc": {
      "description": "Get facts for Azure Cache for Redis instance.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific Azure Cache for Redis.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired Azure Cache for Redis.",
          "required": true,
          "suboptions": {}
        },
        "return_access_keys": {
          "aliases": [],
          "description": "Indicate weather to return access keys of the Azure Cache for Redis.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Cache for Redis instance facts"
    },
    "examples": "\n    - name: Get Azure Cache for Redis by name\n      community.azure.azure_rm_rediscache_info:\n        resource_group: myResourceGroup\n        name: myRedis\n\n    - name: Get Azure Cache for Redis with access keys by name\n      community.azure.azure_rm_rediscache_info:\n        resource_group: myResourceGroup\n        name: myRedis\n        return_access_keys: true\n\n    - name: Get Azure Cache for Redis in specific resource group\n      community.azure.azure_rm_rediscache_info:\n        resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_rediscache_info": {
    "doc": {
      "description": "Get facts for Azure Cache for Redis instance.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific Azure Cache for Redis.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired Azure Cache for Redis.",
          "required": true,
          "suboptions": {}
        },
        "return_access_keys": {
          "aliases": [],
          "description": "Indicate weather to return access keys of the Azure Cache for Redis.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Cache for Redis instance facts"
    },
    "examples": "\n    - name: Get Azure Cache for Redis by name\n      community.azure.azure_rm_rediscache_info:\n        resource_group: myResourceGroup\n        name: myRedis\n\n    - name: Get Azure Cache for Redis with access keys by name\n      community.azure.azure_rm_rediscache_info:\n        resource_group: myResourceGroup\n        name: myRedis\n        return_access_keys: true\n\n    - name: Get Azure Cache for Redis in specific resource group\n      community.azure.azure_rm_rediscache_info:\n        resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_resource_facts": {
    "doc": {
      "description": "Obtain facts of any resource using Azure REST API.\nThis module gives access to resources that are not supported via Ansible modules.\nRefer to U(https://docs.microsoft.com/en-us/rest/api/) regarding details related to specific resource REST API.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_version": {
          "aliases": [],
          "description": "Specific API version to be used.",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "Provider type, should be specified in no URL is given.",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Resource group to be used.\nRequired if URL is not specified.",
          "required": false,
          "suboptions": {}
        },
        "resource_name": {
          "aliases": [],
          "description": "Resource name.",
          "required": false,
          "suboptions": {}
        },
        "resource_type": {
          "aliases": [],
          "description": "Resource type.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subresource": {
          "aliases": [],
          "description": "List of subresources.",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Subresource name.",
              "required": false,
              "suboptions": {}
            },
            "namespace": {
              "aliases": [],
              "description": "Subresource namespace.",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "Subresource type.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "Azure RM Resource URL.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Generic facts of Azure resources"
    },
    "examples": "\n  - name: Get scaleset info\n    community.azure.azure_rm_resource_info:\n      resource_group: myResourceGroup\n      provider: compute\n      resource_type: virtualmachinescalesets\n      resource_name: myVmss\n      api_version: \"2017-12-01\"\n\n  - name: Query all the resources in the resource group\n    community.azure.azure_rm_resource_info:\n      resource_group: \"{{ resource_group }}\"\n      resource_type: resources\n"
  },
  "community.azure.azure_rm_resource_info": {
    "doc": {
      "description": "Obtain facts of any resource using Azure REST API.\nThis module gives access to resources that are not supported via Ansible modules.\nRefer to U(https://docs.microsoft.com/en-us/rest/api/) regarding details related to specific resource REST API.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_version": {
          "aliases": [],
          "description": "Specific API version to be used.",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "Provider type, should be specified in no URL is given.",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Resource group to be used.\nRequired if URL is not specified.",
          "required": false,
          "suboptions": {}
        },
        "resource_name": {
          "aliases": [],
          "description": "Resource name.",
          "required": false,
          "suboptions": {}
        },
        "resource_type": {
          "aliases": [],
          "description": "Resource type.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subresource": {
          "aliases": [],
          "description": "List of subresources.",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Subresource name.",
              "required": false,
              "suboptions": {}
            },
            "namespace": {
              "aliases": [],
              "description": "Subresource namespace.",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "Subresource type.",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "Azure RM Resource URL.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Generic facts of Azure resources"
    },
    "examples": "\n  - name: Get scaleset info\n    community.azure.azure_rm_resource_info:\n      resource_group: myResourceGroup\n      provider: compute\n      resource_type: virtualmachinescalesets\n      resource_name: myVmss\n      api_version: \"2017-12-01\"\n\n  - name: Query all the resources in the resource group\n    community.azure.azure_rm_resource_info:\n      resource_group: \"{{ resource_group }}\"\n      resource_type: resources\n"
  },
  "community.azure.azure_rm_resourcegroup_facts": {
    "doc": {
      "description": "Get facts for a specific resource group or all resource groups.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "list_resources": {
          "aliases": [],
          "description": "List all resources under the resource group.\nNote this will cost network overhead for each resource group. Suggest use this when I(name) set.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific resource group.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get resource group facts"
    },
    "examples": "\n    - name: Get facts for one resource group\n      community.azure.azure_rm_resourcegroup_info:\n        name: myResourceGroup\n\n    - name: Get facts for all resource groups\n      community.azure.azure_rm_resourcegroup_info:\n\n    - name: Get facts by tags\n      community.azure.azure_rm_resourcegroup_info:\n        tags:\n          - testing\n          - foo:bar\n\n    - name: Get facts for one resource group including resources it contains\n      community.azure.azure_rm_resourcegroup_info:\n        name: myResourceGroup\n        list_resources: yes\n"
  },
  "community.azure.azure_rm_resourcegroup_info": {
    "doc": {
      "description": "Get facts for a specific resource group or all resource groups.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "list_resources": {
          "aliases": [],
          "description": "List all resources under the resource group.\nNote this will cost network overhead for each resource group. Suggest use this when I(name) set.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific resource group.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get resource group facts"
    },
    "examples": "\n    - name: Get facts for one resource group\n      community.azure.azure_rm_resourcegroup_info:\n        name: myResourceGroup\n\n    - name: Get facts for all resource groups\n      community.azure.azure_rm_resourcegroup_info:\n\n    - name: Get facts by tags\n      community.azure.azure_rm_resourcegroup_info:\n        tags:\n          - testing\n          - foo:bar\n\n    - name: Get facts for one resource group including resources it contains\n      community.azure.azure_rm_resourcegroup_info:\n        name: myResourceGroup\n        list_resources: yes\n"
  },
  "community.azure.azure_rm_roleassignment_facts": {
    "doc": {
      "description": "Gets facts of Azure Role Assignment.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "assignee": {
          "aliases": [],
          "description": "Object id of a user, group or service principal.\nMutually exclusive with I(name).",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of role assignment.\nMutual exclusive with I(assignee).",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role_definition_id": {
          "aliases": [],
          "description": "Resource id of role definition.",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "The scope that the role assignment applies to.\nFor example, use /subscriptions/{subscription-id}/ for a subscription.\n/subscriptions/{subscription-id}/resourceGroups/{resourcegroup-name} for a resource group.\n/subscriptions/{subscription-id}/resourceGroups/{resourcegroup-name}/providers/{resource-provider}/{resource-type}/{resource-name} for a resource.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Gets Azure Role Assignment facts"
    },
    "examples": "\n    - name: Get role assignments for specific service principal\n      community.azure.azure_rm_roleassignment_info:\n        assignee: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n    - name: Get role assignments for specific scope\n      community.azure.azure_rm_roleassignment_info:\n        scope: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n"
  },
  "community.azure.azure_rm_roleassignment_info": {
    "doc": {
      "description": "Gets facts of Azure Role Assignment.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "assignee": {
          "aliases": [],
          "description": "Object id of a user, group or service principal.\nMutually exclusive with I(name).",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of role assignment.\nMutual exclusive with I(assignee).",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role_definition_id": {
          "aliases": [],
          "description": "Resource id of role definition.",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "The scope that the role assignment applies to.\nFor example, use /subscriptions/{subscription-id}/ for a subscription.\n/subscriptions/{subscription-id}/resourceGroups/{resourcegroup-name} for a resource group.\n/subscriptions/{subscription-id}/resourceGroups/{resourcegroup-name}/providers/{resource-provider}/{resource-type}/{resource-name} for a resource.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Gets Azure Role Assignment facts"
    },
    "examples": "\n    - name: Get role assignments for specific service principal\n      community.azure.azure_rm_roleassignment_info:\n        assignee: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n    - name: Get role assignments for specific scope\n      community.azure.azure_rm_roleassignment_info:\n        scope: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n"
  },
  "community.azure.azure_rm_roledefinition_facts": {
    "doc": {
      "description": "Get facts of Azure Role Definition.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "id": {
          "aliases": [],
          "description": "Role definition id.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role_name": {
          "aliases": [],
          "description": "Role name.",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "The scope of role definition.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Type of role.",
          "required": false,
          "choices": [
            "system",
            "custom"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Role Definition facts"
    },
    "examples": "\n    - name: List Role Definitions in scope\n      community.azure.azure_rm_roledefinition_info:\n        scope: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup\n\n    - name: Get Role Definition by name\n      community.azure.azure_rm_roledefinition_info:\n        scope: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup\n        name: myRoleDefinition\n"
  },
  "community.azure.azure_rm_roledefinition_info": {
    "doc": {
      "description": "Get facts of Azure Role Definition.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "id": {
          "aliases": [],
          "description": "Role definition id.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role_name": {
          "aliases": [],
          "description": "Role name.",
          "required": false,
          "suboptions": {}
        },
        "scope": {
          "aliases": [],
          "description": "The scope of role definition.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Type of role.",
          "required": false,
          "choices": [
            "system",
            "custom"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Role Definition facts"
    },
    "examples": "\n    - name: List Role Definitions in scope\n      community.azure.azure_rm_roledefinition_info:\n        scope: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup\n\n    - name: Get Role Definition by name\n      community.azure.azure_rm_roledefinition_info:\n        scope: /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup\n        name: myRoleDefinition\n"
  },
  "community.azure.azure_rm_routetable_facts": {
    "doc": {
      "description": "Get facts for a specific route table or all route table in a resource group or subscription.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific route table.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results in a specific resource group.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get route table facts"
    },
    "examples": "\n    - name: Get facts for one route table\n      community.azure.azure_rm_routetable_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all route tables\n      community.azure.azure_rm_routetable_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts by tags\n      community.azure.azure_rm_routetable_info:\n        tags:\n          - testing\n          - foo:bar\n"
  },
  "community.azure.azure_rm_routetable_info": {
    "doc": {
      "description": "Get facts for a specific route table or all route table in a resource group or subscription.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific route table.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results in a specific resource group.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get route table facts"
    },
    "examples": "\n    - name: Get facts for one route table\n      community.azure.azure_rm_routetable_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all route tables\n      community.azure.azure_rm_routetable_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts by tags\n      community.azure.azure_rm_routetable_info:\n        tags:\n          - testing\n          - foo:bar\n"
  },
  "community.azure.azure_rm_securitygroup_facts": {
    "doc": {
      "description": "Get facts for a specific security group or all security groups within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific security group.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group to use.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get security group facts"
    },
    "examples": "\n    - name: Get facts for one security group\n      community.azure.azure_rm_securitygroup_info:\n        resource_group: myResourceGroup\n        name: secgroup001\n\n    - name: Get facts for all security groups\n      community.azure.azure_rm_securitygroup_info:\n        resource_group: myResourceGroup\n\n"
  },
  "community.azure.azure_rm_securitygroup_info": {
    "doc": {
      "description": "Get facts for a specific security group or all security groups within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific security group.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group to use.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get security group facts"
    },
    "examples": "\n    - name: Get facts for one security group\n      community.azure.azure_rm_securitygroup_info:\n        resource_group: myResourceGroup\n        name: secgroup001\n\n    - name: Get facts for all security groups\n      community.azure.azure_rm_securitygroup_info:\n        resource_group: myResourceGroup\n\n"
  },
  "community.azure.azure_rm_servicebus_facts": {
    "doc": {
      "description": "Get facts for a specific servicebus or all servicebus in a resource group or subscription.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific servicebus.",
          "required": false,
          "suboptions": {}
        },
        "namespace": {
          "aliases": [],
          "description": "Servicebus namespace name.\nA namespace is a scoping container for all messaging components.\nMultiple queues and topics can reside within a single namespace, and namespaces often serve as application containers.\nRequired when I(type=namespace).",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results in a specific resource group.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "show_sas_policies": {
          "aliases": [],
          "description": "Whether to show the SAS policies.\nNot support when I(type=subscription).\nNote if enable this option, the facts module will raise two more HTTP call for each resources, need more network overhead.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "topic": {
          "aliases": [],
          "description": "Topic name.\nRequired when I(type=subscription).",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Type of the resource.",
          "required": false,
          "choices": [
            "namespace",
            "queue",
            "topic",
            "subscription"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get servicebus facts"
    },
    "examples": "\n- name: Get all namespaces under a resource group\n  community.azure.azure_rm_servicebus_info:\n    resource_group: myResourceGroup\n    type: namespace\n\n- name: Get all topics under a namespace\n  community.azure.azure_rm_servicebus_info:\n    resource_group: myResourceGroup\n    namespace: bar\n    type: topic\n\n- name: Get a single queue with SAS policies\n  community.azure.azure_rm_servicebus_info:\n    resource_group: myResourceGroup\n    namespace: bar\n    type: queue\n    name: sbqueue\n    show_sas_policies: true\n\n- name: Get all subscriptions under a resource group\n  community.azure.azure_rm_servicebus_info:\n    resource_group: myResourceGroup\n    type: subscription\n    namespace: bar\n    topic: sbtopic\n"
  },
  "community.azure.azure_rm_servicebus_info": {
    "doc": {
      "description": "Get facts for a specific servicebus or all servicebus in a resource group or subscription.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific servicebus.",
          "required": false,
          "suboptions": {}
        },
        "namespace": {
          "aliases": [],
          "description": "Servicebus namespace name.\nA namespace is a scoping container for all messaging components.\nMultiple queues and topics can reside within a single namespace, and namespaces often serve as application containers.\nRequired when I(type=namespace).",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results in a specific resource group.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "show_sas_policies": {
          "aliases": [],
          "description": "Whether to show the SAS policies.\nNot support when I(type=subscription).\nNote if enable this option, the facts module will raise two more HTTP call for each resources, need more network overhead.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "topic": {
          "aliases": [],
          "description": "Topic name.\nRequired when I(type=subscription).",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Type of the resource.",
          "required": false,
          "choices": [
            "namespace",
            "queue",
            "topic",
            "subscription"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get servicebus facts"
    },
    "examples": "\n- name: Get all namespaces under a resource group\n  community.azure.azure_rm_servicebus_info:\n    resource_group: myResourceGroup\n    type: namespace\n\n- name: Get all topics under a namespace\n  community.azure.azure_rm_servicebus_info:\n    resource_group: myResourceGroup\n    namespace: bar\n    type: topic\n\n- name: Get a single queue with SAS policies\n  community.azure.azure_rm_servicebus_info:\n    resource_group: myResourceGroup\n    namespace: bar\n    type: queue\n    name: sbqueue\n    show_sas_policies: true\n\n- name: Get all subscriptions under a resource group\n  community.azure.azure_rm_servicebus_info:\n    resource_group: myResourceGroup\n    type: subscription\n    namespace: bar\n    topic: sbtopic\n"
  },
  "community.azure.azure_rm_sqldatabase_facts": {
    "doc": {
      "description": "Get facts of Azure SQL Database.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "elastic_pool_name": {
          "aliases": [],
          "description": "The name of the elastic pool.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the database.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure SQL Database facts"
    },
    "examples": "\n  - name: Get instance of SQL Database\n    community.azure.azure_rm_sqldatabase_info:\n      resource_group: testrg\n      server_name: testserver\n      name: testdb\n\n  - name: List instances of SQL Database\n    community.azure.azure_rm_sqldatabase_info:\n      resource_group: testrg\n      server_name: testserver\n      elastic_pool_name: testep\n\n  - name: List instances of SQL Database\n    community.azure.azure_rm_sqldatabase_info:\n      resource_group: testrg\n      server_name: testserver\n"
  },
  "community.azure.azure_rm_sqldatabase_info": {
    "doc": {
      "description": "Get facts of Azure SQL Database.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "elastic_pool_name": {
          "aliases": [],
          "description": "The name of the elastic pool.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the database.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure SQL Database facts"
    },
    "examples": "\n  - name: Get instance of SQL Database\n    community.azure.azure_rm_sqldatabase_info:\n      resource_group: testrg\n      server_name: testserver\n      name: testdb\n\n  - name: List instances of SQL Database\n    community.azure.azure_rm_sqldatabase_info:\n      resource_group: testrg\n      server_name: testserver\n      elastic_pool_name: testep\n\n  - name: List instances of SQL Database\n    community.azure.azure_rm_sqldatabase_info:\n      resource_group: testrg\n      server_name: testserver\n"
  },
  "community.azure.azure_rm_sqlfirewallrule_facts": {
    "doc": {
      "description": "Get facts of SQL Firewall Rule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the firewall rule.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the server.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure SQL Firewall Rule facts"
    },
    "examples": "\n  - name: Get instance of SQL Firewall Rule\n    community.azure.azure_rm_sqlfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: testserver\n      name: testrule\n\n  - name: List instances of SQL Firewall Rule\n    community.azure.azure_rm_sqlfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: testserver\n"
  },
  "community.azure.azure_rm_sqlfirewallrule_info": {
    "doc": {
      "description": "Get facts of SQL Firewall Rule.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the firewall rule.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the server.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": true,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure SQL Firewall Rule facts"
    },
    "examples": "\n  - name: Get instance of SQL Firewall Rule\n    community.azure.azure_rm_sqlfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: testserver\n      name: testrule\n\n  - name: List instances of SQL Firewall Rule\n    community.azure.azure_rm_sqlfirewallrule_info:\n      resource_group: myResourceGroup\n      server_name: testserver\n"
  },
  "community.azure.azure_rm_sqlserver_facts": {
    "doc": {
      "description": "Get facts of SQL Server.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get SQL Server facts"
    },
    "examples": "\n  - name: Get instance of SQL Server\n    community.azure.azure_rm_sqlserver_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n\n  - name: List instances of SQL Server\n    community.azure.azure_rm_sqlserver_info:\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_sqlserver_info": {
    "doc": {
      "description": "Get facts of SQL Server.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_name": {
          "aliases": [],
          "description": "The name of the server.",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get SQL Server facts"
    },
    "examples": "\n  - name: Get instance of SQL Server\n    community.azure.azure_rm_sqlserver_info:\n      resource_group: myResourceGroup\n      server_name: server_name\n\n  - name: List instances of SQL Server\n    community.azure.azure_rm_sqlserver_info:\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_storageaccount_facts": {
    "doc": {
      "description": "Get facts for one storage account or all storage accounts within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific account.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [
            "resource_group_name"
          ],
          "description": "Limit results to a resource group. Required when filtering by name.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "show_blob_cors": {
          "aliases": [],
          "description": "Show the blob CORS settings for each blob related to the storage account.\nQuerying all storage accounts will take a long time.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "show_connection_string": {
          "aliases": [],
          "description": "Show the connection string for each of the storageaccount's endpoints.\nFor convenient usage, C(show_connection_string) will also show the access keys for each of the storageaccount's endpoints.\nNote that it will cost a lot of time when list all storageaccount rather than query a single one.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get storage account facts"
    },
    "examples": "\n    - name: Get facts for one account\n      community.azure.azure_rm_storageaccount_info:\n        resource_group: myResourceGroup\n        name: clh0002\n\n    - name: Get facts for all accounts in a resource group\n      community.azure.azure_rm_storageaccount_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts for all accounts by tags\n      community.azure.azure_rm_storageaccount_info:\n        tags:\n          - testing\n          - foo:bar\n"
  },
  "community.azure.azure_rm_storageaccount_info": {
    "doc": {
      "description": "Get facts for one storage account or all storage accounts within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific account.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [
            "resource_group_name"
          ],
          "description": "Limit results to a resource group. Required when filtering by name.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "show_blob_cors": {
          "aliases": [],
          "description": "Show the blob CORS settings for each blob related to the storage account.\nQuerying all storage accounts will take a long time.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "show_connection_string": {
          "aliases": [],
          "description": "Show the connection string for each of the storageaccount's endpoints.\nFor convenient usage, C(show_connection_string) will also show the access keys for each of the storageaccount's endpoints.\nNote that it will cost a lot of time when list all storageaccount rather than query a single one.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get storage account facts"
    },
    "examples": "\n    - name: Get facts for one account\n      community.azure.azure_rm_storageaccount_info:\n        resource_group: myResourceGroup\n        name: clh0002\n\n    - name: Get facts for all accounts in a resource group\n      community.azure.azure_rm_storageaccount_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts for all accounts by tags\n      community.azure.azure_rm_storageaccount_info:\n        tags:\n          - testing\n          - foo:bar\n"
  },
  "community.azure.azure_rm_subnet_facts": {
    "doc": {
      "description": "Get facts of Azure Subnet.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the subnet.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_network_name": {
          "aliases": [],
          "description": "The name of the virtual network.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Subnet facts"
    },
    "examples": "\n  - name: Get facts of specific subnet\n    community.azure.azure_rm_subnet_info:\n      resource_group: myResourceGroup\n      virtual_network_name: myVirtualNetwork\n      name: mySubnet\n\n  - name: List facts for all subnets in virtual network\n    community.azure.azure_rm_subnet_info:\n      resource_group: myResourceGroup\n      virtual_network_name: myVirtualNetwork\n      name: mySubnet\n"
  },
  "community.azure.azure_rm_subnet_info": {
    "doc": {
      "description": "Get facts of Azure Subnet.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the subnet.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_network_name": {
          "aliases": [],
          "description": "The name of the virtual network.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Subnet facts"
    },
    "examples": "\n  - name: Get facts of specific subnet\n    community.azure.azure_rm_subnet_info:\n      resource_group: myResourceGroup\n      virtual_network_name: myVirtualNetwork\n      name: mySubnet\n\n  - name: List facts for all subnets in virtual network\n    community.azure.azure_rm_subnet_info:\n      resource_group: myResourceGroup\n      virtual_network_name: myVirtualNetwork\n      name: mySubnet\n"
  },
  "community.azure.azure_rm_trafficmanagerendpoint_facts": {
    "doc": {
      "description": "Get facts for a specific Traffic Manager endpoints or all endpoints  in a Traffic Manager profile.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific Traffic Manager endpoint.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile_name": {
          "aliases": [],
          "description": "Name of Traffic Manager Profile.",
          "required": true,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired Traffic Manager profile.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Type of endpoint.",
          "required": false,
          "choices": [
            "azure_endpoints",
            "external_endpoints",
            "nested_endpoints"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Traffic Manager endpoint facts"
    },
    "examples": "\n    - name: Get endpoints facts of a Traffic Manager profile\n      community.azure.azure_rm_trafficmanagerendpoint_info:\n        resource_group: myResourceGroup\n        profile_name: Testing\n\n    - name: Get specific endpoint of a Traffic Manager profile\n      azure_rm_trafficmanager_info:\n        resource_group: myResourceGroup\n        profile_name: Testing\n        name: test_external_endpoint\n\n"
  },
  "community.azure.azure_rm_trafficmanagerendpoint_info": {
    "doc": {
      "description": "Get facts for a specific Traffic Manager endpoints or all endpoints  in a Traffic Manager profile.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific Traffic Manager endpoint.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile_name": {
          "aliases": [],
          "description": "Name of Traffic Manager Profile.",
          "required": true,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired Traffic Manager profile.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Type of endpoint.",
          "required": false,
          "choices": [
            "azure_endpoints",
            "external_endpoints",
            "nested_endpoints"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Traffic Manager endpoint facts"
    },
    "examples": "\n    - name: Get endpoints facts of a Traffic Manager profile\n      community.azure.azure_rm_trafficmanagerendpoint_info:\n        resource_group: myResourceGroup\n        profile_name: Testing\n\n    - name: Get specific endpoint of a Traffic Manager profile\n      azure_rm_trafficmanager_info:\n        resource_group: myResourceGroup\n        profile_name: Testing\n        name: test_external_endpoint\n\n"
  },
  "community.azure.azure_rm_trafficmanagerprofile_facts": {
    "doc": {
      "description": "Get facts for a Azure specific Traffic Manager profile or all Traffic Manager profiles.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific Traffic Manager profile.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired Traffic Manager profile.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Traffic Manager profile facts"
    },
    "examples": "\n    - name: Get facts for one Traffic Manager profile\n      azure_rm_trafficmanager_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all Traffic Manager profiles\n      azure_rm_trafficmanager_info:\n\n    - name: Get facts by tags\n      azure_rm_trafficmanager_info:\n        tags:\n          - Environment:Test\n"
  },
  "community.azure.azure_rm_trafficmanagerprofile_info": {
    "doc": {
      "description": "Get facts for a Azure specific Traffic Manager profile or all Traffic Manager profiles.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific Traffic Manager profile.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired Traffic Manager profile.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Traffic Manager profile facts"
    },
    "examples": "\n    - name: Get facts for one Traffic Manager profile\n      azure_rm_trafficmanager_info:\n        name: Testing\n        resource_group: myResourceGroup\n\n    - name: Get facts for all Traffic Manager profiles\n      azure_rm_trafficmanager_info:\n\n    - name: Get facts by tags\n      azure_rm_trafficmanager_info:\n        tags:\n          - Environment:Test\n"
  },
  "community.azure.azure_rm_virtualmachine_extension": {
    "doc": {
      "description": "Create, update and delete Azure Virtual Machine Extension.\nNote that this module was called M(community.azure.azure_rm_virtualmachine_extension) before Ansible 2.8. The usage did not change.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auto_upgrade_minor_version": {
          "aliases": [],
          "description": "Whether the extension handler should be automatically upgraded across minor versions.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the vm extension.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "protected_settings": {
          "aliases": [],
          "description": "Json formatted protected settings for the extension.",
          "required": false,
          "suboptions": {}
        },
        "publisher": {
          "aliases": [],
          "description": "The name of the extension handler publisher.",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the vm extension exists or will be created.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "settings": {
          "aliases": [],
          "description": "Json formatted public settings for the extension.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the vm extension. Use C(present) to create or update a vm extension and C(absent) to delete a vm extension.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "type_handler_version": {
          "aliases": [],
          "description": "The type version of the extension handler.",
          "required": false,
          "suboptions": {}
        },
        "virtual_machine_extension_type": {
          "aliases": [],
          "description": "The type of the extension handler.",
          "required": false,
          "suboptions": {}
        },
        "virtual_machine_name": {
          "aliases": [],
          "description": "The name of the virtual machine where the extension should be create or updated.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Managed Azure Virtual Machine extension"
    },
    "examples": "\n    - name: Create VM Extension\n      community.azure.azure_rm_virtualmachineextension:\n        name: myvmextension\n        location: eastus\n        resource_group: myResourceGroup\n        virtual_machine_name: myvm\n        publisher: Microsoft.Azure.Extensions\n        virtual_machine_extension_type: CustomScript\n        type_handler_version: 2.0\n        settings: '{\"commandToExecute\": \"hostname\"}'\n        auto_upgrade_minor_version: true\n\n    - name: Delete VM Extension\n      community.azure.azure_rm_virtualmachineextension:\n        name: myvmextension\n        location: eastus\n        resource_group: myResourceGroup\n        virtual_machine_name: myvm\n        state: absent\n"
  },
  "community.azure.azure_rm_virtualmachine_facts": {
    "doc": {
      "description": "Get facts for one or all virtual machines in a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the virtual machine.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group containing the virtual machines (required when filtering by vm name).",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get virtual machine facts"
    },
    "examples": "\n  - name: Get facts for all virtual machines of a resource group\n    community.azure.azure_rm_virtualmachine_info:\n      resource_group: myResourceGroup\n\n  - name: Get facts by name\n    community.azure.azure_rm_virtualmachine_info:\n      resource_group: myResourceGroup\n      name: myVm\n\n  - name: Get facts by tags\n    community.azure.azure_rm_virtualmachine_info:\n      resource_group: myResourceGroup\n      tags:\n        - testing\n        - foo:bar\n"
  },
  "community.azure.azure_rm_virtualmachine_info": {
    "doc": {
      "description": "Get facts for one or all virtual machines in a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the virtual machine.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group containing the virtual machines (required when filtering by vm name).",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get virtual machine facts"
    },
    "examples": "\n  - name: Get facts for all virtual machines of a resource group\n    community.azure.azure_rm_virtualmachine_info:\n      resource_group: myResourceGroup\n\n  - name: Get facts by name\n    community.azure.azure_rm_virtualmachine_info:\n      resource_group: myResourceGroup\n      name: myVm\n\n  - name: Get facts by tags\n    community.azure.azure_rm_virtualmachine_info:\n      resource_group: myResourceGroup\n      tags:\n        - testing\n        - foo:bar\n"
  },
  "community.azure.azure_rm_virtualmachine_scaleset": {
    "doc": {
      "description": "Create and update a virtual machine scale set.\nNote that this module was called M(community.azure.azure_rm_virtualmachine_scaleset) before Ansible 2.8. The usage did not change.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "admin_password": {
          "aliases": [],
          "description": "Password for the admin username.\nNot required if the os_type is Linux and SSH password authentication is disabled by setting I(ssh_password_enabled=false).",
          "required": false,
          "suboptions": {}
        },
        "admin_username": {
          "aliases": [],
          "description": "Admin username used to access the host after it is created. Required when creating a VM.",
          "required": false,
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "application_gateway": {
          "aliases": [],
          "description": "Application gateway name.",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "capacity": {
          "aliases": [],
          "description": "Capacity of VMSS.",
          "default": "1",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "custom_data": {
          "aliases": [],
          "description": "Data which is made available to the virtual machine and used by e.g., C(cloud-init).\nMany images in the marketplace are not cloud-init ready. Thus, data sent to I(custom_data) would be ignored.\nIf the image you are attempting to use is not listed in U(https://docs.microsoft.com/en-us/azure/virtual-machines/linux/using-cloud-init#cloud-init-overview), follow these steps U(https://docs.microsoft.com/en-us/azure/virtual-machines/linux/cloudinit-prepare-custom-image).",
          "required": false,
          "suboptions": {}
        },
        "data_disks": {
          "aliases": [],
          "description": "Describes list of data disks.",
          "required": false,
          "suboptions": {
            "caching": {
              "aliases": [],
              "description": "Type of data disk caching.",
              "default": "ReadOnly",
              "required": false,
              "choices": [
                "ReadOnly",
                "ReadWrite"
              ],
              "suboptions": {}
            },
            "create_option": {
              "aliases": [],
              "description": "Specify whether disk should be created Empty or FromImage.  This is required to allow custom images with data disks to be used.",
              "required": false,
              "choices": [
                "Empty",
                "FromImage"
              ],
              "suboptions": {}
            },
            "disk_size_gb": {
              "aliases": [],
              "description": "The initial disk size in GB for blank data disks.",
              "required": false,
              "suboptions": {}
            },
            "lun": {
              "aliases": [],
              "description": "The logical unit number for data disk.",
              "default": "0",
              "required": false,
              "suboptions": {}
            },
            "managed_disk_type": {
              "aliases": [],
              "description": "Managed data disk type.",
              "required": false,
              "choices": [
                "Standard_LRS",
                "Premium_LRS"
              ],
              "suboptions": {}
            }
          }
        },
        "enable_accelerated_networking": {
          "aliases": [],
          "description": "Indicates whether user wants to allow accelerated networking for virtual machines in scaleset being created.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "image": {
          "aliases": [],
          "description": "Specifies the image used to build the VM.\nIf a string, the image is sourced from a custom image based on the name.\nIf a dict with the keys I(publisher), I(offer), I(sku), and I(version), the image is sourced from a Marketplace image. Note that set I(version=latest) to get the most recent version of a given image.\nIf a dict with the keys I(name) and I(resource_group), the image is sourced from a custom image based on the I(name) and I(resource_group) set. Note that the key I(resource_group) is optional and if omitted, all images in the subscription will be searched for by I(name).\nCustom image support was added in Ansible 2.5.",
          "required": true,
          "suboptions": {}
        },
        "load_balancer": {
          "aliases": [],
          "description": "Load balancer name.",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "managed_disk_type": {
          "aliases": [],
          "description": "Managed disk type.",
          "required": false,
          "choices": [
            "Standard_LRS",
            "Premium_LRS"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the virtual machine.",
          "required": true,
          "suboptions": {}
        },
        "os_disk_caching": {
          "aliases": [
            "disk_caching"
          ],
          "description": "Type of OS disk caching.",
          "default": "ReadOnly",
          "required": false,
          "choices": [
            "ReadOnly",
            "ReadWrite"
          ],
          "suboptions": {}
        },
        "os_type": {
          "aliases": [],
          "description": "Base type of operating system.",
          "default": "Linux",
          "required": false,
          "choices": [
            "Windows",
            "Linux"
          ],
          "suboptions": {}
        },
        "overprovision": {
          "aliases": [],
          "description": "Specifies whether the Virtual Machine Scale Set should be overprovisioned.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "plan": {
          "aliases": [],
          "description": "Third-party billing plan for the VM.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Billing plan name.",
              "required": true,
              "suboptions": {}
            },
            "product": {
              "aliases": [],
              "description": "Product name.",
              "required": true,
              "suboptions": {}
            },
            "promotion_code": {
              "aliases": [],
              "description": "Optional promotion code.",
              "required": false,
              "suboptions": {}
            },
            "publisher": {
              "aliases": [],
              "description": "Publisher offering the plan.",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "priority": {
          "aliases": [],
          "description": "If you want to request low-priority VMs for the VMSS, set this to \"Low\". The default is \"Regular\"",
          "default": "Regular",
          "required": false,
          "choices": [
            "Regular",
            "Low"
          ],
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "remove_on_absent": {
          "aliases": [],
          "description": "When removing a VM using I(state=absent), also remove associated resources.\nIt can be C(all) or a list with any of the following ['network_interfaces', 'virtual_storage', 'public_ips'].\nAny other input will be ignored.",
          "default": "['all']",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group containing the virtual machine scale set.",
          "required": true,
          "suboptions": {}
        },
        "scale_in_policy": {
          "aliases": [],
          "description": "define the order in which vmss instances are scaled-in",
          "required": false,
          "choices": [
            "Default",
            "NewestVM",
            "OldestVM"
          ],
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_group": {
          "aliases": [
            "security_group_name"
          ],
          "description": "Existing security group with which to associate the subnet.\nIt can be the security group name which is in the same resource group.\nIt can be the resource ID.\nIt can be a dict which contains I(name) and I(resource_group) of the security group.",
          "required": false,
          "suboptions": {}
        },
        "short_hostname": {
          "aliases": [],
          "description": "Short host name.",
          "required": false,
          "suboptions": {}
        },
        "single_placement_group": {
          "aliases": [],
          "description": "When true this limits the scale set to a single placement group, of max size 100 virtual machines.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssh_password_enabled": {
          "aliases": [],
          "description": "When the os_type is Linux, setting I(ssh_password_enabled=false) will disable SSH password authentication and require use of SSH keys.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssh_public_keys": {
          "aliases": [],
          "description": "For I(os_type=Linux) provide a list of SSH keys.\nEach item in the list should be a dictionary where the dictionary contains two keys, C(path) and C(key_data).\nSet the C(path) to the default location of the authorized_keys files.\nOn an Enterprise Linux host, for example, the I(path=/home/<admin username>/.ssh/authorized_keys). Set C(key_data) to the actual value of the public key.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the virtual machine scale set.\nState C(present) will check that the machine exists with the requested configuration. If the configuration of the existing machine does not match, the machine will be updated.\nState C(absent) will remove the virtual machine scale set.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subnet_name": {
          "aliases": [
            "subnet"
          ],
          "description": "Subnet name.",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "terminate_event_timeout_minutes": {
          "aliases": [],
          "description": "timeout time for termination notification event\nin range between 5 and 15",
          "required": false,
          "suboptions": {}
        },
        "tier": {
          "aliases": [],
          "description": "SKU Tier.",
          "required": false,
          "choices": [
            "Basic",
            "Standard"
          ],
          "suboptions": {}
        },
        "upgrade_policy": {
          "aliases": [],
          "description": "Upgrade policy.\nRequired when creating the Azure virtual machine scale sets.",
          "required": false,
          "choices": [
            "Manual",
            "Automatic"
          ],
          "suboptions": {}
        },
        "virtual_network_name": {
          "aliases": [
            "virtual_network"
          ],
          "description": "Virtual Network name.",
          "required": false,
          "suboptions": {}
        },
        "virtual_network_resource_group": {
          "aliases": [],
          "description": "When creating a virtual machine, if a specific virtual network from another resource group should be used.\nUse this parameter to specify the resource group to use.",
          "required": false,
          "suboptions": {}
        },
        "vm_size": {
          "aliases": [],
          "description": "A valid Azure VM size value. For example, C(Standard_D4).\nThe list of choices varies depending on the subscription and location. Check your subscription for available choices.",
          "required": false,
          "suboptions": {}
        },
        "zones": {
          "aliases": [],
          "description": "A list of Availability Zones for your virtual machine scale set.",
          "type": "list",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure virtual machine scale sets"
    },
    "examples": "\n\n- name: Create VMSS\n  community.azure.azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 2\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    terminate_event_timeout_minutes: 10\n    scale_in_policy: NewestVM\n    admin_username: adminUser\n    ssh_password_enabled: false\n    ssh_public_keys:\n      - path: /home/adminUser/.ssh/authorized_keys\n        key_data: < insert yor ssh public key here... >\n    managed_disk_type: Standard_LRS\n    image:\n      offer: CoreOS\n      publisher: CoreOS\n      sku: Stable\n      version: latest\n    data_disks:\n      - lun: 0\n        disk_size_gb: 64\n        caching: ReadWrite\n        managed_disk_type: Standard_LRS\n\n- name: Create VMSS with an image that requires plan information\n  community.azure.azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 3\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    admin_username: adminUser\n    ssh_password_enabled: false\n    ssh_public_keys:\n      - path: /home/adminUser/.ssh/authorized_keys\n        key_data: < insert yor ssh public key here... >\n    managed_disk_type: Standard_LRS\n    image:\n      offer: cis-ubuntu-linux-1804-l1\n      publisher: center-for-internet-security-inc\n      sku: Stable\n      version: latest\n    plan:\n      name: cis-ubuntu-linux-1804-l1\n      product: cis-ubuntu-linux-1804-l1\n      publisher: center-for-internet-security-inc\n    data_disks:\n      - lun: 0\n        disk_size_gb: 64\n        caching: ReadWrite\n        managed_disk_type: Standard_LRS\n\n- name: Create a VMSS with a custom image\n  community.azure.azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 2\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    admin_username: adminUser\n    admin_password: password01\n    managed_disk_type: Standard_LRS\n    image: customimage001\n\n- name: Create a VMSS with a custom image and override data disk\n  community.azure.azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 2\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    admin_username: adminUser\n    admin_password: password01\n    managed_disk_type: Standard_LRS\n    image: customimage001\n    data_disks:\n      - lun: 0\n        disk_size_gb: 64\n        caching: ReadWrite\n        managed_disk_type: Standard_LRS\n        create_option: FromImage\n\n- name: Create a VMSS with over 100 instances\n  community.azure.azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 120\n    single_placement_group: False\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    admin_username: adminUser\n    admin_password: password01\n    managed_disk_type: Standard_LRS\n    image: customimage001\n\n- name: Create a VMSS with a custom image from a particular resource group\n  community.azure.azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 2\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    admin_username: adminUser\n    admin_password: password01\n    managed_disk_type: Standard_LRS\n    image:\n      name: customimage001\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_virtualmachine_scaleset_facts": {
    "doc": {
      "description": "Get facts for a virtual machine scale set.\nNote that this module was called M(community.azure.azure_rm_virtualmachine_scaleset_facts) before Ansible 2.8. The usage did not change.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "format": {
          "aliases": [],
          "description": "Format of the data returned.\nIf C(raw) is selected information will be returned in raw format from Azure Python SDK.\nIf C(curated) is selected the structure will be identical to input parameters of M(community.azure.azure_rm_virtualmachinescaleset) module.\nIn Ansible 2.5 and lower facts are always returned in raw format.\nPlease note that this option will be deprecated in 2.10 when curated format will become the only supported format.",
          "default": "raw",
          "required": false,
          "choices": [
            "curated",
            "raw"
          ],
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific virtual machine scale set.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired virtual machine scale set.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "List of tags to be matched.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Virtual Machine Scale Set facts"
    },
    "examples": "\n    - name: Get facts for a virtual machine scale set\n      community.azure.azure_rm_virtualmachinescaleset_info:\n        resource_group: myResourceGroup\n        name: testvmss001\n        format: curated\n\n    - name: Get facts for all virtual networks\n      community.azure.azure_rm_virtualmachinescaleset_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts by tags\n      community.azure.azure_rm_virtualmachinescaleset_info:\n        resource_group: myResourceGroup\n        tags:\n          - testing\n"
  },
  "community.azure.azure_rm_virtualmachineextension": {
    "doc": {
      "description": "Create, update and delete Azure Virtual Machine Extension.\nNote that this module was called M(community.azure.azure_rm_virtualmachine_extension) before Ansible 2.8. The usage did not change.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auto_upgrade_minor_version": {
          "aliases": [],
          "description": "Whether the extension handler should be automatically upgraded across minor versions.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the vm extension.",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "protected_settings": {
          "aliases": [],
          "description": "Json formatted protected settings for the extension.",
          "required": false,
          "suboptions": {}
        },
        "publisher": {
          "aliases": [],
          "description": "The name of the extension handler publisher.",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the vm extension exists or will be created.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "settings": {
          "aliases": [],
          "description": "Json formatted public settings for the extension.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the vm extension. Use C(present) to create or update a vm extension and C(absent) to delete a vm extension.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "type_handler_version": {
          "aliases": [],
          "description": "The type version of the extension handler.",
          "required": false,
          "suboptions": {}
        },
        "virtual_machine_extension_type": {
          "aliases": [],
          "description": "The type of the extension handler.",
          "required": false,
          "suboptions": {}
        },
        "virtual_machine_name": {
          "aliases": [],
          "description": "The name of the virtual machine where the extension should be create or updated.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Managed Azure Virtual Machine extension"
    },
    "examples": "\n    - name: Create VM Extension\n      community.azure.azure_rm_virtualmachineextension:\n        name: myvmextension\n        location: eastus\n        resource_group: myResourceGroup\n        virtual_machine_name: myvm\n        publisher: Microsoft.Azure.Extensions\n        virtual_machine_extension_type: CustomScript\n        type_handler_version: 2.0\n        settings: '{\"commandToExecute\": \"hostname\"}'\n        auto_upgrade_minor_version: true\n\n    - name: Delete VM Extension\n      community.azure.azure_rm_virtualmachineextension:\n        name: myvmextension\n        location: eastus\n        resource_group: myResourceGroup\n        virtual_machine_name: myvm\n        state: absent\n"
  },
  "community.azure.azure_rm_virtualmachineextension_facts": {
    "doc": {
      "description": "Get facts of Azure Virtual Machine Extension.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the virtual machine extension.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_machine_name": {
          "aliases": [],
          "description": "The name of the virtual machine containing the extension.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Virtual Machine Extension facts"
    },
    "examples": "\n  - name: Get information on specific Virtual Machine Extension\n    community.azure.azure_rm_virtualmachineextension_info:\n      resource_group: myResourceGroup\n      virtual_machine_name: myvm\n      name: myextension\n\n  - name: List installed Virtual Machine Extensions\n    community.azure.azure_rm_virtualmachineextension_info:\n      resource_group: myResourceGroup\n      virtual_machine_name: myvm\n"
  },
  "community.azure.azure_rm_virtualmachineextension_info": {
    "doc": {
      "description": "Get facts of Azure Virtual Machine Extension.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the virtual machine extension.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_machine_name": {
          "aliases": [],
          "description": "The name of the virtual machine containing the extension.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Virtual Machine Extension facts"
    },
    "examples": "\n  - name: Get information on specific Virtual Machine Extension\n    community.azure.azure_rm_virtualmachineextension_info:\n      resource_group: myResourceGroup\n      virtual_machine_name: myvm\n      name: myextension\n\n  - name: List installed Virtual Machine Extensions\n    community.azure.azure_rm_virtualmachineextension_info:\n      resource_group: myResourceGroup\n      virtual_machine_name: myvm\n"
  },
  "community.azure.azure_rm_virtualmachineimage_facts": {
    "doc": {
      "description": "Get facts for virtual machine images.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Azure location value, for example C(westus), C(eastus), C(eastus2), C(northcentralus), etc.\nSupplying only a location value will yield a list of available publishers for the location.",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "offer": {
          "aliases": [],
          "description": "Name of an image offering. Combine with SKU to see a list of available image versions.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "publisher": {
          "aliases": [],
          "description": "Name of an image publisher. List image offerings associated with a particular publisher.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "Image offering SKU. Combine with offer to see a list of available versions.",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Specific version number of an image.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get virtual machine image facts"
    },
    "examples": "\n    - name: Get facts for a specific image\n      community.azure.azure_rm_virtualmachineimage_info:\n        location: eastus\n        publisher: OpenLogic\n        offer: CentOS\n        sku: '7.1'\n        version: '7.1.20160308'\n\n    - name: List available versions\n      community.azure.azure_rm_virtualmachineimage_info:\n        location: eastus\n        publisher: OpenLogic\n        offer: CentOS\n        sku: '7.1'\n\n    - name: List available offers\n      community.azure.azure_rm_virtualmachineimage_info:\n        location: eastus\n        publisher: OpenLogic\n\n    - name: List available publishers\n      community.azure.azure_rm_virtualmachineimage_info:\n        location: eastus\n\n"
  },
  "community.azure.azure_rm_virtualmachineimage_info": {
    "doc": {
      "description": "Get facts for virtual machine images.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Azure location value, for example C(westus), C(eastus), C(eastus2), C(northcentralus), etc.\nSupplying only a location value will yield a list of available publishers for the location.",
          "required": true,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "offer": {
          "aliases": [],
          "description": "Name of an image offering. Combine with SKU to see a list of available image versions.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "publisher": {
          "aliases": [],
          "description": "Name of an image publisher. List image offerings associated with a particular publisher.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "sku": {
          "aliases": [],
          "description": "Image offering SKU. Combine with offer to see a list of available versions.",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "Specific version number of an image.",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get virtual machine image facts"
    },
    "examples": "\n    - name: Get facts for a specific image\n      community.azure.azure_rm_virtualmachineimage_info:\n        location: eastus\n        publisher: OpenLogic\n        offer: CentOS\n        sku: '7.1'\n        version: '7.1.20160308'\n\n    - name: List available versions\n      community.azure.azure_rm_virtualmachineimage_info:\n        location: eastus\n        publisher: OpenLogic\n        offer: CentOS\n        sku: '7.1'\n\n    - name: List available offers\n      community.azure.azure_rm_virtualmachineimage_info:\n        location: eastus\n        publisher: OpenLogic\n\n    - name: List available publishers\n      community.azure.azure_rm_virtualmachineimage_info:\n        location: eastus\n\n"
  },
  "community.azure.azure_rm_virtualmachinescaleset": {
    "doc": {
      "description": "Create and update a virtual machine scale set.\nNote that this module was called M(community.azure.azure_rm_virtualmachine_scaleset) before Ansible 2.8. The usage did not change.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "admin_password": {
          "aliases": [],
          "description": "Password for the admin username.\nNot required if the os_type is Linux and SSH password authentication is disabled by setting I(ssh_password_enabled=false).",
          "required": false,
          "suboptions": {}
        },
        "admin_username": {
          "aliases": [],
          "description": "Admin username used to access the host after it is created. Required when creating a VM.",
          "required": false,
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "append_tags": {
          "aliases": [],
          "description": "Use to control if tags field is canonical or just appends to existing tags.\nWhen canonical, any tags not found in the tags parameter will be removed from the object's metadata.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "application_gateway": {
          "aliases": [],
          "description": "Application gateway name.",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "capacity": {
          "aliases": [],
          "description": "Capacity of VMSS.",
          "default": "1",
          "required": false,
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "custom_data": {
          "aliases": [],
          "description": "Data which is made available to the virtual machine and used by e.g., C(cloud-init).\nMany images in the marketplace are not cloud-init ready. Thus, data sent to I(custom_data) would be ignored.\nIf the image you are attempting to use is not listed in U(https://docs.microsoft.com/en-us/azure/virtual-machines/linux/using-cloud-init#cloud-init-overview), follow these steps U(https://docs.microsoft.com/en-us/azure/virtual-machines/linux/cloudinit-prepare-custom-image).",
          "required": false,
          "suboptions": {}
        },
        "data_disks": {
          "aliases": [],
          "description": "Describes list of data disks.",
          "required": false,
          "suboptions": {
            "caching": {
              "aliases": [],
              "description": "Type of data disk caching.",
              "default": "ReadOnly",
              "required": false,
              "choices": [
                "ReadOnly",
                "ReadWrite"
              ],
              "suboptions": {}
            },
            "create_option": {
              "aliases": [],
              "description": "Specify whether disk should be created Empty or FromImage.  This is required to allow custom images with data disks to be used.",
              "required": false,
              "choices": [
                "Empty",
                "FromImage"
              ],
              "suboptions": {}
            },
            "disk_size_gb": {
              "aliases": [],
              "description": "The initial disk size in GB for blank data disks.",
              "required": false,
              "suboptions": {}
            },
            "lun": {
              "aliases": [],
              "description": "The logical unit number for data disk.",
              "default": "0",
              "required": false,
              "suboptions": {}
            },
            "managed_disk_type": {
              "aliases": [],
              "description": "Managed data disk type.",
              "required": false,
              "choices": [
                "Standard_LRS",
                "Premium_LRS"
              ],
              "suboptions": {}
            }
          }
        },
        "enable_accelerated_networking": {
          "aliases": [],
          "description": "Indicates whether user wants to allow accelerated networking for virtual machines in scaleset being created.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "image": {
          "aliases": [],
          "description": "Specifies the image used to build the VM.\nIf a string, the image is sourced from a custom image based on the name.\nIf a dict with the keys I(publisher), I(offer), I(sku), and I(version), the image is sourced from a Marketplace image. Note that set I(version=latest) to get the most recent version of a given image.\nIf a dict with the keys I(name) and I(resource_group), the image is sourced from a custom image based on the I(name) and I(resource_group) set. Note that the key I(resource_group) is optional and if omitted, all images in the subscription will be searched for by I(name).\nCustom image support was added in Ansible 2.5.",
          "required": true,
          "suboptions": {}
        },
        "load_balancer": {
          "aliases": [],
          "description": "Load balancer name.",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Valid Azure location. Defaults to location of the resource group.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "managed_disk_type": {
          "aliases": [],
          "description": "Managed disk type.",
          "required": false,
          "choices": [
            "Standard_LRS",
            "Premium_LRS"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the virtual machine.",
          "required": true,
          "suboptions": {}
        },
        "os_disk_caching": {
          "aliases": [
            "disk_caching"
          ],
          "description": "Type of OS disk caching.",
          "default": "ReadOnly",
          "required": false,
          "choices": [
            "ReadOnly",
            "ReadWrite"
          ],
          "suboptions": {}
        },
        "os_type": {
          "aliases": [],
          "description": "Base type of operating system.",
          "default": "Linux",
          "required": false,
          "choices": [
            "Windows",
            "Linux"
          ],
          "suboptions": {}
        },
        "overprovision": {
          "aliases": [],
          "description": "Specifies whether the Virtual Machine Scale Set should be overprovisioned.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "plan": {
          "aliases": [],
          "description": "Third-party billing plan for the VM.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Billing plan name.",
              "required": true,
              "suboptions": {}
            },
            "product": {
              "aliases": [],
              "description": "Product name.",
              "required": true,
              "suboptions": {}
            },
            "promotion_code": {
              "aliases": [],
              "description": "Optional promotion code.",
              "required": false,
              "suboptions": {}
            },
            "publisher": {
              "aliases": [],
              "description": "Publisher offering the plan.",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "priority": {
          "aliases": [],
          "description": "If you want to request low-priority VMs for the VMSS, set this to \"Low\". The default is \"Regular\"",
          "default": "Regular",
          "required": false,
          "choices": [
            "Regular",
            "Low"
          ],
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "remove_on_absent": {
          "aliases": [],
          "description": "When removing a VM using I(state=absent), also remove associated resources.\nIt can be C(all) or a list with any of the following ['network_interfaces', 'virtual_storage', 'public_ips'].\nAny other input will be ignored.",
          "default": "['all']",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of the resource group containing the virtual machine scale set.",
          "required": true,
          "suboptions": {}
        },
        "scale_in_policy": {
          "aliases": [],
          "description": "define the order in which vmss instances are scaled-in",
          "required": false,
          "choices": [
            "Default",
            "NewestVM",
            "OldestVM"
          ],
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "security_group": {
          "aliases": [
            "security_group_name"
          ],
          "description": "Existing security group with which to associate the subnet.\nIt can be the security group name which is in the same resource group.\nIt can be the resource ID.\nIt can be a dict which contains I(name) and I(resource_group) of the security group.",
          "required": false,
          "suboptions": {}
        },
        "short_hostname": {
          "aliases": [],
          "description": "Short host name.",
          "required": false,
          "suboptions": {}
        },
        "single_placement_group": {
          "aliases": [],
          "description": "When true this limits the scale set to a single placement group, of max size 100 virtual machines.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssh_password_enabled": {
          "aliases": [],
          "description": "When the os_type is Linux, setting I(ssh_password_enabled=false) will disable SSH password authentication and require use of SSH keys.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "ssh_public_keys": {
          "aliases": [],
          "description": "For I(os_type=Linux) provide a list of SSH keys.\nEach item in the list should be a dictionary where the dictionary contains two keys, C(path) and C(key_data).\nSet the C(path) to the default location of the authorized_keys files.\nOn an Enterprise Linux host, for example, the I(path=/home/<admin username>/.ssh/authorized_keys). Set C(key_data) to the actual value of the public key.",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Assert the state of the virtual machine scale set.\nState C(present) will check that the machine exists with the requested configuration. If the configuration of the existing machine does not match, the machine will be updated.\nState C(absent) will remove the virtual machine scale set.",
          "default": "present",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "subnet_name": {
          "aliases": [
            "subnet"
          ],
          "description": "Subnet name.",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Dictionary of string:string pairs to assign as metadata to the object.\nMetadata tags on the object will be updated with any provided values.\nTo remove tags set append_tags option to false.\nCurrently, Azure DNS zones and Traffic Manager services also don't allow the use of spaces in the tag.\nAzure Front Door doesn't support the use of\nAzure Automation and Azure CDN only support 15 tags on resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "terminate_event_timeout_minutes": {
          "aliases": [],
          "description": "timeout time for termination notification event\nin range between 5 and 15",
          "required": false,
          "suboptions": {}
        },
        "tier": {
          "aliases": [],
          "description": "SKU Tier.",
          "required": false,
          "choices": [
            "Basic",
            "Standard"
          ],
          "suboptions": {}
        },
        "upgrade_policy": {
          "aliases": [],
          "description": "Upgrade policy.\nRequired when creating the Azure virtual machine scale sets.",
          "required": false,
          "choices": [
            "Manual",
            "Automatic"
          ],
          "suboptions": {}
        },
        "virtual_network_name": {
          "aliases": [
            "virtual_network"
          ],
          "description": "Virtual Network name.",
          "required": false,
          "suboptions": {}
        },
        "virtual_network_resource_group": {
          "aliases": [],
          "description": "When creating a virtual machine, if a specific virtual network from another resource group should be used.\nUse this parameter to specify the resource group to use.",
          "required": false,
          "suboptions": {}
        },
        "vm_size": {
          "aliases": [],
          "description": "A valid Azure VM size value. For example, C(Standard_D4).\nThe list of choices varies depending on the subscription and location. Check your subscription for available choices.",
          "required": false,
          "suboptions": {}
        },
        "zones": {
          "aliases": [],
          "description": "A list of Availability Zones for your virtual machine scale set.",
          "type": "list",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Manage Azure virtual machine scale sets"
    },
    "examples": "\n\n- name: Create VMSS\n  community.azure.azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 2\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    terminate_event_timeout_minutes: 10\n    scale_in_policy: NewestVM\n    admin_username: adminUser\n    ssh_password_enabled: false\n    ssh_public_keys:\n      - path: /home/adminUser/.ssh/authorized_keys\n        key_data: < insert yor ssh public key here... >\n    managed_disk_type: Standard_LRS\n    image:\n      offer: CoreOS\n      publisher: CoreOS\n      sku: Stable\n      version: latest\n    data_disks:\n      - lun: 0\n        disk_size_gb: 64\n        caching: ReadWrite\n        managed_disk_type: Standard_LRS\n\n- name: Create VMSS with an image that requires plan information\n  community.azure.azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 3\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    admin_username: adminUser\n    ssh_password_enabled: false\n    ssh_public_keys:\n      - path: /home/adminUser/.ssh/authorized_keys\n        key_data: < insert yor ssh public key here... >\n    managed_disk_type: Standard_LRS\n    image:\n      offer: cis-ubuntu-linux-1804-l1\n      publisher: center-for-internet-security-inc\n      sku: Stable\n      version: latest\n    plan:\n      name: cis-ubuntu-linux-1804-l1\n      product: cis-ubuntu-linux-1804-l1\n      publisher: center-for-internet-security-inc\n    data_disks:\n      - lun: 0\n        disk_size_gb: 64\n        caching: ReadWrite\n        managed_disk_type: Standard_LRS\n\n- name: Create a VMSS with a custom image\n  community.azure.azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 2\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    admin_username: adminUser\n    admin_password: password01\n    managed_disk_type: Standard_LRS\n    image: customimage001\n\n- name: Create a VMSS with a custom image and override data disk\n  community.azure.azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 2\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    admin_username: adminUser\n    admin_password: password01\n    managed_disk_type: Standard_LRS\n    image: customimage001\n    data_disks:\n      - lun: 0\n        disk_size_gb: 64\n        caching: ReadWrite\n        managed_disk_type: Standard_LRS\n        create_option: FromImage\n\n- name: Create a VMSS with over 100 instances\n  community.azure.azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 120\n    single_placement_group: False\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    admin_username: adminUser\n    admin_password: password01\n    managed_disk_type: Standard_LRS\n    image: customimage001\n\n- name: Create a VMSS with a custom image from a particular resource group\n  community.azure.azure_rm_virtualmachinescaleset:\n    resource_group: myResourceGroup\n    name: testvmss\n    vm_size: Standard_DS1_v2\n    capacity: 2\n    virtual_network_name: testvnet\n    upgrade_policy: Manual\n    subnet_name: testsubnet\n    admin_username: adminUser\n    admin_password: password01\n    managed_disk_type: Standard_LRS\n    image:\n      name: customimage001\n      resource_group: myResourceGroup\n"
  },
  "community.azure.azure_rm_virtualmachinescaleset_facts": {
    "doc": {
      "description": "Get facts for a virtual machine scale set.\nNote that this module was called M(community.azure.azure_rm_virtualmachine_scaleset_facts) before Ansible 2.8. The usage did not change.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "format": {
          "aliases": [],
          "description": "Format of the data returned.\nIf C(raw) is selected information will be returned in raw format from Azure Python SDK.\nIf C(curated) is selected the structure will be identical to input parameters of M(community.azure.azure_rm_virtualmachinescaleset) module.\nIn Ansible 2.5 and lower facts are always returned in raw format.\nPlease note that this option will be deprecated in 2.10 when curated format will become the only supported format.",
          "default": "raw",
          "required": false,
          "choices": [
            "curated",
            "raw"
          ],
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific virtual machine scale set.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired virtual machine scale set.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "List of tags to be matched.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Virtual Machine Scale Set facts"
    },
    "examples": "\n    - name: Get facts for a virtual machine scale set\n      community.azure.azure_rm_virtualmachinescaleset_info:\n        resource_group: myResourceGroup\n        name: testvmss001\n        format: curated\n\n    - name: Get facts for all virtual networks\n      community.azure.azure_rm_virtualmachinescaleset_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts by tags\n      community.azure.azure_rm_virtualmachinescaleset_info:\n        resource_group: myResourceGroup\n        tags:\n          - testing\n"
  },
  "community.azure.azure_rm_virtualmachinescaleset_info": {
    "doc": {
      "description": "Get facts for a virtual machine scale set.\nNote that this module was called M(community.azure.azure_rm_virtualmachine_scaleset_facts) before Ansible 2.8. The usage did not change.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "format": {
          "aliases": [],
          "description": "Format of the data returned.\nIf C(raw) is selected information will be returned in raw format from Azure Python SDK.\nIf C(curated) is selected the structure will be identical to input parameters of M(community.azure.azure_rm_virtualmachinescaleset) module.\nIn Ansible 2.5 and lower facts are always returned in raw format.\nPlease note that this option will be deprecated in 2.10 when curated format will become the only supported format.",
          "default": "raw",
          "required": false,
          "choices": [
            "curated",
            "raw"
          ],
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Limit results to a specific virtual machine scale set.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The resource group to search for the desired virtual machine scale set.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "List of tags to be matched.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Virtual Machine Scale Set facts"
    },
    "examples": "\n    - name: Get facts for a virtual machine scale set\n      community.azure.azure_rm_virtualmachinescaleset_info:\n        resource_group: myResourceGroup\n        name: testvmss001\n        format: curated\n\n    - name: Get facts for all virtual networks\n      community.azure.azure_rm_virtualmachinescaleset_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts by tags\n      community.azure.azure_rm_virtualmachinescaleset_info:\n        resource_group: myResourceGroup\n        tags:\n          - testing\n"
  },
  "community.azure.azure_rm_virtualmachinescalesetextension_facts": {
    "doc": {
      "description": "Get facts of Azure Virtual Machine Scale Set Extension.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the virtual machine extension.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vmss_name": {
          "aliases": [],
          "description": "The name of VMSS containing the extension.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Virtual Machine Scale Set Extension facts"
    },
    "examples": "\n  - name: Get information on specific Virtual Machine Scale Set Extension\n    azure_rm_virtualmachineextension_info:\n      resource_group: myResourceGroup\n      vmss_name: myvmss\n      name: myextension\n\n  - name: List installed Virtual Machine Scale Set Extensions\n    azure_rm_virtualmachineextension_info:\n      resource_group: myrg\n      vmss_name: myvmss\n"
  },
  "community.azure.azure_rm_virtualmachinescalesetextension_info": {
    "doc": {
      "description": "Get facts of Azure Virtual Machine Scale Set Extension.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the virtual machine extension.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vmss_name": {
          "aliases": [],
          "description": "The name of VMSS containing the extension.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Virtual Machine Scale Set Extension facts"
    },
    "examples": "\n  - name: Get information on specific Virtual Machine Scale Set Extension\n    azure_rm_virtualmachineextension_info:\n      resource_group: myResourceGroup\n      vmss_name: myvmss\n      name: myextension\n\n  - name: List installed Virtual Machine Scale Set Extensions\n    azure_rm_virtualmachineextension_info:\n      resource_group: myrg\n      vmss_name: myvmss\n"
  },
  "community.azure.azure_rm_virtualmachinescalesetinstance_facts": {
    "doc": {
      "description": "Get facts of Azure Virtual Machine Scale Set VMs.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "instance_id": {
          "aliases": [],
          "description": "The instance ID of the virtual machine.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vmss_name": {
          "aliases": [],
          "description": "The name of the VM scale set.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Virtual Machine Scale Set Instance facts"
    },
    "examples": "\n  - name: List VM instances in Virtual Machine ScaleSet\n    community.azure.azure_rm_virtualmachinescalesetinstance_info:\n      resource_group: myResourceGroup\n      vmss_name: myVMSS\n"
  },
  "community.azure.azure_rm_virtualmachinescalesetinstance_info": {
    "doc": {
      "description": "Get facts of Azure Virtual Machine Scale Set VMs.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "instance_id": {
          "aliases": [],
          "description": "The instance ID of the virtual machine.",
          "required": false,
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "The name of the resource group.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vmss_name": {
          "aliases": [],
          "description": "The name of the VM scale set.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure Virtual Machine Scale Set Instance facts"
    },
    "examples": "\n  - name: List VM instances in Virtual Machine ScaleSet\n    community.azure.azure_rm_virtualmachinescalesetinstance_info:\n      resource_group: myResourceGroup\n      vmss_name: myVMSS\n"
  },
  "community.azure.azure_rm_virtualnetwork_facts": {
    "doc": {
      "description": "Get facts for a specific virtual network or all virtual networks within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific security group.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group. Required when filtering by name.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get virtual network facts"
    },
    "examples": "\n    - name: Get facts for one virtual network\n      community.azure.azure_rm_virtualnetwork_info:\n        resource_group: myResourceGroup\n        name: secgroup001\n\n    - name: Get facts for all virtual networks\n      community.azure.azure_rm_virtualnetwork_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts by tags\n      community.azure.azure_rm_virtualnetwork_info:\n        tags:\n          - testing\n"
  },
  "community.azure.azure_rm_virtualnetwork_info": {
    "doc": {
      "description": "Get facts for a specific virtual network or all virtual networks within a resource group.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific security group.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group. Required when filtering by name.",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get virtual network facts"
    },
    "examples": "\n    - name: Get facts for one virtual network\n      community.azure.azure_rm_virtualnetwork_info:\n        resource_group: myResourceGroup\n        name: secgroup001\n\n    - name: Get facts for all virtual networks\n      community.azure.azure_rm_virtualnetwork_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts by tags\n      community.azure.azure_rm_virtualnetwork_info:\n        tags:\n          - testing\n"
  },
  "community.azure.azure_rm_virtualnetworkpeering_facts": {
    "doc": {
      "description": "Get facts of Azure Virtual Network Peering.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the virtual network peering.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the vnet exists.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_network": {
          "aliases": [],
          "description": "Name or resource ID of a virtual network.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get facts of Azure Virtual Network Peering"
    },
    "examples": "\n    - name: Get virtual network peering by name\n      community.azure.azure_rm_virtualnetworkpeering_info:\n        resource_group: myResourceGroup\n        virtual_network: myVnet1\n        name: myVnetPeer\n\n    - name: List virtual network peering of virtual network\n      azure_rm_virtualnetworkpeering:\n        resource_group: myResourceGroup\n        virtual_network: myVnet1\n"
  },
  "community.azure.azure_rm_virtualnetworkpeering_info": {
    "doc": {
      "description": "Get facts of Azure Virtual Network Peering.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the virtual network peering.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Name of a resource group where the vnet exists.",
          "required": true,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "virtual_network": {
          "aliases": [],
          "description": "Name or resource ID of a virtual network.",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get facts of Azure Virtual Network Peering"
    },
    "examples": "\n    - name: Get virtual network peering by name\n      community.azure.azure_rm_virtualnetworkpeering_info:\n        resource_group: myResourceGroup\n        virtual_network: myVnet1\n        name: myVnetPeer\n\n    - name: List virtual network peering of virtual network\n      azure_rm_virtualnetworkpeering:\n        resource_group: myResourceGroup\n        virtual_network: myVnet1\n"
  },
  "community.azure.azure_rm_webapp_facts": {
    "doc": {
      "description": "Get facts for a specific web app or all web app in a resource group, or all web app in current subscription.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific web app.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group.",
          "required": false,
          "suboptions": {}
        },
        "return_publish_profile": {
          "aliases": [],
          "description": "Indicate whether to return publishing profile of the web app.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure web app facts"
    },
    "examples": "\n    - name: Get facts for web app by name\n      community.azure.azure_rm_webapp_info:\n        resource_group: myResourceGroup\n        name: winwebapp1\n\n    - name: Get facts for web apps in resource group\n      community.azure.azure_rm_webapp_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts for web apps with tags\n      community.azure.azure_rm_webapp_info:\n        tags:\n          - testtag\n          - foo:bar\n"
  },
  "community.azure.azure_rm_webapp_info": {
    "doc": {
      "description": "Get facts for a specific web app or all web app in a resource group, or all web app in current subscription.",
      "has_action": false,
      "notes": "For authentication with Azure you can pass parameters, set environment variables, use a profile stored in ~/.azure/credentials, or log in before you run your tasks or playbook with C(az login).\nAuthentication is also possible using a service principal or Active Directory user.\nTo authenticate via service principal, pass subscription_id, client_id, secret and tenant or set environment variables AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_SECRET and AZURE_TENANT.\nTo authenticate via Active Directory user, pass ad_user and password, or set AZURE_AD_USER and AZURE_PASSWORD in the environment.\nAlternatively, credentials can be stored in ~/.azure/credentials. This is an ini file containing a [default] section and the following keys: subscription_id, client_id, secret and tenant or subscription_id, ad_user and password. It is also possible to add additional profiles. Specify the profile by passing profile or setting AZURE_PROFILE in the environment.",
      "options": {
        "ad_user": {
          "aliases": [],
          "description": "Active Directory username. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "adfs_authority_url": {
          "aliases": [],
          "description": "Azure AD authority url. Use when authenticating with Username/password, and has your own ADFS authority.",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "api_profile": {
          "aliases": [],
          "description": "Selects an API profile to use when communicating with Azure services. Default value of C(latest) is appropriate for public clouds; future values will allow use with Azure Stack.",
          "default": "latest",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Controls the source of the credentials to use for authentication.\nCan also be set via the C(ANSIBLE_AZURE_AUTH_SOURCE) environment variable.\nWhen set to C(auto) (the default) the precedence is module parameters -> C(env) -> C(credential_file) -> C(cli).\nWhen set to C(env), the credentials will be read from the environment variables\nWhen set to C(credential_file), it will read the profile from C(~/.azure/credentials).\nWhen set to C(cli), the credentials will be sources from the Azure CLI profile. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if more than one is present otherwise the default az cli subscription is used.\nWhen set to C(msi), the host machine must be an azure resource with an enabled MSI extension. C(subscription_id) or the environment variable C(AZURE_SUBSCRIPTION_ID) can be used to identify the subscription ID if the resource is granted access to more than one subscription, otherwise the first subscription is chosen.\nThe C(msi) was added in Ansible 2.6.",
          "default": "auto",
          "type": "str",
          "required": false,
          "choices": [
            "auto",
            "cli",
            "credential_file",
            "env",
            "msi"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "cert_validation_mode": {
          "aliases": [],
          "description": "Controls the certificate validation behavior for Azure endpoints. By default, all modules will validate the server certificate, but when an HTTPS proxy is in use, or against Azure Stack, it may be necessary to disable this behavior by passing C(ignore). Can also be set via credential file profile or the C(AZURE_CERT_VALIDATION) environment variable.",
          "type": "str",
          "required": false,
          "choices": [
            "ignore",
            "validate"
          ],
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "client_id": {
          "aliases": [],
          "description": "Azure client ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cloud_environment": {
          "aliases": [],
          "description": "For cloud environments other than the US public cloud, the environment name (as defined by Azure Python SDK, eg, C(AzureChinaCloud), C(AzureUSGovernment)), or a metadata discovery endpoint URL (required for Azure Stack). Can also be set via credential file profile or the C(AZURE_CLOUD_ENVIRONMENT) environment variable.",
          "default": "AzureCloud",
          "type": "str",
          "required": false,
          "version_added": "0.0.1",
          "suboptions": {}
        },
        "log_mode": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_path": {
          "aliases": [],
          "description": "Parent argument.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Only show results for a specific web app.",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Active Directory user password. Use when authenticating with an Active Directory user rather than service principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Security profile found in ~/.azure/credentials file.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "resource_group": {
          "aliases": [],
          "description": "Limit results by resource group.",
          "required": false,
          "suboptions": {}
        },
        "return_publish_profile": {
          "aliases": [],
          "description": "Indicate whether to return publishing profile of the web app.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "secret": {
          "aliases": [],
          "description": "Azure client secret. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subscription_id": {
          "aliases": [],
          "description": "Your Azure subscription Id.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Limit results by providing a list of tags. Format tags as 'key' or 'key:value'.",
          "required": false,
          "suboptions": {}
        },
        "tenant": {
          "aliases": [],
          "description": "Azure tenant ID. Use when authenticating with a Service Principal.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.7",
        "The host that executes this module must have the azure.azcollection collection installed via galaxy",
        "All python packages listed in collection's requirements-azure.txt must be installed via pip on the host that executes modules from azure.azcollection",
        "Full installation instructions may be found https://galaxy.ansible.com/azure/azcollection"
      ],
      "short_description": "Get Azure web app facts"
    },
    "examples": "\n    - name: Get facts for web app by name\n      community.azure.azure_rm_webapp_info:\n        resource_group: myResourceGroup\n        name: winwebapp1\n\n    - name: Get facts for web apps in resource group\n      community.azure.azure_rm_webapp_info:\n        resource_group: myResourceGroup\n\n    - name: Get facts for web apps with tags\n      community.azure.azure_rm_webapp_info:\n        tags:\n          - testtag\n          - foo:bar\n"
  }
}