{
  "cisco.ios.ios_acl_interfaces": {
    "doc": {
      "description": "This module configures and manages the access-control (ACL) attributes of interfaces on IOS platforms.",
      "has_action": true,
      "notes": "Tested against Cisco IOSv Version 15.2 on VIRL\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of ACL interfaces options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "access_groups": {
              "aliases": [],
              "description": "Specify access-group for IP access list (standard or extended).",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "acls": {
                  "aliases": [],
                  "description": "Specifies the ACLs for the provided AFI.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "direction": {
                      "aliases": [],
                      "description": "Specifies the direction of packets that the ACL will be applied on.\nWith one direction already assigned, other acl direction cannot be same.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "in",
                        "out"
                      ],
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "Specifies the name of the IPv4/IPv4 ACL for the interface.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                },
                "afi": {
                  "aliases": [],
                  "description": "Specifies the AFI for the ACLs to be configured on this interface.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "ipv4",
                    "ipv6"
                  ],
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "Full name of the interface excluding any logical unit number, i.e. GigabitEthernet0/1.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source. There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(running_config) argument allows the implementer to pass in the configuration to use as the base config for comparison. This value of this option should be the output received from device by executing command.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(show running-config | include ip route|ipv6 route) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "parsed",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "ACL interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using Merged\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | include interface|ip access-group|ipv6 traffic-filter\n# interface Loopback888\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n# interface GigabitEthernet0/2\n#  ip access-group 123 out\n\n- name: Merge module attributes of given access-groups\n  cisco.ios.ios_acl_interfaces:\n    config:\n    - name: GigabitEthernet0/1\n      access_groups:\n      - afi: ipv4\n        acls:\n        - name: 110\n          direction: in\n        - name: 123\n          direction: out\n      - afi: ipv6\n        acls:\n        - name: test_v6\n          direction: out\n        - name: temp_v6\n          direction: in\n    - name: GigabitEthernet0/2\n      access_groups:\n      - afi: ipv4\n        acls:\n        - name: 100\n          direction: in\n    state: merged\n\n# Commands Fired:\n# ---------------\n#\n# interface GigabitEthernet0/1\n#  ip access-group 110 in\n#  ip access-group 123 out\n#  ipv6 traffic-filter test_v6 out\n#  ipv6 traffic-filter temp_v6 in\n# interface GigabitEthernet0/2\n#  ip access-group 100 in\n\n\n# After state:\n# -------------\n#\n# vios#sh running-config | include interface|ip access-group|ipv6 traffic-filter\n# interface Loopback888\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  ip access-group 110 in\n#  ip access-group 123 out\n#  ipv6 traffic-filter test_v6 out\n#  ipv6 traffic-filter temp_v6 in\n# interface GigabitEthernet0/2\n#  ip access-group 110 in\n#  ip access-group 123 out\n\n# Using Replaced\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | include interface|ip access-group|ipv6 traffic-filter\n# interface Loopback888\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  ip access-group 110 in\n#  ip access-group 123 out\n#  ipv6 traffic-filter test_v6 out\n#  ipv6 traffic-filter temp_v6 in\n# interface GigabitEthernet0/2\n#  ip access-group 110 in\n#  ip access-group 123 out\n\n- name: Replace module attributes of given access-groups\n  cisco.ios.ios_acl_interfaces:\n    config:\n    - name: GigabitEthernet0/1\n      access_groups:\n      - afi: ipv4\n        acls:\n        - name: 100\n          direction: out\n        - name: 110\n          direction: in\n    state: replaced\n\n# Commands Fired:\n# ---------------\n#\n# interface GigabitEthernet0/1\n# no ip access-group 123 out\n# no ipv6 traffic-filter temp_v6 in\n# no ipv6 traffic-filter test_v6 out\n# ip access-group 100 out\n\n# After state:\n# -------------\n#\n# vios#sh running-config | include interface|ip access-group|ipv6 traffic-filter\n# interface Loopback888\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  ip access-group 100 out\n#  ip access-group 110 in\n# interface GigabitEthernet0/2\n#  ip access-group 110 in\n#  ip access-group 123 out\n\n# Using Overridden\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | include interface|ip access-group|ipv6 traffic-filter\n# interface Loopback888\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  ip access-group 110 in\n#  ip access-group 123 out\n#  ipv6 traffic-filter test_v6 out\n#  ipv6 traffic-filter temp_v6 in\n# interface GigabitEthernet0/2\n#  ip access-group 110 in\n#  ip access-group 123 out\n\n- name: Overridden module attributes of given access-groups\n  cisco.ios.ios_acl_interfaces:\n    config:\n    - name: GigabitEthernet0/1\n      access_groups:\n      - afi: ipv4\n        acls:\n        - name: 100\n          direction: out\n        - name: 110\n          direction: in\n    state: overridden\n\n# Commands Fired:\n# ---------------\n#\n# interface GigabitEthernet0/1\n# no ip access-group 123 out\n# no ipv6 traffic-filter test_v6 out\n# no ipv6 traffic-filter temp_v6 in\n# ip access-group 100 out\n# interface GigabitEthernet0/2\n# no ip access-group 110 in\n# no ip access-group 123 out\n\n# After state:\n# -------------\n#\n# vios#sh running-config | include interface|ip access-group|ipv6 traffic-filter\n# interface Loopback888\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  ip access-group 100 out\n#  ip access-group 110 in\n# interface GigabitEthernet0/2\n\n# Using Deleted\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | include interface|ip access-group|ipv6 traffic-filter\n# interface Loopback888\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  ip access-group 110 in\n#  ip access-group 123 out\n#  ipv6 traffic-filter test_v6 out\n#  ipv6 traffic-filter temp_v6 in\n# interface GigabitEthernet0/2\n#  ip access-group 110 in\n#  ip access-group 123 out\n\n- name: Delete module attributes of given Interface\n  cisco.ios.ios_acl_interfaces:\n    config:\n    - name: GigabitEthernet0/1\n    state: deleted\n\n# Commands Fired:\n# ---------------\n#\n# interface GigabitEthernet0/1\n# no ip access-group 110 in\n# no ip access-group 123 out\n# no ipv6 traffic-filter test_v6 out\n# no ipv6 traffic-filter temp_v6 in\n\n# After state:\n# -------------\n#\n# vios#sh running-config | include interface|ip access-group|ipv6 traffic-filter\n# interface Loopback888\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n# interface GigabitEthernet0/2\n#  ip access-group 110 in\n#  ip access-group 123 out\n\n# Using DELETED without any config passed\n#\"(NOTE: This will delete all of configured resource module attributes from each configured interface)\"\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | include interface|ip access-group|ipv6 traffic-filter\n# interface Loopback888\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  ip access-group 110 in\n#  ip access-group 123 out\n#  ipv6 traffic-filter test_v6 out\n#  ipv6 traffic-filter temp_v6 in\n# interface GigabitEthernet0/2\n#  ip access-group 110 in\n#  ip access-group 123 out\n\n- name: Delete module attributes of given access-groups from ALL Interfaces\n  cisco.ios.ios_acl_interfaces:\n    config:\n    state: deleted\n\n# Commands Fired:\n# ---------------\n#\n# interface GigabitEthernet0/1\n# no ip access-group 110 in\n# no ip access-group 123 out\n# no ipv6 traffic-filter test_v6 out\n# no ipv6 traffic-filter temp_v6 in\n# interface GigabitEthernet0/2\n# no ip access-group 110 out\n# no ip access-group 123 out\n\n# After state:\n# -------------\n#\n# vios#sh running-config | include interface|ip access-group|ipv6 traffic-filter\n# interface Loopback888\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n# interface GigabitEthernet0/2\n\n# Using Gathered\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | include interface|ip access-group|ipv6 traffic-filter\n# interface Loopback888\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  ip access-group 110 in\n#  ip access-group 123 out\n#  ipv6 traffic-filter test_v6 out\n#  ipv6 traffic-filter temp_v6 in\n# interface GigabitEthernet0/2\n#  ip access-group 110 in\n#  ip access-group 123 out\n\n- name: Gather listed acl interfaces with provided configurations\n  cisco.ios.ios_acl_interfaces:\n    config:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"gathered\": [\n#         {\n#             \"name\": \"Loopback888\"\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/0\"\n#         },\n#         {\n#             \"access_groups\": [\n#                 {\n#                     \"acls\": [\n#                         {\n#                             \"direction\": \"in\",\n#                             \"name\": \"110\"\n#                         },\n#                         {\n#                             \"direction\": \"out\",\n#                             \"name\": \"123\"\n#                         }\n#                     ],\n#                     \"afi\": \"ipv4\"\n#                 },\n#                 {\n#                     \"acls\": [\n#                         {\n#                             \"direction\": \"in\",\n#                             \"name\": \"temp_v6\"\n#                         },\n#                         {\n#                             \"direction\": \"out\",\n#                             \"name\": \"test_v6\"\n#                         }\n#                     ],\n#                     \"afi\": \"ipv6\"\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/1\"\n#         },\n#         {\n#             \"access_groups\": [\n#                 {\n#                     \"acls\": [\n#                         {\n#                             \"direction\": \"in\",\n#                             \"name\": \"100\"\n#                         },\n#                         {\n#                             \"direction\": \"out\",\n#                             \"name\": \"123\"\n#                         }\n#                     ],\n#                     \"afi\": \"ipv4\"\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/2\"\n#         }\n#     ]\n\n# After state:\n# ------------\n#\n# vios#sh running-config | include interface|ip access-group|ipv6 traffic-filter\n# interface Loopback888\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  ip access-group 110 in\n#  ip access-group 123 out\n#  ipv6 traffic-filter test_v6 out\n#  ipv6 traffic-filter temp_v6 in\n# interface GigabitEthernet0/2\n#  ip access-group 110 in\n#  ip access-group 123 out\n\n# Using Rendered\n\n- name: Render the commands for provided  configuration\n  cisco.ios.ios_acl_interfaces:\n    config:\n    - name: GigabitEthernet0/1\n      access_groups:\n      - afi: ipv4\n        acls:\n        - name: 110\n          direction: in\n        - name: 123\n          direction: out\n      - afi: ipv6\n        acls:\n        - name: test_v6\n          direction: out\n        - name: temp_v6\n          direction: in\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"rendered\": [\n#         \"interface GigabitEthernet0/1\",\n#         \"ip access-group 110 in\",\n#         \"ip access-group 123 out\",\n#         \"ipv6 traffic-filter temp_v6 in\",\n#         \"ipv6 traffic-filter test_v6 out\"\n#     ]\n\n# Using Parsed\n\n# File: parsed.cfg\n# ----------------\n#\n# interface GigabitEthernet0/1\n# ip access-group 110 in\n# ip access-group 123 out\n# ipv6 traffic-filter temp_v6 in\n# ipv6 traffic-filter test_v6 out\n\n- name: Parse the commands for provided configuration\n  cisco.ios.ios_acl_interfaces:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n#\n# \"parsed\": [\n#         {\n#             \"access_groups\": [\n#                 {\n#                     \"acls\": [\n#                         {\n#                             \"direction\": \"in\",\n#                             \"name\": \"110\"\n#                         }\n#                     ],\n#                     \"afi\": \"ipv4\"\n#                 },\n#                 {\n#                     \"acls\": [\n#                         {\n#                             \"direction\": \"in\",\n#                             \"name\": \"temp_v6\"\n#                         }\n#                     ],\n#                     \"afi\": \"ipv6\"\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/1\"\n#         }\n#     ]\n"
  },
  "cisco.ios.ios_acls": {
    "doc": {
      "description": "This module configures and manages the named or numbered ACLs on IOS platforms.",
      "has_action": true,
      "notes": "Tested against Cisco IOSv Version 15.2 on VIRL\nModule behavior is not idempotent when sequence for aces are not mentioned\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of ACL options.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "acls": {
              "aliases": [],
              "description": "A list of Access Control Lists (ACL).",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "aces": {
                  "aliases": [],
                  "description": "The entries within the ACL.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "destination": {
                      "aliases": [],
                      "description": "Specify the packet destination.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "Host address to match, or any single host address.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "any": {
                          "aliases": [],
                          "description": "Match any source address.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "host": {
                          "aliases": [],
                          "description": "A single destination host",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "object_group": {
                          "aliases": [],
                          "description": "Destination network object group",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "port_protocol": {
                          "aliases": [],
                          "description": "Specify the destination port along with protocol.\nNote, Valid with TCP/UDP protocol_options",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "eq": {
                              "aliases": [],
                              "description": "Match only packets on a given port number.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "gt": {
                              "aliases": [],
                              "description": "Match only packets with a greater port number.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "lt": {
                              "aliases": [],
                              "description": "Match only packets with a lower port number.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "neq": {
                              "aliases": [],
                              "description": "Match only packets not on a given port number.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "range": {
                              "aliases": [],
                              "description": "Port group.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "end": {
                                  "aliases": [],
                                  "description": "Specify the end of the port range.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "start": {
                                  "aliases": [],
                                  "description": "Specify the start of the port range.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "wildcard_bits": {
                          "aliases": [],
                          "description": "Destination wildcard bits, valid with IPV4 address.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "dscp": {
                      "aliases": [],
                      "description": "Match packets with given dscp value.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "evaluate": {
                      "aliases": [],
                      "description": "Evaluate an access list",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "fragments": {
                      "aliases": [],
                      "description": "Check non-initial fragments.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "grant": {
                      "aliases": [],
                      "description": "Specify the action.",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "permit",
                        "deny"
                      ],
                      "suboptions": {}
                    },
                    "log": {
                      "aliases": [],
                      "description": "Log matches against this entry.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "set": {
                          "aliases": [],
                          "description": "Enable Log matches against this entry",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "user_cookie": {
                          "aliases": [],
                          "description": "User defined cookie (max of 64 char)",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "log_input": {
                      "aliases": [],
                      "description": "Log matches against this entry, including input interface.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "set": {
                          "aliases": [],
                          "description": "Enable Log matches against this entry, including input interface.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "user_cookie": {
                          "aliases": [],
                          "description": "User defined cookie (max of 64 char)",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "option": {
                      "aliases": [],
                      "description": "Match packets with given IP Options value.\nValid only for named acls.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "add_ext": {
                          "aliases": [],
                          "description": "Match packets with Address Extension Option (147).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "any_options": {
                          "aliases": [],
                          "description": "Match packets with ANY Option.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "com_security": {
                          "aliases": [],
                          "description": "Match packets with Commercial Security Option (134).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "dps": {
                          "aliases": [],
                          "description": "Match packets with Dynamic Packet State Option (151).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "encode": {
                          "aliases": [],
                          "description": "Match packets with Encode Option (15).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "eool": {
                          "aliases": [],
                          "description": "Match packets with End of Options (0).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "ext_ip": {
                          "aliases": [],
                          "description": "Match packets with Extended IP Option (145).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "ext_security": {
                          "aliases": [],
                          "description": "Match packets with Extended Security Option (133).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "finn": {
                          "aliases": [],
                          "description": "Match packets with Experimental Flow Control Option (205).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "imitd": {
                          "aliases": [],
                          "description": "Match packets with IMI Traffic Desriptor Option (144).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "lsr": {
                          "aliases": [],
                          "description": "Match packets with Loose Source Route Option (131).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "mtup": {
                          "aliases": [],
                          "description": "Match packets with MTU Probe Option (11).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "mtur": {
                          "aliases": [],
                          "description": "Match packets with MTU Reply Option (12).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "no_op": {
                          "aliases": [],
                          "description": "Match packets with No Operation Option (1).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "nsapa": {
                          "aliases": [],
                          "description": "Match packets with NSAP Addresses Option (150).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "record_route": {
                          "aliases": [],
                          "description": "Match packets with Record Route Option (7).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "router_alert": {
                          "aliases": [],
                          "description": "Match packets with Router Alert Option (148).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "sdb": {
                          "aliases": [],
                          "description": "Match packets with Selective Directed Broadcast Option (149).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "security": {
                          "aliases": [],
                          "description": "Match packets with Basic Security Option (130).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "ssr": {
                          "aliases": [],
                          "description": "Match packets with Strict Source Routing Option (137).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "stream_id": {
                          "aliases": [],
                          "description": "Match packets with Stream ID Option (136).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "timestamp": {
                          "aliases": [],
                          "description": "Match packets with Time Stamp Option (68).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "traceroute": {
                          "aliases": [],
                          "description": "Match packets with Trace Route Option (82).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "ump": {
                          "aliases": [],
                          "description": "Match packets with Upstream Multicast Packet Option (152).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "visa": {
                          "aliases": [],
                          "description": "Match packets with Experimental Access Control Option (142).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "zsu": {
                          "aliases": [],
                          "description": "Match packets with Experimental Measurement Option (10).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "precedence": {
                      "aliases": [],
                      "description": "Match packets with given precedence value.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "protocol": {
                      "aliases": [],
                      "description": "Specify the protocol to match.\nRefer to vendor documentation for valid values.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "protocol_options": {
                      "aliases": [],
                      "description": "protocol type.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "ahp": {
                          "aliases": [],
                          "description": "Authentication Header Protocol.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "eigrp": {
                          "aliases": [],
                          "description": "Cisco's EIGRP routing protocol.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "esp": {
                          "aliases": [],
                          "description": "Encapsulation Security Payload.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "gre": {
                          "aliases": [],
                          "description": "Cisco's GRE tunneling.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "hbh": {
                          "aliases": [],
                          "description": "Hop by Hop options header. Valid for IPV6",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "icmp": {
                          "aliases": [],
                          "description": "Internet Control Message Protocol.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "administratively_prohibited": {
                              "aliases": [],
                              "description": "Administratively prohibited",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "alternate_address": {
                              "aliases": [],
                              "description": "Alternate address",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "conversion_error": {
                              "aliases": [],
                              "description": "Datagram conversion",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "dod_host_prohibited": {
                              "aliases": [],
                              "description": "Host prohibited",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "dod_net_prohibited": {
                              "aliases": [],
                              "description": "Net prohibited",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "echo": {
                              "aliases": [],
                              "description": "Echo (ping)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "echo_reply": {
                              "aliases": [],
                              "description": "Echo reply",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "general_parameter_problem": {
                              "aliases": [],
                              "description": "Parameter problem",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_isolated": {
                              "aliases": [],
                              "description": "Host isolated",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_precedence_unreachable": {
                              "aliases": [],
                              "description": "Host unreachable for precedence",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_redirect": {
                              "aliases": [],
                              "description": "Host redirect",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_tos_redirect": {
                              "aliases": [],
                              "description": "Host redirect for TOS",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_tos_unreachable": {
                              "aliases": [],
                              "description": "Host unreachable for TOS",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_unknown": {
                              "aliases": [],
                              "description": "Host unknown",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_unreachable": {
                              "aliases": [],
                              "description": "Host unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "information_reply": {
                              "aliases": [],
                              "description": "Information replies",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "information_request": {
                              "aliases": [],
                              "description": "Information requests",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "mask_reply": {
                              "aliases": [],
                              "description": "Mask replies",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "mask_request": {
                              "aliases": [],
                              "description": "mask_request",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "mobile_redirect": {
                              "aliases": [],
                              "description": "Mobile host redirect",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "net_redirect": {
                              "aliases": [],
                              "description": "Network redirect",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "net_tos_redirect": {
                              "aliases": [],
                              "description": "Net redirect for TOS",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "net_tos_unreachable": {
                              "aliases": [],
                              "description": "Network unreachable for TOS",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "net_unreachable": {
                              "aliases": [],
                              "description": "Net unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "network_unknown": {
                              "aliases": [],
                              "description": "Network unknown",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "no_room_for_option": {
                              "aliases": [],
                              "description": "Parameter required but no room",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "option_missing": {
                              "aliases": [],
                              "description": "Parameter required but not present",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "packet_too_big": {
                              "aliases": [],
                              "description": "Fragmentation needed and DF set",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "parameter_problem": {
                              "aliases": [],
                              "description": "All parameter problems",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "port_unreachable": {
                              "aliases": [],
                              "description": "Port unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "precedence_unreachable": {
                              "aliases": [],
                              "description": "Precedence cutoff",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "protocol_unreachable": {
                              "aliases": [],
                              "description": "Protocol unreachable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "reassembly_timeout": {
                              "aliases": [],
                              "description": "Reassembly timeout",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "redirect": {
                              "aliases": [],
                              "description": "All redirects",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "router_advertisement": {
                              "aliases": [],
                              "description": "Router discovery advertisements",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "router_solicitation": {
                              "aliases": [],
                              "description": "Router discovery solicitations",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "source_quench": {
                              "aliases": [],
                              "description": "Source quenches",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "source_route_failed": {
                              "aliases": [],
                              "description": "Source route failed",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "time_exceeded": {
                              "aliases": [],
                              "description": "All time exceededs",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "timestamp_reply": {
                              "aliases": [],
                              "description": "Timestamp replies",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "timestamp_request": {
                              "aliases": [],
                              "description": "Timestamp requests",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "traceroute": {
                              "aliases": [],
                              "description": "Traceroute",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "ttl_exceeded": {
                              "aliases": [],
                              "description": "TTL exceeded",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "unreachable": {
                              "aliases": [],
                              "description": "All unreachables",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "igmp": {
                          "aliases": [],
                          "description": "Internet Gateway Message Protocol.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "dvmrp": {
                              "aliases": [],
                              "description": "Distance Vector Multicast Routing Protocol(2)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "host_query": {
                              "aliases": [],
                              "description": "IGMP Membership Query(0)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "mtrace_resp": {
                              "aliases": [],
                              "description": "Multicast Traceroute Response(7)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "mtrace_route": {
                              "aliases": [],
                              "description": "Multicast Traceroute(8)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "pim": {
                              "aliases": [],
                              "description": "Protocol Independent Multicast(3)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "trace": {
                              "aliases": [],
                              "description": "Multicast trace(4)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "v1host_report": {
                              "aliases": [],
                              "description": "IGMPv1 Membership Report(1)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "v2host_report": {
                              "aliases": [],
                              "description": "IGMPv2 Membership Report(5)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "v2leave_group": {
                              "aliases": [],
                              "description": "IGMPv2 Leave Group(6)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "v3host_report": {
                              "aliases": [],
                              "description": "IGMPv3 Membership Report(9)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "ip": {
                          "aliases": [],
                          "description": "Any Internet Protocol.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "ipinip": {
                          "aliases": [],
                          "description": "IP in IP tunneling.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "ipv6": {
                          "aliases": [],
                          "description": "Any IPv6.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "nos": {
                          "aliases": [],
                          "description": "KA9Q NOS compatible IP over IP tunneling.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "ospf": {
                          "aliases": [],
                          "description": "OSPF routing protocol.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "pcp": {
                          "aliases": [],
                          "description": "Payload Compression Protocol.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "pim": {
                          "aliases": [],
                          "description": "Protocol Independent Multicast.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "protocol_number": {
                          "aliases": [],
                          "description": "An IP protocol number",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "sctp": {
                          "aliases": [],
                          "description": "Stream Control Transmission Protocol.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "tcp": {
                          "aliases": [],
                          "description": "Match TCP packet flags",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "ack": {
                              "aliases": [],
                              "description": "Match on the ACK bit",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "established": {
                              "aliases": [],
                              "description": "Match established connections",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "fin": {
                              "aliases": [],
                              "description": "Match on the FIN bit",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "psh": {
                              "aliases": [],
                              "description": "Match on the PSH bit",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "rst": {
                              "aliases": [],
                              "description": "Match on the RST bit",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "syn": {
                              "aliases": [],
                              "description": "Match on the SYN bit",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "urg": {
                              "aliases": [],
                              "description": "Match on the URG bit",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "udp": {
                          "aliases": [],
                          "description": "User Datagram Protocol.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "remarks": {
                      "aliases": [],
                      "description": "The remarks/description of the ACL.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "sequence": {
                      "aliases": [],
                      "description": "Sequence Number for the Access Control Entry(ACE).\nRefer to vendor documentation for valid values.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "source": {
                      "aliases": [],
                      "description": "Specify the packet source.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "Source network address.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "any": {
                          "aliases": [],
                          "description": "Match any source address.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "host": {
                          "aliases": [],
                          "description": "A single source host",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "object_group": {
                          "aliases": [],
                          "description": "Source network object group",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "port_protocol": {
                          "aliases": [],
                          "description": "Specify the source port along with protocol.\nNote, Valid with TCP/UDP protocol_options",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "eq": {
                              "aliases": [],
                              "description": "Match only packets on a given port number.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "gt": {
                              "aliases": [],
                              "description": "Match only packets with a greater port number.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "lt": {
                              "aliases": [],
                              "description": "Match only packets with a lower port number.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "neq": {
                              "aliases": [],
                              "description": "Match only packets not on a given port number.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "range": {
                              "aliases": [],
                              "description": "Port group.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "end": {
                                  "aliases": [],
                                  "description": "Specify the end of the port range.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "start": {
                                  "aliases": [],
                                  "description": "Specify the start of the port range.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "wildcard_bits": {
                          "aliases": [],
                          "description": "Source wildcard bits, valid with IPV4 address.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "time_range": {
                      "aliases": [],
                      "description": "Specify a time-range.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "tos": {
                      "aliases": [],
                      "description": "Match packets with given TOS value.\nNote, DSCP and TOS are mutually exclusive",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "max_reliability": {
                          "aliases": [],
                          "description": "Match packets with max reliable TOS (2).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "max_throughput": {
                          "aliases": [],
                          "description": "Match packets with max throughput TOS (4).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "min_delay": {
                          "aliases": [],
                          "description": "Match packets with min delay TOS (8).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "min_monetary_cost": {
                          "aliases": [],
                          "description": "Match packets with min monetary cost TOS (1).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "normal": {
                          "aliases": [],
                          "description": "Match packets with normal TOS (0).",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "service_value": {
                          "aliases": [],
                          "description": "Type of service value",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ttl": {
                      "aliases": [],
                      "description": "Match packets with given TTL value.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "eq": {
                          "aliases": [],
                          "description": "Match only packets on a given TTL number.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "gt": {
                          "aliases": [],
                          "description": "Match only packets with a greater TTL number.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "lt": {
                          "aliases": [],
                          "description": "Match only packets with a lower TTL number.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "neq": {
                          "aliases": [],
                          "description": "Match only packets not on a given TTL number.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "range": {
                          "aliases": [],
                          "description": "Match only packets in the range of TTLs.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "end": {
                              "aliases": [],
                              "description": "Specify the end of the port range.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "start": {
                              "aliases": [],
                              "description": "Specify the start of the port range.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "acl_type": {
                  "aliases": [],
                  "description": "ACL type\nNote, it's mandatory and required for Named ACL, but for Numbered ACL it's not mandatory.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "extended",
                    "standard"
                  ],
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "The name or the number of the ACL.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "afi": {
              "aliases": [],
              "description": "The Address Family Indicator (AFI) for the Access Control Lists (ACL).",
              "type": "str",
              "required": true,
              "choices": [
                "ipv4",
                "ipv6"
              ],
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(sh access-list).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(merged) is the default state which merges the want and have config, but for ACL module as the IOS platform doesn't allow update of ACE over an pre-existing ACE sequence in ACL, same way ACLs resource module will error out for respective scenario and only addition of new ACE over new sequence will be allowed with merge state.\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(show access-list) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "ACLs resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n\n# Before state:\n# -------------\n#\n# vios#sh access-lists\n# Extended IP access list 100\n#    10 deny icmp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 echo dscp ef ttl eq 10\n\n- name: Merge provided configuration with device configuration\n  cisco.ios.ios_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: 100\n        aces:\n        - sequence: 10\n          protocol_options:\n            icmp:\n              traceroute: true\n    state: merged\n\n# After state:\n# ------------\n#\n# Play Execution fails, with error:\n# Cannot update existing sequence 10 of ACLs 100 with state merged.\n# Please use state replaced or overridden.\n\n# Before state:\n# -------------\n#\n# vios#sh access-lists\n# Extended IP access list 110\n#    10 deny icmp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 echo dscp ef ttl eq 10\n\n- name: Merge provided configuration with device configuration\n  cisco.ios.ios_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: std_acl\n        acl_type: standard\n        aces:\n        - grant: deny\n          source:\n            address: 192.168.1.200\n        - grant: deny\n          source:\n            address: 192.168.2.0\n            wildcard_bits: 0.0.0.255\n      - name: 110\n        aces:\n        - sequence: 10\n          protocol_options:\n            icmp:\n              traceroute: true\n        - grant: deny\n          protocol_options:\n            tcp:\n              ack: true\n          source:\n            host: 198.51.100.0\n          destination:\n            host: 198.51.110.0\n            port_protocol:\n              eq: telnet\n      - name: test\n        acl_type: extended\n        aces:\n        - grant: deny\n          protocol_options:\n            tcp:\n              fin: true\n          source:\n            address: 192.0.2.0\n            wildcard_bits: 0.0.0.255\n          destination:\n            address: 192.0.3.0\n            wildcard_bits: 0.0.0.255\n            port_protocol:\n              eq: www\n          option:\n            traceroute: true\n          ttl:\n            eq: 10\n      - name: 123\n        aces:\n        - remarks:\n          - \"remarks for extended ACL 1\"\n          - \"check ACL\"\n        - grant: deny\n          protocol_options:\n            tcp:\n              ack: true\n          source:\n            address: 198.51.100.0\n            wildcard_bits: 0.0.0.255\n          destination:\n            address: 198.51.101.0\n            wildcard_bits: 0.0.0.255\n            port_protocol:\n              eq: telnet\n          tos:\n            service_value: 12\n        - grant: deny\n          protocol_options:\n            tcp:\n              ack: true\n          source:\n            address: 192.0.3.0\n            wildcard_bits: 0.0.0.255\n          destination:\n            address: 192.0.4.0\n            wildcard_bits: 0.0.0.255\n            port_protocol:\n              eq: www\n          dscp: ef\n          ttl:\n            lt: 20\n    - afi: ipv6\n      acls:\n      - name: R1_TRAFFIC\n        aces:\n        - grant: deny\n          protocol_options:\n            tcp:\n              ack: true\n          source:\n            any: true\n            port_protocol:\n              eq: www\n          destination:\n            any: true\n            port_protocol:\n              eq: telnet\n          dscp: af11\n    state: merged\n\n# Commands fired:\n# ---------------\n#\n# - ip access-list standard std_acl\n# - deny 192.168.1.200\n# - deny 192.168.2.0 0.0.0.255\n# - ip access-list extended 110\n# - 10 deny icmp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 traceroute dscp ef ttl eq 10\n# - deny tcp host 198.51.100.0 host 198.51.110.0 eq telnet ack\n# - ip access-list extended test\n# - deny tcp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 eq www fin option traceroute ttl eq 10\n# - ip access-list extended 123\n# - deny tcp 198.51.100.0 0.0.0.255 198.51.101.0 0.0.0.255 eq telnet ack tos 12\n# - deny tcp 192.0.3.0 0.0.0.255 192.0.4.0 0.0.0.255 eq www ack dscp ef ttl lt 20\n# - remark remarks for extended ACL 1\n# - remark check ACL\n# - ipv6 access-list R1_TRAFFIC\n# - deny tcp any eq www any eq telnet ack dscp af11\n\n# After state:\n# ------------\n#\n# vios#sh access-lists\n# Standard IP access list std_acl\n#    10 deny   192.168.1.200\n#    20 deny   192.168.2.0, wildcard bits 0.0.0.255\n# Extended IP access list 100\n#    10 deny icmp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 echo dscp ef ttl eq 10\n# Extended IP access list 110\n#    10 deny icmp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 traceroute dscp ef ttl eq 10\n#    20 deny tcp host 198.51.100.0 host 198.51.110.0 eq telnet ack\n# Extended IP access list 123\n#    10 deny tcp 198.51.100.0 0.0.0.255 198.51.101.0 0.0.0.255 eq telnet ack tos 12\n#    20 deny tcp 192.0.3.0 0.0.0.255 192.0.4.0 0.0.0.255 eq www ack dscp ef ttl lt 20\n# Extended IP access list test\n#    10 deny tcp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 eq www fin option traceroute ttl eq 10\n# IPv6 access list R1_TRAFFIC\n#    deny tcp any eq www any eq telnet ack dscp af11 sequence 10\n\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# vios#sh access-lists\n# Standard IP access list std_acl\n#    10 deny   192.168.1.200\n#    20 deny   192.168.2.0, wildcard bits 0.0.0.255\n# Extended IP access list 110\n#    10 deny icmp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 traceroute dscp ef ttl eq 10\n#    20 deny tcp host 198.51.100.0 host 198.51.110.0 eq telnet ack\n# Extended IP access list 123\n#    10 deny tcp 198.51.100.0 0.0.0.255 198.51.101.0 0.0.0.255 eq telnet ack tos 12\n#    20 deny tcp 192.0.3.0 0.0.0.255 192.0.4.0 0.0.0.255 eq www ack dscp ef ttl lt 20\n# Extended IP access list test\n#    10 deny tcp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 eq www fin option traceroute ttl eq 10\n# IPv6 access list R1_TRAFFIC\n#    deny tcp any eq www any eq telnet ack dscp af11 sequence 10\n\n\n- name: Replaces device configuration of listed acls with provided configuration\n  cisco.ios.ios_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: 110\n        aces:\n        - grant: deny\n          protocol_options:\n            tcp:\n              syn: true\n          source:\n            address: 192.0.2.0\n            wildcard_bits: 0.0.0.255\n          destination:\n            address: 192.0.3.0\n            wildcard_bits: 0.0.0.255\n            port_protocol:\n              eq: www\n          dscp: ef\n          ttl:\n            eq: 10\n      - name: 150\n        aces:\n        - grant: deny\n          sequence: 20\n          protocol_options:\n            tcp:\n              syn: true\n          source:\n            address: 198.51.100.0\n            wildcard_bits: 0.0.0.255\n            port_protocol:\n              eq: telnet\n          destination:\n            address: 198.51.110.0\n            wildcard_bits: 0.0.0.255\n            port_protocol:\n              eq: telnet\n          dscp: ef\n          ttl:\n            eq: 10\n    state: replaced\n\n# Commands fired:\n# ---------------\n#\n# - no ip access-list extended 110\n# - ip access-list extended 110\n# - deny tcp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 eq www syn dscp ef ttl eq 10\n# - ip access-list extended 150\n# - 20 deny tcp 198.51.100.0 0.0.0.255 eq telnet 198.51.110.0 0.0.0.255 eq telnet syn dscp ef ttl eq 10\n\n# After state:\n# -------------\n#\n# vios#sh access-lists\n# Standard IP access list std_acl\n#    10 deny   192.168.1.200\n#    20 deny   192.168.2.0, wildcard bits 0.0.0.255\n# Extended IP access list 110\n#    10 deny tcp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 eq www syn dscp ef ttl eq 10\n# Extended IP access list 123\n#    10 deny tcp 198.51.100.0 0.0.0.255 198.51.101.0 0.0.0.255 eq telnet ack tos 12\n#    20 deny tcp 192.0.3.0 0.0.0.255 192.0.4.0 0.0.0.255 eq www ack dscp ef ttl lt 20\n# Extended IP access list 150\n#    20 deny tcp 198.51.100.0 0.0.0.255 eq telnet 198.51.110.0 0.0.0.255 eq telnet syn dscp ef ttl eq 10\n# Extended IP access list test\n#    10 deny tcp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 eq www fin option traceroute ttl eq 10\n# IPv6 access list R1_TRAFFIC\n#    deny tcp any eq www any eq telnet ack dscp af11 sequence 10\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# vios#sh access-lists\n# Standard IP access list std_acl\n#    10 deny   192.168.1.200\n#    20 deny   192.168.2.0, wildcard bits 0.0.0.255\n# Extended IP access list 110\n#    10 deny icmp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 traceroute dscp ef ttl eq 10\n#    20 deny tcp host 198.51.100.0 host 198.51.110.0 eq telnet ack\n# Extended IP access list 123\n#    10 deny tcp 198.51.100.0 0.0.0.255 198.51.101.0 0.0.0.255 eq telnet ack tos 12\n#    20 deny tcp 192.0.3.0 0.0.0.255 192.0.4.0 0.0.0.255 eq www ack dscp ef ttl lt 20\n# Extended IP access list test\n#    10 deny tcp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 eq www fin option traceroute ttl eq 10\n# IPv6 access list R1_TRAFFIC\n#    deny tcp any eq www any eq telnet ack dscp af11 sequence 10\n\n- name: Override device configuration of all acls with provided configuration\n  cisco.ios.ios_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: 110\n        aces:\n        - grant: deny\n          sequence: 20\n          protocol_options:\n            tcp:\n              ack: true\n          source:\n            address: 198.51.100.0\n            wildcard_bits: 0.0.0.255\n            port_protocol:\n              eq: telnet\n          destination:\n            address: 198.51.110.0\n            wildcard_bits: 0.0.0.255\n            port_protocol:\n              eq: www\n          dscp: ef\n          ttl:\n            eq: 10\n      - name: 150\n        aces:\n        - grant: deny\n          sequence: 10\n          protocol_options:\n            tcp:\n              syn: true\n          source:\n            address: 198.51.100.0\n            wildcard_bits: 0.0.0.255\n            port_protocol:\n              eq: telnet\n          destination:\n            address: 198.51.110.0\n            wildcard_bits: 0.0.0.255\n            port_protocol:\n              eq: telnet\n          dscp: ef\n          ttl:\n            eq: 10\n    state: overridden\n\n# Commands fired:\n# ---------------\n#\n# - no ip access-list standard std_acl\n# - no ip access-list extended 110\n# - no ip access-list extended 123\n# - no ip access-list extended 150\n# - no ip access-list extended test\n# - no ipv6 access-list R1_TRAFFIC\n# - ip access-list extended 150\n# - 10 deny tcp 198.51.100.0 0.0.0.255 eq telnet 198.51.110.0 0.0.0.255 eq telnet syn dscp ef ttl eq 10\n# - ip access-list extended 110\n# - 20 deny tcp 198.51.100.0 0.0.0.255 eq telnet 198.51.110.0 0.0.0.255 eq www ack dscp ef ttl eq 10\n\n# After state:\n# -------------\n#\n# vios#sh access-lists\n# Extended IP access list 110\n#    20 deny tcp 198.51.100.0 0.0.0.255 eq telnet 198.51.110.0 0.0.0.255 eq www ack dscp ef ttl eq 10\n# Extended IP access list 150\n#    10 deny tcp 198.51.100.0 0.0.0.255 eq telnet 198.51.110.0 0.0.0.255 eq telnet syn dscp ef ttl eq 10\n\n# Using Deleted\n\n# Before state:\n# -------------\n#\n# vios#sh access-lists\n# Standard IP access list std_acl\n#    10 deny   192.168.1.200\n#    20 deny   192.168.2.0, wildcard bits 0.0.0.255\n# Extended IP access list 110\n#    10 deny icmp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 traceroute dscp ef ttl eq 10\n#    20 deny tcp host 198.51.100.0 host 198.51.110.0 eq telnet ack\n# Extended IP access list 123\n#    10 deny tcp 198.51.100.0 0.0.0.255 198.51.101.0 0.0.0.255 eq telnet ack tos 12\n#    20 deny tcp 192.0.3.0 0.0.0.255 192.0.4.0 0.0.0.255 eq www ack dscp ef ttl lt 20\n# Extended IP access list test\n#    10 deny tcp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 eq www fin option traceroute ttl eq 10\n# IPv6 access list R1_TRAFFIC\n#    deny tcp any eq www any eq telnet ack dscp af11 sequence 10\n\n- name: \"Delete ACLs (Note: This won't delete the all configured ACLs)\"\n  cisco.ios.ios_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: test\n        acl_type: extended\n      - name: 110\n    - afi: ipv6\n      acls:\n      - name: R1_TRAFFIC\n    state: deleted\n\n# Commands fired:\n# ---------------\n#\n# - no ip access-list extended test\n# - no ip access-list extended 110\n# - no ipv6 access-list R1_TRAFFIC\n\n# After state:\n# -------------\n#\n# vios#sh access-lists\n# Standard IP access list std_acl\n#    10 deny   192.168.1.200\n#    20 deny   192.168.2.0, wildcard bits 0.0.0.255\n# Extended IP access list 123\n#    10 deny tcp 198.51.100.0 0.0.0.255 198.51.101.0 0.0.0.255 eq telnet ack tos 12\n#    20 deny tcp 192.0.3.0 0.0.0.255 192.0.4.0 0.0.0.255 eq www ack dscp ef ttl lt 20\n\n# Before state:\n# -------------\n#\n# vios#sh access-lists\n# Standard IP access list std_acl\n#    10 deny   192.168.1.200\n#    20 deny   192.168.2.0, wildcard bits 0.0.0.255\n# Extended IP access list 110\n#    10 deny icmp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 traceroute dscp ef ttl eq 10\n#    20 deny tcp host 198.51.100.0 host 198.51.110.0 eq telnet ack\n# Extended IP access list 123\n#    10 deny tcp 198.51.100.0 0.0.0.255 198.51.101.0 0.0.0.255 eq telnet ack tos 12\n#    20 deny tcp 192.0.3.0 0.0.0.255 192.0.4.0 0.0.0.255 eq www ack dscp ef ttl lt 20\n# Extended IP access list test\n#    10 deny tcp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 eq www fin option traceroute ttl eq 10\n# IPv6 access list R1_TRAFFIC\n#    deny tcp any eq www any eq telnet ack dscp af11 sequence 10\n\n- name: \"Delete ACLs based on AFI (Note: This won't delete the all configured ACLs)\"\n  cisco.ios.ios_acls:\n    config:\n    - afi: ipv4\n    state: deleted\n\n# Commands fired:\n# ---------------\n#\n# - no ip access-list standard std_acl\n# - no ip access-list extended test\n# - no ip access-list extended 110\n# - no ip access-list extended 123\n\n# After state:\n# -------------\n#\n# vios#sh access-lists\n# IPv6 access list R1_TRAFFIC\n#    deny tcp any eq www any eq telnet ack dscp af11 sequence 10\n\n# Using Deleted without any config passed\n#\"(NOTE: This will delete all of configured ACLs)\"\n\n# Before state:\n# -------------\n#\n# vios#sh access-lists\n# Standard IP access list std_acl\n#    10 deny   192.168.1.200\n#    20 deny   192.168.2.0, wildcard bits 0.0.0.255\n# Extended IP access list 110\n#    10 deny icmp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 traceroute dscp ef ttl eq 10\n#    20 deny tcp host 198.51.100.0 host 198.51.110.0 eq telnet ack\n# Extended IP access list 123\n#    10 deny tcp 198.51.100.0 0.0.0.255 198.51.101.0 0.0.0.255 eq telnet ack tos 12\n#    20 deny tcp 192.0.3.0 0.0.0.255 192.0.4.0 0.0.0.255 eq www ack dscp ef ttl lt 20\n# Extended IP access list test\n#    10 deny tcp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 eq www fin option traceroute ttl eq 10\n# IPv6 access list R1_TRAFFIC\n#    deny tcp any eq www any eq telnet ack dscp af11 sequence 10\n\n- name: 'Delete ALL of configured ACLs (Note: This WILL delete the all configured\n    ACLs)'\n  cisco.ios.ios_acls:\n    state: deleted\n\n# Commands fired:\n# ---------------\n#\n# - no ip access-list extended test\n# - no ip access-list extended 110\n# - no ip access-list extended 123\n# - no ip access-list extended test\n# - no ipv6 access-list R1_TRAFFIC\n\n# After state:\n# -------------\n#\n# vios#sh access-lists\n\n# Using Gathered\n\n# Before state:\n# -------------\n#\n# vios#sh access-lists\n# Standard IP access list std_acl\n#    10 deny   192.168.1.200\n#    20 deny   192.168.2.0, wildcard bits 0.0.0.255\n# Extended IP access list 110\n#    10 deny icmp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 traceroute dscp ef ttl eq 10\n#    20 deny tcp host 198.51.100.0 host 198.51.110.0 eq telnet ack\n# Extended IP access list 123\n#    10 deny tcp 198.51.100.0 0.0.0.255 198.51.101.0 0.0.0.255 eq telnet ack tos 12\n#    20 deny tcp 192.0.3.0 0.0.0.255 192.0.4.0 0.0.0.255 eq www ack dscp ef ttl lt 20\n# Extended IP access list test\n#    10 deny tcp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 eq www fin option traceroute ttl eq 10\n# IPv6 access list R1_TRAFFIC\n#    deny tcp any eq www any eq telnet ack dscp af11 sequence 10\n\n- name: Gather listed acls with provided configurations\n  cisco.ios.ios_acls:\n    config:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"gathered\": [\n#         {\n#             \"acls\": [\n#                 {\n#                     \"aces\": [\n#                         {\n#                             \"destination\": {\n#                                 \"address\": \"192.0.3.0\",\n#                                 \"wildcard_bits\": \"0.0.0.255\"\n#                             },\n#                             \"dscp\": \"ef\",\n#                             \"grant\": \"deny\",\n#                             \"protocol_options\": {\n#                                 \"icmp\": {\n#                                     \"echo\": true\n#                                 }\n#                             },\n#                             \"sequence\": 10,\n#                             \"source\": {\n#                                 \"address\": \"192.0.2.0\",\n#                                 \"wildcard_bits\": \"0.0.0.255\"\n#                             },\n#                             \"ttl\": {\n#                                 \"eq\": 10\n#                             }\n#                         }\n#                     ],\n#                     \"acl_type\": \"extended\",\n#                     \"name\": \"110\"\n#                 },\n#                 {\n#                     \"aces\": [\n#                         {\n#                             \"destination\": {\n#                                 \"address\": \"198.51.101.0\",\n#                                 \"port_protocol\": {\n#                                     \"eq\": \"telnet\"\n#                                 },\n#                                 \"wildcard_bits\": \"0.0.0.255\"\n#                             },\n#                             \"grant\": \"deny\",\n#                             \"protocol_options\": {\n#                                 \"tcp\": {\n#                                     \"ack\": true\n#                                 }\n#                             },\n#                             \"sequence\": 10,\n#                             \"source\": {\n#                                 \"address\": \"198.51.100.0\",\n#                                 \"wildcard_bits\": \"0.0.0.255\"\n#                             },\n#                             \"tos\": {\n#                                 \"service_value\": 12\n#                             }\n#                         },\n#                         {\n#                             \"destination\": {\n#                                 \"address\": \"192.0.4.0\",\n#                                 \"port_protocol\": {\n#                                     \"eq\": \"www\"\n#                                 },\n#                                 \"wildcard_bits\": \"0.0.0.255\"\n#                             },\n#                             \"dscp\": \"ef\",\n#                             \"grant\": \"deny\",\n#                             \"protocol_options\": {\n#                                 \"tcp\": {\n#                                     \"ack\": true\n#                                 }\n#                             },\n#                             \"sequence\": 20,\n#                             \"source\": {\n#                                 \"address\": \"192.0.3.0\",\n#                                 \"wildcard_bits\": \"0.0.0.255\"\n#                             },\n#                             \"ttl\": {\n#                                 \"lt\": 20\n#                             }\n#                         }\n#                     ],\n#                     \"acl_type\": \"extended\",\n#                     \"name\": \"123\"\n#                 },\n#                 {\n#                     \"aces\": [\n#                         {\n#                             \"destination\": {\n#                                 \"address\": \"192.0.3.0\",\n#                                 \"port_protocol\": {\n#                                     \"eq\": \"www\"\n#                                 },\n#                                 \"wildcard_bits\": \"0.0.0.255\"\n#                             },\n#                             \"grant\": \"deny\",\n#                             \"option\": {\n#                                 \"traceroute\": true\n#                             },\n#                             \"protocol_options\": {\n#                                 \"tcp\": {\n#                                     \"fin\": true\n#                                 }\n#                             },\n#                             \"sequence\": 10,\n#                             \"source\": {\n#                                 \"address\": \"192.0.2.0\",\n#                                 \"wildcard_bits\": \"0.0.0.255\"\n#                             },\n#                             \"ttl\": {\n#                                 \"eq\": 10\n#                             }\n#                         }\n#                     ],\n#                     \"acl_type\": \"extended\",\n#                     \"name\": \"test_acl\"\n#                 }\n#             ],\n#             \"afi\": \"ipv4\"\n#         },\n#         {\n#             \"acls\": [\n#                 {\n#                     \"aces\": [\n#                         {\n#                             \"destination\": {\n#                                 \"any\": true,\n#                                 \"port_protocol\": {\n#                                     \"eq\": \"telnet\"\n#                                 }\n#                             },\n#                             \"dscp\": \"af11\",\n#                             \"grant\": \"deny\",\n#                             \"protocol_options\": {\n#                                 \"tcp\": {\n#                                     \"ack\": true\n#                                 }\n#                             },\n#                             \"sequence\": 10,\n#                             \"source\": {\n#                                 \"any\": true,\n#                                 \"port_protocol\": {\n#                                     \"eq\": \"www\"\n#                                 }\n#                             }\n#                         }\n#                     ],\n#                     \"name\": \"R1_TRAFFIC\"\n#                 }\n#             ],\n#             \"afi\": \"ipv6\"\n#         }\n#     ]\n\n# Using Rendered\n\n- name: Rendered the provided configuration with the existing running configuration\n  cisco.ios.ios_acls:\n    config:\n    - afi: ipv4\n      acls:\n      - name: 110\n        aces:\n        - grant: deny\n          sequence: 10\n          protocol_options:\n            tcp:\n              syn: true\n          source:\n            address: 192.0.2.0\n            wildcard_bits: 0.0.0.255\n          destination:\n            address: 192.0.3.0\n            wildcard_bits: 0.0.0.255\n            port_protocol:\n              eq: www\n          dscp: ef\n          ttl:\n            eq: 10\n      - name: 150\n        aces:\n        - grant: deny\n          protocol_options:\n            tcp:\n              syn: true\n          source:\n            address: 198.51.100.0\n            wildcard_bits: 0.0.0.255\n            port_protocol:\n              eq: telnet\n          destination:\n            address: 198.51.110.0\n            wildcard_bits: 0.0.0.255\n            port_protocol:\n              eq: telnet\n          dscp: ef\n          ttl:\n            eq: 10\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"rendered\": [\n#         \"ip access-list extended 110\",\n#         \"10 deny tcp 192.0.2.0 0.0.0.255 192.0.3.0 0.0.0.255 eq www syn dscp ef ttl eq 10\",\n#         \"ip access-list extended 150\",\n#         \"deny tcp 198.51.100.0 0.0.0.255 eq telnet 198.51.110.0 0.0.0.255 eq telnet syn dscp ef ttl eq 10\"\n#     ]\n\n# Using Parsed\n\n# File: parsed.cfg\n# ----------------\n#\n# IPv6 access-list R1_TRAFFIC\n# deny tcp any eq www any eq telnet ack dscp af11\n\n- name: Parse the commands for provided configuration\n  cisco.ios.ios_acls:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n#\n# \"parsed\": [\n#         {\n#             \"acls\": [\n#                 {\n#                     \"aces\": [\n#                         {\n#                             \"destination\": {\n#                                 \"any\": true,\n#                                 \"port_protocol\": {\n#                                     \"eq\": \"telnet\"\n#                                 }\n#                             },\n#                             \"dscp\": \"af11\",\n#                             \"grant\": \"deny\",\n#                             \"protocol_options\": {\n#                                 \"tcp\": {\n#                                     \"ack\": true\n#                                 }\n#                             },\n#                             \"source\": {\n#                                 \"any\": true,\n#                                 \"port_protocol\": {\n#                                     \"eq\": \"www\"\n#                                 }\n#                             }\n#                         }\n#                     ],\n#                     \"name\": \"R1_TRAFFIC\"\n#                 }\n#             ],\n#             \"afi\": \"ipv6\"\n#         }\n#     ]\n"
  },
  "cisco.ios.ios_banner": {
    "doc": {
      "description": "This will configure both login and motd banners on remote devices running Cisco IOS.  It allows playbooks to add or remote banner text from the active running configuration.",
      "has_action": true,
      "notes": "Tested against IOS 15.6\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "banner": {
          "aliases": [],
          "description": "Specifies which banner should be configured on the remote device. In Ansible 2.4 and earlier only I(login) and I(motd) were supported.",
          "type": "str",
          "required": true,
          "choices": [
            "login",
            "motd",
            "exec",
            "incoming",
            "slip-ppp"
          ],
          "suboptions": {}
        },
        "multiline_delimiter": {
          "aliases": [],
          "description": "Specify the delimiting character than will be used for configuration.",
          "default": "@",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Specifies whether or not the configuration is present in the current devices active running configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "text": {
          "aliases": [],
          "description": "The banner text that should be present in the remote device running configuration.  This argument accepts a multiline string, with no empty lines. Requires I(state=present).",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage multiline banners on Cisco IOS devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Configure the login banner\n  cisco.ios.ios_banner:\n    banner: login\n    text: |\n      this is my login banner\n      that contains a multiline\n      string\n    state: present\n\n- name: Remove the motd banner\n  cisco.ios.ios_banner:\n    banner: motd\n    state: absent\n\n- name: Configure banner from file\n  cisco.ios.ios_banner:\n    banner: motd\n    text: \"{{ lookup('file', './config_partial/raw_banner.cfg') }}\"\n    state: present\n\n- name: Configure the login banner using delimiter\n  cisco.ios.ios_banner:\n    banner: login\n    multiline_delimiter: x\n    text: this is my login banner\n    state: present\n"
  },
  "cisco.ios.ios_bgp": {
    "doc": {
      "description": "This module provides configuration management of global BGP parameters on devices running Cisco IOS",
      "has_action": true,
      "notes": "Tested against Cisco IOS Version 15.6(3)M2",
      "options": {
        "config": {
          "aliases": [],
          "description": "Specifies the BGP related configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "address_family": {
              "aliases": [],
              "description": "Specifies BGP address family related configurations.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "afi": {
                  "aliases": [],
                  "description": "Type of address family to configure.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "ipv4",
                    "ipv6"
                  ],
                  "suboptions": {}
                },
                "auto_summary": {
                  "aliases": [],
                  "description": "Enable/disable automatic network number summarization.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "neighbors": {
                  "aliases": [],
                  "description": "Specifies BGP neighbor related configurations in Address Family configuration mode.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "activate": {
                      "aliases": [],
                      "description": "Enable the Address Family for this Neighbor.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "advertisement_interval": {
                      "aliases": [],
                      "description": "Minimum interval between sending BGP routing updates for this neighbor.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "maximum_prefix": {
                      "aliases": [],
                      "description": "Maximum number of prefixes to accept from this peer.\nThe range is from 1 to 2147483647.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "neighbor": {
                      "aliases": [],
                      "description": "Neighbor router address.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "next_hop_self": {
                      "aliases": [],
                      "description": "Enable/disable the next hop calculation for this neighbor.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "next_hop_unchanged": {
                      "aliases": [],
                      "description": "Propagate next hop unchanged for iBGP paths to this neighbor.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix_list_in": {
                      "aliases": [],
                      "description": "Name of ip prefix-list to apply to incoming prefixes.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix_list_out": {
                      "aliases": [],
                      "description": "Name of ip prefix-list to apply to outgoing prefixes.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "remove_private_as": {
                      "aliases": [],
                      "description": "Remove the private AS number from outbound updates.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_reflector_client": {
                      "aliases": [],
                      "description": "Specify a neighbor as a route reflector client.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_server_client": {
                      "aliases": [],
                      "description": "Specify a neighbor as a route server client.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "networks": {
                  "aliases": [],
                  "description": "Specify Networks to announce via BGP.\nFor operation replace, this option is mutually exclusive with root level networks option.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "masklen": {
                      "aliases": [],
                      "description": "Subnet mask length for the Network to announce(e.g, 8, 16, 24, etc.).",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix": {
                      "aliases": [],
                      "description": "Network ID to announce via BGP.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map to modify the attributes.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "redistribute": {
                  "aliases": [],
                  "description": "Specifies the redistribute information from another routing protocol.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "id": {
                      "aliases": [],
                      "description": "Identifier for the routing protocol for configuring redistribute information.\nValid for protocols 'ospf', 'ospfv3' and 'eigrp'.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric": {
                      "aliases": [],
                      "description": "Specifies the metric for redistributed routes.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "protocol": {
                      "aliases": [],
                      "description": "Specifies the protocol for configuring redistribute information.",
                      "type": "str",
                      "required": true,
                      "choices": [
                        "ospf",
                        "ospfv3",
                        "eigrp",
                        "isis",
                        "static",
                        "connected",
                        "odr",
                        "lisp",
                        "mobile",
                        "rip"
                      ],
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Specifies the route map reference.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "safi": {
                  "aliases": [],
                  "description": "Specifies the type of cast for the address family.",
                  "default": "unicast",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "flowspec",
                    "unicast",
                    "multicast",
                    "labeled-unicast"
                  ],
                  "suboptions": {}
                },
                "synchronization": {
                  "aliases": [],
                  "description": "Enable/disable IGP synchronization.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "bgp_as": {
              "aliases": [],
              "description": "Specifies the BGP Autonomous System (AS) number to configure on the device.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "log_neighbor_changes": {
              "aliases": [],
              "description": "Enable/disable logging neighbor up/down and reset reason.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "neighbors": {
              "aliases": [],
              "description": "Specifies BGP neighbor related configurations.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "description": {
                  "aliases": [],
                  "description": "Neighbor specific description.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "ebgp_multihop": {
                  "aliases": [],
                  "description": "Specifies the maximum hop count for EBGP neighbors not on directly connected networks.\nThe range is from 1 to 255.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "enabled": {
                  "aliases": [],
                  "description": "Administratively shutdown or enable a neighbor.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "local_as": {
                  "aliases": [],
                  "description": "The local AS number for the neighbor.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "neighbor": {
                  "aliases": [],
                  "description": "Neighbor router address.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "password": {
                  "aliases": [],
                  "description": "Password to authenticate the BGP peer connection.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "peer_group": {
                  "aliases": [],
                  "description": "Name of the peer group that the neighbor is a member of.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "remote_as": {
                  "aliases": [],
                  "description": "Remote AS of the BGP neighbor to configure.",
                  "type": "int",
                  "required": true,
                  "suboptions": {}
                },
                "timers": {
                  "aliases": [],
                  "description": "Specifies BGP neighbor timer related configurations.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "holdtime": {
                      "aliases": [],
                      "description": "Interval (in seconds) after not receiving a keepalive message that IOS declares a peer dead.\nThe range is from 0 to 65535.",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    },
                    "keepalive": {
                      "aliases": [],
                      "description": "Frequency (in seconds) with which the device sends keepalive messages to its peer.\nThe range is from 0 to 65535.",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    },
                    "min_neighbor_holdtime": {
                      "aliases": [],
                      "description": "Interval (in seconds) specifying the minimum acceptable hold-time from a BGP neighbor.\nThe minimum acceptable hold-time must be less than, or equal to, the interval specified in the holdtime argument.\nThe range is from 0 to 65535.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "update_source": {
                  "aliases": [],
                  "description": "Source of the routing updates.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "networks": {
              "aliases": [],
              "description": "Specify Networks to announce via BGP.\nFor operation replace, this option is mutually exclusive with networks option under address_family.\nFor operation replace, if the device already has an address family activated, this option is not allowed.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "masklen": {
                  "aliases": [],
                  "description": "Subnet mask length for the Network to announce(e.g, 8, 16, 24, etc.).",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "prefix": {
                  "aliases": [],
                  "description": "Network ID to announce via BGP.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "route_map": {
                  "aliases": [],
                  "description": "Route map to modify the attributes.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "router_id": {
              "aliases": [],
              "description": "Configures the BGP routing process router-id value.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "operation": {
          "aliases": [],
          "description": "Specifies the operation to be performed on the BGP process configured on the device.\nIn case of merge, the input configuration will be merged with the existing BGP configuration on the device.\nIn case of replace, if there is a diff between the existing configuration and the input configuration, the existing configuration will be replaced by the input configuration for every option that has the diff.\nIn case of override, all the existing BGP configuration will be removed from the device and replaced with the input configuration.\nIn case of delete the existing BGP configuration will be removed from the device.",
          "default": "merge",
          "type": "str",
          "required": false,
          "choices": [
            "merge",
            "replace",
            "override",
            "delete"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Configure global BGP protocol settings on Cisco IOS.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure global bgp as 64496\n  cisco.ios.ios_bgp:\n    config:\n      bgp_as: 64496\n      router_id: 192.0.2.1\n      log_neighbor_changes: true\n      neighbors:\n      - neighbor: 203.0.113.5\n        remote_as: 64511\n        timers:\n          keepalive: 300\n          holdtime: 360\n          min_neighbor_holdtime: 360\n      - neighbor: 198.51.100.2\n        remote_as: 64498\n      networks:\n      - prefix: 198.51.100.0\n        route_map: RMAP_1\n      - prefix: 192.0.2.0\n        masklen: 23\n      address_family:\n      - afi: ipv4\n        safi: unicast\n        redistribute:\n        - protocol: ospf\n          id: 223\n          metric: 10\n    operation: merge\n\n- name: Configure BGP neighbors\n  cisco.ios.ios_bgp:\n    config:\n      bgp_as: 64496\n      neighbors:\n      - neighbor: 192.0.2.10\n        remote_as: 64496\n        password: ansible\n        description: IBGP_NBR_1\n        ebgp_multihop: 100\n        timers:\n          keepalive: 300\n          holdtime: 360\n          min_neighbor_holdtime: 360\n      - neighbor: 192.0.2.15\n        remote_as: 64496\n        description: IBGP_NBR_2\n        ebgp_multihop: 150\n    operation: merge\n\n- name: Configure root-level networks for BGP\n  cisco.ios.ios_bgp:\n    config:\n      bgp_as: 64496\n      networks:\n      - prefix: 203.0.113.0\n        masklen: 27\n        route_map: RMAP_1\n      - prefix: 203.0.113.32\n        masklen: 27\n        route_map: RMAP_2\n    operation: merge\n\n- name: Configure BGP neighbors under address family mode\n  cisco.ios.ios_bgp:\n    config:\n      bgp_as: 64496\n      address_family:\n      - afi: ipv4\n        safi: unicast\n        neighbors:\n        - neighbor: 203.0.113.10\n          activate: yes\n          maximum_prefix: 250\n          advertisement_interval: 120\n        - neighbor: 192.0.2.15\n          activate: yes\n          route_reflector_client: true\n    operation: merge\n\n- name: remove bgp as 64496 from config\n  cisco.ios.ios_bgp:\n    config:\n      bgp_as: 64496\n    operation: delete\n"
  },
  "cisco.ios.ios_bgp_address_family": {
    "doc": {
      "description": "This module configures and manages the attributes of bgp address family on Cisco IOS.",
      "has_action": false,
      "notes": "Tested against Cisco IOSv Version 15.2 on VIRL\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of configurations for bgp address family.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "address_family": {
              "aliases": [],
              "description": "A list of configurations for bgp address family.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "afi": {
                  "aliases": [],
                  "description": "Address Family",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "ipv4",
                    "ipv6",
                    "l2vpn",
                    "nsap",
                    "rtfilter",
                    "vpnv4",
                    "vpnv6"
                  ],
                  "suboptions": {}
                },
                "aggregate_address": {
                  "aliases": [],
                  "description": "Configure BGP aggregate entries",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "address": {
                      "aliases": [],
                      "description": "Aggregate address(A.B.C.D)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "advertise_map": {
                      "aliases": [],
                      "description": "Set condition to advertise attribute",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "as_confed_set": {
                      "aliases": [],
                      "description": "Generate AS confed set path information",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "as_set": {
                      "aliases": [],
                      "description": "Generate AS set path information",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "attribute_map": {
                      "aliases": [],
                      "description": "Set attributes of aggregate",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "netmask": {
                      "aliases": [],
                      "description": "Aggregate mask(A.B.C.D)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "summary_only": {
                      "aliases": [],
                      "description": "Filter more specific routes from updates",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "suppress_map": {
                      "aliases": [],
                      "description": "Conditionally filter more specific routes from updates",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "auto_summary": {
                  "aliases": [],
                  "description": "Enable automatic network number summarization",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "bgp": {
                  "aliases": [],
                  "description": "Configure BGP aggregate entries",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "additional_paths": {
                      "aliases": [],
                      "description": "Additional paths in the BGP table",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "receive": {
                          "aliases": [],
                          "description": "Receive additional paths from neighbors",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "select": {
                          "aliases": [],
                          "description": "Selection criteria to pick the paths",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "all": {
                              "aliases": [],
                              "description": "Select all available paths",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "best": {
                              "aliases": [],
                              "description": "Select best N paths (2-3).",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "group_best": {
                              "aliases": [],
                              "description": "Select group-best path",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "send": {
                          "aliases": [],
                          "description": "Send additional paths to neighbors",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "aggregate_timer": {
                      "aliases": [],
                      "description": "Configure Aggregation Timer\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "dampening": {
                      "aliases": [],
                      "description": "Enable route-flap dampening",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "max_suppress": {
                          "aliases": [],
                          "description": "Maximum duration to suppress a stable route\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "penalty_half_time": {
                          "aliases": [],
                          "description": "Half-life time for the penalty\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "reuse_route_val": {
                          "aliases": [],
                          "description": "Value to start reusing a route\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Route-map to specify criteria for dampening",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "suppress_route_val": {
                          "aliases": [],
                          "description": "Value to start suppressing a route\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "dmzlink_bw": {
                      "aliases": [],
                      "description": "Use DMZ Link Bandwidth as weight for BGP multipaths",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "nexthop": {
                      "aliases": [],
                      "description": "Nexthop tracking commands",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "route_map": {
                          "aliases": [],
                          "description": "Route map for valid nexthops",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "trigger": {
                          "aliases": [],
                          "description": "Nexthop triggering",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "delay": {
                              "aliases": [],
                              "description": "Set the delay to tigger nexthop tracking\nPlease refer vendor documentation for valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "enable": {
                              "aliases": [],
                              "description": "Enable nexthop tracking",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "redistribute_internal": {
                      "aliases": [],
                      "description": "Allow redistribution of iBGP into IGPs (dangerous)",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "route-map control commands\nHave route-map set commands take priority over BGP commands such as next-hop unchanged",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "scan_time": {
                      "aliases": [],
                      "description": "Configure background scanner interval\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "slow_peer": {
                      "aliases": [],
                      "description": "Nexthop triggering",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "detection": {
                          "aliases": [],
                          "description": "Slow-peer detection",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "enable": {
                              "aliases": [],
                              "description": "Enable slow-peer detection",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "threshold": {
                              "aliases": [],
                              "description": "Set the slow-peer detection threshold\nThreshold value (seconds)\nPlease refer vendor documentation for valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "split_update_group": {
                          "aliases": [],
                          "description": "Configure slow-peer split-update-group",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "dynamic": {
                              "aliases": [],
                              "description": "Dynamically split the slow peer to slow-update group",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "permanent": {
                              "aliases": [],
                              "description": "Keep the slow-peer permanently in slow-update group",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "soft_reconfig_backup": {
                      "aliases": [],
                      "description": "Use soft-reconfiguration inbound only when route-refresh is not negotiated",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "update_group": {
                      "aliases": [],
                      "description": "Manage peers in bgp update groups\nSplit update groups based on Policy\nKeep peers with as-override in different update groups",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "default": {
                  "aliases": [],
                  "description": "Set a command to its defaults",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "default_information": {
                  "aliases": [],
                  "description": "Distribution of default information\nDistribute default route",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "default_metric": {
                  "aliases": [],
                  "description": "Set metric of redistributed routes",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "distance": {
                  "aliases": [],
                  "description": "Define an administrative distance",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "external": {
                      "aliases": [],
                      "description": "Distance for routes external to the AS",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "internal": {
                      "aliases": [],
                      "description": "Distance for routes internal to the AS",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "local": {
                      "aliases": [],
                      "description": "Distance for local routes",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "neighbor": {
                  "aliases": [],
                  "description": "Specify a neighbor router",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "activate": {
                      "aliases": [],
                      "description": "Enable the Address Family for this Neighbor",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "additional_paths": {
                      "aliases": [],
                      "description": "Negotiate additional paths capabilities with this neighbor",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Disable additional paths for this neighbor",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "receive": {
                          "aliases": [],
                          "description": "Receive additional paths from neighbors",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "send": {
                          "aliases": [],
                          "description": "Send additional paths to this neighbor",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "address": {
                      "aliases": [],
                      "description": "Neighbor address (A.B.C.D)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "advertise": {
                      "aliases": [],
                      "description": "Advertise to this neighbor\nAdvertise additional paths",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "all": {
                          "aliases": [],
                          "description": "Select all available paths",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "best": {
                          "aliases": [],
                          "description": "Select best N paths (2-3).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "group_best": {
                          "aliases": [],
                          "description": "Select group-best path",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "advertise_map": {
                      "aliases": [],
                      "description": "specify route-map for conditional advertisement",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "exist_map": {
                          "aliases": [],
                          "description": "advertise prefix only if prefix is in the condition exists\ncondition route-map name",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "advertise route-map name",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "non_exist_map": {
                          "aliases": [],
                          "description": "advertise prefix only if prefix in the condition does not exist\ncondition route-map name",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "advertisement_interval": {
                      "aliases": [],
                      "description": "Minimum interval between sending BGP routing updates",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "aigp": {
                      "aliases": [],
                      "description": "Enable a AIGP on neighbor",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "enable": {
                          "aliases": [],
                          "description": "Enable a AIGP on neighbor",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "send": {
                          "aliases": [],
                          "description": "Cost community or MED carrying AIGP VALUE",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "cost_community": {
                              "aliases": [],
                              "description": "Cost extended community carrying AIGP Value",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "id": {
                                  "aliases": [],
                                  "description": "Community ID\nPlease refer vendor documentation for valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "poi": {
                                  "aliases": [],
                                  "description": "Point of Insertion",
                                  "type": "dict",
                                  "required": false,
                                  "suboptions": {
                                    "igp_cost": {
                                      "aliases": [],
                                      "description": "Point of Insertion After IGP",
                                      "type": "bool",
                                      "required": false,
                                      "suboptions": {}
                                    },
                                    "pre_bestpath": {
                                      "aliases": [],
                                      "description": "Point of Insertion At Beginning",
                                      "type": "bool",
                                      "required": false,
                                      "suboptions": {}
                                    },
                                    "transitive": {
                                      "aliases": [],
                                      "description": "Cost community is Transitive",
                                      "type": "bool",
                                      "required": false,
                                      "suboptions": {}
                                    }
                                  }
                                }
                              }
                            },
                            "med": {
                              "aliases": [],
                              "description": "Med carrying AIGP Value",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "allow_policy": {
                      "aliases": [],
                      "description": "Enable the policy support for this IBGP Neighbor",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "allowas_in": {
                      "aliases": [],
                      "description": "Accept as-path with my AS present in it\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "as_override": {
                      "aliases": [],
                      "description": "Override matching AS-number while sending update",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "set": {
                          "aliases": [],
                          "description": "Enable AS override",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "split_horizon": {
                          "aliases": [],
                          "description": "Maintain Split Horizon while sending update",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "bmp_activate": {
                      "aliases": [],
                      "description": "Activate the BMP monitoring for a BGP peer",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "all": {
                          "aliases": [],
                          "description": "Activate BMP monitoring for all servers",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "server": {
                          "aliases": [],
                          "description": "Activate BMP for server\nBMP Server Number\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "capability": {
                      "aliases": [],
                      "description": "Advertise capability to the peer\nAdvertise ORF capability to the peer\nAdvertise prefixlist ORF capability to this neighbor",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "both": {
                          "aliases": [],
                          "description": "Capability to SEND and RECEIVE the ORF to/from this neighbor",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "receive": {
                          "aliases": [],
                          "description": "Capability to RECEIVE the ORF from this neighbor",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "send": {
                          "aliases": [],
                          "description": "Capability to SEND the ORF to this neighbor",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "cluster_id": {
                      "aliases": [],
                      "description": "Configure Route-Reflector Cluster-id (peers may reset)\nRoute-Reflector Cluster-id as 32 bit quantity, or Route-Reflector Cluster-id in IP address format (A.B.C.D)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "default_originate": {
                      "aliases": [],
                      "description": "Originate default route to this neighbor",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "route_map": {
                          "aliases": [],
                          "description": "Route-map to specify criteria to originate default",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set default route to this neighbor",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "description": {
                      "aliases": [],
                      "description": "Neighbor specific description",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "disable_connected_check": {
                      "aliases": [],
                      "description": "one-hop away EBGP peer using loopback address",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "distribute_list": {
                      "aliases": [],
                      "description": "Filter updates to/from this neighbor",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "acl": {
                          "aliases": [],
                          "description": "ACL id/name",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "in": {
                          "aliases": [],
                          "description": "Filter incoming updates",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "out": {
                          "aliases": [],
                          "description": "Filter outgoing updates",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "dmzlink_bw": {
                      "aliases": [],
                      "description": "Propagate the DMZ link bandwidth",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "ebgp_multihop": {
                      "aliases": [],
                      "description": "Allow EBGP neighbors not on directly connected networks",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "enable": {
                          "aliases": [],
                          "description": "Allow EBGP neighbors not on directly connected networks",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "hop_count": {
                          "aliases": [],
                          "description": "Maximum hop count\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "fall_over": {
                      "aliases": [],
                      "description": "Session fall on peer route lost",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "bfd": {
                          "aliases": [],
                          "description": "Use BFD to detect failure",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "multi_hop": {
                              "aliases": [],
                              "description": "Force BFD multi-hop to detect failure",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "set bfd",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "single_hop": {
                              "aliases": [],
                              "description": "Force BFD single-hop to detect failure",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Route map for peer route",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "filter_list": {
                      "aliases": [],
                      "description": "Establish BGP filters",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "as_path_acl": {
                          "aliases": [],
                          "description": "AS path access list\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "in": {
                          "aliases": [],
                          "description": "Filter incoming updates",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "out": {
                          "aliases": [],
                          "description": "Filter outgoing updates",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ha_mode": {
                      "aliases": [],
                      "description": "high availability mode",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "disable graceful-restart",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set ha-mode and graceful-restart for this peer",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "inherit": {
                      "aliases": [],
                      "description": "Inherit a template\nInherit a peer-policy template",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "internal_vpn_client": {
                      "aliases": [],
                      "description": "Stack iBGP-CE Neighbor Path in ATTR_SET for vpn update",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "ipv6_adddress": {
                      "aliases": [],
                      "description": "Neighbor ipv6 address (X:X:X:X::X)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "local_as": {
                      "aliases": [],
                      "description": "Specify a local-as number",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "dual_as": {
                          "aliases": [],
                          "description": "Accept either real AS or local AS from the ebgp peer",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "no_prepend": {
                          "aliases": [],
                          "description": "Do not prepend local-as to updates from ebgp peers",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "replace_as": {
                              "aliases": [],
                              "description": "Replace real AS with local AS in the EBGP updates",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set prepend",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "number": {
                          "aliases": [],
                          "description": "AS number used as local AS\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set local-as number",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "log_neighbor_changes": {
                      "aliases": [],
                      "description": "Log neighbor up/down and reset reason",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "disable Log neighbor up/down and reset",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set Log neighbor up/down and reset",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "maximum_prefix": {
                      "aliases": [],
                      "description": "Establish BGP filters",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "number": {
                          "aliases": [],
                          "description": "maximum no. of prefix limit\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "restart": {
                          "aliases": [],
                          "description": "Restart bgp connection after limit is exceeded",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "threshold_value": {
                          "aliases": [],
                          "description": "Threshold value (%) at which to generate a warning msg\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "warning_only": {
                          "aliases": [],
                          "description": "Only give warning message when limit is exceeded",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "next_hop_self": {
                      "aliases": [],
                      "description": "Disable the next hop calculation for this neighbor\nThis option is DEPRECATED and is replaced with nexthop_self which accepts dict as input this attribute will be removed after 2023-06-01.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "next_hop_unchanged": {
                      "aliases": [],
                      "description": "Propagate next hop unchanged for iBGP paths to this neighbor",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "nexthop_self": {
                      "aliases": [],
                      "description": "Disable the next hop calculation for this neighbor",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "all": {
                          "aliases": [],
                          "description": "Enable next-hop-self for both eBGP and iBGP received paths",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set the next hop self",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "password": {
                      "aliases": [],
                      "description": "Set a password",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "path_attribute": {
                      "aliases": [],
                      "description": "BGP optional attribute filtering",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "discard": {
                          "aliases": [],
                          "description": "Discard matching path-attribute for this neighbor",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "in": {
                              "aliases": [],
                              "description": "Perform inbound path-attribute filtering",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "range": {
                              "aliases": [],
                              "description": "path attribute range",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "end": {
                                  "aliases": [],
                                  "description": "path attribute range end value\nPlease refer vendor documentation for valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "start": {
                                  "aliases": [],
                                  "description": "path attribute range start value\nPlease refer vendor documentation for valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "type": {
                              "aliases": [],
                              "description": "path attribute type\nPlease refer vendor documentation for valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "treat_as_withdraw": {
                          "aliases": [],
                          "description": "Treat-as-withdraw matching path-attribute for this neighbor",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "in": {
                              "aliases": [],
                              "description": "Perform inbound path-attribute filtering",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "range": {
                              "aliases": [],
                              "description": "path attribute range",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "end": {
                                  "aliases": [],
                                  "description": "path attribute range end value\nPlease refer vendor documentation for valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "start": {
                                  "aliases": [],
                                  "description": "path attribute range start value\nPlease refer vendor documentation for valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "type": {
                              "aliases": [],
                              "description": "path attribute type\nPlease refer vendor documentation for valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "peer_group": {
                      "aliases": [],
                      "description": "Member of the peer-group",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix_list": {
                      "aliases": [],
                      "description": "Filter updates to/from this neighbor\nThis option is DEPRECATED and is replaced with prefix_lists which accepts list of dict as input",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "in": {
                          "aliases": [],
                          "description": "Filter incoming updates",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "Name of a prefix list",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "out": {
                          "aliases": [],
                          "description": "Filter outgoing updates",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "prefix_lists": {
                      "aliases": [],
                      "description": "Filter updates to/from this neighbor",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "in": {
                          "aliases": [],
                          "description": "Filter incoming updates",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "Name of a prefix list",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "out": {
                          "aliases": [],
                          "description": "Filter outgoing updates",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "remote_as": {
                      "aliases": [],
                      "description": "Specify a BGP neighbor\nAS of remote neighbor",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "remove_private_as": {
                      "aliases": [],
                      "description": "Remove private AS number from outbound updates",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "all": {
                          "aliases": [],
                          "description": "Remove all private AS numbers",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "replace_as": {
                          "aliases": [],
                          "description": "Replace all private AS numbers with local AS",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Remove private AS number from outbound updates",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Apply route map to neighbor\nThis option is DEPRECATED and is replaced with route_maps which accepts list of dict as input",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "in": {
                          "aliases": [],
                          "description": "Apply map to incoming routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "Name of route map",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "out": {
                          "aliases": [],
                          "description": "Apply map to outbound routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "route_maps": {
                      "aliases": [],
                      "description": "Apply route map to neighbor",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "in": {
                          "aliases": [],
                          "description": "Apply map to incoming routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "Name of route map",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "out": {
                          "aliases": [],
                          "description": "Apply map to outbound routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "route_reflector_client": {
                      "aliases": [],
                      "description": "Configure a neighbor as Route Reflector client",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_server_client": {
                      "aliases": [],
                      "description": "Configure a neighbor as Route Server client",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "send_community": {
                      "aliases": [],
                      "description": "Send Community attribute to this neighbor",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "both": {
                          "aliases": [],
                          "description": "Send Standard and Extended Community attributes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "extended": {
                          "aliases": [],
                          "description": "Send Extended Community attribute",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "standard": {
                          "aliases": [],
                          "description": "Send Standard Community attribute",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "shutdown": {
                      "aliases": [],
                      "description": "Administratively shut down this neighbor",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "graceful": {
                          "aliases": [],
                          "description": "Gracefully shut down this neighbor\ntime in seconds\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "shut down",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "slow_peer": {
                      "aliases": [],
                      "description": "Configure slow-peer",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "detection": {
                          "aliases": [],
                          "description": "Configure slow-peer",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "Disable slow-peer detection",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "enable": {
                              "aliases": [],
                              "description": "Enable slow-peer detection",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "threshold": {
                              "aliases": [],
                              "description": "Set the slow-peer detection threshold",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "split_update_group": {
                          "aliases": [],
                          "description": "Configure slow-peer",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "dynamic": {
                              "aliases": [],
                              "description": "Configure slow-peer",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "disable": {
                                  "aliases": [],
                                  "description": "Configure slow-peer",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "enable": {
                                  "aliases": [],
                                  "description": "Configure slow-peer",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "permanent": {
                                  "aliases": [],
                                  "description": "Configure slow-peer",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "static": {
                              "aliases": [],
                              "description": "Configure slow-peer",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "soft_reconfiguration": {
                      "aliases": [],
                      "description": "Per neighbor soft reconfiguration\nAllow inbound soft reconfiguration for this neighbor",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "soo": {
                      "aliases": [],
                      "description": "Site-of-Origin extended community",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "tag": {
                      "aliases": [],
                      "description": "Neighbor tag",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "timers": {
                      "aliases": [],
                      "description": "BGP per neighbor timers",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "holdtime": {
                          "aliases": [],
                          "description": "Holdtime",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "interval": {
                          "aliases": [],
                          "description": "Keepalive interval",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "min_holdtime": {
                          "aliases": [],
                          "description": "Minimum hold time from neighbor",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "transport": {
                      "aliases": [],
                      "description": "Transport options",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "connection_mode": {
                          "aliases": [],
                          "description": "Specify passive or active connection",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "active": {
                              "aliases": [],
                              "description": "Actively establish the TCP session",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "passive": {
                              "aliases": [],
                              "description": "Passively establish the TCP session",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "multi_session": {
                          "aliases": [],
                          "description": "Use Multi-session for transport",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "path_mtu_discovery": {
                          "aliases": [],
                          "description": "Use transport path MTU discovery",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "disable",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Use path MTU discovery",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "ttl_security": {
                      "aliases": [],
                      "description": "BGP ttl security check\nmaximum number of hops\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "unsuppress_map": {
                      "aliases": [],
                      "description": "Route-map to selectively unsuppress suppressed routes",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "version": {
                      "aliases": [],
                      "description": "Set the BGP version to match a neighbor\nNeighbor's BGP version\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "weight": {
                      "aliases": [],
                      "description": "Set default weight for routes from this neighbor",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "network": {
                  "aliases": [],
                  "description": "Specify a network to announce via BGP",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "address": {
                      "aliases": [],
                      "description": "Network number (A.B.C.D)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "backdoor": {
                      "aliases": [],
                      "description": "Specify a BGP backdoor route",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "mask": {
                      "aliases": [],
                      "description": "Network mask (A.B.C.D)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route-map to modify the attributes",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "redistribute": {
                  "aliases": [],
                  "description": "Redistribute information from another routing protocol",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "application": {
                      "aliases": [],
                      "description": "Application",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "metric": {
                          "aliases": [],
                          "description": "Metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "Application name",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Route map reference",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "bgp": {
                      "aliases": [],
                      "description": "Border Gateway Protocol (BGP)",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "as_number": {
                          "aliases": [],
                          "description": "Autonomous system number",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric": {
                          "aliases": [],
                          "description": "Metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Route map reference",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "connected": {
                      "aliases": [],
                      "description": "Connected",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "metric": {
                          "aliases": [],
                          "description": "Metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Route map reference",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "eigrp": {
                      "aliases": [],
                      "description": "Enhanced Interior Gateway Routing Protocol (EIGRP)",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "as_number": {
                          "aliases": [],
                          "description": "Autonomous system number",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric": {
                          "aliases": [],
                          "description": "Metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Route map reference",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "isis": {
                      "aliases": [],
                      "description": "ISO IS-IS",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "area_tag": {
                          "aliases": [],
                          "description": "ISO routing area tag",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "clns": {
                          "aliases": [],
                          "description": "Redistribution of OSI dynamic routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "ip": {
                          "aliases": [],
                          "description": "Redistribution of IP dynamic routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric": {
                          "aliases": [],
                          "description": "Metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Route map reference",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "iso_igrp": {
                      "aliases": [],
                      "description": "IGRP for OSI networks",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "area_tag": {
                          "aliases": [],
                          "description": "ISO routing area tag",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Route map reference",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "lisp": {
                      "aliases": [],
                      "description": "Locator ID Separation Protocol (LISP)",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "metric": {
                          "aliases": [],
                          "description": "Metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Route map reference",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "mobile": {
                      "aliases": [],
                      "description": "Mobile routes",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "metric": {
                          "aliases": [],
                          "description": "Metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Route map reference",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "odr": {
                      "aliases": [],
                      "description": "On Demand stub Routes",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "metric": {
                          "aliases": [],
                          "description": "Metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Route map reference",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ospf": {
                      "aliases": [],
                      "description": "Open Shortest Path First (OSPF)",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "match": {
                          "aliases": [],
                          "description": "On Demand stub Routes",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "external": {
                              "aliases": [],
                              "description": "Redistribute OSPF external routes",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "internal": {
                              "aliases": [],
                              "description": "Redistribute OSPF internal routes",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "nssa_external": {
                              "aliases": [],
                              "description": "Redistribute OSPF NSSA external routes",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "type_1": {
                              "aliases": [],
                              "description": "Redistribute NSSA external type 1 routes",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "type_2": {
                              "aliases": [],
                              "description": "Redistribute NSSA external type 2 routes",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "metric": {
                          "aliases": [],
                          "description": "Metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "process_id": {
                          "aliases": [],
                          "description": "Process ID",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Route map reference",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "vrf": {
                          "aliases": [],
                          "description": "VPN Routing/Forwarding Instance",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ospfv3": {
                      "aliases": [],
                      "description": "OSPFv3",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "match": {
                          "aliases": [],
                          "description": "On Demand stub Routes",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "external": {
                              "aliases": [],
                              "description": "Redistribute OSPF external routes",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "internal": {
                              "aliases": [],
                              "description": "Redistribute OSPF internal routes",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "nssa_external": {
                              "aliases": [],
                              "description": "Redistribute OSPF NSSA external routes",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "type_1": {
                              "aliases": [],
                              "description": "Redistribute NSSA external type 1 routes",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "type_2": {
                              "aliases": [],
                              "description": "Redistribute NSSA external type 2 routes",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "metric": {
                          "aliases": [],
                          "description": "Metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "process_id": {
                          "aliases": [],
                          "description": "Process ID",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Route map reference",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "rip": {
                      "aliases": [],
                      "description": "Routing Information Protocol (RIP)",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "metric": {
                          "aliases": [],
                          "description": "Metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Route map reference",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "static": {
                      "aliases": [],
                      "description": "Static routes",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "clns": {
                          "aliases": [],
                          "description": "Redistribution of OSI static routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "ip": {
                          "aliases": [],
                          "description": "Redistribution of IP static routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric": {
                          "aliases": [],
                          "description": "Metric for redistributed routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Route map reference",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "vrf": {
                      "aliases": [],
                      "description": "Specify a source VRF",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "global": {
                          "aliases": [],
                          "description": "global VRF",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "Source VRF name",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "safi": {
                  "aliases": [],
                  "description": "Address Family modifier",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "flowspec",
                    "mdt",
                    "multicast",
                    "mvpn",
                    "evpn",
                    "unicast"
                  ],
                  "suboptions": {}
                },
                "snmp": {
                  "aliases": [],
                  "description": "Modify snmp parameters",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "context": {
                      "aliases": [],
                      "description": "Configure a SNMP context\nContext Name",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "community": {
                          "aliases": [],
                          "description": "Configure a SNMP v2c Community string and access privs",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "acl": {
                              "aliases": [],
                              "description": "Standard IP accesslist allowing access with this community string\nExpanded IP accesslist allowing access with this community string\nAccess-list name",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "ipv6": {
                              "aliases": [],
                              "description": "Specify IPv6 Named Access-List\nIPv6 Access-list name",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "ro": {
                              "aliases": [],
                              "description": "Read-only access with this community string",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "rw": {
                              "aliases": [],
                              "description": "Read-write access with this community string",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "snmp_community": {
                              "aliases": [],
                              "description": "SNMP community string",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "name": {
                          "aliases": [],
                          "description": "Context Name",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "user": {
                          "aliases": [],
                          "description": "Configure a SNMP v3 user",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "access": {
                              "aliases": [],
                              "description": "specify an access-list associated with this group",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "acl": {
                                  "aliases": [],
                                  "description": "SNMP community string",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "ipv6": {
                                  "aliases": [],
                                  "description": "Specify IPv6 Named Access-List\nIPv6 Access-list name",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "auth": {
                              "aliases": [],
                              "description": "authentication parameters for the user",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "md5": {
                                  "aliases": [],
                                  "description": "Use HMAC MD5 algorithm for authentication\nauthentication password for user",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "sha": {
                                  "aliases": [],
                                  "description": "Use HMAC SHA algorithm for authentication\nauthentication password for user",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "credential": {
                              "aliases": [],
                              "description": "If the user password is already configured and saved",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "encrypted": {
                              "aliases": [],
                              "description": "specifying passwords as MD5 or SHA digests",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "name": {
                              "aliases": [],
                              "description": "SNMP community string",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "priv": {
                              "aliases": [],
                              "description": "encryption parameters for the user",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "des": {
                                  "aliases": [],
                                  "description": "Use 56 bit DES algorithm for encryption",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "table_map": {
                  "aliases": [],
                  "description": "Map external entry attributes into routing table",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "filter": {
                      "aliases": [],
                      "description": "Selective route download",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "route-map name",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "vrf": {
                  "aliases": [],
                  "description": "Specify parameters for a VPN Routing/Forwarding instance",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "as_number": {
              "aliases": [],
              "description": "Autonomous system number.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(sh running-config | section ^router bgp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(show running-config | include ip route|ipv6 route) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "BGP Address family resource module",
      "version_added": "1.2.0"
    },
    "examples": "\n# Using merged\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | section ^router bgp\n# router bgp 65000\n#  bgp log-neighbor-changes\n#  bgp nopeerup-delay cold-boot 20\n\n- name: Merge provided configuration with device configuration\n  cisco.ios.ios_bgp_address_family:\n    config:\n      as_number: 65000\n      address_family:\n        - afi: ipv4\n          safi: multicast\n          vrf: blue\n          aggregate_address:\n            - address: 192.0.2.1\n              netmask: 255.255.255.255\n              as_confed_set: true\n          bgp:\n            aggregate_timer: 10\n            dampening:\n              penalty_half_time: 1\n              reuse_route_val: 1\n              suppress_route_val: 1\n              max_suppress: 1\n            slow_peer:\n              - detection:\n                  threshold: 150\n          neighbor:\n            - address: 198.51.100.1\n              aigp:\n                send:\n                  cost_community:\n                    id: 100\n                    poi:\n                      igp_cost: true\n                      transitive: true\n              slow_peer:\n                - detection:\n                    threshold: 150\n              remote_as: 10\n              route_map:\n                - name: test-route-out\n                  out: true\n                - name: test-route-in\n                  in: true\n              route_server_client: true\n          network:\n            - address: 198.51.110.10\n              mask: 255.255.255.255\n              backdoor: true\n          snmp:\n            context:\n              name: snmp_con\n              community:\n                snmp_community: community\n                ro: true\n                acl: 10\n        - afi: ipv4\n          safi: mdt\n          bgp:\n            dmzlink_bw: true\n            dampening:\n              penalty_half_time: 1\n              reuse_route_val: 10\n              suppress_route_val: 100\n              max_suppress: 5\n            soft_reconfig_backup: true\n        - afi: ipv4\n          safi: multicast\n          aggregate_address:\n            - address: 192.0.3.1\n              netmask: 255.255.255.255\n              as_confed_set: true\n          default_metric: 12\n          distance:\n            external: 10\n            internal: 10\n            local: 100\n          network:\n            - address: 198.51.111.11\n              mask: 255.255.255.255\n              route_map: test\n          table_map:\n            name: test_tableMap\n            filter: true\n    state: merged\n\n# Commands fired:\n# ---------------\n# \"commands\": [\n#     \"router bgp 65000\",\n#     \"address-family ipv4 multicast vrf blue\",\n#     \"bgp aggregate-timer 10\",\n#     \"bgp slow-peer detection threshold 150\",\n#     \"bgp dampening 1 1 1 1\",\n#     \"neighbor 198.51.100.1 remote-as 10\",\n#     \"neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\",\n#     \"neighbor 198.51.100.1 route-map test-route out\",\n#     \"neighbor 198.51.100.1 route-server-client\",\n#     \"neighbor 198.51.100.1 slow-peer detection threshold 150\",\n#     \"network 198.51.110.10 mask 255.255.255.255 backdoor\",\n#     \"snmp context snnmp_con_1 community community ro 10\",\n#     \"aggregate-address 192.0.2.1 255.255.255.255 as-confed-set\",\n#     \"exit-address-family\",\n#     \"address-family ipv4 mdt\",\n#     \"bgp dmzlink-bw\",\n#     \"bgp dampening 1 10 100 5\",\n#     \"bgp soft-reconfig-backup\",\n#     \"exit-address-family\",\n#     \"address-family ipv4 multicast\",\n#     \"network 1.1.1.1 mask 255.255.255.255 route-map test\",\n#     \"aggregate-address 192.0.3.1 255.255.255.255 as-confed-set\",\n#     \"default-metric 12\",\n#     \"distance bgp 10 10 100\",\n#     \"table-map test_tableMap filter\"\n#     \"exit-address-family\",\n# ]\n\n# After state:\n# ------------\n#\n# vios#sh running-config | section ^router bgp\n# router bgp 65000\n#  bgp log-neighbor-changes\n#  bgp nopeerup-delay cold-boot 20\n#  !\n#  address-family ipv4 multicast\n#   table-map test_tableMap filter\n#   network 1.1.1.1 mask 255.255.255.255 route-map test\n#   aggregate-address 192.0.3.1 255.255.255.255 as-confed-set\n#   default-metric 12\n#   distance bgp 10 10 100\n#  exit-address-family\n#  !\n#  address-family ipv4 mdt\n#   bgp dampening 1 10 100 5\n#   bgp dmzlink-bw\n#   bgp soft-reconfig-backup\n#  exit-address-family\n#  !\n#  address-family ipv4 multicast vrf blue\n#   bgp aggregate-timer 10\n#   bgp slow-peer detection threshold 150\n#   bgp dampening 1 1 1 1\n#   network 198.51.110.10 mask 255.255.255.255 backdoor\n#   aggregate-address 192.0.2.1 255.255.255.255 as-confed-set\n#   neighbor 198.51.100.1 remote-as 10\n#   neighbor 198.51.100.1 activate\n#   neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\n#   neighbor 198.51.100.1 route-server-client\n#   neighbor 198.51.100.1 slow-peer detection threshold 150\n#   neighbor 198.51.100.1 route-map test-route out\n#  exit-address-family\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | section ^router bgp\n# router bgp 65000\n#  bgp log-neighbor-changes\n#  bgp nopeerup-delay cold-boot 20\n#  !\n#  address-family ipv4 multicast\n#   table-map test_tableMap filter\n#   network 1.1.1.1 mask 255.255.255.255 route-map test\n#   aggregate-address 192.0.3.1 255.255.255.255 as-confed-set\n#   default-metric 12\n#   distance bgp 10 10 100\n#  exit-address-family\n#  !\n#  address-family ipv4 mdt\n#   bgp dampening 1 10 100 5\n#   bgp dmzlink-bw\n#   bgp soft-reconfig-backup\n#  exit-address-family\n#  !\n#  address-family ipv4 multicast vrf blue\n#   bgp aggregate-timer 10\n#   bgp slow-peer detection threshold 150\n#   bgp dampening 1 1 1 1\n#   network 198.51.110.10 mask 255.255.255.255 backdoor\n#   aggregate-address 192.0.2.1 255.255.255.255 as-confed-set\n#   neighbor 198.51.100.1 remote-as 10\n#   neighbor 198.51.100.1 activate\n#   neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\n#   neighbor 198.51.100.1 route-server-client\n#   neighbor 198.51.100.1 slow-peer detection threshold 150\n#   neighbor 198.51.100.1 route-map test-route out\n#  exit-address-family\n\n- name: Replaces device configuration of listed AF BGP with provided configuration\n  cisco.ios.ios_bgp_address_family:\n    config:\n      as_number: 65000\n      address_family:\n        - afi: ipv4\n          safi: multicast\n          vrf: blue\n          aggregate_address:\n            - address: 192.0.2.1\n              netmask: 255.255.255.255\n              as_confed_set: true\n          bgp:\n            aggregate_timer: 10\n            dampening:\n              penalty_half_time: 1\n              reuse_route_val: 1\n              suppress_route_val: 1\n              max_suppress: 1\n            slow_peer:\n              - detection:\n                  threshold: 150\n          neighbor:\n            - address: 198.51.110.1\n              activate: true\n              aigp:\n                send:\n                  cost_community:\n                    id: 200\n                    poi:\n                      igp_cost: true\n                      transitive: true\n              slow_peer:\n                - detection:\n                    threshold: 150\n              remote_as: 10\n              route_maps:\n                - name: test-replaced-route\n                  out: true\n              route_server_client: true\n          network:\n            - address: 198.51.110.10\n              mask: 255.255.255.255\n              backdoor: true\n        - afi: ipv4\n          safi: multicast\n          bgp:\n            aggregate_timer: 10\n            dampening:\n              penalty_half_time: 10\n              reuse_route_val: 10\n              suppress_route_val: 10\n              max_suppress: 10\n            slow_peer:\n              - detection:\n                  threshold: 200\n          network:\n            - address: 192.0.2.1\n              mask: 255.255.255.255\n              route_map: test\n    state: replaced\n\n# Commands fired:\n# ---------------\n# \"commands\": [\n#         \"router bgp 65000\",\n#         \"address-family ipv4 multicast vrf blue\",\n#         \"neighbor 198.51.110.1 remote-as 10\",\n#         \"neighbor 198.51.110.1 activate\",\n#         \"neighbor 198.51.110.1 aigp send cost-community 200 poi igp-cost transitive\",\n#         \"neighbor 198.51.110.1 route-map test-replaced-route out\",\n#         \"neighbor 198.51.110.1 route-server-client\",\n#         \"neighbor 198.51.110.1 slow-peer detection threshold 150\",\n#         \"no neighbor 198.51.100.1 remote-as 10\",\n#         \"no neighbor 198.51.100.1 activate\",\n#         \"no neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\",\n#         \"no neighbor 198.51.100.1 route-map test-route out\",\n#         \"no neighbor 198.51.100.1 route-server-client\",\n#         \"no neighbor 198.51.100.1 slow-peer detection threshold 150\",\n#         \"exit-address-family\",\n#         \"address-family ipv4 multicast\",\n#         \"bgp aggregate-timer 10\",\n#         \"bgp slow-peer detection threshold 200\",\n#         \"bgp dampening 10 10 10 10\",\n#         \"network 192.0.2.1 mask 255.255.255.255 route-map test\",\n#         \"no network 1.1.1.1 mask 255.255.255.255 route-map test\",\n#         \"no aggregate-address 192.0.3.1 255.255.255.255 as-confed-set\",\n#         \"no default-metric 12\",\n#         \"no distance bgp 10 10 100\",\n#         \"no table-map test_tableMap filter\"\n#         \"exit-address-family\",\n#     ]\n\n# After state:\n# -------------\n#\n# vios#sh running-config | section ^router bgp\n# router bgp 65000\n#  bgp log-neighbor-changes\n#  bgp nopeerup-delay cold-boot 20\n#  !\n#  address-family ipv4 multicast\n#   bgp aggregate-timer 10\n#   bgp slow-peer detection threshold 200\n#   bgp dampening 10 10 10 10\n#   network 192.0.2.1 mask 255.255.255.255 route-map test\n#  exit-address-family\n#  !\n#  address-family ipv4 mdt\n#   bgp dampening 1 10 100 5\n#   bgp dmzlink-bw\n#   bgp soft-reconfig-backup\n#  exit-address-family\n#  !\n#  address-family ipv4 multicast vrf blue\n#   bgp aggregate-timer 10\n#   bgp slow-peer detection threshold 150\n#   bgp dampening 1 1 1 1\n#   network 198.51.110.10 mask 255.255.255.255 backdoor\n#   aggregate-address 192.0.2.1 255.255.255.255 as-confed-set\n#   neighbor 198.51.110.1 remote-as 10\n#   neighbor 198.51.110.1 activate\n#   neighbor 198.51.110.1 aigp send cost-community 200 poi igp-cost transitive\n#   neighbor 198.51.110.1 route-server-client\n#   neighbor 198.51.110.1 slow-peer detection threshold 150\n#   neighbor 198.51.110.1 route-map test-replaced-route out\n#  exit-address-family\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | section ^router bgp\n# router bgp 65000\n#  bgp log-neighbor-changes\n#  bgp nopeerup-delay cold-boot 20\n#  !\n#  address-family ipv4 multicast\n#   table-map test_tableMap filter\n#   network 1.1.1.1 mask 255.255.255.255 route-map test\n#   aggregate-address 192.0.3.1 255.255.255.255 as-confed-set\n#   default-metric 12\n#   distance bgp 10 10 100\n#  exit-address-family\n#  !\n#  address-family ipv4 mdt\n#   bgp dampening 1 10 100 5\n#   bgp dmzlink-bw\n#   bgp soft-reconfig-backup\n#  exit-address-family\n#  !\n#  address-family ipv4 multicast vrf blue\n#   bgp aggregate-timer 10\n#   bgp slow-peer detection threshold 150\n#   bgp dampening 1 1 1 1\n#   network 198.51.110.10 mask 255.255.255.255 backdoor\n#   aggregate-address 192.0.2.1 255.255.255.255 as-confed-set\n#   neighbor 198.51.100.1 remote-as 10\n#   neighbor 198.51.100.1 activate\n#   neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\n#   neighbor 198.51.100.1 route-server-client\n#   neighbor 198.51.100.1 slow-peer detection threshold 150\n#   neighbor 198.51.100.1 route-map test-route out\n#  exit-address-family\n\n- name: Override device configuration of all AF BGP with provided configuration\n  cisco.ios.ios_bgp_address_family:\n    config:\n      as_number: 65000\n      address_family:\n        - afi: ipv4\n          safi: multicast\n          vrf: blue\n          aggregate_address:\n            - address: 192.0.2.1\n              netmask: 255.255.255.255\n              as_confed_set: true\n          bgp:\n            aggregate_timer: 10\n            dampening:\n              penalty_half_time: 10\n              reuse_route_val: 10\n              suppress_route_val: 100\n              max_suppress: 50\n            slow_peer:\n              - detection:\n                  threshold: 150\n          neighbor:\n            - address: 198.51.110.1\n              activate: true\n              log_neighbor_changes:\n                disable: true\n              maximum_prefix:\n                number: 1\n                threshold_value: 10\n                restart: 100\n              slow_peer:\n                - detection:\n                    threshold: 150\n              remote_as: 100\n              route_maps:\n                - name: test-override-route\n                  out: true\n              route_server_client: true\n              version: 4\n          network:\n            - address: 198.51.110.10\n              mask: 255.255.255.255\n              backdoor: true\n        - afi: ipv6\n          safi: multicast\n          default_information: true\n          bgp:\n            aggregate_timer: 10\n            dampening:\n              penalty_half_time: 10\n              reuse_route_val: 10\n              suppress_route_val: 10\n              max_suppress: 10\n            slow_peer:\n              - detection:\n                  threshold: 200\n          network:\n            - address: 2001:DB8:0:3::/64\n              route_map: test_ipv6\n    state: overridden\n\n# Commands fired:\n# ---------------\n# \"commands\": [\n#       \"router bgp 65000\",\n#       \"no address-family ipv4 multicast\",\n#       \"no address-family ipv4 mdt\",\n#       \"address-family ipv4 multicast vrf blue\",\n#       \"bgp aggregate-timer 10\",\n#       \"bgp slow-peer detection threshold 150\",\n#       \"bgp dampening 10 10 100 50\",\n#       \"neighbor 198.51.110.1 remote-as 100\",\n#       \"neighbor 198.51.110.1 activate\",\n#       \"neighbor 198.51.110.1 log-neighbor-changes disable\",\n#       \"neighbor 198.51.110.1 maximum-prefix 1 10 restart 100\",\n#       \"neighbor 198.51.110.1 route-map test-override-route out\",\n#       \"neighbor 198.51.110.1 route-server-client\",\n#       \"neighbor 198.51.110.1 version 4\",\n#       \"neighbor 198.51.110.1 slow-peer detection threshold 150\",\n#       \"network 198.51.110.10 mask 255.255.255.255 backdoor\",\n#       \"aggregate-address 192.0.2.1 255.255.255.255 as-confed-set\",\n#       \"exit-address-family\",\n#       \"address-family ipv6 multicast\",\n#       \"bgp aggregate-timer 10\",\n#       \"bgp slow-peer detection threshold 200\",\n#       \"bgp dampening 10 10 10 10\",\n#       \"network 2001:DB8:0:3::/64 route-map test_ipv6\"\n#       \"exit-address-family\",\n#   ]\n\n# After state:\n# -------------\n#\n# vios#sh running-config | section ^router bgp\n# router bgp 65000\n#  bgp log-neighbor-changes\n#  bgp nopeerup-delay cold-boot 20\n#  bgp nopeerup-delay post-boot 10\n#  bgp bestpath med confed\n#  snmp context snnmp_con_1 community community RO 10\n#  neighbor 192.0.2.1 remote-as 100\n#  neighbor 192.0.2.1 description replace neighbor\n#  neighbor 198.51.100.1 remote-as 10\n#  !\n#  address-family ipv6 multicast\n#   bgp aggregate-timer 10\n#   bgp slow-peer detection threshold 200\n#   bgp dampening 10 10 10 10\n#   network 2001:DB8:0:3::/64 route-map test_ipv6\n#  exit-address-family\n#  !\n#  address-family ipv4 multicast vrf blue\n#   bgp aggregate-timer 10\n#   bgp slow-peer detection threshold 150\n#   bgp dampening 10 10 100 50\n#   network 198.51.110.10 mask 255.255.255.255 backdoor\n#   aggregate-address 192.0.2.1 255.255.255.255 as-confed-set\n#   neighbor 198.51.110.1 remote-as 100\n#   neighbor 198.51.110.1 log-neighbor-changes disable\n#   neighbor 198.51.110.1 version 4\n#   neighbor 198.51.110.1 activate\n#   neighbor 198.51.110.1 route-server-client\n#   neighbor 198.51.110.1 slow-peer detection threshold 150\n#   neighbor 198.51.110.1 route-map test-override-route out\n#   neighbor 198.51.110.1 maximum-prefix 1 10 restart 100\n#  exit-address-family\n\n# Using Deleted\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | section ^router bgp\n# router bgp 65000\n#  bgp log-neighbor-changes\n#  bgp nopeerup-delay cold-boot 20\n#  !\n#  address-family ipv4 multicast\n#   table-map test_tableMap filter\n#   network 1.1.1.1 mask 255.255.255.255 route-map test\n#   aggregate-address 192.0.3.1 255.255.255.255 as-confed-set\n#   default-metric 12\n#   distance bgp 10 10 100\n#  exit-address-family\n#  !\n#  address-family ipv4 mdt\n#   bgp dampening 1 10 100 5\n#   bgp dmzlink-bw\n#   bgp soft-reconfig-backup\n#  exit-address-family\n#  !\n#  address-family ipv4 multicast vrf blue\n#   bgp aggregate-timer 10\n#   bgp slow-peer detection threshold 150\n#   bgp dampening 1 1 1 1\n#   network 198.51.110.10 mask 255.255.255.255 backdoor\n#   aggregate-address 192.0.2.1 255.255.255.255 as-confed-set\n#   neighbor 198.51.100.1 remote-as 10\n#   neighbor 198.51.100.1 activate\n#   neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\n#   neighbor 198.51.100.1 route-server-client\n#   neighbor 198.51.100.1 slow-peer detection threshold 150\n#   neighbor 198.51.100.1 route-map test-route out\n#  exit-address-family\n\n- name: \"Delete AF BGP (Note: This won't delete the all configured AF BGP)\"\n  cisco.ios.ios_bgp_address_family:\n    config:\n      as_number: 65000\n      address_family:\n        - afi: ipv4\n          safi: multicast\n        - afi: ipv4\n          safi: mdt\n    state: deleted\n\n# Commands fired:\n# ---------------\n# \"commands\": [\n#       \"router bgp 65000\",\n#       \"no address-family ipv4 multicast\",\n#       \"no address-family ipv4 mdt\"\n#   ]\n\n# After state:\n# -------------\n#\n# vios#sh running-config | section ^router bg\n# router bgp 65000\n#  bgp log-neighbor-changes\n#  bgp nopeerup-delay cold-boot 20\n#  !\n#  address-family ipv4 multicast vrf blue\n#   bgp aggregate-timer 10\n#   bgp slow-peer detection threshold 150\n#   bgp dampening 1 1 1 1\n#   network 198.51.110.10 mask 255.255.255.255 backdoor\n#   aggregate-address 192.0.2.1 255.255.255.255 as-confed-set\n#   neighbor 198.51.100.1 remote-as 10\n#   neighbor 198.51.100.1 activate\n#   neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\n#   neighbor 198.51.100.1 route-server-client\n#   neighbor 198.51.100.1 slow-peer detection threshold 150\n#   neighbor 198.51.100.1 route-map test-route out\n#  exit-address-family\n\n# Using Deleted without any config passed\n#\"(NOTE: This will delete all of configured AF BGP)\"\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | section ^router bgp\n# router bgp 65000\n#  bgp log-neighbor-changes\n#  bgp nopeerup-delay cold-boot 20\n#  !\n#  address-family ipv4 multicast\n#   table-map test_tableMap filter\n#   network 1.1.1.1 mask 255.255.255.255 route-map test\n#   aggregate-address 192.0.3.1 255.255.255.255 as-confed-set\n#   default-metric 12\n#   distance bgp 10 10 100\n#  exit-address-family\n#  !\n#  address-family ipv4 mdt\n#   bgp dampening 1 10 100 5\n#   bgp dmzlink-bw\n#   bgp soft-reconfig-backup\n#  exit-address-family\n#  !\n#  address-family ipv4 multicast vrf blue\n#   bgp aggregate-timer 10\n#   bgp slow-peer detection threshold 150\n#   bgp dampening 1 1 1 1\n#   network 198.51.110.10 mask 255.255.255.255 backdoor\n#   aggregate-address 192.0.2.1 255.255.255.255 as-confed-set\n#   neighbor 198.51.100.1 remote-as 10\n#   neighbor 198.51.100.1 activate\n#   neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\n#   neighbor 198.51.100.1 route-server-client\n#   neighbor 198.51.100.1 slow-peer detection threshold 150\n#   neighbor 198.51.100.1 route-map test-route out\n#  exit-address-family\n\n- name: 'Delete ALL of configured AF BGP (Note: This WILL delete the all configured\n    AF BGP)'\n  cisco.ios.ios_bgp_address_family:\n    state: deleted\n\n# Commands fired:\n# ---------------\n# \"commands\": [\n#       \"router bgp 65000\",\n#       \"no address-family ipv4 multicast vrf blue\",\n#       \"no address-family ipv4 multicast\",\n#       \"no address-family ipv4 mdt\"\n#   ]\n\n# After state:\n# -------------\n#\n# vios#sh running-config | section ^router bgp\n# router bgp 65000\n#  bgp log-neighbor-changes\n#  bgp nopeerup-delay cold-boot 20\n\n# Using Gathered\n# Before state:\n# -------------\n#\n# vios#sh running-config | section ^router bgp\n\n- name: Gather listed AF BGP with provided configurations\n  cisco.ios.ios_bgp_address_family:\n    config:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"gathered\": {\n#       \"address_family\": [\n#           {\n#               \"afi\": \"ipv4\",\n#               \"aggregate_address\": [{\n#                   \"address\": \"192.0.2.1\",\n#                   \"as_confed_set\": true,\n#                   \"netmask\": \"255.255.255.255\"\n#               }],\n#               \"bgp\": {\n#                   \"aggregate_timer\": 10,\n#                   \"dampening\": {\n#                       \"max_suppress\": 1,\n#                       \"penalty_half_time\": 1,\n#                       \"reuse_route_val\": 1,\n#                       \"suppress_route_val\": 1\n#                   },\n#                   \"slow_peer\": [\n#                       {\n#                           \"detection\": {\n#                               \"threshold\": 150\n#                           }\n#                       }\n#                   ]\n#               },\n#               \"neighbor\": [\n#                   {\n#                       \"activate\": true,\n#                       \"address\": \"198.51.100.1\",\n#                       \"aigp\": {\n#                           \"send\": {\n#                               \"cost_community\": {\n#                                   \"id\": 100,\n#                                   \"poi\": {\n#                                       \"igp_cost\": true,\n#                                       \"transitive\": true\n#                                   }\n#                               }\n#                           }\n#                       },\n#                       \"remote_as\": 10,\n#                       \"route_maps\": [{\n#                           \"name\": \"test-route\",\n#                           \"out\": true\n#                       }],\n#                       \"route_server_client\": true,\n#                       \"slow_peer\": [\n#                           {\n#                               \"detection\": {\n#                                   \"threshold\": 150\n#                               }\n#                           }\n#                       ]\n#                   }\n#               ],\n#               \"network\": [\n#                   {\n#                       \"address\": \"198.51.110.10\",\n#                       \"backdoor\": true,\n#                       \"mask\": \"255.255.255.255\"\n#                   }\n#               ],\n#               \"safi\": \"multicast\",\n#               \"snmp\": {\n#                   \"context\": {\n#                       \"community\": {\n#                           \"acl\": \"10\",\n#                           \"ro\": true,\n#                           \"snmp_community\": \"community\"\n#                       },\n#                       \"name\": \"snnmp_con_1\"\n#                   }\n#               },\n#               \"vrf\": \"blue\"\n#           },\n#           {\n#               \"afi\": \"ipv4\",\n#               \"aggregate_address\": [{\n#                   \"address\": \"192.0.3.1\",\n#                   \"as_confed_set\": true,\n#                   \"netmask\": \"255.255.255.255\"\n#               }],\n#               \"default_metric\": 12,\n#               \"distance\": {\n#                   \"external\": 10,\n#                   \"internal\": 10,\n#                   \"local\": 100\n#               },\n#               \"network\": [\n#                   {\n#                       \"address\": \"1.1.1.1\",\n#                       \"mask\": \"255.255.255.255\",\n#                       \"route_map\": \"test\"\n#                   }\n#               ],\n#               \"safi\": \"multicast\",\n#               \"table_map\": {\n#                   \"filter\": true,\n#                   \"name\": \"test_tableMap\"\n#               }\n#           },\n#           {\n#               \"afi\": \"ipv4\",\n#               \"bgp\": {\n#                   \"dampening\": {\n#                       \"max_suppress\": 5,\n#                       \"penalty_half_time\": 1,\n#                       \"reuse_route_val\": 10,\n#                       \"suppress_route_val\": 100\n#                   },\n#                   \"dmzlink_bw\": true,\n#                   \"soft_reconfig_backup\": true\n#               },\n#               \"safi\": \"mdt\"\n#           }\n#       ],\n#       \"as_number\": \"65000\"\n#   }\n\n# Using Rendered\n\n- name: Rendered the provided configuration with the existing running configuration\n  cisco.ios.ios_bgp_address_family:\n    config:\n      as_number: 65000\n      address_family:\n        - afi: ipv4\n          safi: multicast\n          vrf: blue\n          aggregate_address:\n            - address: 192.0.2.1\n              netmask: 255.255.255.255\n              as_confed_set: true\n          bgp:\n            aggregate_timer: 10\n            dampening:\n              penalty_half_time: 1\n              reuse_route_val: 1\n              suppress_route_val: 1\n              max_suppress: 1\n            slow_peer:\n              - detection:\n                  threshold: 150\n          neighbor:\n            - address: 198.51.100.1\n              aigp:\n                send:\n                  cost_community:\n                    id: 100\n                    poi:\n                      igp_cost: true\n                      transitive: true\n              slow_peer:\n                - detection:\n                    threshold: 150\n              remote_as: 10\n              route_maps:\n                - name: test-route\n                  out: true\n              route_server_client: true\n          network:\n            - address: 198.51.110.10\n              mask: 255.255.255.255\n              backdoor: true\n          snmp:\n            context:\n              name: snmp_con\n              community:\n                snmp_community: community\n                ro: true\n                acl: 10\n        - afi: ipv4\n          safi: mdt\n          bgp:\n            dmzlink_bw: true\n            dampening:\n              penalty_half_time: 1\n              reuse_route_val: 10\n              suppress_route_val: 100\n              max_suppress: 5\n            soft_reconfig_backup: true\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"rendered\": [\n#     \"router bgp 65000\",\n#     \"address-family ipv4 multicast vrf blue\",\n#     \"bgp aggregate-timer 10\",\n#     \"bgp slow-peer detection threshold 150\",\n#     \"bgp dampening 1 1 1 1\",\n#     \"neighbor 198.51.100.1 remote-as 10\",\n#     \"neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\",\n#     \"neighbor 198.51.100.1 route-map test-route out\",\n#     \"neighbor 198.51.100.1 route-server-client\",\n#     \"neighbor 198.51.100.1 slow-peer detection threshold 150\",\n#     \"network 198.51.110.10 mask 255.255.255.255 backdoor\",\n#     \"snmp context snnmp_con_1 community community ro 10\",\n#     \"aggregate-address 192.0.2.1 255.255.255.255 as-confed-set\",\n#     \"exit-address-family\",\n#     \"address-family ipv4 mdt\",\n#     \"bgp dmzlink-bw\",\n#     \"bgp dampening 1 10 100 5\",\n#     \"bgp soft-reconfig-backup\"\n#     \"exit-address-family\",\n# ]\n\n# Using Parsed\n\n# File: parsed.cfg\n# ----------------\n# router bgp 65000\n#  bgp log-neighbor-changes\n#  bgp nopeerup-delay cold-boot 20\n#  !\n#  address-family ipv4 multicast\n#   table-map test_tableMap filter\n#   network 1.1.1.1 mask 255.255.255.255 route-map test\n#   aggregate-address 192.0.3.1 255.255.255.255 as-confed-set\n#   default-metric 12\n#   distance bgp 10 10 100\n#  exit-address-family\n#  !\n#  address-family ipv4 mdt\n#   bgp dampening 1 10 100 5\n#   bgp dmzlink-bw\n#   bgp soft-reconfig-backup\n#  exit-address-family\n#  !\n\n- name: Parse the commands for provided configuration\n  cisco.ios.ios_bgp_address_family:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n#\n# \"parsed\": {\n#       \"address_family\": [\n#           {\n#               \"afi\": \"ipv4\",\n#               \"aggregate_address\": [{\n#                   \"address\": \"192.0.3.1\",\n#                   \"as_confed_set\": true,\n#                   \"netmask\": \"255.255.255.255\"\n#               }],\n#               \"default_metric\": 12,\n#               \"distance\": {\n#                   \"external\": 10,\n#                   \"internal\": 10,\n#                   \"local\": 100\n#               },\n#               \"network\": [\n#                   {\n#                       \"address\": \"1.1.1.1\",\n#                       \"mask\": \"255.255.255.255\",\n#                       \"route_map\": \"test\"\n#                   }\n#               ],\n#               \"safi\": \"multicast\",\n#               \"table_map\": {\n#                   \"filter\": true,\n#                   \"name\": \"test_tableMap\"\n#               }\n#           },\n#           {\n#               \"afi\": \"ipv4\",\n#               \"bgp\": {\n#                   \"dampening\": {\n#                       \"max_suppress\": 5,\n#                       \"penalty_half_time\": 1,\n#                       \"reuse_route_val\": 10,\n#                       \"suppress_route_val\": 100\n#                   },\n#                   \"dmzlink_bw\": true,\n#                   \"soft_reconfig_backup\": true\n#               },\n#               \"safi\": \"mdt\"\n#           }\n#       ],\n#       \"as_number\": \"65000\"\n#   }\n\n\n"
  },
  "cisco.ios.ios_bgp_global": {
    "doc": {
      "description": "This module configures and manages the attributes of global bgp on Cisco IOS.",
      "has_action": true,
      "notes": "Tested against Cisco IOSv Version 15.2 on VIRL\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of configurations for global bgp.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "aggregate_address": {
              "aliases": [],
              "description": "Configure BGP aggregate entries",
              "type": "dict",
              "required": false,
              "suboptions": {
                "address": {
                  "aliases": [],
                  "description": "Aggregate address",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "advertise_map": {
                  "aliases": [],
                  "description": "Set condition to advertise attribute",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "as_confed_set": {
                  "aliases": [],
                  "description": "Generate AS confed set path information",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "as_set": {
                  "aliases": [],
                  "description": "Generate AS set path information",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "attribute_map": {
                  "aliases": [],
                  "description": "Set attributes of aggregate",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "netmask": {
                  "aliases": [],
                  "description": "Aggregate mask",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "summary_only": {
                  "aliases": [],
                  "description": "Filter more specific routes from updates",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "suppress_map": {
                  "aliases": [],
                  "description": "Conditionally filter more specific routes from updates",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "as_number": {
              "aliases": [],
              "description": "Autonomous system number.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "auto_summary": {
              "aliases": [],
              "description": "Enable automatic network number summarization",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bgp": {
              "aliases": [],
              "description": "Enable address family and enter its config mode",
              "type": "dict",
              "required": false,
              "suboptions": {
                "additional_paths": {
                  "aliases": [],
                  "description": "Additional paths in the BGP table",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "install": {
                      "aliases": [],
                      "description": "Additional paths to install into RIB",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "receive": {
                      "aliases": [],
                      "description": "Receive additional paths from neighbors",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "select": {
                      "aliases": [],
                      "description": "Selection criteria to pick the paths",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "all": {
                          "aliases": [],
                          "description": "Select all available paths",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "best": {
                          "aliases": [],
                          "description": "Select best N paths (2-3).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "best_external": {
                          "aliases": [],
                          "description": "Select best-external path",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "group_best": {
                          "aliases": [],
                          "description": "Select group-best path",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "send": {
                      "aliases": [],
                      "description": "Send additional paths to neighbors",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "advertise_best_external": {
                  "aliases": [],
                  "description": "Advertise best external path to internal peers",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "aggregate_timer": {
                  "aliases": [],
                  "description": "Configure Aggregation Timer\nPlease refer vendor documentation for valid values",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "always_compare_med": {
                  "aliases": [],
                  "description": "Allow comparing MED from different neighbors",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "asnotation": {
                  "aliases": [],
                  "description": "Change the default asplain notation\nasdot notation",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "bestpath": {
                  "aliases": [],
                  "description": "Change the default bestpath selection",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "aigp": {
                      "aliases": [],
                      "description": "if both paths doesn't have aigp ignore on bestpath comparision\nignore",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "compare_routerid": {
                      "aliases": [],
                      "description": "Compare router-id for identical EBGP paths",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "cost_community": {
                      "aliases": [],
                      "description": "cost community",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "igp_metric": {
                      "aliases": [],
                      "description": "igp metric\nIgnore igp metric in bestpath selection",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "med": {
                      "aliases": [],
                      "description": "MED attribute",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "confed": {
                          "aliases": [],
                          "description": "Compare MED among confederation paths",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "missing_as_worst": {
                          "aliases": [],
                          "description": "Treat missing MED as the least preferred one",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "client_to_client": {
                  "aliases": [],
                  "description": "Configure client to client route reflection",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "all": {
                      "aliases": [],
                      "description": "inter-cluster and intra-cluster (default)",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "intra_cluster": {
                      "aliases": [],
                      "description": "intra cluster reflection\nintra-cluster reflection for cluster-id",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "set reflection of routes allowed",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "cluster_id": {
                  "aliases": [],
                  "description": "Configure Route-Reflector Cluster-id (peers may reset)\nA.B.C.D/Please refer vendor documentation for valid Route-Reflector Cluster-id",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "confederation": {
                  "aliases": [],
                  "description": "AS confederation parameters",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "identifier": {
                      "aliases": [],
                      "description": "Set routing domain confederation AS\nAS number",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "peers": {
                      "aliases": [],
                      "description": "Peer ASs in BGP confederation\nAS number",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "consistency_checker": {
                  "aliases": [],
                  "description": "Consistency-checker",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "auto_repair": {
                      "aliases": [],
                      "description": "Auto-Repair",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "interval": {
                          "aliases": [],
                          "description": "Set the bgp consistency checker\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Enable Auto-Repair",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "error_message": {
                      "aliases": [],
                      "description": "Log Error-Msg",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "interval": {
                          "aliases": [],
                          "description": "Set the bgp consistency checker\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Enable Error-Msg",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "dampening": {
                  "aliases": [],
                  "description": "Enable route-flap dampening",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "max_suppress": {
                      "aliases": [],
                      "description": "Maximum duration to suppress a stable route\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "penalty_half_time": {
                      "aliases": [],
                      "description": "Half-life time for the penalty\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "reuse_route_val": {
                      "aliases": [],
                      "description": "Value to start reusing a route\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route-map to specify criteria for dampening",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "suppress_route_val": {
                      "aliases": [],
                      "description": "Value to start suppressing a route\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "deterministic_med": {
                  "aliases": [],
                  "description": "Pick the best-MED path among paths advertised from the neighboring AS",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "dmzlink_bw": {
                  "aliases": [],
                  "description": "Use DMZ Link Bandwidth as weight for BGP multipaths",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "enforce_first_as": {
                  "aliases": [],
                  "description": "Enforce the first AS for EBGP routes(default)",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "enhanced_error": {
                  "aliases": [],
                  "description": "Enabled BGP Enhanced error handling",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "fast_external_fallover": {
                  "aliases": [],
                  "description": "Immediately reset session if a link to a directly connected external peer goes down",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "graceful_restart": {
                  "aliases": [],
                  "description": "Graceful restart capability parameters",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "extended": {
                      "aliases": [],
                      "description": "Enable Graceful-Restart Extension",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "restart_time": {
                      "aliases": [],
                      "description": "Set the max time needed to restart and come back up\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set Graceful-Restart",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "stalepath_time": {
                      "aliases": [],
                      "description": "Set the max time to hold onto restarting peer's stale paths\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "graceful_shutdown": {
                  "aliases": [],
                  "description": "Graceful shutdown capability parameters",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "community": {
                      "aliases": [],
                      "description": "Set Community for Gshut routes\ncommunity number/community number in aa:nn format",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "local_preference": {
                      "aliases": [],
                      "description": "Set Local Preference for Gshut routes\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "neighbors": {
                      "aliases": [],
                      "description": "Gracefully shut down all neigbors",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "activate": {
                          "aliases": [],
                          "description": "Activate graceful shutdown of all neigbors",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "time": {
                          "aliases": [],
                          "description": "time in seconds\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "vrfs": {
                      "aliases": [],
                      "description": "Gracefully shut down all vrf neigbors",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "activate": {
                          "aliases": [],
                          "description": "Activate graceful shutdown of all neigbors",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "time": {
                          "aliases": [],
                          "description": "time in seconds\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "inject_map": {
                  "aliases": [],
                  "description": "Routemap which specifies prefixes to inject",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "copy_attributes": {
                      "aliases": [],
                      "description": "Copy attributes from aggregate",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "exist_map_name": {
                      "aliases": [],
                      "description": "route-map name",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "route-map name",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "listen": {
                  "aliases": [],
                  "description": "Neighbor subnet range listener",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "limit": {
                      "aliases": [],
                      "description": "Set the max limit for the dynamic subnet range neighbors\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "range": {
                      "aliases": [],
                      "description": "Subnet network range",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "ipv4_with_subnet": {
                          "aliases": [],
                          "description": "IPv4 subnet range(A.B.C.D/nn)",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "ipv6_with_subnet": {
                          "aliases": [],
                          "description": "IPv6 subnet range(X:X:X:X::X/<0-128>)",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "peer_group": {
                          "aliases": [],
                          "description": "Member of the peer-group",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "log_neighbor_changes": {
                  "aliases": [],
                  "description": "Log neighbor up/down and reset reason",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "maxas_limit": {
                  "aliases": [],
                  "description": "Allow AS-PATH attribute from any neighbor imposing a limit on number of ASes\nPlease refer vendor documentation for valid values",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "maxcommunity_limit": {
                  "aliases": [],
                  "description": "Allow COMMUNITY attribute from any neighbor imposing a limit on number of communities\nPlease refer vendor documentation for valid values",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "maxextcommunity_limit": {
                  "aliases": [],
                  "description": "Allow EXTENDED COMMUNITY attribute from any neighbor imposing a limit on number of extended communities\nPlease refer vendor documentation for valid values",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "nexthop": {
                  "aliases": [],
                  "description": "Nexthop tracking commands",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "route_map": {
                      "aliases": [],
                      "description": "Route map for valid nexthops",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "trigger": {
                      "aliases": [],
                      "description": "nexthop trackings",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "delay": {
                          "aliases": [],
                          "description": "Set the delay to tigger nexthop tracking\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "enable": {
                          "aliases": [],
                          "description": "Enable nexthop tracking",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "nopeerup_delay": {
                  "aliases": [],
                  "description": "Set how long BGP will wait for the first peer to come up before beginning the update delay or graceful restart timers (in seconds)",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "cold_boot": {
                      "aliases": [],
                      "description": "How long to wait for the first peer to come up upon a cold boot\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "nsf_switchover": {
                      "aliases": [],
                      "description": "How long to wait for the first peer, post NSF switchover\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "post_boot": {
                      "aliases": [],
                      "description": "How long to wait for the first peer to come up once the system is already booted and all peers go down\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "user_initiated": {
                      "aliases": [],
                      "description": "How long to wait for the first peer, post a manual clear of BGP peers by the admin user\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "recursion": {
                  "aliases": [],
                  "description": "recursion rule for the nexthops\nrecursion via host for the nexthops",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "redistribute_internal": {
                  "aliases": [],
                  "description": "Allow redistribution of iBGP into IGPs (dangerous)",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "refresh": {
                  "aliases": [],
                  "description": "refresh",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "max_eor_time": {
                      "aliases": [],
                      "description": "Configure refresh max-eor time\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "stalepath_time": {
                      "aliases": [],
                      "description": "Configure refresh stale-path time\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "regexp": {
                  "aliases": [],
                  "description": "Select regular expression engine\nEnable bounded-execution-time regular expression engine",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "route_map": {
                  "aliases": [],
                  "description": "route-map control commands\nHave route-map set commands take priority over BGP commands such as next-hop unchanged",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "router_id": {
                  "aliases": [],
                  "description": "Override configured router identifier (peers will reset)",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "address": {
                      "aliases": [],
                      "description": "Manually configured router identifier(A.B.C.D)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "interface": {
                      "aliases": [],
                      "description": "Use IPv4 address on interface",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "vrf": {
                      "aliases": [],
                      "description": "vrf-specific router id configuration\nAutomatically assign per-vrf bgp router id",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "scan_time": {
                  "aliases": [],
                  "description": "Configure background scanner interval\nPlease refer vendor documentation for valid values",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "slow_peer": {
                  "aliases": [],
                  "description": "Configure slow-peer",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "detection": {
                      "aliases": [],
                      "description": "Slow-peer detection",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "set": {
                          "aliases": [],
                          "description": "Slow-peer detection",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "threshold": {
                          "aliases": [],
                          "description": "Set the slow-peer detection threshold\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "split_update_group": {
                      "aliases": [],
                      "description": "Configure slow-peer split-update-group",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "dynamic": {
                          "aliases": [],
                          "description": "Dynamically split the slow peer to slow-update group",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "permanent": {
                          "aliases": [],
                          "description": "Keep the slow-peer permanently in slow-update group",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "snmp": {
                  "aliases": [],
                  "description": "BGP SNMP options\nBGP SNMP trap options\nUse cbgpPeer2Type as part of index for traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "soft_reconfig_backup": {
                  "aliases": [],
                  "description": "Use soft-reconfiguration inbound only when route-refresh is not negotiated",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "sso": {
                  "aliases": [],
                  "description": "Stateful Switchover\nEnable SSO only for Route-Refresh capable peers",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "suppress_inactive": {
                  "aliases": [],
                  "description": "Suppress routes that are not in the routing table",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "transport": {
                  "aliases": [],
                  "description": "Global enable/disable transport session parameters\nTransport path MTU discovery",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "update_delay": {
                  "aliases": [],
                  "description": "Set the max initial delay for sending update\nPlease refer vendor documentation for valid values",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "update_group": {
                  "aliases": [],
                  "description": "Manage peers in bgp update groups\nSplit update groups based on Policy\nKeep peers with as-override in different update groups",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "upgrade_cli": {
                  "aliases": [],
                  "description": "Upgrade to hierarchical AFI mode",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "af_mode": {
                      "aliases": [],
                      "description": "Upgrade to AFI mode",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "enable upgrade to hierarchical AFI mode",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "bmp": {
              "aliases": [],
              "description": "BGP Monitoring Protocol)",
              "type": "dict",
              "required": false,
              "suboptions": {
                "buffer_size": {
                  "aliases": [],
                  "description": "BMP Buffer Size\nPlease refer vendor documentation for valid values",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "initial_refresh": {
                  "aliases": [],
                  "description": "Initial Refresh options",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "delay": {
                      "aliases": [],
                      "description": "Delay before Initial Refresh",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "skip": {
                      "aliases": [],
                      "description": "skip all refreshes",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "server": {
                  "aliases": [],
                  "description": "Server Information\nPlease refer vendor documentation for valid values",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "default_information": {
              "aliases": [],
              "description": "Control distribution of default information\nDistribute a default route",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "default_metric": {
              "aliases": [],
              "description": "Set metric of redistributed routes\nPlease refer vendor documentation for valid values",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "distance": {
              "aliases": [],
              "description": "Define an administrative distance",
              "type": "dict",
              "required": false,
              "suboptions": {
                "admin": {
                  "aliases": [],
                  "description": "Administrative distance",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "acl": {
                      "aliases": [],
                      "description": "IP Standard access list number\nIP Standard expanded access list number\nStandard access-list name",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "address": {
                      "aliases": [],
                      "description": "IP Source address (A.B.C.D)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "distance": {
                      "aliases": [],
                      "description": "Administrative distance\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "wildcard_bit": {
                      "aliases": [],
                      "description": "Wildcard bits (A.B.C.D)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bgp": {
                  "aliases": [],
                  "description": "BGP distance",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "routes_external": {
                      "aliases": [],
                      "description": "Distance for routes external to the AS\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "routes_internal": {
                      "aliases": [],
                      "description": "Distance for routes internal to the AS\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "routes_local": {
                      "aliases": [],
                      "description": "Distance for local routes\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "mbgp": {
                  "aliases": [],
                  "description": "MBGP distance",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "routes_external": {
                      "aliases": [],
                      "description": "Distance for routes external to the AS\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "routes_internal": {
                      "aliases": [],
                      "description": "Distance for routes internal to the AS\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "routes_local": {
                      "aliases": [],
                      "description": "Distance for local routes\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "distribute_list": {
              "aliases": [],
              "description": "Filter networks in routing updates",
              "type": "dict",
              "required": false,
              "suboptions": {
                "acl": {
                  "aliases": [],
                  "description": "IP access list number/name",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "in": {
                  "aliases": [],
                  "description": "Filter incoming routing updates",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "interface": {
                  "aliases": [],
                  "description": "interface details",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "out": {
                  "aliases": [],
                  "description": "Filter outgoing routing updates",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "maximum_paths": {
              "aliases": [],
              "description": "Forward packets over multiple paths",
              "type": "dict",
              "required": false,
              "suboptions": {
                "eibgp": {
                  "aliases": [],
                  "description": "Both eBGP and iBGP paths as multipath",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "ibgp": {
                  "aliases": [],
                  "description": "iBGP-multipath",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "paths": {
                  "aliases": [],
                  "description": "Number of paths",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "maximum_secondary_paths": {
              "aliases": [],
              "description": "Maximum secondary paths",
              "type": "dict",
              "required": false,
              "suboptions": {
                "eibgp": {
                  "aliases": [],
                  "description": "Both eBGP and iBGP paths as secondary multipath",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "ibgp": {
                  "aliases": [],
                  "description": "iBGP-secondary-multipath",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "paths": {
                  "aliases": [],
                  "description": "Number of secondary paths",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "neighbor": {
              "aliases": [],
              "description": "Specify a neighbor router",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "activate": {
                  "aliases": [],
                  "description": "Enable the Address Family for this Neighbor",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "additional_paths": {
                  "aliases": [],
                  "description": "Negotiate additional paths capabilities with this neighbor",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disable": {
                      "aliases": [],
                      "description": "Disable additional paths for this neighbor",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "receive": {
                      "aliases": [],
                      "description": "Receive additional paths from neighbors",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "send": {
                      "aliases": [],
                      "description": "Send additional paths to neighbors",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "address": {
                  "aliases": [],
                  "description": "Neighbor address (A.B.C.D)",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "advertise": {
                  "aliases": [],
                  "description": "Advertise to this neighbor",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "additional_paths": {
                      "aliases": [],
                      "description": "Advertise additional paths",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "all": {
                          "aliases": [],
                          "description": "Select all available paths",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "best": {
                          "aliases": [],
                          "description": "Select best N paths (2-3).",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "group_best": {
                          "aliases": [],
                          "description": "Select group-best path",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "best_external": {
                      "aliases": [],
                      "description": "Advertise best-external (at RRs best-internal) path",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "diverse_path": {
                      "aliases": [],
                      "description": "Advertise additional paths",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "backup": {
                          "aliases": [],
                          "description": "Diverse path can be backup path",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "mpath": {
                          "aliases": [],
                          "description": "Diverse path can be multipath",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "advertise_map": {
                  "aliases": [],
                  "description": "specify route-map for conditional advertisement",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "exist_map": {
                      "aliases": [],
                      "description": "advertise prefix only if prefix is in the condition exists\ncondition route-map name",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "advertise route-map name",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "non_exist_map": {
                      "aliases": [],
                      "description": "advertise prefix only if prefix in the condition does not exist\ncondition route-map name",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "advertisement_interval": {
                  "aliases": [],
                  "description": "Minimum interval between sending BGP routing updates",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "aigp": {
                  "aliases": [],
                  "description": "AIGP on neighbor",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "enable": {
                      "aliases": [],
                      "description": "Enable AIGP",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "send": {
                      "aliases": [],
                      "description": "Cost community or MED carrying AIGP VALUE",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "cost_community": {
                          "aliases": [],
                          "description": "Cost extended community carrying AIGP Value",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "id": {
                              "aliases": [],
                              "description": "Community ID\nPlease refer vendor documentation for valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "poi": {
                              "aliases": [],
                              "description": "Point of Insertion",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "igp_cost": {
                                  "aliases": [],
                                  "description": "Point of Insertion After IGP",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "pre_bestpath": {
                                  "aliases": [],
                                  "description": "Point of Insertion At Beginning",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "transitive": {
                                  "aliases": [],
                                  "description": "Cost community is Transitive",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "med": {
                          "aliases": [],
                          "description": "Med carrying AIGP Value",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "allow_policy": {
                  "aliases": [],
                  "description": "Enable the policy support for this IBGP Neighbor",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "allowas_in": {
                  "aliases": [],
                  "description": "Accept as-path with my AS present in it",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "as_override": {
                  "aliases": [],
                  "description": "Override matching AS-number while sending update\nMaintain Split Horizon while sending update",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "bmp_activate": {
                  "aliases": [],
                  "description": "Activate the BMP monitoring for a BGP peer",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "all": {
                      "aliases": [],
                      "description": "Activate BMP monitoring for all servers",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "server": {
                      "aliases": [],
                      "description": "Activate BMP for server\nBMP Server Number\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "capability": {
                  "aliases": [],
                  "description": "Advertise capability to the peer\nAdvertise ORF capability to the peer\nAdvertise prefixlist ORF capability to this neighbor",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "both": {
                      "aliases": [],
                      "description": "Capability to SEND and RECEIVE the ORF to/from this neighbor",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "receive": {
                      "aliases": [],
                      "description": "Capability to RECEIVE the ORF from this neighbor",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "send": {
                      "aliases": [],
                      "description": "Capability to SEND the ORF to this neighbor",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "cluster_id": {
                  "aliases": [],
                  "description": "Configure Route-Reflector Cluster-id (peers may reset)\nRoute-Reflector Cluster-id as 32 bit quantity, or Route-Reflector Cluster-id in IP address format (A.B.C.D)",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "default_originate": {
                  "aliases": [],
                  "description": "Originate default route to this neighbor",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "route_map": {
                      "aliases": [],
                      "description": "Route-map to specify criteria to originate default",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Originate default route to this neighbor",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "description": {
                  "aliases": [],
                  "description": "Neighbor specific description",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "disable_connected_check": {
                  "aliases": [],
                  "description": "one-hop away EBGP peer using loopback address",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "distribute_list": {
                  "aliases": [],
                  "description": "Filter updates to/from this neighbor",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "acl": {
                      "aliases": [],
                      "description": "IP access list number/name",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "in": {
                      "aliases": [],
                      "description": "Filter incoming updates",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "out": {
                      "aliases": [],
                      "description": "Filter outgoing updates",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "dmzlink_bw": {
                  "aliases": [],
                  "description": "Propagate the DMZ link bandwidth",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "ebgp_multihop": {
                  "aliases": [],
                  "description": "Allow EBGP neighbors not on directly connected networks",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "enable": {
                      "aliases": [],
                      "description": "Allow EBGP neighbors not on directly connected networks",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "hop_count": {
                      "aliases": [],
                      "description": "Maximum hop count\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "fall_over": {
                  "aliases": [],
                  "description": "Session fall on peer route lost",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "bfd": {
                      "aliases": [],
                      "description": "Use BFD to detect failure",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "multi_hop": {
                          "aliases": [],
                          "description": "Force BFD multi-hop to detect failure",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "set bfd",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "single_hop": {
                          "aliases": [],
                          "description": "Force BFD single-hop to detect failure",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map for peer route",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "filter_list": {
                  "aliases": [],
                  "description": "Establish BGP filters",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "in": {
                      "aliases": [],
                      "description": "Filter incoming updates",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "out": {
                      "aliases": [],
                      "description": "Filter outgoing updates",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "path_acl": {
                      "aliases": [],
                      "description": "AS path access list",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "ha_mode": {
                  "aliases": [],
                  "description": "high availability mode",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disable": {
                      "aliases": [],
                      "description": "disable graceful-restart",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "set ha-mode and graceful-restart for this peer",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "inherit": {
                  "aliases": [],
                  "description": "Inherit a template\nInherit a peer-session template and Template name",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "ipv6_adddress": {
                  "aliases": [],
                  "description": "Neighbor ipv6 address (X:X:X:X::X)",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "local_as": {
                  "aliases": [],
                  "description": "Specify a local-as number",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "dual_as": {
                      "aliases": [],
                      "description": "Accept either real AS or local AS from the ebgp peer",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "no_prepend": {
                      "aliases": [],
                      "description": "Do not prepend local-as to updates from ebgp peers",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "replace_as": {
                          "aliases": [],
                          "description": "Replace real AS with local AS in the EBGP updates",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set prepend",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "number": {
                      "aliases": [],
                      "description": "AS number used as local AS\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "set local-as number",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "log_neighbor_changes": {
                  "aliases": [],
                  "description": "Log neighbor up/down and reset reason",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disable": {
                      "aliases": [],
                      "description": "disable Log neighbor up/down and reset",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "set Log neighbor up/down and reset",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "maximum_prefix": {
                  "aliases": [],
                  "description": "Maximum number of prefixes accepted from this peer",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "max_no": {
                      "aliases": [],
                      "description": "maximum no. of prefix limit",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "restart": {
                      "aliases": [],
                      "description": "Restart bgp connection after limit is exceeded",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "threshold_val": {
                      "aliases": [],
                      "description": "Threshold value (%) at which to generate a warning msg",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "warning_only": {
                      "aliases": [],
                      "description": "Only give warning message when limit is exceeded",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "next_hop_self": {
                  "aliases": [],
                  "description": "Disable the next hop calculation for this neighbor",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "all": {
                      "aliases": [],
                      "description": "Enable next-hop-self for both eBGP and iBGP received paths",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Enable next-hop-self",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "next_hop_unchanged": {
                  "aliases": [],
                  "description": "Propagate next hop unchanged for iBGP paths to this neighbor\nPropagate next hop unchanged for all paths (iBGP and eBGP) to this neighbor",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "allpaths": {
                      "aliases": [],
                      "description": "Propagate next hop unchanged for all paths (iBGP and eBGP) to this neighbor",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Enable next-hop-unchanged",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "password": {
                  "aliases": [],
                  "description": "Set a password",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "path_attribute": {
                  "aliases": [],
                  "description": "BGP optional attribute filtering",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "discard": {
                      "aliases": [],
                      "description": "Discard matching path-attribute for this neighbor",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "in": {
                          "aliases": [],
                          "description": "Perform inbound path-attribute filtering",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "range": {
                          "aliases": [],
                          "description": "path attribute range",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "end": {
                              "aliases": [],
                              "description": "path attribute range end value\nPlease refer vendor documentation for valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "start": {
                              "aliases": [],
                              "description": "path attribute range start value\nPlease refer vendor documentation for valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "type": {
                          "aliases": [],
                          "description": "path attribute type\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "treat_as_withdraw": {
                      "aliases": [],
                      "description": "Treat-as-withdraw matching path-attribute for this neighbor",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "in": {
                          "aliases": [],
                          "description": "Perform inbound path-attribute filtering",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "range": {
                          "aliases": [],
                          "description": "path attribute range",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "end": {
                              "aliases": [],
                              "description": "path attribute range end value\nPlease refer vendor documentation for valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "start": {
                              "aliases": [],
                              "description": "path attribute range start value\nPlease refer vendor documentation for valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "type": {
                          "aliases": [],
                          "description": "path attribute type\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "peer_group": {
                  "aliases": [],
                  "description": "Member of the peer-group",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "remote_as": {
                  "aliases": [],
                  "description": "Specify a BGP neighbor\nAS of remote neighbor",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "remove_private_as": {
                  "aliases": [],
                  "description": "Remove private AS number from outbound updates",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "all": {
                      "aliases": [],
                      "description": "Remove all private AS numbers",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "replace_as": {
                      "aliases": [],
                      "description": "Replace all private AS numbers with local AS",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Remove private AS number",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "route_map": {
                  "aliases": [],
                  "description": "Apply route map to neighbor",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "in": {
                      "aliases": [],
                      "description": "Apply map to incoming routes",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "Replace all private AS numbers with local AS",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "out": {
                      "aliases": [],
                      "description": "Apply map to outbound routes",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "route_reflector_client": {
                  "aliases": [],
                  "description": "Configure a neighbor as Route Reflector client",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "route_server_client": {
                  "aliases": [],
                  "description": "Configure a neighbor as Route Server client",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "context": {
                      "aliases": [],
                      "description": "Specify Route Server context for neighbor\nRoute Server context name",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set Route Server client",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "send_community": {
                  "aliases": [],
                  "description": "Send Community attribute to this neighbor",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "both": {
                      "aliases": [],
                      "description": "Send Standard and Extended Community attributes",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "extended": {
                      "aliases": [],
                      "description": "Send Extended Community attribute",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set send Community attribute to this neighbor",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "standard": {
                      "aliases": [],
                      "description": "Send Standard Community attribute",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "send_label": {
                  "aliases": [],
                  "description": "Send NLRI + MPLS Label to this peer",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "explicit_null": {
                      "aliases": [],
                      "description": "Advertise Explicit Null label in place of Implicit Null",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set send NLRI + MPLS Label to this peer",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "shutdown": {
                  "aliases": [],
                  "description": "Administratively shut down this neighbor",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "graceful": {
                      "aliases": [],
                      "description": "Gracefully shut down this neighbor\ntime in seconds\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "shut down",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "slow_peer": {
                  "aliases": [],
                  "description": "Configure slow-peer",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "detection": {
                      "aliases": [],
                      "description": "Configure slow-peer",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Disable slow-peer detection",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "enable": {
                          "aliases": [],
                          "description": "Enable slow-peer detection",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "threshold": {
                          "aliases": [],
                          "description": "Set the slow-peer detection threshold",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "split_update_group": {
                      "aliases": [],
                      "description": "Configure slow-peer split-update-group",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "dynamic": {
                          "aliases": [],
                          "description": "Dynamically split the slow peer to slow-update group",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "Disable slow-peer detection",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "enable": {
                              "aliases": [],
                              "description": "Enable slow-peer detection",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "permanent": {
                              "aliases": [],
                              "description": "Keep the slow-peer permanently in slow-update group",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "static": {
                          "aliases": [],
                          "description": "Static slow-peer",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "soft_reconfiguration": {
                  "aliases": [],
                  "description": "Per neighbor soft reconfiguration\nAllow inbound soft reconfiguration for this neighbor",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "tag": {
                  "aliases": [],
                  "description": "Neighbor tag",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "timers": {
                  "aliases": [],
                  "description": "BGP per neighbor timers",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "holdtime": {
                      "aliases": [],
                      "description": "Holdtime",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "interval": {
                      "aliases": [],
                      "description": "Keepalive interval",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "min_holdtime": {
                      "aliases": [],
                      "description": "Minimum hold time from neighbor",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "translate_update": {
                  "aliases": [],
                  "description": "Translate Update to MBGP format",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "nlri": {
                      "aliases": [],
                      "description": "Specify type of nlri to translate to",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "multicast": {
                          "aliases": [],
                          "description": "Translate Update to multicast nlri",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "unicast": {
                          "aliases": [],
                          "description": "Process Update as unicast nlri",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set Translate Update",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "transport": {
                  "aliases": [],
                  "description": "Transport options",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "connection_mode": {
                      "aliases": [],
                      "description": "Specify passive or active connection",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "active": {
                          "aliases": [],
                          "description": "Actively establish the TCP session",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "passive": {
                          "aliases": [],
                          "description": "Passively establish the TCP session",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "multi_session": {
                      "aliases": [],
                      "description": "Use Multi-session for transport",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "path_mtu_discovery": {
                      "aliases": [],
                      "description": "Use transport path MTU discovery",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "disable",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Use path MTU discovery",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "ttl_security": {
                  "aliases": [],
                  "description": "BGP ttl security check\nmaximum number of hops\nPlease refer vendor documentation for valid values",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "unsuppress_map": {
                  "aliases": [],
                  "description": "Route-map to selectively unsuppress suppressed routes\nName of route map",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "version": {
                  "aliases": [],
                  "description": "Set the BGP version to match a neighbor\nNeighbor's BGP version\nPlease refer vendor documentation for valid values",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "weight": {
                  "aliases": [],
                  "description": "Set default weight for routes from this neighbor",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "redistribute": {
              "aliases": [],
              "description": "Redistribute information from another routing protocol",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "application": {
                  "aliases": [],
                  "description": "Application",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "metric": {
                      "aliases": [],
                      "description": "Metric for redistributed routes",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "Application name",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map reference",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bgp": {
                  "aliases": [],
                  "description": "Border Gateway Protocol (BGP)",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "as_number": {
                      "aliases": [],
                      "description": "Autonomous system number",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric": {
                      "aliases": [],
                      "description": "Metric for redistributed routes",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map reference",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "connected": {
                  "aliases": [],
                  "description": "Connected",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "metric": {
                      "aliases": [],
                      "description": "Metric for redistributed routes",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map reference",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "eigrp": {
                  "aliases": [],
                  "description": "Enhanced Interior Gateway Routing Protocol (EIGRP)",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "as_number": {
                      "aliases": [],
                      "description": "Autonomous system number",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric": {
                      "aliases": [],
                      "description": "Metric for redistributed routes",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map reference",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "isis": {
                  "aliases": [],
                  "description": "ISO IS-IS",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "area_tag": {
                      "aliases": [],
                      "description": "ISO routing area tag",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "clns": {
                      "aliases": [],
                      "description": "Redistribution of OSI dynamic routes",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "ip": {
                      "aliases": [],
                      "description": "Redistribution of IP dynamic routes",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric": {
                      "aliases": [],
                      "description": "Metric for redistributed routes",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map reference",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "iso_igrp": {
                  "aliases": [],
                  "description": "IGRP for OSI networks",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "area_tag": {
                      "aliases": [],
                      "description": "ISO routing area tag",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map reference",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "lisp": {
                  "aliases": [],
                  "description": "Locator ID Separation Protocol (LISP)",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "metric": {
                      "aliases": [],
                      "description": "Metric for redistributed routes",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map reference",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "mobile": {
                  "aliases": [],
                  "description": "Mobile routes",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "metric": {
                      "aliases": [],
                      "description": "Metric for redistributed routes",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map reference",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "odr": {
                  "aliases": [],
                  "description": "On Demand stub Routes",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "metric": {
                      "aliases": [],
                      "description": "Metric for redistributed routes",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map reference",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "ospf": {
                  "aliases": [],
                  "description": "Open Shortest Path First (OSPF)",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "match": {
                      "aliases": [],
                      "description": "On Demand stub Routes",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "external": {
                          "aliases": [],
                          "description": "Redistribute OSPF external routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "internal": {
                          "aliases": [],
                          "description": "Redistribute OSPF internal routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "nssa_external": {
                          "aliases": [],
                          "description": "Redistribute OSPF NSSA external routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "type_1": {
                          "aliases": [],
                          "description": "Redistribute NSSA external type 1 routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "type_2": {
                          "aliases": [],
                          "description": "Redistribute NSSA external type 2 routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "metric": {
                      "aliases": [],
                      "description": "Metric for redistributed routes",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "process_id": {
                      "aliases": [],
                      "description": "Process ID",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map reference",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "vrf": {
                      "aliases": [],
                      "description": "VPN Routing/Forwarding Instance",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "ospfv3": {
                  "aliases": [],
                  "description": "OSPFv3",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "match": {
                      "aliases": [],
                      "description": "On Demand stub Routes",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "external": {
                          "aliases": [],
                          "description": "Redistribute OSPF external routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "internal": {
                          "aliases": [],
                          "description": "Redistribute OSPF internal routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "nssa_external": {
                          "aliases": [],
                          "description": "Redistribute OSPF NSSA external routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "type_1": {
                          "aliases": [],
                          "description": "Redistribute NSSA external type 1 routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "type_2": {
                          "aliases": [],
                          "description": "Redistribute NSSA external type 2 routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "metric": {
                      "aliases": [],
                      "description": "Metric for redistributed routes",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "process_id": {
                      "aliases": [],
                      "description": "Process ID",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map reference",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "rip": {
                  "aliases": [],
                  "description": "Routing Information Protocol (RIP)",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "metric": {
                      "aliases": [],
                      "description": "Metric for redistributed routes",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map reference",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "static": {
                  "aliases": [],
                  "description": "Static routes",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "clns": {
                      "aliases": [],
                      "description": "Redistribution of OSI static routes",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "ip": {
                      "aliases": [],
                      "description": "Redistribution of IP static routes",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric": {
                      "aliases": [],
                      "description": "Metric for redistributed routes",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route map reference",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "vrf": {
                  "aliases": [],
                  "description": "Specify a source VRF",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "global": {
                      "aliases": [],
                      "description": "global VRF",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "Source VRF name",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "route_server_context": {
              "aliases": [],
              "description": "Enter route server context command mode",
              "type": "dict",
              "required": false,
              "suboptions": {
                "address_family": {
                  "aliases": [],
                  "description": "Enter address family command mode",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "afi": {
                      "aliases": [],
                      "description": "Address family",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "ipv4",
                        "ipv6"
                      ],
                      "suboptions": {}
                    },
                    "import_map": {
                      "aliases": [],
                      "description": "Import matching routes using a route map\nName of route map",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "modifier": {
                      "aliases": [],
                      "description": "Address Family modifier",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "multicast",
                        "unicast"
                      ],
                      "suboptions": {}
                    }
                  }
                },
                "description": {
                  "aliases": [],
                  "description": "Textual description of the router server context",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Name of route server context",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "scope": {
              "aliases": [],
              "description": "Enter scope command mode",
              "type": "dict",
              "required": false,
              "suboptions": {
                "global": {
                  "aliases": [],
                  "description": "Global scope",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "vrf": {
                  "aliases": [],
                  "description": "VRF scope\nVPN Routing/Forwarding instance name",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "synchronization": {
              "aliases": [],
              "description": "Perform IGP synchronization",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "table_map": {
              "aliases": [],
              "description": "Map external entry attributes into routing table",
              "type": "dict",
              "required": false,
              "suboptions": {
                "filter": {
                  "aliases": [],
                  "description": "Selective route download",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "route-map name",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "template": {
              "aliases": [],
              "description": "Enter template command mode",
              "type": "dict",
              "required": false,
              "suboptions": {
                "peer_policy": {
                  "aliases": [],
                  "description": "Template configuration for policy parameters",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "peer_session": {
                  "aliases": [],
                  "description": "Template configuration for session parameters",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "timers": {
              "aliases": [],
              "description": "Adjust routing timers\nBGP timers",
              "type": "dict",
              "required": false,
              "suboptions": {
                "holdtime": {
                  "aliases": [],
                  "description": "Holdtime",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "keepalive": {
                  "aliases": [],
                  "description": "Keepalive interval",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "min_holdtime": {
                  "aliases": [],
                  "description": "Minimum hold time from neighbor",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(sh running-config | section ^router bgp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(show running-config | include ip route|ipv6 route) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "deleted",
            "purged",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Global BGP resource module",
      "version_added": "1.3.0"
    },
    "examples": "\n# Using merged\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | section ^router bgp\n\n- name: Merge provided configuration with device configuration\n  cisco.ios.ios_bgp_global:\n    config:\n      as_number: 65000\n      bgp:\n        advertise_best_external: true\n        bestpath:\n          - compare_routerid: true\n        nopeerup_delay:\n          - post_boot: 10\n        dampening:\n          penalty_half_time: 1\n          reuse_route_val: 1\n          suppress_route_val: 1\n          max_suppress: 1\n        graceful_shutdown:\n          neighbors:\n            time: 50\n          community: 100\n          local_preference: 100\n      neighbor:\n        - address: 198.51.100.1\n          description:  merge neighbor\n          remote_as: 100\n          aigp:\n            send:\n              cost_community:\n                id: 100\n                poi:\n                  igp_cost: true\n                  transitive: true\n          route_map:\n            name: test-route\n            out: true\n    state: merged\n\n# Commands fired:\n# ---------------\n#\n#  \"commands\": [\n#         \"router bgp 65000\",\n#         \"bgp dampening 1 1 1 1\",\n#         \"bgp graceful-shutdown all neighbors 50 community 100 local-preference 100\",\n#         \"bgp advertise-best-external\",\n#         \"bgp nopeerup-delay post-boot 10\",\n#         \"bgp bestpath compare-routerid\",\n#         \"neighbor 198.51.100.1 remote-as 100\",\n#         \"neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\",\n#         \"neighbor 198.51.100.1 description merge neighbor\",\n#         \"neighbor 198.51.100.1 route-map test-route out\"\n#     ]\n\n# After state:\n# ------------\n#\n# vios#sh running-config | section ^router bgp\n# router bgp 65000\n#  bgp nopeerup-delay post-boot 10\n#  bgp graceful-shutdown all neighbors 50 local-preference 100 community 100\n#  bgp bestpath compare-routerid\n#  bgp dampening 1 1 1 1\n#  bgp advertise-best-external\n#  neighbor 198.51.100.1 remote-as 100\n#  neighbor 198.51.100.1 description merge neighbor\n#  neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\n#  neighbor 198.51.100.1 route-map test-route out\n\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | section ^router bgp\n# router bgp 65000\n#  bgp nopeerup-delay post-boot 10\n#  bgp graceful-shutdown all neighbors 50 local-preference 100 community 100\n#  bgp bestpath compare-routerid\n#  bgp dampening 1 1 1 1\n#  bgp advertise-best-external\n#  neighbor 198.51.100.1 remote-as 100\n#  neighbor 198.51.100.1 description merge neighbor\n#  neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\n#  neighbor 198.51.100.1 route-map test-route out\n\n\n- name: Replaces device configuration of listed global BGP with provided configuration\n  cisco.ios.ios_bgp_global:\n    config:\n      as_number: 65000\n      bgp:\n        advertise_best_external: true\n        bestpath:\n          - med:\n              confed: true\n        log_neighbor_changes: true\n        nopeerup_delay:\n          - post_boot: 10\n            cold_boot: 20\n      neighbor:\n        - address: 192.0.2.1\n          description:  replace neighbor\n          remote_as: 100\n          slow_peer:\n            detection:\n              disable: true\n    state: replaced\n\n# Commands fired:\n# ---------------\n#\n#  \"commands\": [\n#     \"router bgp 65000\"\n#     \"no bgp dampening 1 1 1 1\"\n#     \"no timers bgp 100 200 150\"\n#     \"no bgp bestpath compare-routerid\"\n#     \"bgp bestpath med confed\"\n#     \"bgp nopeerup-delay cold-boot 20\"\n#     \"no neighbor 198.51.100.1 remote-as 100\"\n#     \"neighbor 192.0.2.1 remote-as 100\"\n#     \"no bgp graceful-shutdown all neighbors 50 local-preference 100 community 100\"\n#     \"no neighbor 198.51.100.1 route-map test-route out\"\n#     \"no neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\"\n#     \"no neighbor 198.51.100.1 description merge neighbor\"\n#     \"neighbor 192.0.2.1 slow-peer detection disable\"\n#     \"neighbor 192.0.2.1 description replace neighbor\"\n# ]\n\n\n# After state:\n# -------------\n#\n# vios#sh running-config | section ^router bgp\n# router bgp 65000\n#  bgp log-neighbor-changes\n#  bgp nopeerup-delay cold-boot 20\n#  bgp nopeerup-delay post-boot 10\n#  bgp bestpath med confed\n#  bgp advertise-best-external\n#  redistribute connected metric 10\n#  neighbor 192.0.2.1 remote-as 100\n#  neighbor 192.0.2.1 description replace neighbor\n#  neighbor 192.0.2.1 slow-peer detection disable\n\n# Using Deleted\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | section ^router bgp\n# router bgp 65000\n#  bgp nopeerup-delay post-boot 10\n#  bgp graceful-shutdown all neighbors 50 local-preference 100 community 100\n#  bgp bestpath compare-routerid\n#  bgp dampening 1 1 1 1\n#  bgp advertise-best-external\n#  neighbor 198.51.100.1 remote-as 100\n#  neighbor 198.51.100.1 description merge neighbor\n#  neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\n#  neighbor 198.51.100.1 route-map test-route out\n\n- name: \"Delete global BGP (Note: This won't delete the configured global BGP)\"\n  cisco.ios.ios_bgp_global:\n    config:\n      as_number: 65000\n    state: deleted\n\n# Commands fired:\n# ---------------\n#  \"commands\": [\n#         \"router bgp 65000\",\n#         \"no bgp dampening 1 1 1 1\",\n#         \"no bgp graceful-shutdown all neighbors 50 community 100 local-preference 100\",\n#         \"no bgp advertise-best-external\",\n#         \"no bgp bestpath compare-routerid\",\n#         \"no bgp nopeerup-delay post-boot 10\",\n#         \"no neighbor 198.51.100.1 remote-as 100\",\n#         \"no neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\",\n#         \"no neighbor 198.51.100.1 description merge neighbor\",\n#         \"no neighbor 198.51.100.1 route-map test-route out\"\n#     ]\n\n\n# After state:\n# -------------\n#\n# vios#sh running-config | section ^router bgp\n# router bgp 65000\n\n\n# Using Deleted without any config passed\n#\"(NOTE: This will delete all of configured global BGP)\"\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | section ^router bgp\n# router bgp 65000\n#  bgp nopeerup-delay post-boot 10\n#  bgp graceful-shutdown all neighbors 50 local-preference 100 community 100\n#  bgp bestpath compare-routerid\n#  bgp dampening 1 1 1 1\n#  bgp advertise-best-external\n#  neighbor 198.51.100.1 remote-as 100\n#  neighbor 198.51.100.1 description merge neighbor\n#  neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\n#  neighbor 198.51.100.1 route-map test-route out\n\n\n- name: \"Delete global BGP without config\"\n  cisco.ios.ios_bgp_global:\n    state: deleted\n\n# Commands fired:\n# ---------------\n#  \"commands\": [\n#         \"router bgp 65000\",\n#         \"no bgp dampening 1 1 1 1\",\n#         \"no bgp graceful-shutdown all neighbors 50 community 100 local-preference 100\",\n#         \"no bgp advertise-best-external\",\n#         \"no bgp bestpath compare-routerid\",\n#         \"no bgp nopeerup-delay post-boot 10\",\n#         \"no neighbor 198.51.100.1 remote-as 100\",\n#         \"no neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\",\n#         \"no neighbor 198.51.100.1 description merge neighbor\",\n#         \"no neighbor 198.51.100.1 route-map test-route out\"\n#     ]\n\n\n# After state:\n# -------------\n#\n# vios#sh running-config | section ^router bgp\n# router bgp 65000\n\n# Using Purged\n#\"(NOTE: This WILL delete the configured global BGP)\"\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | section ^router bgp\n# router bgp 65000\n#  bgp nopeerup-delay post-boot 10\n#  bgp graceful-shutdown all neighbors 50 local-preference 100 community 100\n#  bgp bestpath compare-routerid\n#  bgp dampening 1 1 1 1\n#  bgp advertise-best-external\n#  neighbor 198.51.100.1 remote-as 100\n#  neighbor 198.51.100.1 description merge neighbor\n#  neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\n#  neighbor 198.51.100.1 route-map test-route out\n\n\n- name: 'Delete the configured global BGP (Note: This WILL delete the the configured\n    global BGP)'\n  cisco.ios.ios_bgp_global:\n    state: purged\n\n# Commands fired:\n# ---------------\n#  \"commands\": [\n#         \"no router bgp 65000\",\n#     ]\n\n# After state:\n# -------------\n#\n# vios#sh running-config | section ^router bgp\n\n# Using Gathered\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | section ^router bgp\n# router bgp 65000\n#  bgp nopeerup-delay post-boot 10\n#  bgp graceful-shutdown all neighbors 50 local-preference 100 community 100\n#  bgp bestpath compare-routerid\n#  bgp dampening 1 1 1 1\n#  bgp advertise-best-external\n#  neighbor 198.51.100.1 remote-as 100\n#  neighbor 198.51.100.1 description merge neighbor\n#  neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\n#  neighbor 198.51.100.1 route-map test-route out\n\n\n- name: Gather listed global BGP with provided configurations\n  cisco.ios.ios_bgp_global:\n    config:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n#\n#  \"gathered\": {\n#         \"as_number\": \"65000\",\n#         \"bgp\": {\n#             \"advertise_best_external\": true,\n#             \"bestpath\": [\n#                 {\n#                     \"compare_routerid\": true\n#                 }\n#             ],\n#             \"dampening\": {\n#                 \"max_suppress\": 1,\n#                 \"penalty_half_time\": 1,\n#                 \"reuse_route_val\": 1,\n#                 \"suppress_route_val\": 1\n#             },\n#             \"graceful_shutdown\": {\n#                 \"community\": \"100\",\n#                 \"local_preference\": 100,\n#                 \"neighbors\": {\n#                     \"time\": 50\n#                 }\n#             },\n#             \"nopeerup_delay\": [\n#                 {\n#                     \"post_boot\": 10\n#                 }\n#             ]\n#         },\n#         \"neighbor\": [\n#             {\n#                 \"address\": \"198.51.100.1\",\n#                 \"aigp\": {\n#                     \"send\": {\n#                         \"cost_community\": {\n#                             \"id\": 100,\n#                             \"poi\": {\n#                                 \"igp_cost\": true,\n#                                 \"transitive\": true\n#                             }\n#                         }\n#                     }\n#                 },\n#                 \"description\": \"merge neighbor\",\n#                 \"remote_as\": 100,\n#                 \"route_map\": {\n#                     \"name\": \"test-route\",\n#                     \"out\": true\n#                 }\n#             }\n#         ]\n#     }\n\n# Using Rendered\n\n- name: Rendered the provided configuration with the existing running configuration\n  cisco.ios.ios_bgp_global:\n    config:\n      as_number: 65000\n      bgp:\n        advertise_best_external: true\n        bestpath:\n          - compare_routerid: true\n        nopeerup_delay:\n          - post_boot: 10\n        dampening:\n          penalty_half_time: 1\n          reuse_route_val: 1\n          suppress_route_val: 1\n          max_suppress: 1\n        graceful_shutdown:\n          neighbors:\n            time: 50\n          community: 100\n          local_preference: 100\n      neighbor:\n        - address: 198.51.100.1\n          description:  merge neighbor\n          remote_as: 100\n          aigp:\n            send:\n              cost_community:\n                id: 100\n                poi:\n                  igp_cost: true\n                  transitive: true\n          route_map:\n            name: test-route\n            out: true\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"rendered\": [\n#       \"router bgp 65000\",\n#       \"bgp dampening 1 1 1 1\",\n#       \"bgp graceful-shutdown all neighbors 50 community 100 local-preference 100\",\n#       \"bgp advertise-best-external\",\n#       \"bgp nopeerup-delay post-boot 10\",\n#       \"bgp bestpath compare-routerid\",\n#       \"neighbor 198.51.100.1 remote-as 100\",\n#       \"neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\",\n#       \"neighbor 198.51.100.1 description merge neighbor\",\n#       \"neighbor 198.51.100.1 route-map test-route out\"\n#  ]\n\n# Using Parsed\n\n# File: parsed.cfg\n# ----------------\n#\n# router bgp 65000\n#  bgp nopeerup-delay post-boot 10\n#  bgp graceful-shutdown all neighbors 50 local-preference 100 community 100\n#  bgp bestpath compare-routerid\n#  bgp dampening 1 1 1 1\n#  bgp advertise-best-external\n#  neighbor 198.51.100.1 remote-as 100\n#  neighbor 198.51.100.1 description merge neighbor\n#  neighbor 198.51.100.1 aigp send cost-community 100 poi igp-cost transitive\n#  neighbor 198.51.100.1 route-map test-route out\n\n- name: Parse the commands for provided configuration\n  cisco.ios.ios_bgp_global:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n#\n#  \"parsed\": {\n#         \"as_number\": \"65000\",\n#         \"bgp\": {\n#             \"advertise_best_external\": true,\n#             \"bestpath\": [\n#                 {\n#                     \"compare_routerid\": true\n#                 }\n#             ],\n#             \"dampening\": {\n#                 \"max_suppress\": 1,\n#                 \"penalty_half_time\": 1,\n#                 \"reuse_route_val\": 1,\n#                 \"suppress_route_val\": 1\n#             },\n#             \"graceful_shutdown\": {\n#                 \"community\": \"100\",\n#                 \"local_preference\": 100,\n#                 \"neighbors\": {\n#                     \"time\": 50\n#                 }\n#             },\n#             \"nopeerup_delay\": [\n#                 {\n#                     \"post_boot\": 10\n#                 }\n#             ]\n#         },\n#         \"neighbor\": [\n#             {\n#                 \"address\": \"198.51.100.1\",\n#                 \"aigp\": {\n#                     \"send\": {\n#                         \"cost_community\": {\n#                             \"id\": 100,\n#                             \"poi\": {\n#                                 \"igp_cost\": true,\n#                                 \"transitive\": true\n#                             }\n#                         }\n#                     }\n#                 },\n#                 \"description\": \"merge neighbor\",\n#                 \"remote_as\": 100,\n#                 \"route_map\": {\n#                     \"name\": \"test-route\",\n#                     \"out\": true\n#                 }\n#             }\n#         ]\n#     }\n\n"
  },
  "cisco.ios.ios_command": {
    "doc": {
      "description": "Sends arbitrary commands to an ios node and returns the results read from the device. This module includes an argument that will cause the module to wait for a specific condition before returning or timing out if the condition is not met.\nThis module does not support running commands in configuration mode. Please use L(ios_config,https://docs.ansible.com/ansible/latest/collections/cisco/ios/ios_config_module.html#ansible-collections-cisco-ios-ios-config-module) to configure IOS devices.",
      "has_action": true,
      "notes": "Tested against IOS 15.6\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "commands": {
          "aliases": [],
          "description": "List of commands to send to the remote ios device over the configured provider. The resulting output from the command is returned. If the I(wait_for) argument is provided, the module is not returned until the condition is satisfied or the number of retries has expired. If a command sent to the device requires answering a prompt, it is possible to pass a dict containing I(command), I(answer) and I(prompt). Common answers are 'y' or \"\\r\" (carriage return, must be double quotes). See examples.",
          "type": "list",
          "required": true,
          "elements": "raw",
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "Configures the interval in seconds to wait between retries of the command. If the command does not pass the specified conditions, the interval indicates how long to wait before trying the command again.",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "match": {
          "aliases": [],
          "description": "The I(match) argument is used in conjunction with the I(wait_for) argument to specify the match policy.  Valid values are C(all) or C(any).  If the value is set to C(all) then all conditionals in the wait_for must be satisfied.  If the value is set to C(any) then only one of the values must be satisfied.",
          "default": "all",
          "type": "str",
          "required": false,
          "choices": [
            "any",
            "all"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "retries": {
          "aliases": [],
          "description": "Specifies the number of retries a command should by tried before it is considered failed. The command is run on the target device every retry and evaluated against the I(wait_for) conditions.",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "wait_for": {
          "aliases": [
            "waitfor"
          ],
          "description": "List of conditions to evaluate against the output of the command. The task will wait for each condition to be true before moving forward. If the conditional is not true within the configured number of retries, the task fails. See examples.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "short_description": "Run commands on remote devices running Cisco IOS",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: run show version on remote devices\n  cisco.ios.ios_command:\n    commands: show version\n\n- name: run show version and check to see if output contains IOS\n  cisco.ios.ios_command:\n    commands: show version\n    wait_for: result[0] contains IOS\n\n- name: run multiple commands on remote nodes\n  cisco.ios.ios_command:\n    commands:\n    - show version\n    - show interfaces\n\n- name: run multiple commands and evaluate the output\n  cisco.ios.ios_command:\n    commands:\n    - show version\n    - show interfaces\n    wait_for:\n    - result[0] contains IOS\n    - result[1] contains Loopback0\n\n- name: run commands that require answering a prompt\n  cisco.ios.ios_command:\n    commands:\n    - command: 'clear counters GigabitEthernet0/1'\n      prompt: 'Clear \"show interface\" counters on this interface \\[confirm\\]'\n      answer: 'y'\n    - command: 'clear counters GigabitEthernet0/2'\n      prompt: '[confirm]'\n      answer: \"\\r\"\n"
  },
  "cisco.ios.ios_config": {
    "doc": {
      "description": "Cisco IOS configurations use a simple block indent file syntax for segmenting configuration into sections.  This module provides an implementation for working with IOS configuration sections in a deterministic way.",
      "has_action": true,
      "notes": "Tested against IOS 15.6\nAbbreviated commands are NOT idempotent, see U(https://docs.ansible.com/ansible/latest/network/user_guide/faq.html#why-do-the-config-modules-always-return-changed-true-with-abbreviated-commands)\nTo ensure idempotency and correct diff the configuration lines in the relevant module options should be similar to how they appear if present in the running configuration on device including the indentation.\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "after": {
          "aliases": [],
          "description": "The ordered set of commands to append to the end of the command stack if a change needs to be made.  Just like with I(before) this allows the playbook designer to append a set of commands to be executed after the command set.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "backup": {
          "aliases": [],
          "description": "This argument will cause the module to create a full backup of the current C(running-config) from the remote device before any changes are made. If the C(backup_options) value is not given, the backup file is written to the C(backup) folder in the playbook root directory or role root directory, if playbook is part of an ansible role. If the directory does not exist, it is created.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "backup_options": {
          "aliases": [],
          "description": "This is a dict object containing configurable options related to backup file path. The value of this option is read only when C(backup) is set to I(yes), if C(backup) is set to I(no) this option will be silently ignored.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "dir_path": {
              "aliases": [],
              "description": "This option provides the path ending with directory name in which the backup configuration file will be stored. If the directory does not exist it will be first created and the filename is either the value of C(filename) or default filename as described in C(filename) options description. If the path value is not given in that case a I(backup) directory will be created in the current working directory and backup configuration will be copied in C(filename) within I(backup) directory.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "filename": {
              "aliases": [],
              "description": "The filename to be used to store the backup configuration. If the filename is not given it will be generated based on the hostname, current time and date in format defined by <hostname>_config.<current-date>@<current-time>",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "before": {
          "aliases": [],
          "description": "The ordered set of commands to push on to the command stack if a change needs to be made.  This allows the playbook designer the opportunity to perform configuration commands prior to pushing any changes without affecting how the set of commands are matched against the system.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "defaults": {
          "aliases": [],
          "description": "This argument specifies whether or not to collect all defaults when getting the remote device running config.  When enabled, the module will get the current config by issuing the command C(show running-config all).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "diff_against": {
          "aliases": [],
          "description": "When using the C(ansible-playbook --diff) command line argument the module can generate diffs against different sources.\nWhen this option is configure as I(startup), the module will return the diff of the running-config against the startup-config.\nWhen this option is configured as I(intended), the module will return the diff of the running-config against the configuration provided in the C(intended_config) argument.\nWhen this option is configured as I(running), the module will return the before and after diff of the running-config with respect to any changes made to the device configuration.",
          "type": "str",
          "required": false,
          "choices": [
            "running",
            "startup",
            "intended"
          ],
          "suboptions": {}
        },
        "diff_ignore_lines": {
          "aliases": [],
          "description": "Use this argument to specify one or more lines that should be ignored during the diff.  This is used for lines in the configuration that are automatically updated by the system.  This argument takes a list of regular expressions or exact line matches.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "intended_config": {
          "aliases": [],
          "description": "The C(intended_config) provides the master configuration that the node should conform to and is used to check the final running-config against. This argument will not modify any settings on the remote device and is strictly used to check the compliance of the current device's configuration against.  When specifying this argument, the task should also modify the C(diff_against) value and set it to I(intended). The configuration lines for this value should be similar to how it will appear if present in the running-configuration of the device including the indentation to ensure correct diff.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lines": {
          "aliases": [
            "commands"
          ],
          "description": "The ordered set of commands that should be configured in the section. The commands must be the exact same commands as found in the device running-config to ensure idempotency and correct diff. Be sure to note the configuration command syntax as some commands are automatically modified by the device config parser.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "match": {
          "aliases": [],
          "description": "Instructs the module on the way to perform the matching of the set of commands against the current device config.  If match is set to I(line), commands are matched line by line.  If match is set to I(strict), command lines are matched with respect to position.  If match is set to I(exact), command lines must be an equal match.  Finally, if match is set to I(none), the module will not attempt to compare the source configuration with the running configuration on the remote device.",
          "default": "line",
          "type": "str",
          "required": false,
          "choices": [
            "line",
            "strict",
            "exact",
            "none"
          ],
          "suboptions": {}
        },
        "multiline_delimiter": {
          "aliases": [],
          "description": "This argument is used when pushing a multiline configuration element to the IOS device.  It specifies the character to use as the delimiting character.  This only applies to the configuration action.",
          "default": "@",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "parents": {
          "aliases": [],
          "description": "The ordered set of parents that uniquely identify the section or hierarchy the commands should be checked against.  If the parents argument is omitted, the commands are checked against the set of top level or global commands.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "replace": {
          "aliases": [],
          "description": "Instructs the module on the way to perform the configuration on the device. If the replace argument is set to I(line) then the modified lines are pushed to the device in configuration mode.  If the replace argument is set to I(block) then the entire command block is pushed to the device in configuration mode if any line is not correct.",
          "default": "line",
          "type": "str",
          "required": false,
          "choices": [
            "line",
            "block"
          ],
          "suboptions": {}
        },
        "running_config": {
          "aliases": [
            "config"
          ],
          "description": "The module, by default, will connect to the remote device and retrieve the current running-config to use as a base for comparing against the contents of source. There are times when it is not desirable to have the task get the current running-config for every task in a playbook.  The I(running_config) argument allows the implementer to pass in the configuration to use as the base config for comparison. The configuration lines for this option should be similar to how it will appear if present in the running-configuration of the device including the indentation to ensure idempotency and correct diff.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "save_when": {
          "aliases": [],
          "description": "When changes are made to the device running-configuration, the changes are not copied to non-volatile storage by default.  Using this argument will change that before.  If the argument is set to I(always), then the running-config will always be copied to the startup-config and the I(modified) flag will always be set to True.  If the argument is set to I(modified), then the running-config will only be copied to the startup-config if it has changed since the last save to startup-config.  If the argument is set to I(never), the running-config will never be copied to the startup-config.  If the argument is set to I(changed), then the running-config will only be copied to the startup-config if the task has made a change. I(changed) was added in Ansible 2.5.",
          "default": "never",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "never",
            "modified",
            "changed"
          ],
          "suboptions": {}
        },
        "src": {
          "aliases": [],
          "description": "Specifies the source path to the file that contains the configuration or configuration template to load.  The path to the source file can either be the full path on the Ansible control host or a relative path from the playbook or role root directory. This argument is mutually exclusive with I(lines), I(parents). The configuration lines in the source file should be similar to how it will appear if present in the running-configuration of the device including the indentation to ensure idempotency and correct diff.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage Cisco IOS configuration sections",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure top level configuration\n  cisco.ios.ios_config:\n    lines: hostname {{ inventory_hostname }}\n\n- name: configure interface settings\n  cisco.ios.ios_config:\n    lines:\n    - description test interface\n    - ip address 172.31.1.1 255.255.255.0\n    parents: interface Ethernet1\n\n- name: configure ip helpers on multiple interfaces\n  cisco.ios.ios_config:\n    lines:\n    - ip helper-address 172.26.1.10\n    - ip helper-address 172.26.3.8\n    parents: '{{ item }}'\n  with_items:\n  - interface Ethernet1\n  - interface Ethernet2\n  - interface GigabitEthernet1\n\n- name: configure policer in Scavenger class\n  cisco.ios.ios_config:\n    lines:\n    - conform-action transmit\n    - exceed-action drop\n    parents:\n    - policy-map Foo\n    - class Scavenger\n    - police cir 64000\n\n- name: load new acl into device\n  cisco.ios.ios_config:\n    lines:\n    - 10 permit ip host 192.0.2.1 any log\n    - 20 permit ip host 192.0.2.2 any log\n    - 30 permit ip host 192.0.2.3 any log\n    - 40 permit ip host 192.0.2.4 any log\n    - 50 permit ip host 192.0.2.5 any log\n    parents: ip access-list extended test\n    before: no ip access-list extended test\n    match: exact\n\n- name: check the running-config against master config\n  cisco.ios.ios_config:\n    diff_against: intended\n    intended_config: \"{{ lookup('file', 'master.cfg') }}\"\n\n- name: check the startup-config against the running-config\n  cisco.ios.ios_config:\n    diff_against: startup\n    diff_ignore_lines:\n    - ntp clock .*\n\n- name: save running to startup when modified\n  cisco.ios.ios_config:\n    save_when: modified\n\n- name: for idempotency, use full-form commands\n  cisco.ios.ios_config:\n    lines:\n      # - shut\n    - shutdown\n    # parents: int gig1/0/11\n    parents: interface GigabitEthernet1/0/11\n\n# Set boot image based on comparison to a group_var (version) and the version\n# that is returned from the `ios_facts` module\n- name: SETTING BOOT IMAGE\n  cisco.ios.ios_config:\n    lines:\n    - no boot system\n    - boot system flash bootflash:{{new_image}}\n    host: '{{ inventory_hostname }}'\n  when: ansible_net_version != version\n- name: render a Jinja2 template onto an IOS device\n  cisco.ios.ios_config:\n    backup: yes\n    src: ios_template.j2\n\n- name: configurable backup path\n  cisco.ios.ios_config:\n    src: ios_template.j2\n    backup: yes\n    backup_options:\n      filename: backup.cfg\n      dir_path: /home/user\n\n# Example ios_template.j2\n# ip access-list extended test\n#  permit ip host 192.0.2.1 any log\n#  permit ip host 192.0.2.2 any log\n#  permit ip host 192.0.2.3 any log\n#  permit ip host 192.0.2.4 any log\n\n"
  },
  "cisco.ios.ios_facts": {
    "doc": {
      "description": "Collects a base set of device facts from a remote device that is running IOS.  This module prepends all of the base network fact keys with C(ansible_net_<fact>).  The facts module will always collect a base set of facts from the device and can enable or disable collection of additional facts.",
      "has_action": true,
      "notes": "Tested against IOS 15.6\nFacts gathering for L3 devices are supposed to produce blank output for unsupported resources like vlan.\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "available_network_resources": {
          "aliases": [],
          "description": "When 'True' a list of network resources for which resource modules are available will be provided.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "gather_network_resources": {
          "aliases": [],
          "description": "When supplied, this argument will restrict the facts collected to a given subset. Possible values for this argument include all and the resources like interfaces, vlans etc. Can specify a list of values to include a larger subset. Values can also be used with an initial C(!) to specify that a specific subset should not be collected. Valid subsets are 'all', 'interfaces', 'l2_interfaces', 'vlans', 'lag_interfaces', 'lacp', 'lacp_interfaces', 'lldp_global', 'lldp_interfaces', 'l3_interfaces', 'acl_interfaces', 'static_routes', 'acls'.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "gather_subset": {
          "aliases": [],
          "description": "When supplied, this argument restricts the facts collected to a given subset.\nPossible values for this argument include C(all), C(min), C(hardware), C(config), and C(interfaces).\nSpecify a list of values to include a larger subset.\nUse a value with an initial C(!) to collect all facts except that subset.",
          "default": "!config",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "short_description": "Collect facts from remote devices running Cisco IOS",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Gather all legacy facts\n  cisco.ios.ios_facts:\n    gather_subset: all\n\n- name: Gather only the config and default facts\n  cisco.ios.ios_facts:\n    gather_subset:\n    - config\n\n- name: Do not gather hardware facts\n  cisco.ios.ios_facts:\n    gather_subset:\n    - '!hardware'\n\n- name: Gather legacy and resource facts\n  cisco.ios.ios_facts:\n    gather_subset: all\n    gather_network_resources: all\n\n- name: Gather only the interfaces resource facts and no legacy facts\n  cisco.ios.ios_facts:\n    gather_subset:\n    - '!all'\n    - '!min'\n    gather_network_resources:\n    - interfaces\n\n- name: Gather interfaces resource and minimal legacy facts\n  cisco.ios.ios_facts:\n    gather_subset: min\n    gather_network_resources: interfaces\n\n- name: Gather L2 interfaces resource and minimal legacy facts\n  cisco.ios.ios_facts:\n    gather_subset: min\n    gather_network_resources: l2_interfaces\n\n- name: Gather L3 interfaces resource and minimal legacy facts\n  cisco.ios.ios_facts:\n    gather_subset: min\n    gather_network_resources: l3_interfaces\n"
  },
  "cisco.ios.ios_interface": {
    "doc": {
      "description": "This module provides declarative management of Interfaces on Cisco IOS network devices.",
      "has_action": true,
      "notes": "Tested against IOS 15.6\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "aggregate": {
          "aliases": [],
          "description": "List of Interfaces definitions.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "delay": {
              "aliases": [],
              "description": "Time in seconds to wait before checking for the operational state on remote device. This wait is applicable for operational state argument which are I(state) with values C(up)/C(down), I(tx_rate) and I(rx_rate).",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "Description of Interface.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "duplex": {
              "aliases": [],
              "description": "Interface link status",
              "type": "str",
              "required": false,
              "choices": [
                "full",
                "half",
                "auto"
              ],
              "suboptions": {}
            },
            "enabled": {
              "aliases": [],
              "description": "Interface link status.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "mtu": {
              "aliases": [],
              "description": "Maximum size of transmit packet.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the Interface.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "neighbors": {
              "aliases": [],
              "description": "Check the operational state of given interface C(name) for CDP/LLDP neighbor.\nThe following suboptions are available.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "host": {
                  "aliases": [],
                  "description": "CDP/LLDP neighbor host for given interface C(name).",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "port": {
                  "aliases": [],
                  "description": "CDP/LLDP neighbor port to which given interface C(name) is connected.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "rx_rate": {
              "aliases": [],
              "description": "Receiver rate in bits per second (bps).\nThis is state check parameter only.\nSupports conditionals, see U(https://docs.ansible.com/ansible/latest/network/user_guide/network_working_with_command_output.html#conditionals-in-networking-modules)",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "speed": {
              "aliases": [],
              "description": "Interface link speed.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the Interface configuration, C(up) means present and operationally up and C(down) means present and operationally C(down)",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent",
                "up",
                "down"
              ],
              "suboptions": {}
            },
            "tx_rate": {
              "aliases": [],
              "description": "Transmit rate in bits per second (bps).\nThis is state check parameter only.\nSupports conditionals, see U(https://docs.ansible.com/ansible/latest/network/user_guide/network_working_with_command_output.html#conditionals-in-networking-modules)",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "delay": {
          "aliases": [],
          "description": "Time in seconds to wait before checking for the operational state on remote device. This wait is applicable for operational state argument which are I(state) with values C(up)/C(down), I(tx_rate) and I(rx_rate).",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of Interface.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "duplex": {
          "aliases": [],
          "description": "Interface link status",
          "type": "str",
          "required": false,
          "choices": [
            "full",
            "half",
            "auto"
          ],
          "suboptions": {}
        },
        "enabled": {
          "aliases": [],
          "description": "Interface link status.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "mtu": {
          "aliases": [],
          "description": "Maximum size of transmit packet.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the Interface.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "neighbors": {
          "aliases": [],
          "description": "Check the operational state of given interface C(name) for CDP/LLDP neighbor.\nThe following suboptions are available.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "CDP/LLDP neighbor host for given interface C(name).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "CDP/LLDP neighbor port to which given interface C(name) is connected.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "rx_rate": {
          "aliases": [],
          "description": "Receiver rate in bits per second (bps).\nThis is state check parameter only.\nSupports conditionals, see U(https://docs.ansible.com/ansible/latest/network/user_guide/network_working_with_command_output.html#conditionals-in-networking-modules)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "speed": {
          "aliases": [],
          "description": "Interface link speed.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the Interface configuration, C(up) means present and operationally up and C(down) means present and operationally C(down)",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "up",
            "down"
          ],
          "suboptions": {}
        },
        "tx_rate": {
          "aliases": [],
          "description": "Transmit rate in bits per second (bps).\nThis is state check parameter only.\nSupports conditionals, see U(https://docs.ansible.com/ansible/latest/network/user_guide/network_working_with_command_output.html#conditionals-in-networking-modules)",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "(deprecated, removed after 2022-06-01) Manage Interface on Cisco IOS network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure interface\n  cisco.ios.ios_interface:\n    name: GigabitEthernet0/2\n    description: test-interface\n    speed: 100\n    duplex: half\n    mtu: 512\n\n- name: remove interface\n  cisco.ios.ios_interface:\n    name: Loopback9\n    state: absent\n\n- name: make interface up\n  cisco.ios.ios_interface:\n    name: GigabitEthernet0/2\n    enabled: true\n\n- name: make interface down\n  cisco.ios.ios_interface:\n    name: GigabitEthernet0/2\n    enabled: false\n\n- name: Check intent arguments\n  cisco.ios.ios_interface:\n    name: GigabitEthernet0/2\n    state: up\n    tx_rate: ge(0)\n    rx_rate: le(0)\n\n- name: Check neighbors intent arguments\n  cisco.ios.ios_interface:\n    name: Gi0/0\n    neighbors:\n    - port: eth0\n      host: netdev\n\n- name: Config + intent\n  cisco.ios.ios_interface:\n    name: GigabitEthernet0/2\n    enabled: false\n    state: down\n\n- name: Add interface using aggregate\n  cisco.ios.ios_interface:\n    aggregate:\n    - {name: GigabitEthernet0/1, mtu: 256, description: test-interface-1}\n    - {name: GigabitEthernet0/2, mtu: 516, description: test-interface-2}\n    duplex: full\n    speed: 100\n    state: present\n\n- name: Delete interface using aggregate\n  cisco.ios.ios_interface:\n    aggregate:\n    - name: Loopback9\n    - name: Loopback10\n    state: absent\n"
  },
  "cisco.ios.ios_interfaces": {
    "doc": {
      "description": "This module manages the interface attributes of Cisco IOS network devices.",
      "has_action": true,
      "notes": "Tested against Cisco IOSv Version 15.2 on VIRL\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of interface options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "description": {
              "aliases": [],
              "description": "Interface description.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "duplex": {
              "aliases": [],
              "description": "Interface link status. Applicable for Ethernet interfaces only, either in half duplex, full duplex or in automatic state which negotiates the duplex automatically.",
              "type": "str",
              "required": false,
              "choices": [
                "full",
                "half",
                "auto"
              ],
              "suboptions": {}
            },
            "enabled": {
              "aliases": [],
              "description": "Administrative state of the interface.\nSet the value to C(true) to administratively enable the interface or C(false) to disable it.",
              "default": "True",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "mtu": {
              "aliases": [],
              "description": "MTU for a specific interface. Applicable for Ethernet interfaces only.\nRefer to vendor documentation for valid values.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Full name of interface, e.g. GigabitEthernet0/2, loopback999.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "speed": {
              "aliases": [],
              "description": "Interface link speed. Applicable for Ethernet interfaces only.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(show running-config | section ^interface).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(show running-config | include ip route|ipv6 route) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "rendered",
            "gathered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n\n# Before state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description Configured by Ansible\n#  no ip address\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  description This is test\n#  no ip address\n#  duplex auto\n#  speed 1000\n# interface GigabitEthernet0/3\n#  no ip address\n#  duplex auto\n#  speed auto\n\n- name: Merge provided configuration with device configuration\n  cisco.ios.ios_interfaces:\n    config:\n    - name: GigabitEthernet0/2\n      description: Configured and Merged by Ansible Network\n      enabled: true\n    - name: GigabitEthernet0/3\n      description: Configured and Merged by Ansible Network\n      mtu: 2800\n      enabled: false\n      speed: 100\n      duplex: full\n    state: merged\n\n# After state:\n# ------------\n#\n# vios#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description Configured by Ansible\n#  no ip address\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  description Configured and Merged by Ansible Network\n#  no ip address\n#  duplex auto\n#  speed 1000\n# interface GigabitEthernet0/3\n#  description Configured and Merged by Ansible Network\n#  mtu 2800\n#  no ip address\n#  shutdown\n#  duplex full\n#  speed 100\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  no ip address\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  description Configured by Ansible Network\n#  no ip address\n#  duplex auto\n#  speed 1000\n# interface GigabitEthernet0/3\n#  mtu 2000\n#  no ip address\n#  shutdown\n#  duplex full\n#  speed 100\n\n- name: Replaces device configuration of listed interfaces with provided configuration\n  cisco.ios.ios_interfaces:\n    config:\n    - name: GigabitEthernet0/3\n      description: Configured and Replaced by Ansible Network\n      enabled: false\n      duplex: auto\n      mtu: 2500\n      speed: 1000\n    state: replaced\n\n# After state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  no ip address\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  description Configured by Ansible Network\n#  no ip address\n#  duplex auto\n#  speed 1000\n# interface GigabitEthernet0/3\n#  description Configured and Replaced by Ansible Network\n#  mtu 2500\n#  no ip address\n#  shutdown\n#  duplex auto\n#  speed 1000\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# vios#show running-config | section ^interface#\n# interface GigabitEthernet0/1\n#  description Configured by Ansible\n#  no ip address\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  description This is test\n#  no ip address\n#  duplex auto\n#  speed 1000\n# interface GigabitEthernet0/3\n#  description Configured by Ansible\n#  mtu 2800\n#  no ip address\n#  shutdown\n#  duplex full\n#  speed 100\n\n- name: Override device configuration of all interfaces with provided configuration\n  cisco.ios.ios_interfaces:\n    config:\n    - name: GigabitEthernet0/2\n      description: Configured and Overridden by Ansible Network\n      speed: 1000\n    - name: GigabitEthernet0/3\n      description: Configured and Overridden by Ansible Network\n      enabled: false\n      duplex: full\n      mtu: 2000\n    state: overridden\n\n# After state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  no ip address\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  description Configured and Overridden by Ansible Network\n#  no ip address\n#  duplex auto\n#  speed 1000\n# interface GigabitEthernet0/3\n#  description Configured and Overridden by Ansible Network\n#  mtu 2000\n#  no ip address\n#  shutdown\n#  duplex full\n#  speed auto\n\n# Using Deleted\n\n# Before state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  no ip address\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  description Configured by Ansible Network\n#  no ip address\n#  duplex auto\n#  speed 1000\n# interface GigabitEthernet0/3\n#  description Configured by Ansible Network\n#  mtu 2500\n#  no ip address\n#  shutdown\n#  duplex full\n#  speed 1000\n\n- name: \"Delete module attributes of given interfaces (Note: This won't delete the interface itself)\"\n  cisco.ios.ios_interfaces:\n    config:\n    - name: GigabitEthernet0/2\n    state: deleted\n\n# After state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  no ip address\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  no ip address\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/3\n#  description Configured by Ansible Network\n#  mtu 2500\n#  no ip address\n#  shutdown\n#  duplex full\n#  speed 1000\n\n# Using Deleted without any config passed\n#\"(NOTE: This will delete all of configured resource module attributes from each configured interface)\"\n\n# Before state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  no ip address\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  description Configured by Ansible Network\n#  no ip address\n#  duplex auto\n#  speed 1000\n# interface GigabitEthernet0/3\n#  description Configured by Ansible Network\n#  mtu 2500\n#  no ip address\n#  shutdown\n#  duplex full\n#  speed 1000\n\n- name: \"Delete module attributes of all interfaces (Note: This won't delete the interface itself)\"\n  cisco.ios.ios_interfaces:\n    state: deleted\n\n# After state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  no ip address\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  no ip address\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/3\n#  no ip address\n#  duplex auto\n#  speed auto\n\n# Using Gathered\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description this is interface1\n#  mtu 65\n#  duplex auto\n#  speed 10\n# interface GigabitEthernet0/2\n#  description this is interface2\n#  mtu 110\n#  shutdown\n#  duplex auto\n#  speed 100\n\n- name: Gather listed interfaces with provided configurations\n  cisco.ios.ios_interfaces:\n    config:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"gathered\": [\n#         {\n#             \"description\": \"this is interface1\",\n#             \"duplex\": \"auto\",\n#             \"enabled\": true,\n#             \"mtu\": 65,\n#             \"name\": \"GigabitEthernet0/1\",\n#             \"speed\": \"10\"\n#         },\n#         {\n#             \"description\": \"this is interface2\",\n#             \"duplex\": \"auto\",\n#             \"enabled\": false,\n#             \"mtu\": 110,\n#             \"name\": \"GigabitEthernet0/2\",\n#             \"speed\": \"100\"\n#         }\n#     ]\n\n# After state:\n# ------------\n#\n# vios#sh running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description this is interface1\n#  mtu 65\n#  duplex auto\n#  speed 10\n# interface GigabitEthernet0/2\n#  description this is interface2\n#  mtu 110\n#  shutdown\n#  duplex auto\n#  speed 100\n\n# Using Rendered\n\n- name: Render the commands for provided  configuration\n  cisco.ios.ios_interfaces:\n    config:\n    - name: GigabitEthernet0/1\n      description: Configured by Ansible-Network\n      mtu: 110\n      enabled: true\n      duplex: half\n    - name: GigabitEthernet0/2\n      description: Configured by Ansible-Network\n      mtu: 2800\n      enabled: false\n      speed: 100\n      duplex: full\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"rendered\": [\n#         \"interface GigabitEthernet0/1\",\n#         \"description Configured by Ansible-Network\",\n#         \"mtu 110\",\n#         \"duplex half\",\n#         \"no shutdown\",\n#         \"interface GigabitEthernet0/2\",\n#         \"description Configured by Ansible-Network\",\n#         \"mtu 2800\",\n#         \"speed 100\",\n#         \"duplex full\",\n#         \"shutdown\"\n\n# Using Parsed\n\n# File: parsed.cfg\n# ----------------\n#\n# interface GigabitEthernet0/1\n# description interfaces 0/1\n# mtu 110\n# duplex half\n# no shutdown\n# interface GigabitEthernet0/2\n# description interfaces 0/2\n# mtu 2800\n# speed 100\n# duplex full\n# shutdown\n\n- name: Parse the commands for provided configuration\n  cisco.ios.ios_interfaces:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n#\n# \"parsed\": [\n#         {\n#             \"description\": \"interfaces 0/1\",\n#             \"duplex\": \"half\",\n#             \"enabled\": true,\n#             \"mtu\": 110,\n#             \"name\": \"GigabitEthernet0/1\"\n#         },\n#         {\n#             \"description\": \"interfaces 0/2\",\n#             \"duplex\": \"full\",\n#             \"enabled\": true,\n#             \"mtu\": 2800,\n#             \"name\": \"GigabitEthernet0/2\",\n#             \"speed\": \"100\"\n#         }\n#     ]\n\n"
  },
  "cisco.ios.ios_l2_interface": {
    "doc": {
      "description": "This module provides declarative management of Layer-2 interfaces on Cisco IOS devices.",
      "has_action": true,
      "notes": "For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "access_vlan": {
          "aliases": [],
          "description": "Configure given VLAN in access port. If C(mode=access), used as the access VLAN ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aggregate": {
          "aliases": [],
          "description": "List of Layer-2 interface definitions.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "access_vlan": {
              "aliases": [],
              "description": "Configure given VLAN in access port. If C(mode=access), used as the access VLAN ID.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "mode": {
              "aliases": [],
              "description": "Mode in which interface needs to be configured.",
              "type": "str",
              "required": false,
              "choices": [
                "access",
                "trunk"
              ],
              "suboptions": {}
            },
            "name": {
              "aliases": [
                "interface"
              ],
              "description": "Full name of the interface excluding any logical unit number, i.e. GigabitEthernet0/1.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "native_vlan": {
              "aliases": [],
              "description": "Native VLAN to be configured in trunk port. If C(mode=trunk), used as the trunk native VLAN ID.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "Manage the state of the Layer-2 Interface configuration.",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent",
                "unconfigured"
              ],
              "suboptions": {}
            },
            "trunk_allowed_vlans": {
              "aliases": [],
              "description": "List of allowed VLANs in a given trunk port. If C(mode=trunk), these are the only VLANs that will be configured on the trunk, i.e. \"2-10,15\".",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "trunk_vlans": {
              "aliases": [],
              "description": "List of VLANs to be configured in trunk port. If C(mode=trunk), used as the VLAN range to ADD or REMOVE from the trunk.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "mode": {
          "aliases": [],
          "description": "Mode in which interface needs to be configured.",
          "type": "str",
          "required": false,
          "choices": [
            "access",
            "trunk"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "interface"
          ],
          "description": "Full name of the interface excluding any logical unit number, i.e. GigabitEthernet0/1.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "native_vlan": {
          "aliases": [],
          "description": "Native VLAN to be configured in trunk port. If C(mode=trunk), used as the trunk native VLAN ID.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Manage the state of the Layer-2 Interface configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "unconfigured"
          ],
          "suboptions": {}
        },
        "trunk_allowed_vlans": {
          "aliases": [],
          "description": "List of allowed VLANs in a given trunk port. If C(mode=trunk), these are the only VLANs that will be configured on the trunk, i.e. \"2-10,15\".",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "trunk_vlans": {
          "aliases": [],
          "description": "List of VLANs to be configured in trunk port. If C(mode=trunk), used as the VLAN range to ADD or REMOVE from the trunk.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "(deprecated, removed after 2022-06-01) Manage Layer-2 interface on Cisco IOS devices.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Ensure GigabitEthernet0/5 is in its default l2 interface state\n  ios.ios_l2_interface:\n    name: GigabitEthernet0/5\n    state: unconfigured\n- name: Ensure GigabitEthernet0/5 is configured for access vlan 20\n  ios.ios_l2_interface:\n    name: GigabitEthernet0/5\n    mode: access\n    access_vlan: 20\n- name: Ensure GigabitEthernet0/5 only has vlans 5-10 as trunk vlans\n  ios.ios_l2_interface:\n    name: GigabitEthernet0/5\n    mode: trunk\n    native_vlan: 10\n    trunk_allowed_vlans: 5-10\n- name: Ensure GigabitEthernet0/5 is a trunk port and ensure 2-50 are being tagged\n    (doesn't mean others aren't also being tagged)\n  ios.ios_l2_interface:\n    name: GigabitEthernet0/5\n    mode: trunk\n    native_vlan: 10\n    trunk_vlans: 2-50\n- name: Ensure these VLANs are not being tagged on the trunk\n  ios.ios_l2_interface:\n    name: GigabitEthernet0/5\n    mode: trunk\n    trunk_vlans: 51-4094\n    state: absent\n"
  },
  "cisco.ios.ios_l2_interfaces": {
    "doc": {
      "description": "This module provides declarative management of Layer-2 interface on Cisco IOS devices.",
      "has_action": true,
      "notes": "Tested against Cisco IOSv Version 15.2 on VIRL.\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of Layer-2 interface options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "access": {
              "aliases": [],
              "description": "Switchport mode access command to configure the interface as a layer 2 access.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "vlan": {
                  "aliases": [],
                  "description": "Configure given VLAN in access port. It's used as the access VLAN ID.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "mode": {
              "aliases": [],
              "description": "Mode in which interface needs to be configured.\nAn interface whose trunk encapsulation is \"Auto\" can not be configured to \"trunk\" mode.",
              "type": "str",
              "required": false,
              "choices": [
                "access",
                "trunk"
              ],
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Full name of the interface excluding any logical unit number, i.e. GigabitEthernet0/1.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "trunk": {
              "aliases": [],
              "description": "Switchport mode trunk command to configure the interface as a Layer 2 trunk. Note The encapsulation is always set to dot1q.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "allowed_vlans": {
                  "aliases": [],
                  "description": "List of allowed VLANs in a given trunk port. These are the only VLANs that will be configured on the trunk.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "encapsulation": {
                  "aliases": [],
                  "description": "Trunking encapsulation when interface is in trunking mode.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "dot1q",
                    "isl",
                    "negotiate"
                  ],
                  "suboptions": {}
                },
                "native_vlan": {
                  "aliases": [],
                  "description": "Native VLAN to be configured in trunk port. It's used as the trunk native VLAN ID.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "pruning_vlans": {
                  "aliases": [],
                  "description": "Pruning VLAN to be configured in trunk port. It's used as the trunk pruning VLAN ID.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                }
              }
            },
            "voice": {
              "aliases": [],
              "description": "Switchport mode voice command to configure the interface with a voice vlan.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "vlan": {
                  "aliases": [],
                  "description": "Configure given voice VLAN on access port. It's used as the voice VLAN ID.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(show running-config | section ^interface).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(show running-config | include ip route|ipv6 route) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "rendered",
            "gathered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "L2 interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n\n# Before state:\n# -------------\n#\n# viosl2#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description Configured by Ansible\n#  negotiation auto\n# interface GigabitEthernet0/2\n#  description This is test\n#  switchport access vlan 20\n#  media-type rj45\n#  negotiation auto\n\n- name: Merge provided configuration with device configuration\n  cisco.ios.ios_l2_interfaces:\n    config:\n    - name: GigabitEthernet0/1\n      mode: access\n      access:\n        vlan: 10\n      voice:\n        vlan: 40\n    - name: GigabitEthernet0/2\n      mode: trunk\n      trunk:\n        allowed_vlans: 10-20,40\n        native_vlan: 20\n        pruning_vlans: 10,20\n        encapsulation: dot1q\n    state: merged\n\n# After state:\n# ------------\n#\n# viosl2#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description Configured by Ansible\n#  switchport access vlan 10\n#  switchport voice vlan 40\n#  switchport mode access\n#  negotiation auto\n# interface GigabitEthernet0/2\n#  description This is test\n#  switchport trunk allowed vlan 10-20,40\n#  switchport trunk encapsulation dot1q\n#  switchport trunk native vlan 20\n#  switchport trunk pruning vlan 10,20\n#  switchport mode trunk\n#  media-type rj45\n#  negotiation auto\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# viosl2#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description Configured by Ansible\n#  switchport access vlan 20\n#  negotiation auto\n# interface GigabitEthernet0/2\n#  description This is test\n#  switchport access vlan 20\n#  media-type rj45\n#  negotiation auto\n\n- name: Replaces device configuration of listed l2 interfaces with provided configuration\n  cisco.ios.ios_l2_interfaces:\n    config:\n    - name: GigabitEthernet0/2\n      trunk:\n        allowed_vlans: 20-25,40\n        native_vlan: 20\n        pruning_vlans: 10\n        encapsulation: isl\n    state: replaced\n\n# After state:\n# -------------\n#\n# viosl2#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description Configured by Ansible\n#  switchport access vlan 20\n#  negotiation auto\n# interface GigabitEthernet0/2\n#  description This is test\n#  switchport trunk allowed vlan 20-25,40\n#  switchport trunk encapsulation isl\n#  switchport trunk native vlan 20\n#  switchport trunk pruning vlan 10\n#  media-type rj45\n#  negotiation auto\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# viosl2#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description Configured by Ansible\n#  switchport trunk encapsulation dot1q\n#  switchport trunk native vlan 20\n#  negotiation auto\n# interface GigabitEthernet0/2\n#  description This is test\n#  switchport access vlan 20\n#  switchport trunk encapsulation dot1q\n#  switchport trunk native vlan 20\n#  media-type rj45\n#  negotiation auto\n\n- name: Override device configuration of all l2 interfaces with provided configuration\n  cisco.ios.ios_l2_interfaces:\n    config:\n    - name: GigabitEthernet0/2\n      access:\n        vlan: 20\n      voice:\n        vlan: 40\n    state: overridden\n\n# After state:\n# -------------\n#\n# viosl2#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description Configured by Ansible\n#  negotiation auto\n# interface GigabitEthernet0/2\n#  description This is test\n#  switchport access vlan 20\n#  switchport voice vlan 40\n#  media-type rj45\n#  negotiation auto\n\n# Using Deleted\n\n# Before state:\n# -------------\n#\n# viosl2#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description Configured by Ansible\n#  switchport access vlan 20\n#  negotiation auto\n# interface GigabitEthernet0/2\n#  description This is test\n#  switchport access vlan 20\n#  switchport trunk allowed vlan 20-40,60,80\n#  switchport trunk encapsulation dot1q\n#  switchport trunk native vlan 10\n#  switchport trunk pruning vlan 10\n#  media-type rj45\n#  negotiation auto\n\n- name: Delete IOS L2 interfaces as in given arguments\n  cisco.ios.ios_l2_interfaces:\n    config:\n    - name: GigabitEthernet0/1\n    state: deleted\n\n# After state:\n# -------------\n#\n# viosl2#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description Configured by Ansible\n#  negotiation auto\n# interface GigabitEthernet0/2\n#  description This is test\n#  switchport access vlan 20\n#  switchport trunk allowed vlan 20-40,60,80\n#  switchport trunk encapsulation dot1q\n#  switchport trunk native vlan 10\n#  switchport trunk pruning vlan 10\n#  media-type rj45\n#  negotiation auto\n\n\n# Using Deleted without any config passed\n#\"(NOTE: This will delete all of configured resource module attributes from each configured interface)\"\n\n# Before state:\n# -------------\n#\n# viosl2#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description Configured by Ansible\n#  switchport access vlan 20\n#  negotiation auto\n# interface GigabitEthernet0/2\n#  description This is test\n#  switchport access vlan 20\n#  switchport trunk allowed vlan 20-40,60,80\n#  switchport trunk encapsulation dot1q\n#  switchport trunk native vlan 10\n#  switchport trunk pruning vlan 10\n#  media-type rj45\n#  negotiation auto\n\n- name: Delete IOS L2 interfaces as in given arguments\n  cisco.ios.ios_l2_interfaces:\n    state: deleted\n\n# After state:\n# -------------\n#\n# viosl2#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description Configured by Ansible\n#  negotiation auto\n# interface GigabitEthernet0/2\n#  description This is test\n#  media-type rj45\n#  negotiation auto\n\n# Using Gathered\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | section ^interface\n# interface GigabitEthernet0/1\n#  switchport access vlan 10\n# interface GigabitEthernet0/2\n#  switchport trunk allowed vlan 10-20,40\n#  switchport trunk encapsulation dot1q\n#  switchport trunk native vlan 10\n#  switchport trunk pruning vlan 10,20\n#  switchport mode trunk\n\n- name: Gather listed l2 interfaces with provided configurations\n  cisco.ios.ios_l2_interfaces:\n    config:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"gathered\": [\n#         {\n#             \"name\": \"GigabitEthernet0/0\"\n#         },\n#         {\n#             \"access\": {\n#                 \"vlan\": 10\n#             },\n#             \"name\": \"GigabitEthernet0/1\"\n#         },\n#         {\n#             \"mode\": \"trunk\",\n#             \"name\": \"GigabitEthernet0/2\",\n#             \"trunk\": {\n#                 \"allowed_vlans\": [\n#                     \"10-20\",\n#                     \"40\"\n#                 ],\n#                 \"encapsulation\": \"dot1q\",\n#                 \"native_vlan\": 10,\n#                 \"pruning_vlans\": [\n#                     \"10\",\n#                     \"20\"\n#                 ]\n#             }\n#         }\n#     ]\n\n# After state:\n# ------------\n#\n# vios#sh running-config | section ^interface\n# interface GigabitEthernet0/1\n#  switchport access vlan 10\n# interface GigabitEthernet0/2\n#  switchport trunk allowed vlan 10-20,40\n#  switchport trunk encapsulation dot1q\n#  switchport trunk native vlan 10\n#  switchport trunk pruning vlan 10,20\n#  switchport mode trunk\n\n# Using Rendered\n\n- name: Render the commands for provided  configuration\n  cisco.ios.ios_l2_interfaces:\n    config:\n    - name: GigabitEthernet0/1\n      access:\n        vlan: 30\n    - name: GigabitEthernet0/2\n      trunk:\n        allowed_vlans: 10-20,40\n        native_vlan: 20\n        pruning_vlans: 10,20\n        encapsulation: dot1q\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"rendered\": [\n#         \"interface GigabitEthernet0/1\",\n#         \"switchport access vlan 30\",\n#         \"interface GigabitEthernet0/2\",\n#         \"switchport trunk encapsulation dot1q\",\n#         \"switchport trunk native vlan 20\",\n#         \"switchport trunk allowed vlan 10-20,40\",\n#         \"switchport trunk pruning vlan 10,20\"\n#     ]\n\n# Using Parsed\n\n# File: parsed.cfg\n# ----------------\n#\n# interface GigabitEthernet0/1\n# switchport mode access\n# switchport access vlan 30\n# interface GigabitEthernet0/2\n# switchport trunk allowed vlan 15-20,40\n# switchport trunk encapsulation dot1q\n# switchport trunk native vlan 20\n# switchport trunk pruning vlan 10,20\n\n- name: Parse the commands for provided configuration\n  cisco.ios.ios_l2_interfaces:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n#\n# \"parsed\": [\n#         {\n#             \"access\": {\n#                 \"vlan\": 30\n#             },\n#             \"mode\": \"access\",\n#             \"name\": \"GigabitEthernet0/1\"\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/2\",\n#             \"trunk\": {\n#                 \"allowed_vlans\": [\n#                     \"15-20\",\n#                     \"40\"\n#                 ],\n#                 \"encapsulation\": \"dot1q\",\n#                 \"native_vlan\": 20,\n#                 \"pruning_vlans\": [\n#                     \"10\",\n#                     \"20\"\n#                 ]\n#             }\n#         }\n#     ]\n\n"
  },
  "cisco.ios.ios_l3_interface": {
    "doc": {
      "description": "This module provides declarative management of Layer-3 interfaces on IOS network devices.",
      "has_action": true,
      "notes": "Tested against IOS 15.2\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "aggregate": {
          "aliases": [],
          "description": "List of Layer-3 interfaces definitions. Each of the entry in aggregate list should define name of interface C(name) and a optional C(ipv4) or C(ipv6) address.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "ipv4": {
              "aliases": [],
              "description": "IPv4 address to be set for the Layer-3 interface mentioned in I(name) option. The address format is <ipv4 address>/<mask>, the mask is number in range 0-32 eg. 192.168.0.1/24",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "ipv6": {
              "aliases": [],
              "description": "IPv6 address to be set for the Layer-3 interface mentioned in I(name) option. The address format is <ipv6 address>/<mask>, the mask is number in range 0-128 eg. fd5d:12c9:2201:1::1/64",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the Layer-3 interface to be configured eg. GigabitEthernet0/2",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the Layer-3 interface configuration. It indicates if the configuration should be present or absent on remote device.",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            }
          }
        },
        "ipv4": {
          "aliases": [],
          "description": "IPv4 address to be set for the Layer-3 interface mentioned in I(name) option. The address format is <ipv4 address>/<mask>, the mask is number in range 0-32 eg. 192.168.0.1/24",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ipv6": {
          "aliases": [],
          "description": "IPv6 address to be set for the Layer-3 interface mentioned in I(name) option. The address format is <ipv6 address>/<mask>, the mask is number in range 0-128 eg. fd5d:12c9:2201:1::1/64",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the Layer-3 interface to be configured eg. GigabitEthernet0/2",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "State of the Layer-3 interface configuration. It indicates if the configuration should be present or absent on remote device.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "(deprecated, removed after 2022-06-01) Manage Layer-3 interfaces on Cisco IOS network devices.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Remove GigabitEthernet0/3 IPv4 and IPv6 address\n  cisco.ios.ios_l3_interface:\n    name: GigabitEthernet0/3\n    state: absent\n- name: Set GigabitEthernet0/3 IPv4 address\n  cisco.ios.ios_l3_interface:\n    name: GigabitEthernet0/3\n    ipv4: 192.168.0.1/24\n- name: Set GigabitEthernet0/3 IPv6 address\n  cisco.ios.ios_l3_interface:\n    name: GigabitEthernet0/3\n    ipv6: fd5d:12c9:2201:1::1/64\n- name: Set GigabitEthernet0/3 in dhcp\n  cisco.ios.ios_l3_interface:\n    name: GigabitEthernet0/3\n    ipv4: dhcp\n    ipv6: dhcp\n- name: Set interface Vlan1 (SVI) IPv4 address\n  cisco.ios.ios_l3_interface:\n    name: Vlan1\n    ipv4: 192.168.0.5/24\n- name: Set IP addresses on aggregate\n  cisco.ios.ios_l3_interface:\n    aggregate:\n    - name: GigabitEthernet0/3\n      ipv4: 192.168.2.10/24\n    - name: GigabitEthernet0/3\n      ipv4: 192.168.3.10/24\n      ipv6: fd5d:12c9:2201:1::1/64\n- name: Remove IP addresses on aggregate\n  cisco.ios.ios_l3_interface:\n    aggregate:\n    - name: GigabitEthernet0/3\n      ipv4: 192.168.2.10/24\n    - name: GigabitEthernet0/3\n      ipv4: 192.168.3.10/24\n      ipv6: fd5d:12c9:2201:1::1/64\n    state: absent\n"
  },
  "cisco.ios.ios_l3_interfaces": {
    "doc": {
      "description": "This module provides declarative management of Layer-3 interface on Cisco IOS devices.",
      "has_action": true,
      "notes": "Tested against Cisco IOSv Version 15.6.\nUsing deleted state without config will delete all l3 attributes from all the interfaces.\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of Layer-3 interface options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "ipv4": {
              "aliases": [],
              "description": "IPv4 address to be set for the Layer-3 interface mentioned in I(name) option. The address format is <ipv4 address>/<mask>, the mask is number in range 0-32 eg. 192.168.0.1/24.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "address": {
                  "aliases": [],
                  "description": "Configures the IPv4 address for Interface.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "dhcp": {
                  "aliases": [],
                  "description": "IP Address negotiated via DHCP.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "client_id": {
                      "aliases": [],
                      "description": "Specify client-id to use.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "enable": {
                      "aliases": [],
                      "description": "Enable dhcp.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "hostname": {
                      "aliases": [],
                      "description": "Specify value for hostname option.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "dhcp_client": {
                  "aliases": [],
                  "description": "Configures and specifies client-id to use over DHCP ip. Note, This option shall work only when dhcp is configured as IP.\nGigabitEthernet interface number\nThis option is DEPRECATED and is replaced with dhcp which accepts dict as input this attribute will be removed after 2023-08-01.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "dhcp_hostname": {
                  "aliases": [],
                  "description": "Configures and specifies value for hostname option over DHCP ip. Note, This option shall work only when dhcp is configured as IP.\nThis option is DEPRECATED and is replaced with dhcp which accepts dict as input this attribute will be removed after 2023-08-01.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "pool": {
                  "aliases": [],
                  "description": "IP Address auto-configured from a local DHCP pool.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "secondary": {
                  "aliases": [],
                  "description": "Configures the IP address as a secondary address.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "ipv6": {
              "aliases": [],
              "description": "IPv6 address to be set for the Layer-3 interface mentioned in I(name) option.\nThe address format is <ipv6 address>/<mask>, the mask is number in range 0-128 eg. fd5d:12c9:2201:1::1/64",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "address": {
                  "aliases": [],
                  "description": "Configures the IPv6 address for Interface.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "anycast": {
                  "aliases": [],
                  "description": "Configure as an anycast",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "autoconfig": {
                  "aliases": [],
                  "description": "Obtain address using auto-configuration.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "default": {
                      "aliases": [],
                      "description": "Insert default route.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "enable": {
                      "aliases": [],
                      "description": "enable auto-configuration.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "cga": {
                  "aliases": [],
                  "description": "Use CGA interface identifier",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "dhcp": {
                  "aliases": [],
                  "description": "Obtain a ipv6 address using DHCP.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "enable": {
                      "aliases": [],
                      "description": "Enable dhcp.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "rapid_commit": {
                      "aliases": [],
                      "description": "Enable Rapid-Commit.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "eui": {
                  "aliases": [],
                  "description": "Use eui-64 interface identifier",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "link_local": {
                  "aliases": [],
                  "description": "Use link-local address",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "segment_routing": {
                  "aliases": [],
                  "description": "Segment Routing submode",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "default": {
                      "aliases": [],
                      "description": "Set a command to its defaults.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "enable": {
                      "aliases": [],
                      "description": "Enable segmented routing.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "ipv6_sr": {
                      "aliases": [],
                      "description": "Set ipv6_sr.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "Full name of the interface excluding any logical unit number, i.e. GigabitEthernet0/1.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(show running-config | section ^interface).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(show running-config | section ^interface) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "rendered",
            "gathered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "L3 interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using state merged\n\n# Before state:\n# -------------\n\n# router-ios#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description Configured by Ansible\n#  ip address 10.1.1.1 255.255.255.0\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  description This is test\n#  no ip address\n#  duplex auto\n#  speed 1000\n# interface GigabitEthernet0/3\n#  description Configured by Ansible Network\n#  no ip address\n# interface GigabitEthernet0/3.100\n#  encapsulation dot1Q 20\n\n- name: Merge provided configuration with device configuration\n  cisco.ios.ios_l3_interfaces:\n    config:\n    - name: GigabitEthernet0/1\n      ipv4:\n      - address: 192.168.0.1/24\n        secondary: true\n    - name: GigabitEthernet0/2\n      ipv4:\n      - address: 192.168.0.2/24\n    - name: GigabitEthernet0/3\n      ipv6:\n      - address: fd5d:12c9:2201:1::1/64\n    - name: GigabitEthernet0/3.100\n      ipv4:\n      - address: 192.168.0.3/24\n    state: merged\n\n# Commands Fired:\n# ---------------\n\n# \"commands\": [\n#       \"interface GigabitEthernet0/1\",\n#       \"ip address 192.168.0.1 255.255.255.0 secondary\",\n#       \"interface GigabitEthernet0/2\",\n#       \"ip address 192.168.0.2 255.255.255.0\",\n#       \"interface GigabitEthernet0/3\",\n#       \"ipv6 address fd5d:12c9:2201:1::1/64\",\n#       \"GigabitEthernet0/3.100\",\n#       \"ip address 192.168.0.3 255.255.255.0\",\n#     ],\n\n# After state:\n# ------------\n\n# router-ios#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description Configured by Ansible\n#  ip address 10.1.1.1 255.255.255.0\n#  ip address 192.168.0.1 255.255.255.0 secondary\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  description This is test\n#  ip address 192.168.0.2 255.255.255.0\n#  duplex auto\n#  speed 1000\n# interface GigabitEthernet0/3\n#  description Configured by Ansible Network\n#  ipv6 address FD5D:12C9:2201:1::1/64\n# interface GigabitEthernet0/3.100\n#  encapsulation dot1Q 20\n#  ip address 192.168.0.3 255.255.255.0\n\n# Using state replaced\n\n# Before state:\n# -------------\n\n# router-ios#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description Configured by Ansible\n#  ip address 10.1.1.1 255.255.255.0\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  description This is test\n#  no ip address\n#  duplex auto\n#  speed 1000\n# interface GigabitEthernet0/3\n#  description Configured by Ansible Network\n#  ip address 192.168.2.0 255.255.255.0\n# interface GigabitEthernet0/3.100\n#  encapsulation dot1Q 20\n#  ip address 192.168.0.2 255.255.255.0\n\n- name: Replaces device configuration of listed interfaces with provided configuration\n  cisco.ios.ios_l3_interfaces:\n    config:\n    - name: GigabitEthernet0/2\n      ipv4:\n      - address: 192.168.2.0/24\n    - name: GigabitEthernet0/3\n      ipv4:\n      - dhcp:\n          client_id: GigabitEthernet0/2\n          hostname: test.com\n    - name: GigabitEthernet0/3.100\n      ipv4:\n      - address: 192.168.0.3/24\n        secondary: true\n    state: replaced\n\n# Commands Fired:\n# ---------------\n\n# \"commands\": [\n#       \"interface GigabitEthernet0/1\",\n#       \"ip address 192.168.0.1 255.255.255.0 secondary\",\n#       \"interface GigabitEthernet0/2\",\n#       \"ip address 192.168.0.2 255.255.255.0\",\n#       \"interface GigabitEthernet0/3\",\n#       \"no ip address 192.168.2.0 255.255.255.0\",\n#       \"ip address dhcp client-id GigabitEthernet0/2 hostname test.com\",\n#       \"GigabitEthernet0/3.100\",\n#       \"no ip address 192.168.0.2 255.255.255.0\",\n#       \"ip address 192.168.0.3 255.255.255.0 secondary\",\n#     ],\n\n# After state:\n# ------------\n\n# router-ios#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description Configured by Ansible\n#  ip address 10.1.1.1 255.255.255.0\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  description This is test\n#  ip address 192.168.2.1 255.255.255.0\n#  duplex auto\n#  speed 1000\n# interface GigabitEthernet0/3\n#  description Configured by Ansible Network\n#  ip address dhcp client-id GigabitEthernet0/2 hostname test.com\n# interface GigabitEthernet0/3.100\n#  encapsulation dot1Q 20\n#  ip address 192.168.0.3 255.255.255.0 secondary\n\n# Using state overridden\n\n# Before state:\n# -------------\n\n# router-ios#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description Configured by Ansible\n#  ip address 10.1.1.1 255.255.255.0\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  description This is test\n#  ip address 192.168.2.1 255.255.255.0\n#  duplex auto\n#  speed 1000\n# interface GigabitEthernet0/3\n#  description Configured by Ansible Network\n#  ipv6 address FD5D:12C9:2201:1::1/64\n# interface GigabitEthernet0/3.100\n#  encapsulation dot1Q 20\n#  ip address 192.168.0.2 255.255.255.0\n\n- name: Override device configuration of all interfaces with provided configuration\n  cisco.ios.ios_l3_interfaces:\n    config:\n    - name: GigabitEthernet0/2\n      ipv4:\n      - address: 192.168.0.1/24\n    - name: GigabitEthernet0/3.100\n      ipv6:\n      - autoconfig: true\n    state: overridden\n\n# Commands Fired:\n# ---------------\n\n# \"commands\": [\n#       \"interface GigabitEthernet0/1\",\n#       \"no ip address 10.1.1.1 255.255.255.0\",\n#       \"interface GigabitEthernet0/2\",\n#       \"no ip address 192.168.2.1 255.255.255.0\",\n#       \"ip address 192.168.0.1 255.255.255.0\",\n#       \"interface GigabitEthernet0/3\",\n#       \"no ipv6 address FD5D:12C9:2201:1::1/64\",\n#       \"GigabitEthernet0/3.100\",\n#       \"no ip address 192.168.0.2 255.255.255.0\",\n#       \"ipv6 address autoconfig\",\n#     ],\n\n# After state:\n# ------------\n\n# router-ios#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  description Configured by Ansible\n#  no ip address\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  description This is test\n#  ip address 192.168.0.1 255.255.255.0\n#  duplex auto\n#  speed 1000\n# interface GigabitEthernet0/3\n#  description Configured by Ansible Network\n# interface GigabitEthernet0/3.100\n#  encapsulation dot1Q 20\n#  ipv6 address autoconfig\n\n# Using state Deleted\n\n# Before state:\n# -------------\n\n# router-ios#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  ip address 192.0.2.10 255.255.255.0\n#  shutdown\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  description Configured by Ansible Network\n#  ip address 192.168.1.0 255.255.255.0\n# interface GigabitEthernet0/3\n#  description Configured by Ansible Network\n#  ip address 192.168.0.1 255.255.255.0\n#  shutdown\n#  duplex full\n#  speed 10\n#  ipv6 address FD5D:12C9:2201:1::1/64\n# interface GigabitEthernet0/3.100\n#  encapsulation dot1Q 20\n#  ip address 192.168.0.2 255.255.255.0\n\n- name: \"Delete attributes of given interfaces (NOTE: This won't delete the interfaces itself)\"\n  cisco.ios.ios_l3_interfaces:\n    config:\n    - name: GigabitEthernet0/2\n    - name: GigabitEthernet0/3.100\n    state: deleted\n\n# \"commands\": [\n#       \"interface GigabitEthernet0/2\",\n#       \"no ip address 192.168.1.0 255.255.255.0\",\n#       \"GigabitEthernet0/3.100\",\n#       \"no ip address 192.168.0.2 255.255.255.0\",\n#     ],\n\n# After state:\n# -------------\n\n# router-ios#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  ip address 192.0.2.10 255.255.255.0\n#  shutdown\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  description Configured by Ansible Network\n#  no ip address\n# interface GigabitEthernet0/3\n#  description Configured by Ansible Network\n#  ip address 192.168.0.1 255.255.255.0\n#  shutdown\n#  duplex full\n#  speed 10\n#  ipv6 address FD5D:12C9:2201:1::1/64\n# interface GigabitEthernet0/3.100\n#  encapsulation dot1Q 20\n\n# Using state Deleted without any config passed\n#\"(NOTE: This will delete all of configured L3 resource module attributes from each configured interface)\"\n\n# Before state:\n# -------------\n\n# router-ios#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  ip address 192.0.2.10 255.255.255.0\n#  shutdown\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  description Configured by Ansible Network\n#  ip address 192.168.1.0 255.255.255.0\n# interface GigabitEthernet0/3\n#  description Configured by Ansible Network\n#  ip address 192.168.0.1 255.255.255.0\n#  shutdown\n#  duplex full\n#  speed 10\n#  ipv6 address FD5D:12C9:2201:1::1/64\n# interface GigabitEthernet0/3.100\n#  encapsulation dot1Q 20\n#  ip address 192.168.0.2 255.255.255.0\n\n- name: \"Delete L3 attributes of ALL interfaces together (NOTE: This won't delete the interface itself)\"\n  cisco.ios.ios_l3_interfaces:\n    state: deleted\n\n# \"commands\": [\n#       \"interface GigabitEthernet0/1\",\n#       \"no ip address 192.0.2.10 255.255.255.0\",\n#       \"interface GigabitEthernet0/2\",\n#       \"no ip address 192.168.1.0 255.255.255.0\",\n#       \"interface GigabitEthernet0/3\",\n#       \"no ip address 192.168.0.1 255.255.255.0\",\n#       \"no ipv6 address FD5D:12C9:2201:1::1/64\",\n#       \"GigabitEthernet0/3.100\",\n#       \"no ip address 192.168.0.2 255.255.255.0\",\n#     ],\n\n# After state:\n# -------------\n\n# router-ios#show running-config | section ^interface\n# interface GigabitEthernet0/1\n#  no ip address\n#  shutdown\n#  duplex auto\n#  speed auto\n# interface GigabitEthernet0/2\n#  description Configured by Ansible Network\n#  no ip address\n# interface GigabitEthernet0/3\n#  description Configured by Ansible Network\n#  shutdown\n#  duplex full\n#  speed 10\n# interface GigabitEthernet0/3.100\n#  encapsulation dot1Q 20\n\n# Using state Gathered\n\n# Before state:\n# -------------\n\n# router-ios#sh running-config | section ^interface\n# interface GigabitEthernet0/1\n#  ip address 203.0.113.27 255.255.255.0\n# interface GigabitEthernet0/2\n#  ip address 192.0.2.1 255.255.255.0 secondary\n#  ip address 192.0.2.2 255.255.255.0\n#  ipv6 address 2001:DB8:0:3::/64\n\n- name: Gather listed l3 interfaces with provided configurations\n  cisco.ios.ios_l3_interfaces:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n\n# \"gathered\": [\n#         {\n#             \"ipv4\": [\n#                 {\n#                     \"address\": \"203.0.113.27 255.255.255.0\"\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/1\"\n#         },\n#         {\n#             \"ipv4\": [\n#                 {\n#                     \"address\": \"192.0.2.1 255.255.255.0\",\n#                     \"secondary\": true\n#                 },\n#                 {\n#                     \"address\": \"192.0.2.2 255.255.255.0\"\n#                 }\n#             ],\n#             \"ipv6\": [\n#                 {\n#                     \"address\": \"2001:db8:0:3::/64\"\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/2\"\n#         }\n#     ]\n\n# After state:\n# ------------\n\n# router-ios#sh running-config | section ^interface\n# interface GigabitEthernet0/1\n#  ip address 203.0.113.27 255.255.255.0\n# interface GigabitEthernet0/2\n#  ip address 192.0.2.1 255.255.255.0 secondary\n#  ip address 192.0.2.2 255.255.255.0\n#  ipv6 address 2001:DB8:0:3::/64\n\n# Using state Rendered\n\n- name: Render the commands for provided configuration\n  cisco.ios.ios_l3_interfaces:\n    config:\n    - name: GigabitEthernet0/1\n      ipv4:\n      - dhcp:\n          client_id: GigabitEthernet0/0\n          hostname: test.com\n    - name: GigabitEthernet0/2\n      ipv4:\n      - address: 198.51.100.1/24\n        secondary: true\n      - address: 198.51.100.2/24\n      ipv6:\n      - address: 2001:db8:0:3::/64\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n\n# \"rendered\": [\n#         \"interface GigabitEthernet0/1\",\n#         \"ip address dhcp client-id GigabitEthernet 0/0 hostname test.com\",\n#         \"interface GigabitEthernet0/2\",\n#         \"ip address 198.51.100.1 255.255.255.0 secondary\",\n#         \"ip address 198.51.100.2 255.255.255.0\",\n#         \"ipv6 address 2001:db8:0:3::/64\"\n#     ]\n\n# Using state Parsed\n\n# File: parsed.cfg\n# ----------------\n#\n# interface GigabitEthernet0/1\n#  ip address dhcp client-id GigabitEthernet 0/0 hostname test.com\n# interface GigabitEthernet0/2\n#  ip address 198.51.100.1 255.255.255.0\n#  ip address 198.51.100.2 255.255.255.0 secondary\n#  ipv6 address 2001:db8:0:3::/64\n\n- name: Parse the commands for provided configuration\n  cisco.ios.ios_l3_interfaces:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n\n# \"parsed\": [\n#         {\n#             \"ipv4\": [\n#                 {\n#                     \"dhcp\": {\n#                         \"client_id\": GigabitEthernet0/0,\n#                         \"hostname\": \"test.com\"\n#                     }\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/1\"\n#         },\n#         {\n#             \"ipv4\": [\n#                 {\n#                     \"address\": \"198.51.100.1/24\",\n#                     \"secondary\": true\n#                 },\n#                 {\n#                     \"address\": \"198.51.100.2/24\"\n#                 }\n#             ],\n#             \"ipv6\": [\n#                 {\n#                     \"address\": \"2001:db8:0:3::/64\"\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/2\"\n#         }\n#     ]\n\n"
  },
  "cisco.ios.ios_lacp": {
    "doc": {
      "description": "This module provides declarative management of Global LACP on Cisco IOS network devices.",
      "has_action": true,
      "notes": "Tested against Cisco IOSv Version 15.2 on VIRL.\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "The provided configurations.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "system": {
              "aliases": [],
              "description": "This option sets the default system parameters for LACP.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "priority": {
                  "aliases": [],
                  "description": "LACP priority for the system.\nRefer to vendor documentation for valid values.",
                  "type": "int",
                  "required": true,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(show lacp sys-id).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(show running-config | include ip route|ipv6 route) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "deleted",
            "rendered",
            "parsed",
            "gathered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "LACP resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n#\n# Before state:\n# -------------\n#\n# vios#show lacp sys-id\n# 32768, 5e00.0000.8000\n\n- name: Merge provided configuration with device configuration\n  cisco.ios.ios_lacp:\n    config:\n      system:\n        priority: 123\n    state: merged\n\n# After state:\n# ------------\n#\n# vios#show lacp sys-id\n# 123, 5e00.0000.8000\n\n# Using replaced\n#\n# Before state:\n# -------------\n#\n# vios#show lacp sys-id\n# 500, 5e00.0000.8000\n\n- name: Replaces Global LACP configuration\n  cisco.ios.ios_lacp:\n    config:\n      system:\n        priority: 123\n    state: replaced\n\n# After state:\n# ------------\n#\n# vios#show lacp sys-id\n# 123, 5e00.0000.8000\n\n# Using Deleted\n#\n# Before state:\n# -------------\n#\n# vios#show lacp sys-id\n# 500, 5e00.0000.8000\n\n- name: Delete Global LACP attribute\n  cisco.ios.ios_lacp:\n    state: deleted\n\n# After state:\n# -------------\n#\n# vios#show lacp sys-id\n# 32768, 5e00.0000.8000\n\n# Using Gathered\n\n# Before state:\n# -------------\n#\n# vios#show lacp sys-id\n# 123, 5e00.0000.8000\n\n- name: Gather listed LACP with provided configurations\n  cisco.ios.ios_lacp:\n    config:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"gathered\": {\n#         \"system\": {\n#             \"priority\": 500\n#         }\n#     }\n\n# After state:\n# ------------\n#\n# vios#show lacp sys-id\n# 123, 5e00.0000.8000\n\n# Using Rendered\n\n- name: Render the commands for provided  configuration\n  cisco.ios.ios_lacp:\n    config:\n      system:\n        priority: 123\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"rendered\": [\n#         \"lacp system-priority 10\"\n#     ]\n\n# Using Parsed\n\n# File: parsed.cfg\n# ----------------\n#\n# lacp system-priority 123\n\n- name: Parse the commands for provided configuration\n  cisco.ios.ios_lacp:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n#\n# \"parsed\": {\n#         \"system\": {\n#             \"priority\": 123\n#         }\n#     }\n\n"
  },
  "cisco.ios.ios_lacp_interfaces": {
    "doc": {
      "description": "This module provides declarative management of LACP on Cisco IOS network devices lacp_interfaces.",
      "has_action": true,
      "notes": "Tested against Cisco IOSv Version 15.2 on VIRL.\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of LACP lacp_interfaces option",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "fast_switchover": {
              "aliases": [],
              "description": "LACP fast switchover supported on this port channel.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "max_bundle": {
              "aliases": [],
              "description": "LACP maximum number of ports to bundle in this port channel.\nRefer to vendor documentation for valid port values.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the Interface for configuring LACP.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "port_priority": {
              "aliases": [],
              "description": "LACP priority on this interface.\nRefer to vendor documentation for valid port values.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(show running-config | section ^interface).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(show running-config | include ip route|ipv6 route) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "rendered",
            "gathered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "LACP interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n#\n# Before state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n# interface Port-channel20\n# interface Port-channel30\n# interface GigabitEthernet0/1\n#  shutdown\n# interface GigabitEthernet0/2\n#  shutdown\n# interface GigabitEthernet0/3\n#  shutdown\n\n- name: Merge provided configuration with device configuration\n  cisco.ios.ios_lacp_interfaces:\n    config:\n    - name: GigabitEthernet0/1\n      port_priority: 10\n    - name: GigabitEthernet0/2\n      port_priority: 20\n    - name: GigabitEthernet0/3\n      port_priority: 30\n    - name: Port-channel10\n      fast_switchover: true\n      max_bundle: 5\n    state: merged\n\n# After state:\n# ------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n#  lacp fast-switchover\n#  lacp max-bundle 5\n# interface Port-channel20\n# interface Port-channel30\n# interface GigabitEthernet0/1\n#  shutdown\n#  lacp port-priority 10\n# interface GigabitEthernet0/2\n#  shutdown\n#  lacp port-priority 20\n# interface GigabitEthernet0/3\n#  shutdown\n#  lacp port-priority 30\n\n# Using overridden\n#\n# Before state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n#  lacp fast-switchover\n# interface Port-channel20\n# interface Port-channel30\n# interface GigabitEthernet0/1\n#  shutdown\n#  lacp port-priority 10\n# interface GigabitEthernet0/2\n#  shutdown\n#  lacp port-priority 20\n# interface GigabitEthernet0/3\n#  shutdown\n#  lacp port-priority 30\n\n- name: Override device configuration of all lacp_interfaces with provided configuration\n  cisco.ios.ios_lacp_interfaces:\n    config:\n    - name: GigabitEthernet0/1\n      port_priority: 20\n    - name: Port-channel10\n      max_bundle: 2\n    state: overridden\n\n# After state:\n# ------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n#  lacp max-bundle 2\n# interface Port-channel20\n# interface Port-channel30\n# interface GigabitEthernet0/1\n#  shutdown\n#  lacp port-priority 20\n# interface GigabitEthernet0/2\n#  shutdown\n# interface GigabitEthernet0/3\n#  shutdown\n\n# Using replaced\n#\n# Before state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n#  lacp max-bundle 5\n# interface Port-channel20\n# interface Port-channel30\n# interface GigabitEthernet0/1\n#  shutdown\n#  lacp port-priority 10\n# interface GigabitEthernet0/2\n#  shutdown\n#  lacp port-priority 20\n# interface GigabitEthernet0/3\n#  shutdown\n#  lacp port-priority 30\n\n- name: Replaces device configuration of listed lacp_interfaces with provided configuration\n  cisco.ios.ios_lacp_interfaces:\n    config:\n    - name: GigabitEthernet0/3\n      port_priority: 40\n    - name: Port-channel10\n      fast_switchover: true\n      max_bundle: 2\n    state: replaced\n\n# After state:\n# ------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n#  lacp fast-switchover\n#  lacp max-bundle 2\n# interface Port-channel20\n# interface Port-channel30\n# interface GigabitEthernet0/1\n#  shutdown\n#  lacp port-priority 10\n# interface GigabitEthernet0/2\n#  shutdown\n#  lacp port-priority 20\n# interface GigabitEthernet0/3\n#  shutdown\n#  lacp port-priority 40\n\n# Using Deleted\n#\n# Before state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n#  flowcontrol receive on\n# interface Port-channel20\n# interface Port-channel30\n# interface GigabitEthernet0/1\n#  shutdown\n#  lacp port-priority 10\n# interface GigabitEthernet0/2\n#  shutdown\n#  lacp port-priority 20\n# interface GigabitEthernet0/3\n#  shutdown\n#  lacp port-priority 30\n\n- name: \"Delete LACP attributes of given interfaces (Note: This won't delete the interface itself)\"\n  cisco.ios.ios_lacp_interfaces:\n    config:\n    - name: GigabitEthernet0/1\n    state: deleted\n\n# After state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n# interface Port-channel20\n# interface Port-channel30\n# interface GigabitEthernet0/1\n#  shutdown\n# interface GigabitEthernet0/2\n#  shutdown\n#  lacp port-priority 20\n# interface GigabitEthernet0/3\n#  shutdown\n#  lacp port-priority 30\n\n# Using Deleted without any config passed\n# \"(NOTE: This will delete all of configured LLDP module attributes)\"\n#\n# Before state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n#  lacp fast-switchover\n# interface Port-channel20\n#  lacp max-bundle 2\n# interface Port-channel30\n# interface GigabitEthernet0/1\n#  shutdown\n#  lacp port-priority 10\n# interface GigabitEthernet0/2\n#  shutdown\n#  lacp port-priority 20\n# interface GigabitEthernet0/3\n#  shutdown\n#  lacp port-priority 30\n\n- name: \"Delete LACP attributes for all configured interfaces (Note: This won't delete the interface itself)\"\n  cisco.ios.ios_lacp_interfaces:\n    state: deleted\n\n# After state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n# interface Port-channel20\n# interface Port-channel30\n# interface GigabitEthernet0/1\n#  shutdown\n# interface GigabitEthernet0/2\n#  shutdown\n# interface GigabitEthernet0/3\n#  shutdown\n\n# Using Gathered\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | section ^interface\n# interface Port-channel10\n#  lacp fast-switchover\n#  lacp max-bundle 2\n# interface Port-channel40\n#  lacp max-bundle 5\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  lacp port-priority 30\n# interface GigabitEthernet0/2\n#  lacp port-priority 20\n\n- name: Gather listed LACP interfaces with provided configurations\n  cisco.ios.ios_lacp_interfaces:\n    config:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"gathered\": [\n#         {\n#             \"fast_switchover\": true,\n#             \"max_bundle\": 2,\n#             \"name\": \"Port-channel10\"\n#         },\n#         {\n#             \"max_bundle\": 5,\n#             \"name\": \"Port-channel40\"\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/0\"\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/1\",\n#             \"port_priority\": 30\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/2\",\n#             \"port_priority\": 20\n#         }\n#     ]\n\n# After state:\n# ------------\n#\n# vios#sh running-config | section ^interface\n# interface Port-channel10\n#  lacp fast-switchover\n#  lacp max-bundle 2\n# interface Port-channel40\n#  lacp max-bundle 5\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  lacp port-priority 30\n# interface GigabitEthernet0/2\n#  lacp port-priority 20\n\n# Using Rendered\n\n- name: Render the commands for provided  configuration\n  cisco.ios.ios_lacp_interfaces:\n    config:\n    - name: GigabitEthernet0/1\n      port_priority: 10\n    - name: GigabitEthernet0/2\n      port_priority: 20\n    - name: Port-channel10\n      fast_switchover: true\n      max_bundle: 2\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"rendered\": [\n#         \"interface GigabitEthernet0/1\",\n#         \"lacp port-priority 10\",\n#         \"interface GigabitEthernet0/2\",\n#         \"lacp port-priority 20\",\n#         \"interface Port-channel10\",\n#         \"lacp max-bundle 2\",\n#         \"lacp fast-switchover\"\n#     ]\n\n# Using Parsed\n\n# File: parsed.cfg\n# ----------------\n#\n# interface GigabitEthernet0/1\n# lacp port-priority 10\n# interface GigabitEthernet0/2\n# lacp port-priority 20\n# interface Port-channel10\n# lacp max-bundle 2 fast-switchover\n\n- name: Parse the commands for provided configuration\n  cisco.ios.ios_lacp_interfaces:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n#\n# \"parsed\": [\n#         {\n#             \"name\": \"GigabitEthernet0/1\",\n#             \"port_priority\": 10\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/2\",\n#             \"port_priority\": 20\n#         },\n#         {\n#             \"fast_switchover\": true,\n#             \"max_bundle\": 2,\n#             \"name\": \"Port-channel10\"\n#         }\n#     ]\n\n"
  },
  "cisco.ios.ios_lag_interfaces": {
    "doc": {
      "description": "This module manages properties of Link Aggregation Group on Cisco IOS devices.",
      "has_action": true,
      "notes": "Tested against Cisco IOSv Version 15.2 on VIRL.\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of link aggregation group configurations.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "members": {
              "aliases": [],
              "description": "Interface options for the link aggregation group.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "link": {
                  "aliases": [],
                  "description": "Assign a link identifier used for load-balancing.\nRefer to vendor documentation for valid values.\nNOTE, parameter only supported on Cisco IOS XE platform.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "member": {
                  "aliases": [],
                  "description": "Interface member of the link aggregation group.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "mode": {
                  "aliases": [],
                  "description": "Etherchannel Mode of the interface for link aggregation.\nOn mode has to be quoted as 'on' or else pyyaml will convert to True before it gets to Ansible.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "auto",
                    "on",
                    "desirable",
                    "active",
                    "passive"
                  ],
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "ID of Ethernet Channel of interfaces.\nRefer to vendor documentation for valid port values.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(show running-config | section ^interface).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(show running-config | include ip route|ipv6 route) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "rendered",
            "parsed",
            "gathered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "LAG interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n#\n# Before state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n# interface GigabitEthernet0/1\n#  shutdown\n# interface GigabitEthernet0/2\n#  shutdown\n# interface GigabitEthernet0/3\n#  shutdown\n# interface GigabitEthernet0/4\n#  shutdown\n\n- name: Merge provided configuration with device configuration\n  cisco.ios.ios_lag_interfaces:\n    config:\n    - name: 10\n      members:\n      - member: GigabitEthernet0/1\n        mode: auto\n      - member: GigabitEthernet0/2\n        mode: auto\n    - name: 20\n      members:\n      - member: GigabitEthernet0/3\n        mode: on\n    - name: 30\n      members:\n      - member: GigabitEthernet0/4\n        mode: active\n    state: merged\n\n# After state:\n# ------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n# interface Port-channel20\n# interface Port-channel30\n# interface GigabitEthernet0/1\n#  shutdown\n#  channel-group 10 mode auto\n# interface GigabitEthernet0/2\n#  shutdown\n#  channel-group 10 mode auto\n# interface GigabitEthernet0/3\n#  shutdown\n#  channel-group 20 mode on\n# interface GigabitEthernet0/4\n#  shutdown\n#  channel-group 30 mode active\n\n# Using overridden\n#\n# Before state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n# interface Port-channel20\n# interface Port-channel30\n# interface GigabitEthernet0/1\n#  shutdown\n#  channel-group 10 mode auto\n# interface GigabitEthernet0/2\n#  shutdown\n#  channel-group 10 mode auto\n# interface GigabitEthernet0/3\n#  shutdown\n#  channel-group 20 mode on\n# interface GigabitEthernet0/4\n#  shutdown\n#  channel-group 30 mode active\n\n- name: Override device configuration of all interfaces with provided configuration\n  cisco.ios.ios_lag_interfaces:\n    config:\n    - name: 20\n      members:\n      - member: GigabitEthernet0/2\n        mode: auto\n      - member: GigabitEthernet0/3\n        mode: auto\n    state: overridden\n\n# After state:\n# ------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n# interface Port-channel20\n# interface Port-channel30\n# interface GigabitEthernet0/1\n#  shutdown\n# interface GigabitEthernet0/2\n#  shutdown\n#  channel-group 20 mode auto\n# interface GigabitEthernet0/3\n#  shutdown\n#  channel-group 20 mode auto\n# interface GigabitEthernet0/4\n#  shutdown\n\n# Using replaced\n#\n# Before state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n# interface Port-channel20\n# interface Port-channel30\n# interface GigabitEthernet0/1\n#  shutdown\n#  channel-group 10 mode auto\n# interface GigabitEthernet0/2\n#  shutdown\n#  channel-group 10 mode auto\n# interface GigabitEthernet0/3\n#  shutdown\n#  channel-group 20 mode on\n# interface GigabitEthernet0/4\n#  shutdown\n#  channel-group 30 mode active\n\n- name: Replaces device configuration of listed interfaces with provided configuration\n  cisco.ios.ios_lag_interfaces:\n    config:\n    - name: 40\n      members:\n      - member: GigabitEthernet0/3\n        mode: auto\n    state: replaced\n\n# After state:\n# ------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n# interface Port-channel20\n# interface Port-channel30\n# interface Port-channel40\n# interface GigabitEthernet0/1\n#  shutdown\n#  channel-group 10 mode auto\n# interface GigabitEthernet0/2\n#  shutdown\n#  channel-group 10 mode auto\n# interface GigabitEthernet0/3\n#  shutdown\n#  channel-group 40 mode on\n# interface GigabitEthernet0/4\n#  shutdown\n#  channel-group 30 mode active\n\n# Using Deleted\n#\n# Before state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n# interface Port-channel20\n# interface Port-channel30\n# interface GigabitEthernet0/1\n#  shutdown\n#  channel-group 10 mode auto\n# interface GigabitEthernet0/2\n#  shutdown\n#  channel-group 10 mode auto\n# interface GigabitEthernet0/3\n#  shutdown\n#  channel-group 20 mode on\n# interface GigabitEthernet0/4\n#  shutdown\n#  channel-group 30 mode active\n\n- name: \"Delete LAG attributes of given interfaces (Note: This won't delete the interface itself)\"\n  cisco.ios.ios_lag_interfaces:\n    config:\n    - name: 10\n    - name: 20\n    state: deleted\n\n# After state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n# interface Port-channel20\n# interface Port-channel30\n# interface GigabitEthernet0/1\n#  shutdown\n# interface GigabitEthernet0/2\n#  shutdown\n# interface GigabitEthernet0/3\n#  shutdown\n# interface GigabitEthernet0/4\n#  shutdown\n#  channel-group 30 mode active\n\n# Using Deleted without any config passed\n#\"(NOTE: This will delete all of configured LLDP module attributes)\"\n\n#\n# Before state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n# interface Port-channel20\n# interface Port-channel30\n# interface GigabitEthernet0/1\n#  shutdown\n#  channel-group 10 mode auto\n# interface GigabitEthernet0/2\n#  shutdown\n#  channel-group 10 mode auto\n# interface GigabitEthernet0/3\n#  shutdown\n#  channel-group 20 mode on\n# interface GigabitEthernet0/4\n#  shutdown\n#  channel-group 30 mode active\n\n- name: \"Delete all configured LAG attributes for interfaces (Note: This won't delete the interface itself)\"\n  cisco.ios.ios_lag_interfaces:\n    state: deleted\n\n# After state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel10\n# interface Port-channel20\n# interface Port-channel30\n# interface GigabitEthernet0/1\n#  shutdown\n# interface GigabitEthernet0/2\n#  shutdown\n# interface GigabitEthernet0/3\n#  shutdown\n# interface GigabitEthernet0/4\n#  shutdown\n\n# Using Gathered\n\n# Before state:\n# -------------\n#\n# vios#show running-config | section ^interface\n# interface Port-channel11\n# interface Port-channel22\n# interface GigabitEthernet0/1\n#  shutdown\n#  channel-group 11 mode active\n# interface GigabitEthernet0/2\n#  shutdown\n#  channel-group 22 mode active\n\n- name: Gather listed LAG interfaces with provided configurations\n  cisco.ios.ios_lag_interfaces:\n    config:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"gathered\": [\n#     {\n#         \"members\": [\n#             {\n#                 \"member\": \"GigabitEthernet0/1\",\n#                 \"mode\": \"active\"\n#             }\n#         ],\n#         \"name\": \"Port-channel11\"\n#     },\n#     {\n#         \"members\": [\n#             {\n#                 \"member\": \"GigabitEthernet0/2\",\n#                 \"mode\": \"active\"\n#             }\n#         ],\n#         \"name\": \"Port-channel22\"\n#     }\n# ]\n\n# After state:\n# ------------\n#\n# vios#sh running-config | section ^interface\n# interface Port-channel11\n# interface Port-channel22\n# interface GigabitEthernet0/1\n#  shutdown\n#  channel-group 11 mode active\n# interface GigabitEthernet0/2\n#  shutdown\n#  channel-group 22 mode active\n\n# Using Rendered\n\n- name: Render the commands for provided  configuration\n  cisco.ios.ios_lag_interfaces:\n    config:\n      - name: Port-channel11\n        members:\n          - member: GigabitEthernet0/1\n            mode: active\n      - name: Port-channel22\n        members:\n          - member: GigabitEthernet0/2\n            mode: passive\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"rendered\": [\n#         \"interface GigabitEthernet0/1\",\n#         \"channel-group 11 mode active\",\n#         \"interface GigabitEthernet0/2\",\n#         \"channel-group 22 mode passive\",\n#     ]\n\n# Using Parsed\n\n#  File: parsed.cfg\n# ----------------\n#\n# interface GigabitEthernet0/1\n# channel-group 11 mode active\n# interface GigabitEthernet0/2\n# channel-group 22 mode passive\n\n- name: Parse the commands for provided configuration\n  cisco.ios.ios_lag_interfaces:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n#\n# \"parsed\": [\n#     {\n#         \"members\": [\n#             {\n#                 \"member\": \"GigabitEthernet0/1\",\n#                 \"mode\": \"active\"\n#             }\n#         ],\n#         \"name\": \"Port-channel11\"\n#     },\n#     {\n#         \"members\": [\n#             {\n#                 \"member\": \"GigabitEthernet0/2\",\n#                 \"mode\": \"passive\"\n#             }\n#         ],\n#         \"name\": \"Port-channel22\"\n#     }\n# ]\n\n"
  },
  "cisco.ios.ios_linkagg": {
    "doc": {
      "description": "This module provides declarative management of link aggregation groups on Cisco IOS network devices.",
      "has_action": true,
      "notes": "Tested against IOS 15.2\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "aggregate": {
          "aliases": [],
          "description": "List of link aggregation definitions.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "group": {
              "aliases": [],
              "description": "Channel-group number for the port-channel Link aggregation group. Range 1-255.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "members": {
              "aliases": [],
              "description": "List of members of the link aggregation group.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "mode": {
              "aliases": [],
              "description": "Mode of the link aggregation group.\nOn mode has to be quoted as 'on' or else pyyaml will convert to True before it gets to Ansible.",
              "type": "str",
              "required": false,
              "choices": [
                "active",
                "on",
                "passive",
                "auto",
                "desirable"
              ],
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the link aggregation group.",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            }
          }
        },
        "group": {
          "aliases": [],
          "description": "Channel-group number for the port-channel Link aggregation group. Range 1-255.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "members": {
          "aliases": [],
          "description": "List of members of the link aggregation group.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "mode": {
          "aliases": [],
          "description": "Mode of the link aggregation group.\nOn mode has to be quoted as 'on' or else pyyaml will convert to True before it gets to Ansible.",
          "type": "str",
          "required": false,
          "choices": [
            "active",
            "on",
            "passive",
            "auto",
            "desirable"
          ],
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "purge": {
          "aliases": [],
          "description": "Purge links not defined in the I(aggregate) parameter.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the link aggregation group.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage link aggregation groups on Cisco IOS network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: create link aggregation group\n  cisco.ios.ios_linkagg:\n    group: 10\n    state: present\n\n- name: delete link aggregation group\n  cisco.ios.ios_linkagg:\n    group: 10\n    state: absent\n\n- name: set link aggregation group to members\n  cisco.ios.ios_linkagg:\n    group: 200\n    mode: active\n    members:\n    - GigabitEthernet0/0\n    - GigabitEthernet0/1\n\n- name: remove link aggregation group from GigabitEthernet0/0\n  cisco.ios.ios_linkagg:\n    group: 200\n    mode: active\n    members:\n    - GigabitEthernet0/1\n\n- name: Create aggregate of linkagg definitions\n  cisco.ios.ios_linkagg:\n    aggregate:\n    - {group: 3, mode: on, members: [GigabitEthernet0/1]}\n    - {group: 100, mode: passive, members: [GigabitEthernet0/2]}\n"
  },
  "cisco.ios.ios_lldp": {
    "doc": {
      "description": "This module provides declarative management of LLDP service on Cisco IOS network devices.",
      "has_action": true,
      "notes": "Tested against IOS 15.2\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "State of the LLDP configuration. If value is I(present) lldp will be enabled else if it is I(absent) it will be disabled.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage LLDP configuration on Cisco IOS network devices.",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Enable LLDP service\n  cisco.ios.ios_lldp:\n    state: present\n\n- name: Disable LLDP service\n  cisco.ios.ios_lldp:\n    state: absent\n"
  },
  "cisco.ios.ios_lldp_global": {
    "doc": {
      "description": "This module configures and manages the Link Layer Discovery Protocol(LLDP) attributes on IOS platforms.",
      "has_action": true,
      "notes": "Tested against Cisco IOSv Version 15.2 on VIRL.\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of LLDP options",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enabled": {
              "aliases": [],
              "description": "Enable LLDP",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "holdtime": {
              "aliases": [],
              "description": "LLDP holdtime (in sec) to be sent in packets.\nRefer to vendor documentation for valid values.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "reinit": {
              "aliases": [],
              "description": "Specify the delay (in secs) for LLDP to initialize.\nRefer to vendor documentation for valid values.\nNOTE, if LLDP reinit is configured with a starting value, idempotency won't be maintained as the Cisco device doesn't record the starting reinit configured value. As such, Ansible cannot verify if the respective starting reinit value is already configured or not from the device side. If you try to apply starting reinit value in every play run, Ansible will show changed as True. For any other reinit value, idempotency will be maintained since any other reinit value is recorded in the Cisco device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "timer": {
              "aliases": [],
              "description": "Specify the rate at which LLDP packets are sent (in sec).\nRefer to vendor documentation for valid values.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "tlv_select": {
              "aliases": [],
              "description": "Selection of LLDP TLVs i.e. type-length-value to send\nNOTE, if tlv-select is configured idempotency won't be maintained as Cisco device doesn't record configured tlv-select options. As such, Ansible cannot verify if the respective tlv-select options is already configured or not from the device side. If you try to apply tlv-select option in every play run, Ansible will show changed as True.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "four_wire_power_management": {
                  "aliases": [],
                  "description": "Cisco 4-wire Power via MDI TLV",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "mac_phy_cfg": {
                  "aliases": [],
                  "description": "IEEE 802.3 MAC/Phy Configuration/status TLV",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "management_address": {
                  "aliases": [],
                  "description": "Management Address TLV",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "port_description": {
                  "aliases": [],
                  "description": "Port Description TLV",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "port_vlan": {
                  "aliases": [],
                  "description": "Port VLAN ID TLV",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "power_management": {
                  "aliases": [],
                  "description": "IEEE 802.3 DTE Power via MDI TLV",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "system_capabilities": {
                  "aliases": [],
                  "description": "System Capabilities TLV",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "system_description": {
                  "aliases": [],
                  "description": "System Description TLV",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "system_name": {
                  "aliases": [],
                  "description": "System Name TLV",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(show running-config | section ^lldp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(show running-config | include ip route|ipv6 route) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "deleted",
            "rendered",
            "gathered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "LLDP resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n\n# Before state:\n# -------------\n# vios#sh running-config | section ^lldp\n# vios1#\n\n\n- name: Merge provided configuration with device configuration\n  cisco.ios.ios_lldp_global:\n    config:\n      holdtime: 10\n      enabled: true\n      reinit: 3\n      timer: 10\n    state: merged\n\n# After state:\n# ------------\n# vios#sh running-config | section ^lldp\n#  lldp timer 10\n#  lldp holdtime 10\n#  lldp reinit 3\n#  lldp run\n\n\n# Using replaced\n\n# Before state:\n# -------------\n# vios#sh running-config | section ^lldp\n#  lldp timer 10\n#  lldp holdtime 10\n#  lldp reinit 3\n#  lldp run\n\n\n- name: Replaces LLDP device configuration with provided configuration\n  cisco.ios.ios_lldp_global:\n    config:\n      holdtime: 20\n      reinit: 5\n    state: replaced\n\n# After state:\n# -------------\n# vios#sh running-config | section ^lldp\n#  lldp holdtime 20\n#  lldp reinit 5\n\n\n# Using Deleted without any config passed\n#\"(NOTE: This will delete all of configured LLDP module attributes)\"\n\n# Before state:\n# -------------\n# vios#sh running-config | section ^lldp\n#  lldp timer 10\n#  lldp holdtime 10\n#  lldp reinit 3\n#  lldp run\n\n\n- name: Delete LLDP attributes\n  cisco.ios.ios_lldp_global:\n    state: deleted\n\n# After state:\n# -------------\n# vios#sh running-config | section ^lldp\n# vios1#\n\n# Using Gathered\n\n# Before state:\n# -------------\n#\n# vios#sh running-config | section ^lldp\n#  lldp timer 10\n#  lldp holdtime 10\n#  lldp reinit 3\n#  lldp run\n\n- name: Gather listed interfaces with provided configurations\n  cisco.ios.ios_lldp_global:\n    config:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"gathered\": {\n#         \"enabled\": true,\n#         \"holdtime\": 10,\n#         \"reinit\": 3,\n#         \"timer\": 10\n#     }\n\n# After state:\n# ------------\n#\n# vios#sh running-config | section ^lldp\n#  lldp timer 10\n#  lldp holdtime 10\n#  lldp reinit 3\n#  lldp run\n\n# Using Rendered\n- name: Render the commands for provided  configuration\n  cisco.ios.ios_lldp_global:\n    config:\n      holdtime: 10\n      enabled: true\n      reinit: 3\n      timer: 10\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"rendered\": [\n#         \"lldp holdtime 10\",\n#         \"lldp run\",\n#         \"lldp timer 10\",\n#         \"lldp reinit 3\"\n#     ]\n\n# Using Parsed\n\n# File: parsed.cfg\n# ----------------\n#\n# lldp timer 10\n# lldp holdtime 10\n# lldp reinit 3\n# lldp run\n\n- name: Parse the commands for provided configuration\n  cisco.ios.ios_lldp_global:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n#\n# \"parsed\": {\n#         \"enabled\": true,\n#         \"holdtime\": 10,\n#         \"reinit\": 3,\n#         \"timer\": 10\n#     }\n\n"
  },
  "cisco.ios.ios_lldp_interfaces": {
    "doc": {
      "description": "This module manages link layer discovery protocol (LLDP) attributes of interfaces on Cisco IOS devices.",
      "has_action": true,
      "notes": "Tested against Cisco IOSv Version 15.2 on VIRL.\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of LLDP options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "med_tlv_select": {
              "aliases": [],
              "description": "Selection of LLDP MED TLVs to send\nNOTE, if med-tlv-select is configured idempotency won't be maintained as Cisco device doesn't record configured med-tlv-select options. As such, Ansible cannot verify if the respective med-tlv-select options is already configured or not from the device side. If you try to apply med-tlv-select option in every play run, Ansible will show changed as True.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "inventory_management": {
                  "aliases": [],
                  "description": "LLDP MED Inventory Management TLV",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "Full name of the interface excluding any logical unit number, i.e. GigabitEthernet0/1.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "receive": {
              "aliases": [],
              "description": "Enable LLDP reception on interface.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "tlv_select": {
              "aliases": [],
              "description": "Selection of LLDP type-length-value i.e. TLVs to send\nNOTE, if tlv-select is configured idempotency won't be maintained as Cisco device doesn't record configured tlv-select options. As such, Ansible cannot verify if the respective tlv-select options is already configured or not from the device side. If you try to apply tlv-select option in every play run, Ansible will show changed as True.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "power_management": {
                  "aliases": [],
                  "description": "IEEE 802.3 DTE Power via MDI TLV",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "transmit": {
              "aliases": [],
              "description": "Enable LLDP transmission on interface.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(sh lldp interface).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(show running-config | include ip route|ipv6 route) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "rendered",
            "gathered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "LLDP interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n#\n# Before state:\n# -------------\n#\n# vios#sh lldp interface\n# GigabitEthernet0/0:\n#    Tx: enabled\n#    Rx: disabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/1:\n#    Tx: disabled\n#    Rx: disabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/2:\n#    Tx: disabled\n#    Rx: disabled\n#    Tx state: IDLE\n#    Rx state: INIT\n#\n# GigabitEthernet0/3:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n\n- name: Merge provided configuration with device configuration\n  cisco.ios.ios_lldp_interfaces:\n    config:\n    - name: GigabitEthernet0/1\n      receive: true\n      transmit: true\n    - name: GigabitEthernet0/2\n      receive: true\n    - name: GigabitEthernet0/3\n      transmit: true\n    state: merged\n\n# After state:\n# ------------\n#\n# vios#sh lldp interface\n# GigabitEthernet0/0:\n#    Tx: enabled\n#    Rx: disabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/1:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/2:\n#    Tx: disabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: INIT\n#\n# GigabitEthernet0/3:\n#    Tx: enabled\n#    Rx: disabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n\n# Using overridden\n#\n# Before state:\n# -------------\n#\n# vios#sh lldp interface\n# GigabitEthernet0/0:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/1:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/2:\n#    Tx: disabled\n#    Rx: disabled\n#    Tx state: IDLE\n#    Rx state: INIT\n#\n# GigabitEthernet0/3:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n\n- name: Override device configuration of all lldp_interfaces with provided configuration\n  cisco.ios.ios_lldp_interfaces:\n    config:\n    - name: GigabitEthernet0/2\n      receive: true\n      transmit: true\n    state: overridden\n\n# After state:\n# ------------\n#\n# vios#sh lldp interface\n# GigabitEthernet0/0:\n#    Tx: disabled\n#    Rx: disabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/1:\n#    Tx: disabled\n#    Rx: disabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/2:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: INIT\n#\n# GigabitEthernet0/3:\n#    Tx: disabled\n#    Rx: disabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n\n# Using replaced\n#\n# Before state:\n# -------------\n#\n# vios#sh lldp interface\n# GigabitEthernet0/0:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/1:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/2:\n#    Tx: disabled\n#    Rx: disabled\n#    Tx state: IDLE\n#    Rx state: INIT\n#\n# GigabitEthernet0/3:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n\n- name: Replaces device configuration of listed lldp_interfaces with provided configuration\n  cisco.ios.ios_lldp_interfaces:\n    config:\n    - name: GigabitEthernet0/2\n      receive: true\n      transmit: true\n    - name: GigabitEthernet0/3\n      receive: true\n    state: replaced\n\n# After state:\n# ------------\n#\n# vios#sh lldp interface\n# GigabitEthernet0/0:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/1:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/2:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: INIT\n#\n# GigabitEthernet0/3:\n#    Tx: disabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n\n# Using Deleted\n#\n# Before state:\n# -------------\n#\n# vios#sh lldp interface\n# GigabitEthernet0/0:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/1:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/2:\n#    Tx: disabled\n#    Rx: disabled\n#    Tx state: IDLE\n#    Rx state: INIT\n#\n# GigabitEthernet0/3:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n\n- name: \"Delete LLDP attributes of given interfaces (Note: This won't delete the interface itself)\"\n  cisco.ios.ios_lldp_interfaces:\n    config:\n    - name: GigabitEthernet0/1\n    state: deleted\n\n# After state:\n# -------------\n#\n# vios#sh lldp interface\n# GigabitEthernet0/0:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/1:\n#    Tx: disabled\n#    Rx: disabled\n#    Tx state: IDLE\n#    Rx state: INIT\n#\n# GigabitEthernet0/2:\n#    Tx: disabled\n#    Rx: disabled\n#    Tx state: IDLE\n#    Rx state: INIT\n#\n# GigabitEthernet0/3:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n\n# Using Deleted without any config passed\n# \"(NOTE: This will delete all of configured LLDP module attributes)\"\n#\n# Before state:\n# -------------\n#\n# vios#sh lldp interface\n# GigabitEthernet0/0:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/1:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/2:\n#    Tx: disabled\n#    Rx: disabled\n#    Tx state: IDLE\n#    Rx state: INIT\n#\n# GigabitEthernet0/3:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n\n- name: \"Delete LLDP attributes for all configured interfaces (Note: This won't delete the interface itself)\"\n  cisco.ios.ios_lldp_interfaces:\n    state: deleted\n\n# After state:\n# -------------\n#\n# vios#sh lldp interface\n# GigabitEthernet0/0:\n#    Tx: disabled\n#    Rx: disabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/1:\n#    Tx: disabled\n#    Rx: disabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/2:\n#    Tx: disabled\n#    Rx: disabled\n#    Tx state: IDLE\n#    Rx state: INIT\n#\n# GigabitEthernet0/3:\n#    Tx: disabled\n#    Rx: disabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n\n# Using Gathered\n\n# Before state:\n# -------------\n#\n# vios#sh lldp interface\n# GigabitEthernet0/0:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/1:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/2:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n\n- name: Gather listed LLDP interfaces with provided configurations\n  cisco.ios.ios_lldp_interfaces:\n    config:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"gathered\": [\n#         {\n#             \"name\": \"GigabitEthernet0/0\",\n#             \"receive\": true,\n#             \"transmit\": true\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/1\",\n#             \"receive\": true,\n#             \"transmit\": true\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/2\",\n#             \"receive\": true,\n#             \"transmit\": true\n#         }\n#     ]\n\n# After state:\n# ------------\n#\n# vios#sh lldp interface\n# GigabitEthernet0/0:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/1:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n\n# GigabitEthernet0/2:\n#    Tx: enabled\n#    Rx: enabled\n#    Tx state: IDLE\n#    Rx state: WAIT FOR FRAME\n\n# Using Rendered\n\n- name: Render the commands for provided  configuration\n  cisco.ios.ios_lldp_interfaces:\n    config:\n    - name: GigabitEthernet0/0\n      receive: true\n      transmit: true\n    - name: GigabitEthernet0/1\n      receive: true\n      transmit: true\n    - name: GigabitEthernet0/2\n      receive: true\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"rendered\": [\n#         \"interface GigabitEthernet0/0\",\n#         \"lldp receive\",\n#         \"lldp transmit\",\n#         \"interface GigabitEthernet0/1\",\n#         \"lldp receive\",\n#         \"lldp transmit\",\n#         \"interface GigabitEthernet0/2\",\n#         \"lldp receive\"\n#     ]\n\n# Using Parsed\n\n# File: parsed.cfg\n# ----------------\n#\n# GigabitEthernet0/0:\n#   Tx: enabled\n#   Rx: disabled\n#   Tx state: IDLE\n#   Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/1:\n#   Tx: enabled\n#   Rx: enabled\n#   Tx state: IDLE\n#   Rx state: WAIT FOR FRAME\n#\n# GigabitEthernet0/2:\n#   Tx: disabled\n#   Rx: enabled\n#   Tx state: IDLE\n#   Rx state: INIT\n\n- name: Parse the commands for provided configuration\n  cisco.ios.ios_lldp_interfaces:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n#\n# \"parsed\": [\n#         {\n#             \"name\": \"GigabitEthernet0/0\",\n#             \"receive\": false,\n#             \"transmit\": true\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/1\",\n#             \"receive\": true,\n#             \"transmit\": true\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/2\",\n#             \"receive\": true,\n#             \"transmit\": false\n#         }\n#     ]\n\n"
  },
  "cisco.ios.ios_logging": {
    "doc": {
      "description": "This module provides declarative management of logging on Cisco Ios devices.",
      "has_action": true,
      "notes": "Tested against IOS 15.6\nThe 'Default System Message Logging Configuration' of the ios device like facility Local7 or logging on is not subjected to idempotency causes\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "aggregate": {
          "aliases": [],
          "description": "List of logging definitions.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "dest": {
              "aliases": [],
              "description": "Destination of the logs.\nOn dest has to be quoted as 'on' or else pyyaml will convert to True before it gets to Ansible.",
              "type": "str",
              "required": false,
              "choices": [
                "on",
                "host",
                "console",
                "monitor",
                "buffered",
                "trap"
              ],
              "suboptions": {}
            },
            "facility": {
              "aliases": [],
              "description": "Set logging facility.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "level": {
              "aliases": [],
              "description": "Set logging severity levels.",
              "type": "str",
              "required": false,
              "choices": [
                "emergencies",
                "alerts",
                "critical",
                "errors",
                "warnings",
                "notifications",
                "informational",
                "debugging"
              ],
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The hostname or IP address of the destination.\nRequired when I(dest=host).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "size": {
              "aliases": [],
              "description": "Size of buffer. The acceptable value is in range from 4096 to 4294967295 bytes.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the logging configuration.",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            }
          }
        },
        "dest": {
          "aliases": [],
          "description": "Destination of the logs.\nOn dest has to be quoted as 'on' or else pyyaml will convert to True before it gets to Ansible.",
          "type": "str",
          "required": false,
          "choices": [
            "on",
            "host",
            "console",
            "monitor",
            "buffered",
            "trap"
          ],
          "suboptions": {}
        },
        "facility": {
          "aliases": [],
          "description": "Set logging facility.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "level": {
          "aliases": [],
          "description": "Set logging severity levels.",
          "default": "debugging",
          "type": "str",
          "required": false,
          "choices": [
            "emergencies",
            "alerts",
            "critical",
            "errors",
            "warnings",
            "notifications",
            "informational",
            "debugging"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The hostname or IP address of the destination.\nRequired when I(dest=host).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "size": {
          "aliases": [],
          "description": "Size of buffer. The acceptable value is in range from 4096 to 4294967295 bytes.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the logging configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "(deprecated, removed after 2023-06-01) Manage logging on network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure host logging\n  cisco.ios.ios_logging:\n    dest: host\n    name: 172.16.0.1\n    state: present\n\n- name: remove host logging configuration\n  cisco.ios.ios_logging:\n    dest: host\n    name: 172.16.0.1\n    state: absent\n\n- name: configure console logging level and facility\n  cisco.ios.ios_logging:\n    dest: console\n    facility: local7\n    level: debugging\n    state: present\n\n- name: enable logging to all\n  cisco.ios.ios_logging:\n    dest: on\n\n- name: configure buffer size\n  cisco.ios.ios_logging:\n    dest: buffered\n    size: 5000\n\n- name: Configure logging using aggregate\n  cisco.ios.ios_logging:\n    aggregate:\n    - {dest: console, level: notifications}\n    - {dest: buffered, size: 9000}\n\n- name: remove logging using aggregate\n  cisco.ios.ios_logging:\n    aggregate:\n    - {dest: console, level: notifications}\n    - {dest: buffered, size: 9000}\n    state: absent\n"
  },
  "cisco.ios.ios_logging_global": {
    "doc": {
      "description": "This module manages the logging attributes of Cisco IOS network devices",
      "has_action": true,
      "notes": "Tested against Cisco IOSv Version 15.6\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)\nThe Configuration defaults of the Cisco IOS network devices are supposed to hinder idempotent behavior of plays",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of logging options",
          "type": "dict",
          "required": false,
          "suboptions": {
            "buffered": {
              "aliases": [],
              "description": "Set buffered logging parameters",
              "type": "dict",
              "required": false,
              "suboptions": {
                "discriminator": {
                  "aliases": [],
                  "description": "Establish MD-Buffer association",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "filtered": {
                  "aliases": [],
                  "description": "Enable filtered logging",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "severity": {
                  "aliases": [],
                  "description": "Logging severity level",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "alerts",
                    "critical",
                    "debugging",
                    "emergencies",
                    "errors",
                    "informational",
                    "notifications",
                    "warnings"
                  ],
                  "suboptions": {}
                },
                "size": {
                  "aliases": [],
                  "description": "Logging buffer size",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "xml": {
                  "aliases": [],
                  "description": "Enable logging in XML to XML logging buffer",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "buginf": {
              "aliases": [],
              "description": "Enable buginf logging for debugging",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "cns_events": {
              "aliases": [],
              "description": "Set CNS Event logging level",
              "type": "str",
              "required": false,
              "choices": [
                "alerts",
                "critical",
                "debugging",
                "emergencies",
                "errors",
                "informational",
                "notifications",
                "warnings"
              ],
              "suboptions": {}
            },
            "console": {
              "aliases": [],
              "description": "Set console logging parameters",
              "type": "dict",
              "required": false,
              "suboptions": {
                "discriminator": {
                  "aliases": [],
                  "description": "Establish MD-Buffer association",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "filtered": {
                  "aliases": [],
                  "description": "Enable filtered logging",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "severity": {
                  "aliases": [],
                  "description": "Logging severity level",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "alerts",
                    "critical",
                    "debugging",
                    "emergencies",
                    "errors",
                    "informational",
                    "notifications",
                    "warnings",
                    "guaranteed"
                  ],
                  "suboptions": {}
                },
                "xml": {
                  "aliases": [],
                  "description": "Enable logging in XML to XML logging buffer",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "count": {
              "aliases": [],
              "description": "Count every log message and timestamp last occurrence",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "delimiter": {
              "aliases": [],
              "description": "Append delimiter to syslog messages",
              "type": "dict",
              "required": false,
              "suboptions": {
                "tcp": {
                  "aliases": [],
                  "description": "Append delimiter to syslog messages over TCP",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "discriminator": {
              "aliases": [],
              "description": "Create or modify a message discriminator",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "dmvpn": {
              "aliases": [],
              "description": "DMVPN Configuration",
              "type": "dict",
              "required": false,
              "suboptions": {
                "rate_limit": {
                  "aliases": [],
                  "description": "rate in messages/minute, default is 600 messages/minute (1-10000)",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "esm": {
              "aliases": [],
              "description": "Set ESM filter restrictions",
              "type": "dict",
              "required": false,
              "suboptions": {
                "config": {
                  "aliases": [],
                  "description": "Permit/Deny configuration changes from ESM filters",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "exception": {
              "aliases": [],
              "description": "Limit size of exception flush output (4096-2147483647)",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "facility": {
              "aliases": [],
              "description": "Facility parameter for syslog messages",
              "type": "str",
              "required": false,
              "choices": [
                "auth",
                "cron",
                "daemon",
                "kern",
                "local0",
                "local1",
                "local2",
                "local3",
                "local4",
                "local5",
                "local6",
                "local7",
                "lpr",
                "mail",
                "news",
                "sys10",
                "sys11",
                "sys12",
                "sys13",
                "sys14",
                "sys9",
                "syslog",
                "user",
                "uucp"
              ],
              "suboptions": {}
            },
            "filter": {
              "aliases": [],
              "description": "Specify logging filter",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "args": {
                  "aliases": [],
                  "description": "Arguments passed to filter module.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "order": {
                  "aliases": [],
                  "description": "Order of filter execution",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "url": {
                  "aliases": [],
                  "description": "Filter Uniform Resource Locator",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "history": {
              "aliases": [],
              "description": "Configure syslog history table",
              "type": "dict",
              "required": false,
              "suboptions": {
                "severity": {
                  "aliases": [],
                  "description": "Logging severity level",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "alerts",
                    "critical",
                    "debugging",
                    "emergencies",
                    "errors",
                    "informational",
                    "notifications",
                    "warnings"
                  ],
                  "suboptions": {}
                },
                "size": {
                  "aliases": [],
                  "description": "Logging buffer size",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "hosts": {
              "aliases": [],
              "description": "Set syslog server IP address and parameters",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "discriminator": {
                  "aliases": [],
                  "description": "Establish MD-Buffer association",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "filtered": {
                  "aliases": [],
                  "description": "Enable filtered logging",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "hostname": {
                  "aliases": [],
                  "description": "IP address of the syslog server",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "ipv6": {
                  "aliases": [],
                  "description": "Configure IPv6 syslog server",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "sequence_num_session": {
                  "aliases": [],
                  "description": "Include session sequence number tag in syslog message",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "session_id": {
                  "aliases": [],
                  "description": "Specify syslog message session ID tagging",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "tag": {
                      "aliases": [],
                      "description": "Include hostname in session ID tag",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "hostname",
                        "ipv4",
                        "ipv6"
                      ],
                      "suboptions": {}
                    },
                    "text": {
                      "aliases": [],
                      "description": "Include custom string in session ID tag",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "stream": {
                  "aliases": [],
                  "description": "This server should only receive messages from a numbered stream",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "transport": {
                  "aliases": [],
                  "description": "Specify the transport protocol (default=UDP)",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "tcp": {
                      "aliases": [],
                      "description": "Transport Control Protocol",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "audit": {
                          "aliases": [],
                          "description": "Set this host for IOS firewall audit logging",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "discriminator": {
                          "aliases": [],
                          "description": "Establish MD-Buffer association",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "filtered": {
                          "aliases": [],
                          "description": "Enable filtered logging",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "port": {
                          "aliases": [],
                          "description": "Specify the TCP port number (default=601) (1 - 65535)",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "sequence_num_session": {
                          "aliases": [],
                          "description": "Include session sequence number tag in syslog message",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "session_id": {
                          "aliases": [],
                          "description": "Specify syslog message session ID tagging",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "tag": {
                              "aliases": [],
                              "description": "Include hostname in session ID tag",
                              "type": "str",
                              "required": false,
                              "choices": [
                                "hostname",
                                "ipv4",
                                "ipv6"
                              ],
                              "suboptions": {}
                            },
                            "text": {
                              "aliases": [],
                              "description": "Include custom string in session ID tag",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "stream": {
                          "aliases": [],
                          "description": "This server should only receive messages from a numbered stream",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "xml": {
                          "aliases": [],
                          "description": "Enable logging in XML to XML logging buffer",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "udp": {
                      "aliases": [],
                      "description": "User Datagram Protocol",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "discriminator": {
                          "aliases": [],
                          "description": "Establish MD-Buffer association",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "filtered": {
                          "aliases": [],
                          "description": "Enable filtered logging",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "port": {
                          "aliases": [],
                          "description": "Specify the UDP port number (default=514) (1 - 65535)",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "sequence_num_session": {
                          "aliases": [],
                          "description": "Include session sequence number tag in syslog message",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "session_id": {
                          "aliases": [],
                          "description": "Specify syslog message session ID tagging",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "tag": {
                              "aliases": [],
                              "description": "Include hostname in session ID tag",
                              "type": "str",
                              "required": false,
                              "choices": [
                                "hostname",
                                "ipv4",
                                "ipv6"
                              ],
                              "suboptions": {}
                            },
                            "text": {
                              "aliases": [],
                              "description": "Include custom string in session ID tag",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "stream": {
                          "aliases": [],
                          "description": "This server should only receive messages from a numbered stream",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "xml": {
                          "aliases": [],
                          "description": "Enable logging in XML to XML logging buffer",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "vrf": {
                  "aliases": [],
                  "description": "Set VRF option",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "xml": {
                  "aliases": [],
                  "description": "Enable logging in XML to XML logging buffer",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "logging_on": {
              "aliases": [],
              "description": "Enable logging to all enabled destinations",
              "type": "str",
              "required": false,
              "choices": [
                "enable",
                "disable"
              ],
              "suboptions": {}
            },
            "message_counter": {
              "aliases": [],
              "description": "Configure log message to include certain counter value",
              "type": "list",
              "required": false,
              "choices": [
                "log",
                "debug",
                "syslog"
              ],
              "elements": "str",
              "suboptions": {}
            },
            "monitor": {
              "aliases": [],
              "description": "Set terminal line (monitor) logging parameters",
              "type": "dict",
              "required": false,
              "suboptions": {
                "discriminator": {
                  "aliases": [],
                  "description": "Establish MD-Buffer association",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "filtered": {
                  "aliases": [],
                  "description": "Enable filtered logging",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "severity": {
                  "aliases": [],
                  "description": "Logging severity level",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "alerts",
                    "critical",
                    "debugging",
                    "emergencies",
                    "errors",
                    "informational",
                    "notifications",
                    "warnings"
                  ],
                  "suboptions": {}
                },
                "xml": {
                  "aliases": [],
                  "description": "Enable logging in XML to XML logging buffer",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "origin_id": {
              "aliases": [],
              "description": "Add origin ID to syslog messages",
              "type": "dict",
              "required": false,
              "suboptions": {
                "tag": {
                  "aliases": [],
                  "description": "Include hostname in session ID tag",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "hostname",
                    "ip",
                    "ipv6"
                  ],
                  "suboptions": {}
                },
                "text": {
                  "aliases": [],
                  "description": "Include custom string in session ID tag",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "persistent": {
              "aliases": [],
              "description": "Set persistent logging parameters",
              "type": "dict",
              "required": false,
              "suboptions": {
                "batch": {
                  "aliases": [],
                  "description": "Set batch size for writing to persistent storage (4096-2142715904)",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "filesize": {
                  "aliases": [],
                  "description": "Set size of individual log files (4096-2142715904)",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "immediate": {
                  "aliases": [],
                  "description": "Write log entry to storage immediately (no buffering).",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "notify": {
                  "aliases": [],
                  "description": "Notify when show logging [persistent] is activated.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "protected": {
                  "aliases": [],
                  "description": "Eliminates manipulation on logging-persistent files.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "size": {
                  "aliases": [],
                  "description": "Set disk space for writing log messages (4096-2142715904)",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "threshold": {
                  "aliases": [],
                  "description": "Set threshold for logging persistent",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "url": {
                  "aliases": [],
                  "description": "URL to store logging messages",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "policy_firewall": {
              "aliases": [],
              "description": "Firewall configuration",
              "type": "dict",
              "required": false,
              "suboptions": {
                "rate_limit": {
                  "aliases": [],
                  "description": "(0-3600) value in seconds, default is 30 Sec.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "queue_limit": {
              "aliases": [],
              "description": "Set logger message queue size",
              "type": "dict",
              "required": false,
              "suboptions": {
                "esm": {
                  "aliases": [],
                  "description": "(100-2147483647) set new queue size",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "size": {
                  "aliases": [],
                  "description": "(100-2147483647) set new queue size",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "trap": {
                  "aliases": [],
                  "description": "(100-2147483647) set new queue size",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "rate_limit": {
              "aliases": [],
              "description": "Set messages per second limit",
              "type": "dict",
              "required": false,
              "suboptions": {
                "all": {
                  "aliases": [],
                  "description": "(1-10000) message per second",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "console": {
                  "aliases": [],
                  "description": "(1-10000) message per second",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "except_severity": {
                  "aliases": [],
                  "description": "Messages of this severity or higher",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "alerts",
                    "critical",
                    "debugging",
                    "emergencies",
                    "errors",
                    "informational",
                    "notifications",
                    "warnings"
                  ],
                  "suboptions": {}
                },
                "size": {
                  "aliases": [],
                  "description": "(1-10000) message per second",
                  "type": "int",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "reload": {
              "aliases": [],
              "description": "Set reload logging level",
              "type": "dict",
              "required": false,
              "suboptions": {
                "message_limit": {
                  "aliases": [],
                  "description": "Number of messages (1-4294967295)",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "severity": {
                  "aliases": [],
                  "description": "Logging severity level",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "alerts",
                    "critical",
                    "debugging",
                    "emergencies",
                    "errors",
                    "informational",
                    "notifications",
                    "warnings"
                  ],
                  "suboptions": {}
                }
              }
            },
            "server_arp": {
              "aliases": [],
              "description": "Enable sending ARP requests for syslog servers when first configured",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "snmp_trap": {
              "aliases": [],
              "description": "Set syslog level for sending snmp trap",
              "type": "list",
              "required": false,
              "choices": [
                "alerts",
                "critical",
                "debugging",
                "emergencies",
                "errors",
                "informational",
                "notifications",
                "warnings"
              ],
              "elements": "str",
              "suboptions": {}
            },
            "source_interface": {
              "aliases": [],
              "description": "Specify interface for source address in logging transactions",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "interface": {
                  "aliases": [],
                  "description": "Interface name with number",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "vrf": {
                  "aliases": [],
                  "description": "VPN Routing/Forwarding instance name",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "trap": {
              "aliases": [],
              "description": "Set syslog server logging level",
              "type": "str",
              "required": false,
              "choices": [
                "alerts",
                "critical",
                "debugging",
                "emergencies",
                "errors",
                "informational",
                "notifications",
                "warnings"
              ],
              "suboptions": {}
            },
            "userinfo": {
              "aliases": [],
              "description": "Enable logging of user info on privileged mode enabling",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(show running-config | include logging).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nWith state I(replaced), for the listed logging configurations, that are in running-config and can have multiple set of commands but not in the task are negated.\nWith state I(overridden), all configurations that are in running-config but not in the task are negated.\nPlease refer to examples for more details.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "parsed",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Logging resource module",
      "version_added": "2.2.0"
    },
    "examples": "\n# Using state: merged\n\n# Before state:\n# -------------\n\n# router-ios#show running-config | section logging\n# no logging exception\n# no logging buffered\n# no logging reload\n# no logging rate-limit\n# no logging console\n# no logging monitor\n# no logging cns-events\n# no logging trap\n\n- name: Apply the provided configuration\n  cisco.ios.ios_logging_global:\n    config:\n      buffered:\n        severity: notifications\n        size: 5099\n        xml: True\n      console:\n        severity: critical\n        xml: True\n      facility: local5\n      hosts:\n        - hostname: 172.16.1.12\n        - hostname: 172.16.1.11\n          xml: True\n        - hostname: 172.16.1.10\n          filtered: True\n          stream: 10\n        - hostname: 172.16.1.13\n          transport:\n            tcp:\n              port: 514\n      monitor:\n        severity: warnings\n      message_counter: log\n      snmp_trap:\n        - errors\n      trap: errors\n      userinfo: True\n      policy_firewall:\n        rate_limit: 10\n      logging_on: True\n      exception: 4099\n      dmvpn:\n        rate_limit: 10\n      cns_events: warnings\n    state: merged\n\n# Commands Fired:\n# ---------------\n\n# \"commands\": [\n#       \"logging buffered xml 5099 notifications\",\n#       \"logging cns-events warnings\",\n#       \"logging console xml critical\",\n#       \"logging dmvpn rate-limit 10\",\n#       \"logging exception 4099\",\n#       \"logging facility local5\",\n#       \"logging monitor warnings\",\n#       \"logging on\",\n#       \"logging policy-firewall rate-limit 10\",\n#       \"logging trap errors\",\n#       \"logging userinfo\",\n#       \"logging host 172.16.1.12\",\n#       \"logging host 172.16.1.10 filtered stream 10\",\n#       \"logging host 172.16.1.13 transport tcp port 514\",\n#       \"logging message-counter log\",\n#       \"logging snmp-trap errors\",\n#       \"logging host 172.16.1.11 xml\"\n#     ],\n\n\n# After state:\n# ------------\n\n# router-ios#show running-config | section logging\n# logging exception 4099\n# logging message-counter log\n# logging userinfo\n# logging buffered xml 5099 notifications\n# no logging reload\n# no logging rate-limit\n# logging console xml critical\n# logging monitor warnings\n# logging cns-events warnings\n# logging policy-firewall rate-limit 10\n# logging dmvpn rate-limit 10\n# logging trap errors\n# logging facility local5\n# logging snmp-trap errors\n# logging snmp-trap warnings\n# logging host 172.16.1.13 transport tcp port 514\n# logging host 172.16.1.11 xml\n# logging host 172.16.1.12\n# logging host 172.16.1.10 filtered stream 10\n\n# Using state: deleted\n\n# Before state:\n# -------------\n\n# router-ios#show running-config | section logging\n# logging exception 4099\n# logging message-counter log\n# logging userinfo\n# logging buffered xml 5099 notifications\n# no logging reload\n# no logging rate-limit\n# logging console xml critical\n# logging monitor warnings\n# logging cns-events warnings\n# logging policy-firewall rate-limit 10\n# logging dmvpn rate-limit 10\n# logging trap errors\n# logging facility local5\n# logging snmp-trap errors\n# logging host 172.16.1.13 transport tcp port 514\n# logging host 172.16.1.11 xml\n# logging host 172.16.1.12\n# logging host 172.16.1.10 filtered stream 10\n\n- name: Remove all existing configuration\n  cisco.ios.ios_logging_global:\n    state: deleted\n\n# Commands Fired:\n# ---------------\n\n# \"commands\": [\n#       \"no logging message-counter log\",\n#       \"no logging snmp-trap errors\",\n#       \"no logging host 172.16.1.13\",\n#       \"no logging host 172.16.1.11\",\n#       \"no logging host 172.16.1.12\",\n#       \"no logging host 172.16.1.10\",\n#       \"no logging exception 4099\",\n#       \"no logging userinfo\",\n#       \"no logging buffered xml 5099 notifications\",\n#       \"no logging console xml critical\",\n#       \"no logging monitor warnings\",\n#       \"no logging cns-events warnings\",\n#       \"no logging policy-firewall rate-limit 10\",\n#       \"no logging dmvpn rate-limit 10\",\n#       \"no logging trap errors\",\n#       \"no logging facility local5\"\n#     ],\n\n# After state:\n# ------------\n\n# router-ios#show running-config | section logging\n# no logging exception\n# no logging buffered\n# no logging reload\n# no logging rate-limit\n# no logging console\n# no logging monitor\n# no logging cns-events\n# no logging trap\n\n# Using state: overridden\n\n# Before state:\n# -------------\n\n# router-ios#show running-config | section logging\n# logging exception 4099\n# logging message-counter log\n# logging userinfo\n# logging buffered 6000 critical\n# no logging reload\n# no logging rate-limit\n# logging console xml critical\n# logging monitor warnings\n# logging cns-events warnings\n# logging policy-firewall rate-limit 10\n# logging dmvpn rate-limit 10\n# logging trap errors\n# logging facility local6\n# logging host 172.16.1.13 transport tcp port 514\n# logging host 172.16.1.12\n# logging host 172.16.1.10 filtered stream 10\n# logging host 172.16.1.25 filtered\n\n- name: Override commands with provided configuration\n  cisco.ios.ios_logging_global:\n    config:\n      hosts:\n        - hostname: 172.16.1.27\n          filtered: True\n    state: overridden\n\n# Commands Fired:\n# ---------------\n# \"commands\": [\n#         \"no logging message-counter log\",\n#         \"no logging host 172.16.1.12\",\n#         \"no logging host 172.16.1.10\",\n#         \"no logging host 172.16.1.13\",\n#         \"no logging exception 4099\",\n#         \"no logging userinfo\",\n#         \"no logging console xml critical\",\n#         \"no logging monitor warnings\",\n#         \"no logging cns-events warnings\",\n#         \"no logging policy-firewall rate-limit 10\",\n#         \"no logging dmvpn rate-limit 10\",\n#         \"no logging trap errors\",\n#         \"no logging buffered 6000 critical\",\n#         \"no logging facility local6\",\n#         \"logging host 172.16.1.27 filtered\",\n#     ],\n\n# After state:\n# ------------\n\n# router-ios#show running-config | section logging\n# no logging exception\n# no logging buffered\n# no logging reload\n# no logging rate-limit\n# no logging console\n# no logging monitor\n# no logging cns-events\n# no logging trap\n# logging host 172.16.1.27 filtered\n\n# Using state: replaced\n\n# Before state:\n# -------------\n\n# router-ios#show running-config | section logging\n# logging exception 4099\n# logging message-counter log\n# logging userinfo\n# logging buffered xml 5099 notifications\n# no logging reload\n# no logging rate-limit\n# logging console xml critical\n# logging monitor warnings\n# logging cns-events warnings\n# logging policy-firewall rate-limit 10\n# logging dmvpn rate-limit 10\n# logging trap errors\n# logging facility local5\n# logging snmp-trap errors\n# logging host 172.16.1.13 transport tcp port 514\n# logging host 172.16.1.11 xml\n# logging host 172.16.1.12\n# logging host 172.16.1.10 filtered stream 10\n\n- name: Replace commands with provided configuration\n  cisco.ios.ios_logging_global:\n    config:\n      buffered:\n        severity: alerts\n        size: 6025\n      facility: local6\n      hosts:\n        - hostname: 172.16.1.19\n        - hostname: 172.16.1.10\n          filtered: true\n          stream: 15\n    state: replaced\n\n# Commands Fired:\n# ---------------\n\n# \"commands\": [\n#         \"no logging host 172.16.1.13\",\n#         \"no logging host 172.16.1.11\",\n#         \"no logging host 172.16.1.12\",\n#         \"no logging host 172.16.1.10\",\n#         \"logging host 172.16.1.19\",\n#         \"logging host 172.16.1.10 filtered stream 15\",\n#         \"logging buffered 6025 alerts\",\n#         \"logging facility local6\"\n#     ],\n\n# After state:\n# ------------\n\n# router-ios#show running-config | section logging\n# logging exception 4099\n# logging message-counter log\n# logging userinfo\n# logging buffered 6025 alerts\n# no logging reload\n# no logging rate-limit\n# logging console xml critical\n# logging monitor warnings\n# logging cns-events warnings\n# logging policy-firewall rate-limit 10\n# logging dmvpn rate-limit 10\n# logging trap errors\n# logging facility local6\n# logging snmp-trap errors\n# logging host 172.16.1.19\n\n# Using state: gathered\n\n# Before state:\n# -------------\n\n#router-ios#show running-config | section logging\n# logging exception 4099\n# logging message-counter log\n# logging userinfo\n# logging buffered xml 5099 notifications\n# no logging reload\n# no logging rate-limit\n# logging console xml critical\n# logging monitor warnings\n# logging cns-events warnings\n# logging policy-firewall rate-limit 10\n# logging dmvpn rate-limit 10\n# logging trap errors\n# logging facility local5\n# logging snmp-trap errors\n# logging host 172.16.1.13 transport tcp port 514\n# logging host 172.16.1.11 xml\n# logging host 172.16.1.12\n# logging host 172.16.1.10 filtered stream 10\n# logging host 172.16.1.25 filtered\n\n- name: Gather listed logging config\n  cisco.ios.ios_logging_global:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n\n# \"gathered\": {\n#     \"buffered\": {\n#         \"severity\": \"notifications\",\n#         \"size\": 5099,\n#         \"xml\": true\n#     },\n#     \"cns_events\": \"warnings\",\n#     \"console\": {\n#         \"severity\": \"critical\",\n#         \"xml\": true\n#     },\n#     \"dmvpn\": {\n#         \"rate_limit\": 10\n#     },\n#     \"exception\": 4099,\n#     \"facility\": \"local5\",\n#     \"hosts\": [\n#         {\n#             \"hostname\": \"172.16.1.11\",\n#             \"xml\": true\n#         },\n#         {\n#             \"hostname\": \"172.16.1.12\"\n#         },\n#         {\n#             \"filtered\": true,\n#             \"hostname\": \"172.16.1.10\",\n#             \"stream\": 10\n#         },\n#         {\n#             \"hostname\": \"172.16.1.13\",\n#             \"transport\": {\n#                 \"tcp\": {\n#                     \"port\": 514\n#                 }\n#             }\n#         },\n#         {\n#             \"filtered\": true,\n#             \"hostname\": \"172.16.1.25\"\n#         }\n#     ],\n#     \"message_counter\": [\n#         \"log\"\n#     ],\n#     \"monitor\": {\n#         \"severity\": \"warnings\"\n#     },\n#     \"policy_firewall\": {\n#         \"rate_limit\": 10\n#     },\n#     \"snmp_trap\": [\n#         \"errors\"\n#     ],\n#     \"trap\": \"errors\",\n#     \"userinfo\": true\n# },\n\n# After state:\n# -------------\n\n# router-ios#show running-config | section logging\n# logging exception 4099\n# logging message-counter log\n# logging userinfo\n# logging buffered xml 5099 notifications\n# no logging reload\n# no logging rate-limit\n# logging console xml critical\n# logging monitor warnings\n# logging cns-events warnings\n# logging policy-firewall rate-limit 10\n# logging dmvpn rate-limit 10\n# logging trap errors\n# logging facility local5\n# logging snmp-trap errors\n# logging host 172.16.1.13 transport tcp port 514\n# logging host 172.16.1.11 xml\n# logging host 172.16.1.12\n# logging host 172.16.1.10 filtered stream 10\n# logging host 172.16.1.25 filtered\n\n# Using state: rendered\n\n- name: Render the commands for provided configuration\n  cisco.ios.ios_logging_global:\n    config:\n      buffered:\n        severity: notifications\n        size: 5099\n        xml: True\n      console:\n        severity: critical\n        xml: True\n      facility: local5\n      hosts:\n        - hostname: 172.16.1.12\n        - hostname: 172.16.1.11\n          xml: True\n        - hostname: 172.16.1.10\n          filtered: True\n          stream: 10\n        - hostname: 172.16.1.13\n          transport:\n            tcp:\n              port: 514\n      monitor:\n        severity: warnings\n      message_counter: log\n      snmp_trap: errors\n      trap: errors\n      userinfo: True\n      policy_firewall:\n          rate_limit: 10\n      logging_on: True\n      exception: 10\n      dmvpn:\n        rate_limit: 10\n      cns_events: warnings\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n\n# \"rendered\": [\n#     \"logging host 172.16.1.12\",\n#     \"logging host 172.16.1.11 xml\",\n#     \"logging host 172.16.1.10 filtered stream 10\",\n#     \"logging host 172.16.1.13 transport tcp port 514\",\n#     \"logging message-counter log\",\n#     \"logging snmp-trap errors\",\n#     \"logging buffered xml 5099 notifications\",\n#     \"logging console xml critical\",\n#     \"logging facility local5\",\n#     \"logging monitor warnings\",\n#     \"logging trap errors\",\n#     \"logging userinfo\",\n#     \"logging policy-firewall rate-limit 10\",\n#     \"logging on\",\n#     \"logging exception 10\",\n#     \"logging dmvpn rate-limit 10\",\n#     \"logging cns-events warnings\"\n#     ]\n\n# Using state: parsed\n\n# File: parsed.cfg\n# ----------------\n\n# logging on\n# logging count\n# logging userinfo\n# logging trap errors\n# logging reload alerts\n# logging host 172.16.1.1\n# logging exception 4099\n# logging history alerts\n# logging facility local5\n# logging snmp-trap errors\n# logging monitor warnings\n# logging origin-id hostname\n# logging host 172.16.1.11 xml\n# logging cns-events warnings\n# logging dmvpn rate-limit 10\n# logging message-counter log\n# logging console xml critical\n# logging message-counter debug\n# logging persistent batch 4444\n# logging host 172.16.1.25 filtered\n# logging source-interface GBit1/0\n# logging source-interface CTunnel2\n# logging policy-firewall rate-limit 10\n# logging buffered xml 5099 notifications\n# logging rate-limit all 2 except warnings\n# logging host 172.16.1.10 filtered stream 10\n# logging host 172.16.1.13 transport tcp port 514\n# logging discriminator msglog01 severity includes 5\n# logging filter tftp://172.16.2.18/ESM/elate.tcl args TESTInst2\n# logging filter tftp://172.16.2.14/ESM/escalate.tcl args TESTInst\n\n- name: Parse the provided configuration with the existing running configuration\n  cisco.ios.ios_logging_global:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n\n# \"parsed\": {\n#     \"buffered\": {\n#         \"severity\": \"notifications\",\n#         \"size\": 5099,\n#         \"xml\": true\n#     },\n#     \"cns_events\": \"warnings\",\n#     \"console\": {\n#         \"severity\": \"critical\",\n#         \"xml\": true\n#     },\n#     \"count\": true,\n#     \"discriminator\": [\n#         \"msglog01 severity includes 5\"\n#     ],\n#     \"dmvpn\": {\n#         \"rate_limit\": 10\n#     },\n#     \"exception\": 4099,\n#     \"facility\": \"local5\",\n#     \"filter\": [\n#         {\n#             \"args\": \"TESTInst2\",\n#             \"url\": \"tftp://172.16.2.18/ESM/elate.tcl\"\n#         },\n#         {\n#             \"args\": \"TESTInst\",\n#             \"url\": \"tftp://172.16.2.14/ESM/escalate.tcl\"\n#         }\n#     ],\n#     \"history\": {\n#         \"severity\": \"alerts\"\n#     },\n#     \"hosts\": [\n#         {\n#             \"hostname\": \"172.16.1.1\"\n#         },\n#         {\n#             \"hostname\": \"172.16.1.11\",\n#             \"xml\": true\n#         },\n#         {\n#             \"filtered\": true,\n#             \"hostname\": \"172.16.1.25\"\n#         },\n#         {\n#             \"filtered\": true,\n#             \"hostname\": \"172.16.1.10\",\n#             \"stream\": 10\n#         },\n#         {\n#             \"hostname\": \"172.16.1.13\",\n#             \"transport\": {\n#                 \"tcp\": {\n#                     \"port\": 514\n#                 }\n#             }\n#         }\n#     ],\n#     \"logging_on\": \"enable\",\n#     \"message_counter\": [\n#         \"log\",\n#         \"debug\"\n#     ],\n#     \"monitor\": {\n#         \"severity\": \"warnings\"\n#     },\n#     \"origin_id\": {\n#         \"tag\": \"hostname\"\n#     },\n#     \"persistent\": {\n#         \"batch\": 4444\n#     },\n#     \"policy_firewall\": {\n#         \"rate_limit\": 10\n#     },\n#     \"rate_limit\": {\n#         \"all\": true,\n#         \"except_severity\": \"warnings\",\n#         \"size\": 2\n#     },\n#     \"reload\": {\n#         \"severity\": \"alerts\"\n#     },\n#     \"snmp_trap\": [\n#         \"errors\"\n#     ],\n#     \"source_interface\": [\n#         {\n#             \"interface\": \"GBit1/0\"\n#         },\n#         {\n#             \"interface\": \"CTunnel2\"\n#         }\n#     ],\n#     \"trap\": \"errors\",\n#     \"userinfo\": true\n# }\n"
  },
  "cisco.ios.ios_ntp": {
    "doc": {
      "description": "Manages core NTP configuration.",
      "has_action": true,
      "notes": "For more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "acl": {
          "aliases": [],
          "description": "ACL for peer/server access restricition.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "auth": {
          "aliases": [],
          "description": "Enable NTP authentication. Data type boolean.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_key": {
          "aliases": [],
          "description": "md5 NTP authentication key of tye 7.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key_id": {
          "aliases": [],
          "description": "auth_key id. Data type string",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "logging": {
          "aliases": [],
          "description": "Enable NTP logs. Data type boolean.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "server": {
          "aliases": [],
          "description": "Network address of NTP server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_int": {
          "aliases": [],
          "description": "Source interface for NTP packets.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Manage the state of the resource.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "vrf": {
          "aliases": [],
          "description": "VRF configuration for NTP servers",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manages core NTP configuration.",
      "version_added": "1.0.0"
    },
    "examples": "\n# Set new NTP server and source interface\n- cisco.ios.ios_ntp:\n    server: 10.0.255.10\n    source_int: Loopback0\n    logging: false\n    state: present\n# Remove NTP ACL and logging\n- cisco.ios.ios_ntp:\n    acl: NTP_ACL\n    logging: true\n    state: absent\n# Set NTP authentication\n- cisco.ios.ios_ntp:\n    key_id: 10\n    auth_key: 15435A030726242723273C21181319000A\n    auth: true\n    state: present\n# Set new NTP configuration\n- cisco.ios.ios_ntp:\n    server: 10.0.255.10\n    source_int: Loopback0\n    acl: NTP_ACL\n    logging: true\n    vrf: mgmt\n    key_id: 10\n    auth_key: 15435A030726242723273C21181319000A\n    auth: true\n    state: present\n"
  },
  "cisco.ios.ios_ntp_global": {
    "doc": {
      "description": "This module provides declarative management of ntp on Cisco IOS devices.",
      "has_action": true,
      "notes": "Tested against Cisco IOSv Version 15.6.\nThis module works with connection C(network_cli).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of ntp options",
          "type": "dict",
          "required": false,
          "suboptions": {
            "access_group": {
              "aliases": [],
              "description": "Control NTP access",
              "type": "dict",
              "required": false,
              "suboptions": {
                "peer": {
                  "aliases": [],
                  "description": "Provide full access",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "access_list": {
                      "aliases": [],
                      "description": "name or number of access list",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "ipv4": {
                      "aliases": [],
                      "description": "ipv4 access lists (Default not idempotent)",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "ipv6": {
                      "aliases": [],
                      "description": "ipv6 access lists (Default not idempotent)",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "kod": {
                      "aliases": [],
                      "description": "Send a Kiss-o-Death packet for failing peers",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "query_only": {
                  "aliases": [],
                  "description": "Allow only control queries",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "access_list": {
                      "aliases": [],
                      "description": "name or number of access list",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "ipv4": {
                      "aliases": [],
                      "description": "ipv4 access lists (Default not idempotent)",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "ipv6": {
                      "aliases": [],
                      "description": "ipv6 access lists (Default not idempotent)",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "kod": {
                      "aliases": [],
                      "description": "Send a Kiss-o-Death packet for failing peers",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "serve": {
                  "aliases": [],
                  "description": "Provide server and query access",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "access_list": {
                      "aliases": [],
                      "description": "name or number of access list",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "ipv4": {
                      "aliases": [],
                      "description": "ipv4 access lists (Default not idempotent)",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "ipv6": {
                      "aliases": [],
                      "description": "ipv6 access lists (Default not idempotent)",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "kod": {
                      "aliases": [],
                      "description": "Send a Kiss-o-Death packet for failing peers",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "serve_only": {
                  "aliases": [],
                  "description": "Provide only server access",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "access_list": {
                      "aliases": [],
                      "description": "name or number of access list",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "ipv4": {
                      "aliases": [],
                      "description": "ipv4 access lists (Default not idempotent)",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "ipv6": {
                      "aliases": [],
                      "description": "ipv6 access lists (Default not idempotent)",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "kod": {
                      "aliases": [],
                      "description": "Send a Kiss-o-Death packet for failing peers",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "allow": {
              "aliases": [],
              "description": "Allow processing of packets",
              "type": "dict",
              "required": false,
              "suboptions": {
                "control": {
                  "aliases": [],
                  "description": "Allow processing control mode packets",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "rate_limit": {
                      "aliases": [],
                      "description": "Rate-limit delay.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "private": {
                  "aliases": [],
                  "description": "Allow processing private mode packets",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "authenticate": {
              "aliases": [],
              "description": "Authenticate time sources",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "authentication_keys": {
              "aliases": [],
              "description": "Authentication key for trusted time sources",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "algorithm": {
                  "aliases": [],
                  "description": "Authentication type",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "encryption": {
                  "aliases": [],
                  "description": "Authentication key encryption type",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "id": {
                  "aliases": [],
                  "description": "Key number",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "key": {
                  "aliases": [],
                  "description": "Password",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "broadcast_delay": {
              "aliases": [],
              "description": "Estimated round-trip delay",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "clock_period": {
              "aliases": [],
              "description": "Length of hardware clock tick, clock period in 2^-32 seconds",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "logging": {
              "aliases": [],
              "description": "Enable NTP message logging",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "master": {
              "aliases": [],
              "description": "Act as NTP master clock",
              "type": "dict",
              "required": false,
              "suboptions": {
                "enabled": {
                  "aliases": [],
                  "description": "Enable master clock",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "stratum": {
                  "aliases": [],
                  "description": "Stratum number",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "max_associations": {
              "aliases": [],
              "description": "Set maximum number of associations",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_distance": {
              "aliases": [],
              "description": "Maximum Distance for synchronization",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "min_distance": {
              "aliases": [],
              "description": "Minimum distance to consider for clockhop",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "orphan": {
              "aliases": [],
              "description": "Threshold Stratum for orphan mode",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "panic_update": {
              "aliases": [],
              "description": "Reject time updates > panic threshold (default 1000Sec)",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "passive": {
              "aliases": [],
              "description": "NTP passive mode",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "peers": {
              "aliases": [],
              "description": "Configure NTP peer",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "burst": {
                  "aliases": [],
                  "description": "Send a burst when peer is reachable (Default)",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "iburst": {
                  "aliases": [],
                  "description": "Send a burst when peer is unreachable (Default)",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "key_id": {
                  "aliases": [
                    "key"
                  ],
                  "description": "Configure peer authentication key",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "maxpoll": {
                  "aliases": [],
                  "description": "Maximum poll interval Poll value in Log2",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "minpoll": {
                  "aliases": [],
                  "description": "Minimum poll interval Poll value in Log2",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "normal_sync": {
                  "aliases": [],
                  "description": "Disable rapid sync at startup",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "peer": {
                  "aliases": [],
                  "description": "ipv4/ipv6 address or hostname of the peer",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "prefer": {
                  "aliases": [],
                  "description": "Prefer this peer when possible",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "source": {
                  "aliases": [],
                  "description": "Interface for source address",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "use_ipv4": {
                  "aliases": [],
                  "description": "Use IP for DNS resolution",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "use_ipv6": {
                  "aliases": [],
                  "description": "Use IPv6 for DNS resolution",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "version": {
                  "aliases": [],
                  "description": "Configure NTP version",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "vrf": {
                  "aliases": [],
                  "description": "VPN Routing/Forwarding Information",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "servers": {
              "aliases": [],
              "description": "Configure NTP server",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "burst": {
                  "aliases": [],
                  "description": "Send a burst when peer is reachable (Default)",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "iburst": {
                  "aliases": [],
                  "description": "Send a burst when peer is unreachable (Default)",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "key_id": {
                  "aliases": [
                    "key"
                  ],
                  "description": "Configure peer authentication key",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "maxpoll": {
                  "aliases": [],
                  "description": "Maximum poll interval Poll value in Log2",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "minpoll": {
                  "aliases": [],
                  "description": "Minimum poll interval Poll value in Log2",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "normal_sync": {
                  "aliases": [],
                  "description": "Disable rapid sync at startup",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "prefer": {
                  "aliases": [],
                  "description": "Prefer this peer when possible",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "server": {
                  "aliases": [],
                  "description": "ipv4/ipv6 address or hostname of the server",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "source": {
                  "aliases": [],
                  "description": "Interface for source address",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "use_ipv4": {
                  "aliases": [],
                  "description": "Use IP for DNS resolution",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "use_ipv6": {
                  "aliases": [],
                  "description": "Use IPv6 for DNS resolution",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "version": {
                  "aliases": [],
                  "description": "Configure NTP version",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "vrf": {
                  "aliases": [],
                  "description": "VPN Routing/Forwarding Information",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "source": {
              "aliases": [],
              "description": "Configure interface for source address",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "trusted_keys": {
              "aliases": [],
              "description": "Key numbers for trusted time sources",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "range_end": {
                  "aliases": [],
                  "description": "End key number",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "range_start": {
                  "aliases": [],
                  "description": "Start / key number",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "update_calendar": {
              "aliases": [],
              "description": "Periodically update calendar with NTP time",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(show running-config | section ^ntp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe states I(replaced) and I(overridden) have identical behaviour for this module.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(show running-config | section ^ntp) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "rendered",
            "gathered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "ntp_global resource module",
      "version_added": "2.5.0"
    },
    "examples": "\n# Using state: merged\n\n# Before state:\n# -------------\n\n# router-ios#show running-config | section ^ntp\n# --------------------- EMPTY -----------------\n\n# Merged play:\n# ------------\n\n- name: Apply the provided configuration\n  cisco.ios.ios_ntp_global:\n    config:\n      access_group:\n        peer:\n          - access_list: DHCP-Server\n            ipv4: true\n            kod: true\n          - access_list: preauth_ipv6_acl\n            ipv6: true\n            kod: true\n          - access_list: '2'\n            kod: true\n        query_only:\n          - access_list: '10'\n      allow:\n        control:\n          rate_limit: 4\n        private: true\n      authenticate: true\n      authentication_keys:\n        - algorithm: md5\n          encryption: 22\n          id: 2\n          key: SomeSecurePassword\n      broadcast_delay: 22\n      clock_period: 5\n      logging: true\n      master:\n        stratum: 4\n      max_associations: 34\n      max_distance: 3\n      min_distance: 10\n      orphan: 4\n      panic_update: true\n      peers:\n        - peer: 172.16.1.10\n          version: 2\n        - key: 2\n          minpoll: 5\n          peer: 172.16.1.11\n          prefer: true\n          version: 2\n        - peer: checkPeerDomainIpv4.com\n          prefer: true\n          use_ipv4: true\n        - peer: checkPeerDomainIpv6.com\n          use_ipv6: true\n        - peer: testPeerDomainIpv6.com\n          prefer: true\n          use_ipv6: true\n      servers:\n        - server: 172.16.1.12\n          version: 2\n        - server: checkServerDomainIpv6.com\n          use_ipv6: true\n        - server: 172.16.1.13\n          source: GigabitEthernet0/1\n      source: GigabitEthernet0/1\n      trusted_keys:\n        - range_end: 3\n          range_start: 3\n        - range_start: 21\n    state: merged\n\n# Commands Fired:\n# ---------------\n\n# \"commands\": [\n#     \"ntp allow mode control 4\",\n#     \"ntp allow mode private\",\n#     \"ntp authenticate\",\n#     \"ntp broadcastdelay 22\",\n#     \"ntp clock-period 5\",\n#     \"ntp logging\",\n#     \"ntp master 4\",\n#     \"ntp max-associations 34\",\n#     \"ntp maxdistance 3\",\n#     \"ntp mindistance 10\",\n#     \"ntp orphan 4\",\n#     \"ntp panic update\",\n#     \"ntp source GigabitEthernet0/1\",\n#     \"ntp access-group ipv4 peer DHCP-Server kod\",\n#     \"ntp access-group ipv6 peer preauth_ipv6_acl kod\",\n#     \"ntp access-group peer 2 kod\",\n#     \"ntp access-group query-only 10\",\n#     \"ntp authentication-key 2 md5 SomeSecurePassword 22\",\n#     \"ntp peer 172.16.1.10 version 2\",\n#     \"ntp peer 172.16.1.11 key 2 minpoll 5 prefer  version 2\",\n#     \"ntp peer ip checkPeerDomainIpv4.com prefer\",\n#     \"ntp peer ipv6 checkPeerDomainIpv6.com\",\n#     \"ntp peer ipv6 testPeerDomainIpv6.com prefer\",\n#     \"ntp server 172.16.1.12 version 2\",\n#     \"ntp server ipv6 checkServerDomainIpv6.com\",\n#     \"ntp server 172.16.1.13 source GigabitEthernet0/1\",\n#     \"ntp trusted-key 3 - 3\",\n#     \"ntp trusted-key 21\"\n# ],\n\n\n# After state:\n# ------------\n\n# router-ios#show running-config | section ^ntp\n# ntp max-associations 34\n# ntp logging\n# ntp allow mode control 4\n# ntp panic update\n# ntp authentication-key 2 md5 0635002C497D0C1A1005173B0D17393C2B3A37 7\n# ntp authenticate\n# ntp trusted-key 3 - 3\n# ntp trusted-key 21\n# ntp orphan 4\n# ntp mindistance 10\n# ntp maxdistance 3\n# ntp broadcastdelay 22\n# ntp source GigabitEthernet0/1\n# ntp access-group peer 2 kod\n# ntp access-group ipv6 peer preauth_ipv6_acl kod\n# ntp master 4\n# ntp peer 172.16.1.10 version 2\n# ntp peer 172.16.1.11 key 2 minpoll 5 prefer version 2\n# ntp server 172.16.1.12 version 2\n# ntp server 172.16.1.13 source GigabitEthernet0/1\n# ntp peer ip checkPeerDomainIpv4.com prefer\n# ntp peer ipv6 checkPeerDomainIpv6.com\n# ntp peer ipv6 testPeerDomainIpv6.com prefer\n# ntp server ipv6 checkServerDomainIpv6.com\n\n# Using state: deleted\n\n# Before state:\n# -------------\n\n# router-ios#show running-config | section ^ntp\n# ntp max-associations 34\n# ntp logging\n# ntp allow mode control 4\n# ntp panic update\n# ntp authentication-key 2 md5 0635002C497D0C1A1005173B0D17393C2B3A37 7\n# ntp authenticate\n# ntp trusted-key 3 - 3\n# ntp trusted-key 21\n# ntp orphan 4\n# ntp mindistance 10\n# ntp maxdistance 3\n# ntp broadcastdelay 22\n# ntp source GigabitEthernet0/1\n# ntp access-group peer 2 kod\n# ntp access-group ipv6 peer preauth_ipv6_acl kod\n# ntp master 4\n# ntp peer 172.16.1.10 version 2\n# ntp peer 172.16.1.11 key 2 minpoll 5 prefer version 2\n# ntp server 172.16.1.12 version 2\n# ntp server 172.16.1.13 source GigabitEthernet0/1\n# ntp peer ip checkPeerDomainIpv4.com prefer\n# ntp peer ipv6 checkPeerDomainIpv6.com\n# ntp peer ipv6 testPeerDomainIpv6.com prefer\n# ntp server ipv6 checkServerDomainIpv6.com\n\n# Deleted play:\n# -------------\n\n- name: Remove all existing configuration\n  cisco.ios.ios_ntp_global:\n    state: deleted\n\n# Commands Fired:\n# ---------------\n\n# \"commands\": [\n#     \"no ntp allow mode control 4\",\n#     \"no ntp authenticate\",\n#     \"no ntp broadcastdelay 22\",\n#     \"no ntp logging\",\n#     \"no ntp master 4\",\n#     \"no ntp max-associations 34\",\n#     \"no ntp maxdistance 3\",\n#     \"no ntp mindistance 10\",\n#     \"no ntp orphan 4\",\n#     \"no ntp panic update\",\n#     \"no ntp source GigabitEthernet0/1\",\n#     \"no ntp access-group peer 2 kod\",\n#     \"no ntp access-group ipv6 peer preauth_ipv6_acl kod\",\n#     \"no ntp authentication-key 2 md5 0635002C497D0C1A1005173B0D17393C2B3A37 7\",\n#     \"no ntp peer 172.16.1.10 version 2\",\n#     \"no ntp peer 172.16.1.11 key 2 minpoll 5 prefer version 2\",\n#     \"no ntp peer ip checkPeerDomainIpv4.com prefer\",\n#     \"no ntp peer ipv6 checkPeerDomainIpv6.com\",\n#     \"no ntp peer ipv6 testPeerDomainIpv6.com prefer\",\n#     \"no ntp server 172.16.1.12 version 2\",\n#     \"no ntp server 172.16.1.13 source GigabitEthernet0/1\",\n#     \"no ntp server ipv6 checkServerDomainIpv6.com\",\n#     \"no ntp trusted-key 21\",\n#     \"no ntp trusted-key 3 - 3\"\n# ],\n\n# After state:\n# ------------\n\n# router-ios#show running-config | section ^ntp\n# --------------------- EMPTY -----------------\n\n# Using state: overridden\n\n# Before state:\n# -------------\n\n# router-ios#show running-config | section ^ntp\n# ntp panic update\n# ntp authentication-key 2 md5 00371C0B01680E051A33497E080A16001D1908 7\n# ntp authenticate\n# ntp trusted-key 3 - 4\n# ntp trusted-key 21\n# ntp source GigabitEthernet0/1\n# ntp peer 172.16.1.10 version 2\n# ntp server 172.16.1.12 version 2\n# ntp peer ip checkPeerDomainIpv4.com prefer\n# ntp server ipv6 checkServerDomainIpv6.com\n\n# Overridden play:\n# ----------------\n\n- name: Override commands with provided configuration\n  cisco.ios.ios_ntp_global:\n    config:\n      peers:\n        - peer: ipv6DomainNew.com\n          use_ipv6: true\n        - peer: 172.16.1.100\n          prefer: true\n          use_ipv4: true\n      access_group:\n        peer:\n        - access_list: DHCP-Server\n          ipv6: true\n    state: overridden\n\n# Commands Fired:\n# ---------------\n# \"commands\": [\n#       \"no ntp authenticate\",\n#       \"no ntp panic update\",\n#       \"no ntp source GigabitEthernet0/1\",\n#       \"ntp access-group ipv6 peer DHCP-Server\",\n#       \"no ntp authentication-key 2 md5 00371C0B01680E051A33497E080A16001D1908 7\",\n#       \"ntp peer ipv6 ipv6DomainNew.com\",\n#       \"ntp peer 172.16.1.100 prefer\",\n#       \"no ntp peer 172.16.1.10 version 2\",\n#       \"no ntp peer ip checkPeerDomainIpv4.com prefer\",\n#       \"no ntp server 172.16.1.12 version 2\",\n#       \"no ntp server ipv6 checkServerDomainIpv6.com\",\n#       \"no ntp trusted-key 21\",\n#       \"no ntp trusted-key 3 - 4\"\n#     ],\n\n# After state:\n# ------------\n\n# router-ios#show running-config | section ^ntp\n# ntp access-group ipv6 peer DHCP-Server\n# ntp peer ipv6 ipv6DomainNew.com\n# ntp peer 172.16.1.100 prefer\n\n# Using state: replaced\n\n# Before state:\n# -------------\n\n# router-ios#show running-config | section ^ntp\n# ntp access-group ipv6 peer DHCP-Server\n# ntp peer ipv6 ipv6DomainNew.com\n# ntp peer 172.16.1.100 prefer\n\n# Replaced play:\n# --------------\n\n- name: Replace commands with provided configuration\n  cisco.ios.ios_ntp_global:\n    config:\n      broadcast_delay: 22\n      clock_period: 5\n      logging: true\n      master:\n        stratum: 4\n      max_associations: 34\n      max_distance: 3\n      min_distance: 10\n      orphan: 4\n    state: replaced\n\n# Commands Fired:\n# ---------------\n\n# \"commands\": [\n#        \"ntp broadcastdelay 22\",\n#        \"ntp clock-period 5\",\n#        \"ntp logging\",\n#        \"ntp master 4\",\n#        \"ntp max-associations 34\",\n#        \"ntp maxdistance 3\",\n#        \"ntp mindistance 10\",\n#        \"ntp orphan 4\",\n#        \"no ntp access-group ipv6 peer DHCP-Server\",\n#        \"no ntp peer 172.16.1.100 prefer\",\n#        \"no ntp peer ipv6 ipv6DomainNew.com\"\n#     ],\n\n# After state:\n# ------------\n\n# router-ios#show running-config | section ^ntp\n# ntp max-associations 34\n# ntp logging\n# ntp orphan 4\n# ntp mindistance 10\n# ntp maxdistance 3\n# ntp broadcastdelay 22\n# ntp master 4\n\n# Using state: gathered\n\n# Before state:\n# -------------\n\n#router-ios#show running-config | section ^ntp\n# ntp max-associations 34\n# ntp logging\n# ntp allow mode control 4\n# ntp panic update\n# ntp authentication-key 2 md5 0635002C497D0C1A1005173B0D17393C2B3A37 7\n# ntp authenticate\n# ntp trusted-key 3 - 3\n# ntp trusted-key 21\n# ntp orphan 4\n# ntp mindistance 10\n# ntp maxdistance 3\n# ntp broadcastdelay 22\n# ntp source GigabitEthernet0/1\n# ntp access-group peer 2 kod\n# ntp access-group ipv6 peer preauth_ipv6_acl kod\n# ntp master 4\n# ntp update-calendar\n# ntp peer 172.16.1.10 version 2\n# ntp peer 172.16.1.11 key 2 minpoll 5 prefer version 2\n# ntp server 172.16.1.12 version 2\n# ntp server 172.16.1.13 source GigabitEthernet0/1\n# ntp peer ip checkPeerDomainIpv4.com prefer\n# ntp peer ipv6 checkPeerDomainIpv6.com\n# ntp peer ipv6 testPeerDomainIpv6.com prefer\n# ntp server ipv6 checkServerDomainIpv6.com\n\n# Gathered play:\n# --------------\n\n- name: Gather listed ntp config\n  cisco.ios.ios_ntp_global:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n\n# \"gathered\": {\n#   \"access_group\": {\n#       \"peer\": [\n#           {\n#               \"access_list\": \"2\",\n#               \"kod\": true\n#           },\n#           {\n#               \"access_list\": \"preauth_ipv6_acl\",\n#               \"ipv6\": true,\n#               \"kod\": true\n#           }\n#       ]\n#   },\n#   \"allow\": {\n#       \"control\": {\n#           \"rate_limit\": 4\n#       }\n#   },\n#   \"authenticate\": true,\n#   \"authentication_keys\": [\n#       {\n#           \"algorithm\": \"md5\",\n#           \"encryption\": 7,\n#           \"id\": 2,\n#           \"key\": \"0635002C497D0C1A1005173B0D17393C2B3A37\"\n#       }\n#   ],\n#   \"broadcast_delay\": 22,\n#   \"logging\": true,\n#   \"master\": {\n#       \"stratum\": 4\n#   },\n#   \"max_associations\": 34,\n#   \"max_distance\": 3,\n#   \"min_distance\": 10,\n#   \"orphan\": 4,\n#   \"panic_update\": true,\n#   \"peers\": [\n#       {\n#           \"peer\": \"172.16.1.10\",\n#           \"version\": 2\n#       },\n#       {\n#           \"key\": 2,\n#           \"minpoll\": 5,\n#           \"peer\": \"172.16.1.11\",\n#           \"prefer\": true,\n#           \"version\": 2\n#       },\n#       {\n#           \"peer\": \"checkPeerDomainIpv4.com\",\n#           \"prefer\": true,\n#           \"use_ipv4\": true\n#       },\n#       {\n#           \"peer\": \"checkPeerDomainIpv6.com\",\n#           \"use_ipv6\": true\n#       },\n#       {\n#           \"peer\": \"testPeerDomainIpv6.com\",\n#           \"prefer\": true,\n#           \"use_ipv6\": true\n#       }\n#   ],\n#   \"servers\": [\n#       {\n#           \"server\": \"172.16.1.12\",\n#           \"version\": 2\n#       },\n#       {\n#           \"server\": \"172.16.1.13\",\n#           \"source\": \"GigabitEthernet0/1\"\n#       },\n#       {\n#           \"server\": \"checkServerDomainIpv6.com\",\n#           \"use_ipv6\": true\n#       }\n#   ],\n#   \"source\": \"GigabitEthernet0/1\",\n#   \"trusted_keys\": [\n#       {\n#           \"range_start\": 21\n#       },\n#       {\n#           \"range_end\": 3,\n#           \"range_start\": 3\n#       }\n#   ],\n#   \"update_calendar\": true\n# },\n\n# After state:\n# -------------\n\n# router-ios#show running-config | section ^ntp\n# ntp max-associations 34\n# ntp logging\n# ntp allow mode control 4\n# ntp panic update\n# ntp authentication-key 2 md5 0635002C497D0C1A1005173B0D17393C2B3A37 7\n# ntp authenticate\n# ntp trusted-key 3 - 3\n# ntp trusted-key 21\n# ntp orphan 4\n# ntp mindistance 10\n# ntp maxdistance 3\n# ntp broadcastdelay 22\n# ntp source GigabitEthernet0/1\n# ntp access-group peer 2 kod\n# ntp access-group ipv6 peer preauth_ipv6_acl kod\n# ntp master 4\n# ntp update-calendar\n# ntp peer 172.16.1.10 version 2\n# ntp peer 172.16.1.11 key 2 minpoll 5 prefer version 2\n# ntp server 172.16.1.12 version 2\n# ntp server 172.16.1.13 source GigabitEthernet0/1\n# ntp peer ip checkPeerDomainIpv4.com prefer\n# ntp peer ipv6 checkPeerDomainIpv6.com\n# ntp peer ipv6 testPeerDomainIpv6.com prefer\n# ntp server ipv6 checkServerDomainIpv6.com\n\n# Using state: rendered\n\n# Rendered play:\n# --------------\n\n- name: Render the commands for provided configuration\n  cisco.ios.ios_ntp_global:\n    config:\n      access_group:\n        peer:\n          - access_list: DHCP-Server\n            ipv4: true\n            kod: true\n          - access_list: preauth_ipv6_acl\n            ipv6: true\n            kod: true\n          - access_list: '2'\n            kod: true\n        query_only:\n          - access_list: '10'\n      allow:\n        control:\n          rate_limit: 4\n        private: true\n      authenticate: true\n      authentication_keys:\n        - algorithm: md5\n          encryption: 22\n          id: 2\n          key: SomeSecurePassword\n      broadcast_delay: 22\n      clock_period: 5\n      logging: true\n      master:\n        stratum: 4\n      max_associations: 34\n      max_distance: 3\n      min_distance: 10\n      orphan: 4\n      panic_update: true\n      peers:\n        - peer: 172.16.1.10\n          version: 2\n        - key: 2\n          minpoll: 5\n          peer: 172.16.1.11\n          prefer: true\n          version: 2\n        - peer: checkPeerDomainIpv4.com\n          prefer: true\n          use_ipv4: true\n        - peer: checkPeerDomainIpv6.com\n          use_ipv6: true\n        - peer: testPeerDomainIpv6.com\n          prefer: true\n          use_ipv6: true\n      servers:\n        - server: 172.16.1.12\n          version: 2\n        - server: checkServerDomainIpv6.com\n          use_ipv6: true\n        - server: 172.16.1.13\n          source: GigabitEthernet0/1\n      source: GigabitEthernet0/1\n      trusted_keys:\n        - range_end: 3\n          range_start: 10\n        - range_start: 21\n      update_calendar: True\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n\n# \"rendered\": [\n#       \"ntp allow mode control 4\",\n#       \"ntp allow mode private\",\n#       \"ntp authenticate\",\n#       \"ntp broadcastdelay 22\",\n#       \"ntp clock-period 5\",\n#       \"ntp logging\",\n#       \"ntp master 4\",\n#       \"ntp max-associations 34\",\n#       \"ntp maxdistance 3\",\n#       \"ntp mindistance 10\",\n#       \"ntp orphan 4\",\n#       \"ntp panic update\",\n#       \"ntp source GigabitEthernet0/1\",\n#       \"ntp update-calendar\",\n#       \"ntp access-group ipv4 peer DHCP-Server kod\",\n#       \"ntp access-group ipv6 peer preauth_ipv6_acl kod\",\n#       \"ntp access-group peer 2 kod\",\n#       \"ntp access-group query-only 10\",\n#       \"ntp authentication-key 2 md5 SomeSecurePassword 22\",\n#       \"ntp peer 172.16.1.10 version 2\",\n#       \"ntp peer 172.16.1.11 key 2 minpoll 5 prefer version 2\",\n#       \"ntp peer ip checkPeerDomainIpv4.com prefer\",\n#       \"ntp peer ipv6 checkPeerDomainIpv6.com\",\n#       \"ntp peer ipv6 testPeerDomainIpv6.com prefer\",\n#       \"ntp server 172.16.1.12 version 2\",\n#       \"ntp server ipv6 checkServerDomainIpv6.com\",\n#       \"ntp server 172.16.1.13 source GigabitEthernet0/1\",\n#       \"ntp trusted-key 3 - 3\",\n#       \"ntp trusted-key 21\"\n#     ]\n\n# Using state: parsed\n\n# File: parsed.cfg\n# ----------------\n\n# ntp allow mode control 4\n# ntp allow mode private\n# ntp authenticate\n# ntp broadcastdelay 22\n# ntp clock-period 5\n# ntp logging\n# ntp master 4\n# ntp max-associations 34\n# ntp maxdistance 3\n# ntp mindistance 10\n# ntp orphan 4\n# ntp panic update\n# ntp source GigabitEthernet0/1\n# ntp update-calendar\n# ntp access-group ipv4 peer DHCP-Server kod\n# ntp access-group ipv6 peer preauth_ipv6_acl kod\n# ntp access-group peer 2 kod\n# ntp access-group query-only 10\n# ntp authentication-key 2 md5 SomeSecurePassword 22\n# ntp peer 172.16.1.10 version 2\n# ntp peer 172.16.1.11 key 2 minpoll 5 prefer version 2\n# ntp peer ip checkPeerDomainIpv4.com prefer\n# ntp peer ipv6 checkPeerDomainIpv6.com\n# ntp peer ipv6 testPeerDomainIpv6.com prefer\n# ntp server 172.16.1.12 version 2\n# ntp server ipv6 checkServerDomainIpv6.com\n# ntp server 172.16.1.13 source GigabitEthernet0/1\n# ntp trusted-key 3 - 13\n# ntp trusted-key 21\n\n# Parsed play:\n# ------------\n\n- name: Parse the provided configuration with the existing running configuration\n  cisco.ios.ios_ntp_global:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n\n# \"parsed\": {\n#     \"access_group\": {\n#         \"peer\": [\n#             {\n#                 \"access_list\": \"2\",\n#                 \"kod\": true\n#             },\n#             {\n#                 \"access_list\": \"DHCP-Server\",\n#                 \"ipv4\": true,\n#                 \"kod\": true\n#             },\n#             {\n#                 \"access_list\": \"preauth_ipv6_acl\",\n#                 \"ipv6\": true,\n#                 \"kod\": true\n#             }\n#         ],\n#         \"query_only\": [\n#             {\n#                 \"access_list\": \"10\"\n#             }\n#         ]\n#     },\n#     \"allow\": {\n#         \"control\": {\n#             \"rate_limit\": 4\n#         },\n#         \"private\": true\n#     },\n#     \"authenticate\": true,\n#     \"authentication_keys\": [\n#         {\n#             \"algorithm\": \"md5\",\n#             \"encryption\": 22,\n#             \"id\": 2,\n#             \"key\": \"SomeSecurePassword\"\n#         }\n#     ],\n#     \"broadcast_delay\": 22,\n#     \"clock_period\": 5,\n#     \"logging\": true,\n#     \"master\": {\n#         \"stratum\": 4\n#     },\n#     \"max_associations\": 34,\n#     \"max_distance\": 3,\n#     \"min_distance\": 10,\n#     \"orphan\": 4,\n#     \"panic_update\": true,\n#     \"peers\": [\n#         {\n#             \"peer\": \"172.16.1.10\",\n#             \"version\": 2\n#         },\n#         {\n#             \"peer\": \"checkPeerDomainIpv6.com\",\n#             \"use_ipv6\": true\n#         }\n#     ],\n#     \"servers\": [\n#         {\n#             \"server\": \"172.16.1.12\",\n#             \"version\": 2\n#         },\n#         {\n#             \"server\": \"172.16.1.13\",\n#             \"source\": \"GigabitEthernet0/1\"\n#         },\n#         {\n#             \"server\": \"checkServerDomainIpv6.com\",\n#             \"use_ipv6\": true\n#         }\n#     ],\n#     \"source\": \"GigabitEthernet0/1\",\n#     \"trusted_keys\": [\n#         {\n#             \"range_start\": 21\n#         },\n#         {\n#             \"range_end\": 13,\n#             \"range_start\": 3\n#         }\n#     ],\n#     \"update_calendar\": true\n# }\n"
  },
  "cisco.ios.ios_ospf_interfaces": {
    "doc": {
      "description": "This module configures and manages the Open Shortest Path First (OSPF) version 2 on IOS platforms.",
      "has_action": false,
      "notes": "Tested against Cisco IOSv Version 15.2 on VIRL.\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of OSPF interfaces options.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "address_family": {
              "aliases": [],
              "description": "OSPF interfaces settings on the interfaces in address-family context.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "adjacency": {
                  "aliases": [],
                  "description": "Adjacency staggering",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "afi": {
                  "aliases": [],
                  "description": "Address Family Identifier (AFI) for OSPF interfaces settings on the interfaces.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "ipv4",
                    "ipv6"
                  ],
                  "suboptions": {}
                },
                "authentication": {
                  "aliases": [],
                  "description": "Enable authentication",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "key_chain": {
                      "aliases": [],
                      "description": "Use a key-chain for cryptographic authentication keys",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "message_digest": {
                      "aliases": [],
                      "description": "Use message-digest authentication",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "null": {
                      "aliases": [],
                      "description": "Use no authentication",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bfd": {
                  "aliases": [],
                  "description": "BFD configuration commands\nEnable/Disable BFD on this interface",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "cost": {
                  "aliases": [],
                  "description": "Interface cost",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "dynamic_cost": {
                      "aliases": [],
                      "description": "Specify dynamic cost options\nValid only with IPv6 OSPF config",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "default": {
                          "aliases": [],
                          "description": "Specify default link metric value",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "hysteresis": {
                          "aliases": [],
                          "description": "Specify hysteresis value for LSA dampening",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "percent": {
                              "aliases": [],
                              "description": "Specify hysteresis percent changed. Please refer vendor documentation of Valid values.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "threshold": {
                              "aliases": [],
                              "description": "Specify hysteresis threshold value. Please refer vendor documentation of Valid values.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "weight": {
                          "aliases": [],
                          "description": "Specify weight to be placed on individual metrics",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "l2_factor": {
                              "aliases": [],
                              "description": "Specify weight to be given to L2-factor metric\nPercentage weight of L2-factor metric. Please refer vendor documentation of Valid values.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "latency": {
                              "aliases": [],
                              "description": "Specify weight to be given to latency metric.\nPercentage weight of latency metric. Please refer vendor documentation of Valid values.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "oc": {
                              "aliases": [],
                              "description": "Specify weight to be given to cdr/mdr for oc\nGive 100 percent weightage for current data rate(0 for maxdatarate)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "resources": {
                              "aliases": [],
                              "description": "Specify weight to be given to resources metric\nPercentage weight of resources metric. Please refer vendor documentation of Valid values.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "throughput": {
                              "aliases": [],
                              "description": "Specify weight to be given to throughput metric\nPercentage weight of throughput metric. Please refer vendor documentation of Valid values.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "interface_cost": {
                      "aliases": [],
                      "description": "Interface cost or Route cost of this interface",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "database_filter": {
                  "aliases": [],
                  "description": "Filter OSPF LSA during synchronization and flooding",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "dead_interval": {
                  "aliases": [],
                  "description": "Interval after which a neighbor is declared dead",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "minimal": {
                      "aliases": [],
                      "description": "Set to 1 second and set multiplier for Hellos\nNumber of Hellos sent within 1 second. Please refer vendor documentation of Valid values.\nValid only with IP OSPF config",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "time": {
                      "aliases": [],
                      "description": "time in seconds",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "demand_circuit": {
                  "aliases": [],
                  "description": "OSPF Demand Circuit, enable or disable the demand circuit'",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disable": {
                      "aliases": [],
                      "description": "Disable demand circuit on this interface\nValid only with IPv6 OSPF config",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "enable": {
                      "aliases": [],
                      "description": "Enable Demand Circuit",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "ignore": {
                      "aliases": [],
                      "description": "Ignore demand circuit auto-negotiation requests",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "flood_reduction": {
                  "aliases": [],
                  "description": "OSPF Flood Reduction",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "hello_interval": {
                  "aliases": [],
                  "description": "Time between HELLO packets\nPlease refer vendor documentation of Valid values.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "lls": {
                  "aliases": [],
                  "description": "Link-local Signaling (LLS) support\nValid only with IP OSPF config",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "manet": {
                  "aliases": [],
                  "description": "Mobile Adhoc Networking options\nMANET Peering options\nValid only with IPv6 OSPF config",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "cost": {
                      "aliases": [],
                      "description": "Redundant path cost improvement required to peer",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "percent": {
                          "aliases": [],
                          "description": "Relative incremental path cost. Please refer vendor documentation of Valid values.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "threshold": {
                          "aliases": [],
                          "description": "Absolute incremental path cost. Please refer vendor documentation of Valid values.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "link_metrics": {
                      "aliases": [],
                      "description": "Redundant path cost improvement required to peer",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "cost_threshold": {
                          "aliases": [],
                          "description": "Minimum link cost threshold. Please refer vendor documentation of Valid values.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Enable link-metrics",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "mtu_ignore": {
                  "aliases": [],
                  "description": "Ignores the MTU in DBD packets",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "multi_area": {
                  "aliases": [],
                  "description": "Set the OSPF multi-area ID\nValid only with IP OSPF config",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "cost": {
                      "aliases": [],
                      "description": "Interface cost",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "id": {
                      "aliases": [],
                      "description": "OSPF multi-area ID as a decimal value. Please refer vendor documentation of Valid values.\nOSPF multi-area ID in IP address format(e.g. A.B.C.D)",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "neighbor": {
                  "aliases": [],
                  "description": "OSPF neighbor link-local IPv6 address (X:X:X:X::X)\nValid only with IPv6 OSPF config",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "address": {
                      "aliases": [],
                      "description": "Neighbor link-local IPv6 address",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "cost": {
                      "aliases": [],
                      "description": "OSPF cost for point-to-multipoint neighbor",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "database_filter": {
                      "aliases": [],
                      "description": "Filter OSPF LSA during synchronization and flooding for point-to-multipoint neighbor",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "poll_interval": {
                      "aliases": [],
                      "description": "OSPF dead-router polling interval",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "priority": {
                      "aliases": [],
                      "description": "OSPF priority of non-broadcast neighbor",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "network": {
                  "aliases": [],
                  "description": "Network type",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "broadcast": {
                      "aliases": [],
                      "description": "Specify OSPF broadcast multi-access network",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "manet": {
                      "aliases": [],
                      "description": "Specify MANET OSPF interface type\nValid only with IPv6 OSPF config",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "non_broadcast": {
                      "aliases": [],
                      "description": "Specify OSPF NBMA network",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "point_to_multipoint": {
                      "aliases": [],
                      "description": "Specify OSPF point-to-multipoint network",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "point_to_point": {
                      "aliases": [],
                      "description": "Specify OSPF point-to-point network",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "prefix_suppression": {
                  "aliases": [],
                  "description": "Enable/Disable OSPF prefix suppression",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "priority": {
                  "aliases": [],
                  "description": "Router priority. Please refer vendor documentation of Valid values.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "process": {
                  "aliases": [],
                  "description": "OSPF interfaces process config",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "area_id": {
                      "aliases": [],
                      "description": "OSPF interfaces area ID as a decimal value. Please refer vendor documentation of Valid values.\nOSPF interfaces area ID in IP address format(e.g. A.B.C.D)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "id": {
                      "aliases": [],
                      "description": "Address Family Identifier (AFI) for OSPF interfaces settings on the interfaces. Please refer vendor documentation of Valid values.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "instance_id": {
                      "aliases": [],
                      "description": "Set the OSPF instance based on ID\nValid only with IPv6 OSPF config",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "secondaries": {
                      "aliases": [],
                      "description": "Include or exclude secondary IP addresses.\nValid only with IPv4 config",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "resync_timeout": {
                  "aliases": [],
                  "description": "Interval after which adjacency is reset if oob-resync is not started. Please refer vendor documentation of Valid values.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "retransmit_interval": {
                  "aliases": [],
                  "description": "Time between retransmitting lost link state advertisements. Please refer vendor documentation of Valid values.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "shutdown": {
                  "aliases": [],
                  "description": "Set OSPF protocol's state to disable under current interface",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "transmit_delay": {
                  "aliases": [],
                  "description": "Link state transmit delay. Please refer vendor documentation of Valid values.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "ttl_security": {
                  "aliases": [],
                  "description": "TTL security check\nValid only with IPV4 OSPF config",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "hops": {
                      "aliases": [],
                      "description": "Maximum number of IP hops allowed\nPlease refer vendor documentation of Valid values.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Enable TTL Security on all interfaces",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "Full name of the interface excluding any logical unit number, i.e. GigabitEthernet0/1.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(sh running-config | section ^interface).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(show running-config | include ip route|ipv6 route) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "OSPF_Interfaces resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n\n# Using deleted\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^interface\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  ipv6 ospf 55 area 105\n#  ipv6 ospf priority 20\n#  ipv6 ospf transmit-delay 30\n#  ipv6 ospf adjacency stagger disable\n# interface GigabitEthernet0/2\n#  ip ospf priority 40\n#  ip ospf adjacency stagger disable\n#  ip ospf ttl-security hops 50\n#  ip ospf 10 area 20\n#  ip ospf cost 30\n\n- name: Delete provided OSPF Interface config\n  cisco.ios.ios_ospf_interfaces:\n    config:\n      - name: GigabitEthernet0/1\n    state: deleted\n\n#  Commands Fired:\n#  ---------------\n#\n#  \"commands\": [\n#         \"interface GigabitEthernet0/1\",\n#         \"no ipv6 ospf 55 area 105\",\n#         \"no ipv6 ospf adjacency stagger disable\",\n#         \"no ipv6 ospf priority 20\",\n#         \"no ipv6 ospf transmit-delay 30\"\n#     ]\n\n# After state:\n# -------------\n# router-ios#sh running-config | section ^interface\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n# interface GigabitEthernet0/2\n#  ip ospf priority 40\n#  ip ospf adjacency stagger disable\n#  ip ospf ttl-security hops 50\n#  ip ospf 10 area 20\n#  ip ospf cost 30\n\n# Using deleted without any config passed (NOTE: This will delete all OSPF Interfaces configuration from device)\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^interface\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  ipv6 ospf 55 area 105\n#  ipv6 ospf priority 20\n#  ipv6 ospf transmit-delay 30\n#  ipv6 ospf adjacency stagger disable\n# interface GigabitEthernet0/2\n#  ip ospf priority 40\n#  ip ospf adjacency stagger disable\n#  ip ospf ttl-security hops 50\n#  ip ospf 10 area 20\n#  ip ospf cost 30\n\n- name: Delete all OSPF config from interfaces\n  cisco.ios.ios_ospf_interfaces:\n    state: deleted\n\n# Commands Fired:\n# ---------------\n#\n#  \"commands\": [\n#         \"interface GigabitEthernet0/2\",\n#         \"no ip ospf 10 area 20\",\n#         \"no ip ospf adjacency stagger disable\",\n#         \"no ip ospf cost 30\",\n#         \"no ip ospf priority 40\",\n#         \"no ip ospf ttl-security hops 50\",\n#         \"interface GigabitEthernet0/1\",\n#         \"no ipv6 ospf 55 area 105\",\n#         \"no ipv6 ospf adjacency stagger disable\",\n#         \"no ipv6 ospf priority 20\",\n#         \"no ipv6 ospf transmit-delay 30\"\n#     ]\n\n# After state:\n# -------------\n# router-ios#sh running-config | section ^interface\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n# interface GigabitEthernet0/2\n\n# Using merged\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^interface\n# router-ios#\n\n- name: Merge provided OSPF Interfaces configuration\n  cisco.ios.ios_ospf_interfaces:\n    config:\n      - name: GigabitEthernet0/1\n        address_family:\n          - afi: ipv4\n            process:\n              id: 10\n              area_id: 30\n            adjacency: true\n            bfd: true\n            cost:\n              interface_cost: 5\n            dead_interval:\n              time: 5\n            demand_circuit:\n              ignore: true\n            network:\n              broadcast: true\n            priority: 25\n            resync_timeout: 10\n            shutdown: true\n            ttl_security:\n              hops: 50\n          - afi: ipv6\n            process:\n              id: 35\n              area_id: 45\n            adjacency: true\n            database_filter: true\n            manet:\n              link_metrics:\n                cost_threshold: 10\n            priority: 55\n            transmit_delay: 45\n    state: merged\n\n#  Commands Fired:\n#  ---------------\n#\n#   \"commands\": [\n#         \"interface GigabitEthernet0/1\",\n#         \"ip ospf 10 area 30\",\n#         \"ip ospf adjacency stagger disable\",\n#         \"ip ospf bfd\",\n#         \"ip ospf cost 5\",\n#         \"ip ospf dead-interval 5\",\n#         \"ip ospf demand-circuit ignore\",\n#         \"ip ospf network broadcast\",\n#         \"ip ospf priority 25\",\n#         \"ip ospf resync-timeout 10\",\n#         \"ip ospf shutdown\",\n#         \"ip ospf ttl-security hops 50\",\n#         \"ipv6 ospf 35 area 45\",\n#         \"ipv6 ospf adjacency stagger disable\",\n#         \"ipv6 ospf database-filter all out\",\n#         \"ipv6 ospf manet peering link-metrics 10\",\n#         \"ipv6 ospf priority 55\",\n#         \"ipv6 ospf transmit-delay 45\"\n#     ]\n\n# After state:\n# -------------\n#\n# router-ios#sh running-config | section ^interface\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  ip ospf network broadcast\n#  ip ospf resync-timeout 10\n#  ip ospf dead-interval 5\n#  ip ospf priority 25\n#  ip ospf demand-circuit ignore\n#  ip ospf bfd\n#  ip ospf adjacency stagger disable\n#  ip ospf ttl-security hops 50\n#  ip ospf shutdown\n#  ip ospf 10 area 30\n#  ip ospf cost 5\n#  ipv6 ospf 35 area 45\n#  ipv6 ospf priority 55\n#  ipv6 ospf transmit-delay 45\n#  ipv6 ospf database-filter all out\n#  ipv6 ospf adjacency stagger disable\n#  ipv6 ospf manet peering link-metrics 10\n# interface GigabitEthernet0/2\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^interface\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  ip ospf network broadcast\n#  ip ospf resync-timeout 10\n#  ip ospf dead-interval 5\n#  ip ospf priority 25\n#  ip ospf demand-circuit ignore\n#  ip ospf bfd\n#  ip ospf adjacency stagger disable\n#  ip ospf ttl-security hops 50\n#  ip ospf shutdown\n#  ip ospf 10 area 30\n#  ip ospf cost 5\n#  ipv6 ospf 35 area 45\n#  ipv6 ospf priority 55\n#  ipv6 ospf transmit-delay 45\n#  ipv6 ospf database-filter all out\n#  ipv6 ospf adjacency stagger disable\n#  ipv6 ospf manet peering link-metrics 10\n# interface GigabitEthernet0/2\n\n- name: Override provided OSPF Interfaces configuration\n  cisco.ios.ios_ospf_interfaces:\n    config:\n      - name: GigabitEthernet0/1\n        address_family:\n          - afi: ipv6\n            process:\n              id: 55\n              area_id: 105\n            adjacency: true\n            priority: 20\n            transmit_delay: 30\n      - name: GigabitEthernet0/2\n        address_family:\n          - afi: ipv4\n            process:\n              id: 10\n              area_id: 20\n            adjacency: true\n            cost:\n              interface_cost: 30\n            priority: 40\n            ttl_security:\n              hops: 50\n    state: overridden\n\n# Commands Fired:\n# ---------------\n#\n#  \"commands\": [\n#         \"interface GigabitEthernet0/2\",\n#         \"ip ospf 10 area 20\",\n#         \"ip ospf adjacency stagger disable\",\n#         \"ip ospf cost 30\",\n#         \"ip ospf priority 40\",\n#         \"ip ospf ttl-security hops 50\",\n#         \"interface GigabitEthernet0/1\",\n#         \"ipv6 ospf 55 area 105\",\n#         \"no ipv6 ospf database-filter all out\",\n#         \"no ipv6 ospf manet peering link-metrics 10\",\n#         \"ipv6 ospf priority 20\",\n#         \"ipv6 ospf transmit-delay 30\",\n#         \"no ip ospf 10 area 30\",\n#         \"no ip ospf adjacency stagger disable\",\n#         \"no ip ospf bfd\",\n#         \"no ip ospf cost 5\",\n#         \"no ip ospf dead-interval 5\",\n#         \"no ip ospf demand-circuit ignore\",\n#         \"no ip ospf network broadcast\",\n#         \"no ip ospf priority 25\",\n#         \"no ip ospf resync-timeout 10\",\n#         \"no ip ospf shutdown\",\n#         \"no ip ospf ttl-security hops 50\"\n#     ]\n\n# After state:\n# -------------\n#\n# router-ios#sh running-config | section ^interface\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  ipv6 ospf 55 area 105\n#  ipv6 ospf priority 20\n#  ipv6 ospf transmit-delay 30\n#  ipv6 ospf adjacency stagger disable\n# interface GigabitEthernet0/2\n#  ip ospf priority 40\n#  ip ospf adjacency stagger disable\n#  ip ospf ttl-security hops 50\n#  ip ospf 10 area 20\n#  ip ospf cost 30\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^interface\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  ip ospf network broadcast\n#  ip ospf resync-timeout 10\n#  ip ospf dead-interval 5\n#  ip ospf priority 25\n#  ip ospf demand-circuit ignore\n#  ip ospf bfd\n#  ip ospf adjacency stagger disable\n#  ip ospf ttl-security hops 50\n#  ip ospf shutdown\n#  ip ospf 10 area 30\n#  ip ospf cost 5\n#  ipv6 ospf 35 area 45\n#  ipv6 ospf priority 55\n#  ipv6 ospf transmit-delay 45\n#  ipv6 ospf database-filter all out\n#  ipv6 ospf adjacency stagger disable\n#  ipv6 ospf manet peering link-metrics 10\n# interface GigabitEthernet0/2\n\n- name: Replaced provided OSPF Interfaces configuration\n  cisco.ios.ios_ospf_interfaces:\n    config:\n      - name: GigabitEthernet0/2\n        address_family:\n          - afi: ipv6\n            process:\n              id: 55\n              area_id: 105\n            adjacency: true\n            priority: 20\n            transmit_delay: 30\n    state: replaced\n\n# Commands Fired:\n# ---------------\n#  \"commands\": [\n#         \"interface GigabitEthernet0/2\",\n#         \"ipv6 ospf 55 area 105\",\n#         \"ipv6 ospf adjacency stagger disable\",\n#         \"ipv6 ospf priority 20\",\n#         \"ipv6 ospf transmit-delay 30\"\n#     ]\n\n# After state:\n# -------------\n# router-ios#sh running-config | section ^interface\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  ip ospf network broadcast\n#  ip ospf resync-timeout 10\n#  ip ospf dead-interval 5\n#  ip ospf priority 25\n#  ip ospf demand-circuit ignore\n#  ip ospf bfd\n#  ip ospf adjacency stagger disable\n#  ip ospf ttl-security hops 50\n#  ip ospf shutdown\n#  ip ospf 10 area 30\n#  ip ospf cost 5\n#  ipv6 ospf 35 area 45\n#  ipv6 ospf priority 55\n#  ipv6 ospf transmit-delay 45\n#  ipv6 ospf database-filter all out\n#  ipv6 ospf adjacency stagger disable\n#  ipv6 ospf manet peering link-metrics 10\n# interface GigabitEthernet0/2\n#  ipv6 ospf 55 area 105\n#  ipv6 ospf priority 20\n#  ipv6 ospf transmit-delay 30\n#  ipv6 ospf adjacency stagger disable\n\n# Using Gathered\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^interface\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  ip ospf network broadcast\n#  ip ospf resync-timeout 10\n#  ip ospf dead-interval 5\n#  ip ospf priority 25\n#  ip ospf demand-circuit ignore\n#  ip ospf bfd\n#  ip ospf adjacency stagger disable\n#  ip ospf ttl-security hops 50\n#  ip ospf shutdown\n#  ip ospf 10 area 30\n#  ip ospf cost 5\n#  ipv6 ospf 35 area 45\n#  ipv6 ospf priority 55\n#  ipv6 ospf transmit-delay 45\n#  ipv6 ospf database-filter all out\n#  ipv6 ospf adjacency stagger disable\n#  ipv6 ospf manet peering link-metrics 10\n# interface GigabitEthernet0/2\n\n- name: Gather OSPF Interfaces provided configurations\n  cisco.ios.ios_ospf_interfaces:\n    config:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n#\n#  \"gathered\": [\n#         {\n#             \"name\": \"GigabitEthernet0/2\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"adjacency\": true,\n#                     \"afi\": \"ipv4\",\n#                     \"bfd\": true,\n#                     \"cost\": {\n#                         \"interface_cost\": 5\n#                     },\n#                     \"dead_interval\": {\n#                         \"time\": 5\n#                     },\n#                     \"demand_circuit\": {\n#                         \"ignore\": true\n#                     },\n#                     \"network\": {\n#                         \"broadcast\": true\n#                     },\n#                     \"priority\": 25,\n#                     \"process\": {\n#                         \"area_id\": \"30\",\n#                         \"id\": 10\n#                     },\n#                     \"resync_timeout\": 10,\n#                     \"shutdown\": true,\n#                     \"ttl_security\": {\n#                         \"hops\": 50\n#                     }\n#                 },\n#                 {\n#                     \"adjacency\": true,\n#                     \"afi\": \"ipv6\",\n#                     \"database_filter\": true,\n#                     \"manet\": {\n#                         \"link_metrics\": {\n#                             \"cost_threshold\": 10\n#                         }\n#                     },\n#                     \"priority\": 55,\n#                     \"process\": {\n#                         \"area_id\": \"45\",\n#                         \"id\": 35\n#                     },\n#                     \"transmit_delay\": 45\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/1\"\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/0\"\n#         }\n#  ]\n\n# After state:\n# ------------\n#\n# router-ios#sh running-config | section ^interface\n# interface GigabitEthernet0/0\n# interface GigabitEthernet0/1\n#  ip ospf network broadcast\n#  ip ospf resync-timeout 10\n#  ip ospf dead-interval 5\n#  ip ospf priority 25\n#  ip ospf demand-circuit ignore\n#  ip ospf bfd\n#  ip ospf adjacency stagger disable\n#  ip ospf ttl-security hops 50\n#  ip ospf shutdown\n#  ip ospf 10 area 30\n#  ip ospf cost 5\n#  ipv6 ospf 35 area 45\n#  ipv6 ospf priority 55\n#  ipv6 ospf transmit-delay 45\n#  ipv6 ospf database-filter all out\n#  ipv6 ospf adjacency stagger disable\n#  ipv6 ospf manet peering link-metrics 10\n# interface GigabitEthernet0/2\n\n# Using Rendered\n\n- name: Render the commands for provided  configuration\n  cisco.ios.ios_ospf_interfaces:\n    config:\n      - name: GigabitEthernet0/1\n        address_family:\n          - afi: ipv4\n            process:\n              id: 10\n              area_id: 30\n            adjacency: true\n            bfd: true\n            cost:\n              interface_cost: 5\n            dead_interval:\n              time: 5\n            demand_circuit:\n              ignore: true\n            network:\n              broadcast: true\n            priority: 25\n            resync_timeout: 10\n            shutdown: true\n            ttl_security:\n              hops: 50\n          - afi: ipv6\n            process:\n              id: 35\n              area_id: 45\n            adjacency: true\n            database_filter: true\n            manet:\n              link_metrics:\n                cost_threshold: 10\n            priority: 55\n            transmit_delay: 45\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n#\n#  \"rendered\": [\n#         \"interface GigabitEthernet0/1\",\n#         \"ip ospf 10 area 30\",\n#         \"ip ospf adjacency stagger disable\",\n#         \"ip ospf bfd\",\n#         \"ip ospf cost 5\",\n#         \"ip ospf dead-interval 5\",\n#         \"ip ospf demand-circuit ignore\",\n#         \"ip ospf network broadcast\",\n#         \"ip ospf priority 25\",\n#         \"ip ospf resync-timeout 10\",\n#         \"ip ospf shutdown\",\n#         \"ip ospf ttl-security hops 50\",\n#         \"ipv6 ospf 35 area 45\",\n#         \"ipv6 ospf adjacency stagger disable\",\n#         \"ipv6 ospf database-filter all out\",\n#         \"ipv6 ospf manet peering link-metrics 10\",\n#         \"ipv6 ospf priority 55\",\n#         \"ipv6 ospf transmit-delay 45\"\n#     ]\n\n# Using Parsed\n\n# File: parsed.cfg\n# ----------------\n#\n# interface GigabitEthernet0/2\n# interface GigabitEthernet0/1\n#  ip ospf network broadcast\n#  ip ospf resync-timeout 10\n#  ip ospf dead-interval 5\n#  ip ospf priority 25\n#  ip ospf demand-circuit ignore\n#  ip ospf bfd\n#  ip ospf adjacency stagger disable\n#  ip ospf ttl-security hops 50\n#  ip ospf shutdown\n#  ip ospf 10 area 30\n#  ip ospf cost 5\n#  ipv6 ospf 35 area 45\n#  ipv6 ospf priority 55\n#  ipv6 ospf transmit-delay 45\n#  ipv6 ospf database-filter all out\n#  ipv6 ospf adjacency stagger disable\n#  ipv6 ospf manet peering link-metrics 10\n# interface GigabitEthernet0/0\n\n- name: Parse the provided configuration with the existing running configuration\n  cisco.ios.ios_ospf_interfaces:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n#\n#  \"parsed\": [\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/2\"\n#         },\n#         {\n#             \"address_family\": [\n#                 {\n#                     \"adjacency\": true,\n#                     \"afi\": \"ipv4\",\n#                     \"bfd\": true,\n#                     \"cost\": {\n#                         \"interface_cost\": 5\n#                     },\n#                     \"dead_interval\": {\n#                         \"time\": 5\n#                     },\n#                     \"demand_circuit\": {\n#                         \"ignore\": true\n#                     },\n#                     \"network\": {\n#                         \"broadcast\": true\n#                     },\n#                     \"priority\": 25,\n#                     \"process\": {\n#                         \"area_id\": \"30\",\n#                         \"id\": 10\n#                     },\n#                     \"resync_timeout\": 10,\n#                     \"shutdown\": true,\n#                     \"ttl_security\": {\n#                         \"hops\": 50\n#                     }\n#                 },\n#                 {\n#                     \"adjacency\": true,\n#                     \"afi\": \"ipv6\",\n#                     \"database_filter\": true,\n#                     \"manet\": {\n#                         \"link_metrics\": {\n#                             \"cost_threshold\": 10\n#                         }\n#                     },\n#                     \"priority\": 55,\n#                     \"process\": {\n#                         \"area_id\": \"45\",\n#                         \"id\": 35\n#                     },\n#                     \"transmit_delay\": 45\n#                 }\n#             ],\n#             \"name\": \"GigabitEthernet0/1\"\n#         },\n#         {\n#             \"name\": \"GigabitEthernet0/0\"\n#         }\n#     ]\n\n"
  },
  "cisco.ios.ios_ospfv2": {
    "doc": {
      "description": "This module configures and manages the Open Shortest Path First (OSPF) version 2 on IOS platforms.",
      "has_action": true,
      "notes": "Tested against Cisco IOSv Version 15.2 on VIRL.\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of OSPF options.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "processes": {
              "aliases": [],
              "description": "List of OSPF instance configurations.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "address_family": {
                  "aliases": [],
                  "description": "Router Address Family configuration mode",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "default": {
                      "aliases": [],
                      "description": "Set a command to its defaults",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "snmp_context": {
                      "aliases": [],
                      "description": "Modify snmp parameters\nConfigure SNMP context name",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "topology": {
                      "aliases": [],
                      "description": "Associate the routing protocol to a topology instance",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "base": {
                          "aliases": [],
                          "description": "Entering router topology sub mode",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "Routing topology instance name",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "tid": {
                          "aliases": [],
                          "description": "Configuring the routing protocol topology tid\nNote, please refer vendor documentation for valid values",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "adjacency": {
                  "aliases": [],
                  "description": "To configure control adjacency formation",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "max_adjacency": {
                      "aliases": [],
                      "description": "Maximum number of adjacencies allowed to be forming\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "min_adjacency": {
                      "aliases": [],
                      "description": "Initial number of adjacencies allowed to be forming in an area\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "none": {
                      "aliases": [],
                      "description": "No initial",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "areas": {
                  "aliases": [],
                  "description": "OSPF area parameters",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "area_id": {
                      "aliases": [],
                      "description": "OSPF area ID as a decimal value. Please refer vendor documentation of Valid values.\nOSPF area ID in IP address format(e.g. A.B.C.D)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "authentication": {
                      "aliases": [],
                      "description": "Area authentication",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "enable": {
                          "aliases": [],
                          "description": "Enable area authentication",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "message_digest": {
                          "aliases": [],
                          "description": "Use IPsec authentication",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "capability": {
                      "aliases": [],
                      "description": "Enable area specific capability\nEnable exclusion of links from base topology",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "default_cost": {
                      "aliases": [],
                      "description": "Set the summary default-cost of a NSSA/stub area\nStub's advertised external route metric\nNote, please refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "filter_list": {
                      "aliases": [],
                      "description": "Filter networks between OSPF areas",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "direction": {
                          "aliases": [],
                          "description": "The direction to apply on the filter networks sent to and from this area.",
                          "type": "str",
                          "required": true,
                          "choices": [
                            "in",
                            "out"
                          ],
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "Name of an IP prefix-list",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "nssa": {
                      "aliases": [],
                      "description": "Specify a NSSA area",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "default_information_originate": {
                          "aliases": [],
                          "description": "Originate Type 7 default into NSSA area",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "metric": {
                              "aliases": [],
                              "description": "OSPF default metric",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "metric_type": {
                              "aliases": [],
                              "description": "OSPF metric type for default routes\nOSPF Link State type",
                              "type": "int",
                              "required": false,
                              "choices": [
                                "1",
                                "2"
                              ],
                              "suboptions": {}
                            },
                            "nssa_only": {
                              "aliases": [],
                              "description": "Limit default advertisement to this NSSA area",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "no_ext_capability": {
                          "aliases": [],
                          "description": "Do not send domain specific capabilities into NSSA",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "no_redistribution": {
                          "aliases": [],
                          "description": "No redistribution into this NSSA area",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "no_summary": {
                          "aliases": [],
                          "description": "Do not send summary LSA into NSSA",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Enable a NSSA area",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "translate": {
                          "aliases": [],
                          "description": "Translate LSA\nAlways translate LSAs on this ABR\nSuppress forwarding address in translated LSAs",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "always",
                            "suppress-fa"
                          ],
                          "suboptions": {}
                        }
                      }
                    },
                    "ranges": {
                      "aliases": [],
                      "description": "Summarize routes matching address/mask (border routers only)",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "IP address to match",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "advertise": {
                          "aliases": [],
                          "description": "Advertise this range (default)\nSince, advertise when enabled is not shown in running-config idempotency won't be maintained for the play in the second or next run of the play.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "cost": {
                          "aliases": [],
                          "description": "User specified metric for this range",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "netmask": {
                          "aliases": [],
                          "description": "IP mask for address",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "not_advertise": {
                          "aliases": [],
                          "description": "DoNotAdvertise this range",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "sham_link": {
                      "aliases": [],
                      "description": "Define a sham link and its parameters",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "cost": {
                          "aliases": [],
                          "description": "Associate a cost with the sham-link\nCost of the sham-link\nNote, please refer vendor documentation for respective valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "destination": {
                          "aliases": [],
                          "description": "IP addr associated with sham-link destination (A.B.C.D)",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "source": {
                          "aliases": [],
                          "description": "IP addr associated with sham-link source (A.B.C.D)",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "ttl_security": {
                          "aliases": [],
                          "description": "TTL security check\nMaximum number of IP hops allowed",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "stub": {
                      "aliases": [],
                      "description": "Specify a stub area\nBackbone can not be configured as stub area",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "no_ext_capability": {
                          "aliases": [],
                          "description": "Do not send domain specific capabilities into stub area",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "no_summary": {
                          "aliases": [],
                          "description": "Do not send summary LSA into stub area",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Enable a stub area",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "auto_cost": {
                  "aliases": [],
                  "description": "Calculate OSPF interface cost according to bandwidth",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "reference_bandwidth": {
                      "aliases": [],
                      "description": "Use reference bandwidth method to assign OSPF cost\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Enable OSPF auto-cost",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bfd": {
                  "aliases": [],
                  "description": "BFD configuration commands\nEnable BFD on all interfaces",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "capability": {
                  "aliases": [],
                  "description": "Enable specific OSPF feature",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "lls": {
                      "aliases": [],
                      "description": "Link-local Signaling (LLS) support",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "opaque": {
                      "aliases": [],
                      "description": "Opaque LSA",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "transit": {
                      "aliases": [],
                      "description": "Transit Area",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "vrf_lite": {
                      "aliases": [],
                      "description": "Do not perform PE specific checks",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "compatible": {
                  "aliases": [],
                  "description": "OSPF router compatibility list",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "rfc1583": {
                      "aliases": [],
                      "description": "compatible with RFC 1583",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "rfc1587": {
                      "aliases": [],
                      "description": "compatible with RFC 1587",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "rfc5243": {
                      "aliases": [],
                      "description": "supports DBD exchange optimization",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "default_information": {
                  "aliases": [],
                  "description": "Control distribution of default information",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "always": {
                      "aliases": [],
                      "description": "Always advertise default route",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric": {
                      "aliases": [],
                      "description": "OSPF default metric\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric_type": {
                      "aliases": [],
                      "description": "OSPF metric type for default routes\nNote, please refer vendor documentation for respective valid range",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "originate": {
                      "aliases": [],
                      "description": "Distribute a default route",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Route-map reference name",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "default_metric": {
                  "aliases": [],
                  "description": "Set metric of redistributed routes",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "discard_route": {
                  "aliases": [],
                  "description": "Enable or disable discard-route installation",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "external": {
                      "aliases": [],
                      "description": "Discard route for redistributed summarised routes\nAdministrative distance for redistributed summarised routes\nNote, please refer vendor documentation for respective valid range",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "internal": {
                      "aliases": [],
                      "description": "Discard route for summarised internal routes\nAdministrative distance for summarised internal routes\nNote, please refer vendor documentation for respective valid range",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Enable discard-route installation",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "distance": {
                  "aliases": [],
                  "description": "Define an administrative distance",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "admin_distance": {
                      "aliases": [],
                      "description": "OSPF Administrative distance",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "acl": {
                          "aliases": [],
                          "description": "Access-list name/number",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "address": {
                          "aliases": [],
                          "description": "IP Source address",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "distance": {
                          "aliases": [],
                          "description": "Administrative distance",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "wildcard_bits": {
                          "aliases": [],
                          "description": "Wildcard bits",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ospf": {
                      "aliases": [],
                      "description": "OSPF distance",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "external": {
                          "aliases": [],
                          "description": "External type 5 and type 7 routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "inter_area": {
                          "aliases": [],
                          "description": "Inter-area routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "intra_area": {
                          "aliases": [],
                          "description": "Intra-area routes",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "distribute_list": {
                  "aliases": [],
                  "description": "Filter networks in routing updates",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "acls": {
                      "aliases": [],
                      "description": "IP access list",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "direction": {
                          "aliases": [],
                          "description": "Filter incoming and outgoing routing updates.",
                          "type": "str",
                          "required": true,
                          "choices": [
                            "in",
                            "out"
                          ],
                          "suboptions": {}
                        },
                        "interface": {
                          "aliases": [],
                          "description": "Interface configuration (GigabitEthernet A/B)\nValid with incoming traffic",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "IP access list name/number",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "protocol": {
                          "aliases": [],
                          "description": "Protocol config (bgp 1).\nValid with outgoing traffic",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "prefix": {
                      "aliases": [],
                      "description": "Filter prefixes in routing updates",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "direction": {
                          "aliases": [],
                          "description": "Filter incoming and outgoing routing updates.",
                          "type": "str",
                          "required": true,
                          "choices": [
                            "in",
                            "out"
                          ],
                          "suboptions": {}
                        },
                        "gateway_name": {
                          "aliases": [],
                          "description": "Gateway name for filtering incoming updates based on gateway",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "interface": {
                          "aliases": [],
                          "description": "Interface configuration (GigabitEthernet A/B)\nValid with incoming traffic",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "Name of an IP prefix-list",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "protocol": {
                          "aliases": [],
                          "description": "Protocol config (bgp 1).\nValid with outgoing traffic",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "route_map": {
                      "aliases": [],
                      "description": "Filter prefixes in routing updates",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "name": {
                          "aliases": [],
                          "description": "Route-map name",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "domain_id": {
                  "aliases": [],
                  "description": "OSPF domain-id",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "ip_address": {
                      "aliases": [],
                      "description": "IP address",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "OSPF domain ID in IP address format",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "secondary": {
                          "aliases": [],
                          "description": "Secondary Domain-ID",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "null": {
                      "aliases": [],
                      "description": "Null Domain-ID",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "domain_tag": {
                  "aliases": [],
                  "description": "OSPF domain-tag which is OSPF domain tag - 32-bit value\nNote, please refer vendor documentation for respective valid range",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "event_log": {
                  "aliases": [],
                  "description": "Event Logging",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "enable": {
                      "aliases": [],
                      "description": "Enable event Logging",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "one_shot": {
                      "aliases": [],
                      "description": "Disable Logging When Log Buffer Becomes Full",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "pause": {
                      "aliases": [],
                      "description": "Pause Event Logging",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "size": {
                      "aliases": [],
                      "description": "Maximum Number of Events Stored in the Event Log\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "help": {
                  "aliases": [],
                  "description": "Description of the interactive help system",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "ignore": {
                  "aliases": [],
                  "description": "Do not complain about specific event\nDo not complain upon receiving LSA of the specified type, MOSPF Type 6 LSA",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "interface_id": {
                  "aliases": [],
                  "description": "Source of the interface ID\nSNMP MIB ifIndex",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "ispf": {
                  "aliases": [],
                  "description": "Enable incremental SPF computation",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "limit": {
                  "aliases": [],
                  "description": "Limit a specific OSPF feature and LS update, DBD, and LS request retransmissions",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "dc": {
                      "aliases": [],
                      "description": "Demand circuit retransmissions",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Disble the feature",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "number": {
                          "aliases": [],
                          "description": "The maximum number of retransmissions",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "non_dc": {
                      "aliases": [],
                      "description": "Non-demand-circuit retransmissions",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Disble the feature",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "number": {
                          "aliases": [],
                          "description": "The maximum number of retransmissions",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "local_rib_criteria": {
                  "aliases": [],
                  "description": "Enable or disable usage of local RIB as route criteria",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "enable": {
                      "aliases": [],
                      "description": "Enable usage of local RIB as route criteria",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "forwarding_address": {
                      "aliases": [],
                      "description": "Local RIB used to validate external/NSSA forwarding addresses",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "inter_area_summary": {
                      "aliases": [],
                      "description": "Local RIB used as criteria for inter-area summaries",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "nssa_translation": {
                      "aliases": [],
                      "description": "Local RIB used as criteria for NSSA translation",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "log_adjacency_changes": {
                  "aliases": [],
                  "description": "Log changes in adjacency state",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "detail": {
                      "aliases": [],
                      "description": "Log all state changes",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Log changes in adjacency state",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "max_lsa": {
                  "aliases": [],
                  "description": "Maximum number of non self-generated LSAs to accept",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "ignore_count": {
                      "aliases": [],
                      "description": "Maximum number of times adjacencies can be suppressed\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "ignore_time": {
                      "aliases": [],
                      "description": "Number of minutes during which all adjacencies are suppressed\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "number": {
                      "aliases": [],
                      "description": "Maximum number of non self-generated LSAs to accept\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "reset_time": {
                      "aliases": [],
                      "description": "Number of minutes after which ignore-count is reset to zero\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "threshold_value": {
                      "aliases": [],
                      "description": "Threshold value (%) at which to generate a warning msg\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "warning_only": {
                      "aliases": [],
                      "description": "Only give a warning message when limit is exceeded",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "max_metric": {
                  "aliases": [],
                  "description": "Set maximum metric",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "external_lsa": {
                      "aliases": [],
                      "description": "Override external-lsa metric with max-metric value\nOverriding metric in external-LSAs\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "include_stub": {
                      "aliases": [],
                      "description": "Set maximum metric for stub links in router-LSAs",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "on_startup": {
                      "aliases": [],
                      "description": "Set maximum metric temporarily after reboot",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "time": {
                          "aliases": [],
                          "description": "Time, in seconds, router-LSAs are originated with max-metric\nNote, please refer vendor documentation for respective valid range",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "wait_for_bgp": {
                          "aliases": [],
                          "description": "Let BGP decide when to originate router-LSA with normal metric",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "router_lsa": {
                      "aliases": [],
                      "description": "Maximum metric in self-originated router-LSAs",
                      "type": "bool",
                      "required": true,
                      "suboptions": {}
                    },
                    "summary_lsa": {
                      "aliases": [],
                      "description": "Override summary-lsa metric with max-metric value\nNote, please refer vendor documentation for respective valid range",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "maximum_paths": {
                  "aliases": [],
                  "description": "Forward packets over multiple paths\nNumber of paths",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "mpls": {
                  "aliases": [],
                  "description": "Configure MPLS routing protocol parameters",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "ldp": {
                      "aliases": [],
                      "description": "routing protocol commands for MPLS LDP",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "autoconfig": {
                          "aliases": [],
                          "description": "routing protocol commands for MPLS LDP",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "area": {
                              "aliases": [],
                              "description": "Configure an OSPF area to run MPLS LDP",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Configure LDP automatic configuration and set the config",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "sync": {
                          "aliases": [],
                          "description": "Configure LDP-IGP Synchronization",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "traffic_eng": {
                      "aliases": [],
                      "description": "Let BGP decide when to originate router-LSA with normal metric",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "area": {
                          "aliases": [],
                          "description": "Configure an ospf area to run MPLS Traffic Engineering\nOSPF area ID as a decimal value or in IP address format",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "autoroute_exclude": {
                          "aliases": [],
                          "description": "MPLS TE autoroute exclude\nFilter prefixes based on name of an IP prefix-list",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "interface": {
                          "aliases": [],
                          "description": "MPLS TE interface configuration for this OSPF process",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "area": {
                              "aliases": [],
                              "description": "Advertise MPLS TE information for this interface into area\nOSPF area ID as a decimal value",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "interface_type": {
                              "aliases": [],
                              "description": "TE Interface configuration (GigabitEthernet A/B)",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "mesh_group": {
                          "aliases": [],
                          "description": "Traffic Engineering Mesh-Group advertisement",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "area": {
                              "aliases": [],
                              "description": "configure flooding scope as area",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "id": {
                              "aliases": [],
                              "description": "Mesh Group Id",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "interface": {
                              "aliases": [],
                              "description": "Interface configuration (GigabitEthernet A/B)",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "multicast_intact": {
                          "aliases": [],
                          "description": "MPLS TE and PIM interaction",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "router_id_interface": {
                          "aliases": [],
                          "description": "Router Interface configuration (GigabitEthernet A/B)",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "neighbor": {
                  "aliases": [],
                  "description": "Specify a neighbor router",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "address": {
                      "aliases": [],
                      "description": "Neighbor address (A.B.C.D)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "cost": {
                      "aliases": [],
                      "description": "OSPF cost for point-to-multipoint neighbor metric\nNote, please refer vendor documentation for respective valid range",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "database_filter": {
                      "aliases": [],
                      "description": "Filter OSPF LSA during synchronization and flooding for point-to-multipoint neighbor\nFilter all outgoing LSA",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "poll_interval": {
                      "aliases": [],
                      "description": "OSPF dead-router polling interval of non-broadcast neighbor in Seconds",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "priority": {
                      "aliases": [],
                      "description": "OSPF priority of non-broadcast neighbor priority",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "network": {
                  "aliases": [],
                  "description": "Enable routing on an IP network",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "address": {
                      "aliases": [],
                      "description": "Network number",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "area": {
                      "aliases": [],
                      "description": "Set the OSPF area ID",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "wildcard_bits": {
                      "aliases": [],
                      "description": "OSPF wild card bits",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "nsf": {
                  "aliases": [],
                  "description": "Non-stop forwarding",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "cisco": {
                      "aliases": [],
                      "description": "Cisco Non-stop forwarding",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "disable helper support",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "helper": {
                          "aliases": [],
                          "description": "helper support",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ietf": {
                      "aliases": [],
                      "description": "IETF graceful restart",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "disable helper support",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "helper": {
                          "aliases": [],
                          "description": "helper support",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "strict_lsa_checking": {
                          "aliases": [],
                          "description": "enable helper strict LSA checking",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "passive_interface": {
                  "aliases": [],
                  "description": "passive_interface param is deprecated and a newer param passive_interfaces with added functionality's is introduced, please meke use of the new available passive_interfaces instead.\nSuppress routing updates on an interface (GigabitEthernet A/B)\nInterface name with respective interface number",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "passive_interfaces": {
                  "aliases": [],
                  "description": "Suppress routing updates on an interface",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "default": {
                      "aliases": [],
                      "description": "Suppress routing updates on all interfaces",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "interface": {
                      "aliases": [],
                      "description": "Suppress/Un-Suppress routing updates on interface",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "name": {
                          "aliases": [],
                          "description": "Name of interface (GigabitEthernet A/B)",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "set_interface": {
                          "aliases": [],
                          "description": "Suppress/Un-Suppress routing updates",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "prefix_suppression": {
                  "aliases": [],
                  "description": "Enable prefix suppression",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "priority": {
                  "aliases": [],
                  "description": "OSPF topology priority\nNote, refer vendor documentation for respective valid values",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "process_id": {
                  "aliases": [],
                  "description": "Process ID",
                  "type": "int",
                  "required": true,
                  "suboptions": {}
                },
                "queue_depth": {
                  "aliases": [],
                  "description": "Hello/Router process queue depth",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "hello": {
                      "aliases": [],
                      "description": "OSPF Hello process queue depth",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "max_packets": {
                          "aliases": [],
                          "description": "maximum number of packets in the queue",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "unlimited": {
                          "aliases": [],
                          "description": "Unlimited queue depth",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "update": {
                      "aliases": [],
                      "description": "OSPF Router process queue depth",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "max_packets": {
                          "aliases": [],
                          "description": "maximum number of packets in the queue",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "unlimited": {
                          "aliases": [],
                          "description": "Unlimited queue depth",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "router_id": {
                  "aliases": [],
                  "description": "Router-id address for this OSPF process\nOSPF router-id in IP address format (A.B.C.D)",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "shutdown": {
                  "aliases": [],
                  "description": "Shutdown the router process",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "summary_address": {
                  "aliases": [],
                  "description": "Configure IP address summaries",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "address": {
                      "aliases": [],
                      "description": "IP summary address",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "mask": {
                      "aliases": [],
                      "description": "IP Summary mask",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "not_advertise": {
                      "aliases": [],
                      "description": "Do not advertise or translate",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "nssa_only": {
                      "aliases": [],
                      "description": "Limit summary to NSSA areas",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "tag": {
                      "aliases": [],
                      "description": "Set tag",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "timers": {
                  "aliases": [],
                  "description": "Adjust routing timers",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "lsa": {
                      "aliases": [],
                      "description": "OSPF LSA timers, arrival timer\nThe minimum interval in milliseconds between accepting the same LSA\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "pacing": {
                      "aliases": [],
                      "description": "OSPF pacing timers",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "flood": {
                          "aliases": [],
                          "description": "OSPF flood pacing timer\nThe minimum interval in msec to pace limit flooding on interface\nNote, refer vendor documentation for respective valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "lsa_group": {
                          "aliases": [],
                          "description": "OSPF LSA group pacing timer\nInterval in sec between group of LSA being refreshed or maxaged\nNote, refer vendor documentation for respective valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "retransmission": {
                          "aliases": [],
                          "description": "OSPF retransmission pacing timer\nThe minimum interval in msec between neighbor retransmissions\nNote, refer vendor documentation for respective valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "throttle": {
                      "aliases": [],
                      "description": "OSPF throttle timers",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "lsa": {
                          "aliases": [],
                          "description": "OSPF LSA throttle timers",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "first_delay": {
                              "aliases": [],
                              "description": "Delay to generate first occurrence of LSA in milliseconds\nNote, refer vendor documentation for respective valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "max_delay": {
                              "aliases": [],
                              "description": "Maximum delay between originating the same LSA in milliseconds\nNote, refer vendor documentation for respective valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "min_delay": {
                              "aliases": [],
                              "description": "Minimum delay between originating the same LSA in milliseconds\nNote, refer vendor documentation for respective valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "spf": {
                          "aliases": [],
                          "description": "OSPF SPF throttle timers - Delay between receiving a change to SPF calculation in milliseconds - Note, refer vendor documentation for respective valid values",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "between_delay": {
                              "aliases": [],
                              "description": "Delay between first and second SPF calculation in milliseconds\nNote, refer vendor documentation for respective valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "max_delay": {
                              "aliases": [],
                              "description": "Maximum wait time in milliseconds for SPF calculations\nNote, refer vendor documentation for respective valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "receive_delay": {
                              "aliases": [],
                              "description": "Delay between receiving a change to SPF calculation in milliseconds\nNote, refer vendor documentation for respective valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "traffic_share": {
                  "aliases": [],
                  "description": "How to compute traffic share over alternate paths\nAll traffic shared among min metric paths\nUse different interfaces for equal-cost paths",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "ttl_security": {
                  "aliases": [],
                  "description": "TTL security check",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "hops": {
                      "aliases": [],
                      "description": "Maximum number of IP hops allowed\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Enable TTL Security on all interfaces",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "vrf": {
                  "aliases": [],
                  "description": "Specify parameters for a VPN Routing/Forwarding instance",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(sh running-config | section ^router ospf).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(show running-config | include ip route|ipv6 route) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "parsed",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "OSPFv2 resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n\n# Using deleted\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^router ospf\n# router ospf 200 vrf blue\n#  domain-id 192.0.3.1\n#  max-metric router-lsa on-startup 100\n#  auto-cost reference-bandwidth 4\n#  area 10 capability default-exclusion\n#  distribute-list 10 out\n#  distribute-list 123 in\n# router ospf 1\n#  max-metric router-lsa on-startup 110\n#  area 10 authentication message-digest\n#  area 10 nssa default-information-originate metric 10\n#  area 10 nssa translate type7 suppress-fa\n#  area 10 default-cost 10\n#  area 10 filter-list prefix test_prefix_out out\n#  network 198.51.100.0 0.0.0.255 area 5\n#  default-information originate\n\n- name: Delete provided OSPF V2 processes\n  cisco.ios.ios_ospfv2:\n    config:\n      processes:\n      - process_id: 1\n      - process_id: 200\n        vrf: blue\n    state: deleted\n\n# Commands Fired:\n# ---------------\n#\n# \"commands\": [\n#        \"no router ospf 1\"\n#    ]\n\n# After state:\n# -------------\n# router-ios#sh running-config | section ^router ospf\n# router ospf 200 vrf blue\n#  domain-id 192.0.3.1\n#  max-metric router-lsa on-startup 100\n#  auto-cost reference-bandwidth 4\n#  area 10 capability default-exclusion\n#  distribute-list 10 out\n#  distribute-list 123 in\n\n# Using deleted without any config passed (NOTE: This will delete all OSPFV2 configuration from device)\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^router ospf\n# router ospf 200 vrf blue\n#  domain-id 192.0.3.1\n#  max-metric router-lsa on-startup 100\n#  auto-cost reference-bandwidth 4\n#  area 10 capability default-exclusion\n#  distribute-list 10 out\n#  distribute-list 123 in\n# router ospf 1\n#  max-metric router-lsa on-startup 110\n#  area 10 authentication message-digest\n#  area 10 nssa default-information-originate metric 10\n#  area 10 nssa translate type7 suppress-fa\n#  area 10 default-cost 10\n#  area 10 filter-list prefix test_prefix_out out\n#  network 198.51.100.0 0.0.0.255 area 5\n#  default-information originate\n\n- name: Delete all OSPF processes\n  cisco.ios.ios_ospfv2:\n    state: deleted\n\n# Commands Fired:\n# ---------------\n#\n# \"commands\": [\n#        \"no router ospf 200 vrf blue\",\n#        \"no router ospf 1\"\n#    ]\n\n# After state:\n# -------------\n# router-ios#sh running-config | section ^router ospf\n# router-ios#\n\n# Using merged\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^router ospf\n# router-ios#\n\n- name: Merge provided OSPF V2 configuration\n  cisco.ios.ios_ospfv2:\n    config:\n      processes:\n      - process_id: 1\n        max_metric:\n          router_lsa: true\n          on_startup:\n            time: 110\n        areas:\n        - area_id: '5'\n          capability: true\n          authentication:\n            enable: true\n        - area_id: '10'\n          authentication:\n            message_digest: true\n          nssa:\n            default_information_originate:\n              metric: 10\n            translate: suppress-fa\n          default_cost: 10\n          filter_list:\n          - name: test_prefix_in\n            direction: in\n          - name: test_prefix_out\n            direction: out\n        network:\n          address: 198.51.100.0\n          wildcard_bits: 0.0.0.255\n          area: 5\n        default_information:\n          originate: true\n        passive_interfaces:\n          default: true\n          interface:\n            set_interface: False\n            name:\n              - GigabitEthernet0/1\n              - GigabitEthernet0/2\n      - process_id: 200\n        vrf: blue\n        domain_id:\n          ip_address:\n            address: 192.0.3.1\n        max_metric:\n          router_lsa: true\n          on_startup:\n            time: 100\n        auto_cost:\n          reference_bandwidth: 4\n        areas:\n        - area_id: '10'\n          capability: true\n        distribute_list:\n          acls:\n          - name: 10\n            direction: out\n          - name: 123\n            direction: in\n    state: merged\n\n# Commands Fired:\n# ---------------\n#\n#  \"commands\": [\n#         \"router ospf 200 vrf blue\",\n#         \"auto-cost reference-bandwidth 4\",\n#         \"distribute-list 10 out\",\n#         \"distribute-list 123 in\",\n#         \"domain-id 192.0.3.1\",\n#         \"max-metric router-lsa on-startup 100\",\n#         \"area 10 capability default-exclusion\",\n#         \"router ospf 1\",\n#         \"default-information originate\",\n#         \"max-metric router-lsa on-startup 110\",\n#         \"network 198.51.100.0 0.0.0.255 area 5\",\n#         \"area 10 authentication message-digest\",\n#         \"area 10 default-cost 10\",\n#         \"area 10 nssa translate type7 suppress-fa\",\n#         \"area 10 nssa default-information-originate metric 10\",\n#         \"area 10 filter-list prefix test_prefix_out out\",\n#         \"area 10 filter-list prefix test_prefix_in in\",\n#         \"area 5 authentication\",\n#         \"area 5 capability default-exclusion\"\n#         \"passive-interface default\"\n#         \"no passive-interface GigabitEthernet0/1\"\n#     ]\n\n# After state:\n# -------------\n#\n# router-ios#sh running-config | section ^router ospf\n# router ospf 200 vrf blue\n#  domain-id 192.0.3.1\n#  max-metric router-lsa on-startup 100\n#  auto-cost reference-bandwidth 4\n#  area 10 capability default-exclusion\n#  distribute-list 10 out\n#  distribute-list 123 in\n# router ospf 1\n#  max-metric router-lsa on-startup 110\n#  area 10 authentication message-digest\n#  area 10 nssa default-information-originate metric 10\n#  area 10 nssa translate type7 suppress-fa\n#  area 10 default-cost 10\n#  area 10 filter-list prefix test_prefix_out out\n#  network 198.51.100.0 0.0.0.255 area 5\n#  default-information originate\n#  passive-interface default\n#  no passive-interface GigabitEthernet0/1\n#  no passive-interface GigabitEthernet0/2\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^router ospf\n# router ospf 200 vrf blue\n#  domain-id 192.0.3.1\n#  max-metric router-lsa on-startup 100\n#  auto-cost reference-bandwidth 4\n#  area 10 capability default-exclusion\n#  distribute-list 10 out\n#  distribute-list 123 in\n# router ospf 1\n#  max-metric router-lsa on-startup 110\n#  area 10 authentication message-digest\n#  area 10 nssa default-information-originate metric 10\n#  area 10 nssa translate type7 suppress-fa\n#  area 10 default-cost 10\n#  area 10 filter-list prefix test_prefix_out out\n#  network 198.51.100.0 0.0.0.255 area 5\n#  default-information originate\n\n- name: Override provided OSPF V2 configuration\n  cisco.ios.ios_ospfv2:\n    config:\n      processes:\n      - process_id: 200\n        vrf: blue\n        domain_id:\n          ip_address:\n            address: 192.0.4.1\n        max_metric:\n          router_lsa: true\n          on_startup:\n            time: 200\n        maximum_paths: 15\n        ttl_security:\n          hops: 7\n        areas:\n        - area_id: '10'\n          default_cost: 10\n          authentication:\n            message_digest: true\n      - process_id: 100\n        vrf: ospf_vrf\n        domain_id:\n          ip_address:\n            address: 192.0.5.1\n        auto_cost:\n          reference_bandwidth: 5\n        areas:\n        - area_id: '5'\n          authentication:\n            message_digest: true\n          nssa:\n            default_information_originate:\n              metric: 10\n            translate: suppress-fa\n    state: overridden\n\n# Commands Fired:\n# ---------------\n#\n# \"commands\": [\n#         \"no router ospf 1\",\n#         \"router ospf 100 vrf ospf_vrf\",\n#         \"auto-cost reference-bandwidth 5\",\n#         \"domain-id 192.0.5.1\",\n#         \"area 5 authentication message-digest\",\n#         \"area 5 nssa translate type7 suppress-fa\",\n#         \"area 5 nssa default-information-originate metric 10\",\n#         \"router ospf 200 vrf blue\",\n#         \"no auto-cost reference-bandwidth 4\",\n#         \"no distribute-list 10 out\",\n#         \"no distribute-list 123 in\",\n#         \"domain-id 192.0.4.1\",\n#         \"max-metric router-lsa on-startup 200\",\n#         \"maximum-paths 15\",\n#         \"ttl-security all-interfaces hops 7\",\n#         \"area 10 authentication message-digest\",\n#         \"no area 10 capability default-exclusion\",\n#         \"area 10 default-cost 10\"\n#     ]\n\n# After state:\n# -------------\n#\n# router-ios#sh running-config | section ^router ospf\n# router ospf 200 vrf blue\n#  domain-id 192.0.4.1\n#  max-metric router-lsa on-startup 200\n#  ttl-security all-interfaces hops 7\n#  area 10 authentication message-digest\n#  area 10 default-cost 10\n#  maximum-paths 15\n# router ospf 100 vrf ospf_vrf\n#  domain-id 192.0.5.1\n#  auto-cost reference-bandwidth 5\n#  area 5 authentication message-digest\n#  area 5 nssa default-information-originate metric 10\n#  area 5 nssa translate type7 suppress-fa\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^router ospf\n# router ospf 200 vrf blue\n#  domain-id 192.0.3.1\n#  max-metric router-lsa on-startup 100\n#  auto-cost reference-bandwidth 4\n#  area 10 capability default-exclusion\n#  distribute-list 10 out\n#  distribute-list 123 in\n# router ospf 1\n#  max-metric router-lsa on-startup 110\n#  area 10 authentication message-digest\n#  area 10 nssa default-information-originate metric 10\n#  area 10 nssa translate type7 suppress-fa\n#  area 10 default-cost 10\n#  area 10 filter-list prefix test_prefix_out out\n#  network 198.51.100.0 0.0.0.255 area 5\n#  default-information originate\n\n- name: Replaced provided OSPF V2 configuration\n  cisco.ios.ios_ospfv2:\n    config:\n      processes:\n      - process_id: 200\n        vrf: blue\n        domain_id:\n          ip_address:\n            address: 192.0.4.1\n        max_metric:\n          router_lsa: true\n          on_startup:\n            time: 200\n        maximum_paths: 15\n        ttl_security:\n          hops: 7\n        areas:\n        - area_id: '10'\n          default_cost: 10\n          authentication:\n            message_digest: true\n      - process_id: 100\n        vrf: ospf_vrf\n        domain_id:\n          ip_address:\n            address: 192.0.5.1\n        auto_cost:\n          reference_bandwidth: 5\n        areas:\n        - area_id: '5'\n          authentication:\n            message_digest: true\n          nssa:\n            default_information_originate:\n              metric: 10\n            translate: suppress-fa\n    state: replaced\n\n# Commands Fired:\n# ---------------\n# \"commands\": [\n#         \"router ospf 100 vrf ospf_vrf\",\n#         \"auto-cost reference-bandwidth 5\",\n#         \"domain-id 192.0.5.1\",\n#         \"area 5 authentication message-digest\",\n#         \"area 5 nssa translate type7 suppress-fa\",\n#         \"area 5 nssa default-information-originate metric 10\",\n#         \"router ospf 200 vrf blue\",\n#         \"no auto-cost reference-bandwidth 4\",\n#         \"no distribute-list 10 out\",\n#         \"no distribute-list 123 in\",\n#         \"domain-id 192.0.4.1\",\n#         \"max-metric router-lsa on-startup 200\",\n#         \"maximum-paths 15\",\n#         \"ttl-security all-interfaces hops 7\",\n#         \"area 10 authentication message-digest\",\n#         \"no area 10 capability default-exclusion\",\n#         \"area 10 default-cost 10\"\n#     ]\n\n# After state:\n# -------------\n# router-ios#sh running-config | section ^router ospf\n# router ospf 200 vrf blue\n#  domain-id 192.0.4.1\n#  max-metric router-lsa on-startup 200\n#  ttl-security all-interfaces hops 7\n#  area 10 authentication message-digest\n#  area 10 default-cost 10\n#  maximum-paths 15\n# router ospf 100 vrf ospf_vrf\n#  domain-id 192.0.5.1\n#  auto-cost reference-bandwidth 5\n#  area 5 authentication message-digest\n#  area 5 nssa default-information-originate metric 10\n#  area 5 nssa translate type7 suppress-fa\n# router ospf 1\n#  max-metric router-lsa on-startup 110\n#  area 5 capability default-exclusion\n#  area 5 authentication\n#  area 10 authentication message-digest\n#  area 10 nssa default-information-originate metric 10\n#  area 10 nssa translate type7 suppress-fa\n#  area 10 default-cost 10\n#  area 10 filter-list prefix test_prefix_in in\n#  area 10 filter-list prefix test_prefix_out out\n#  network 198.51.100.0 0.0.0.255 area 5\n#  default-information originate\n\n# Using Gathered\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^router ospf\n# router ospf 200 vrf blue\n#  domain-id 192.0.3.1\n#  max-metric router-lsa on-startup 100\n#  auto-cost reference-bandwidth 4\n#  area 10 capability default-exclusion\n#  distribute-list 10 out\n#  distribute-list 123 in\n# router ospf 1\n#  max-metric router-lsa on-startup 110\n#  area 10 authentication message-digest\n#  area 10 nssa default-information-originate metric 10\n#  area 10 nssa translate type7 suppress-fa\n#  area 10 default-cost 10\n#  area 10 filter-list prefix test_prefix_out out\n#  network 198.51.100.0 0.0.0.255 area 5\n#  default-information originate\n\n- name: Gather OSPFV2 provided configurations\n  cisco.ios.ios_ospfv2:\n    config:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"gathered\": {\n#         \"processes\": [\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"5\",\n#                         \"authentication\": {\n#                             \"enable\": true\n#                         },\n#                         \"capability\": true\n#                     },\n#                     {\n#                         \"area_id\": \"10\",\n#                         \"authentication\": {\n#                             \"message_digest\": true\n#                         },\n#                         \"default_cost\": 10,\n#                         \"filter_list\": [\n#                             {\n#                                 \"direction\": \"in\",\n#                                 \"name\": \"test_prefix_in\"\n#                             },\n#                             {\n#                                 \"direction\": \"out\",\n#                                 \"name\": \"test_prefix_out\"\n#                             }\n#                         ],\n#                         \"nssa\": {\n#                             \"default_information_originate\": {\n#                                 \"metric\": 10\n#                             },\n#                             \"translate\": \"suppress-fa\"\n#                         }\n#                     }\n#                 ],\n#                 \"default_information\": {\n#                     \"originate\": true\n#                 },\n#                 \"max_metric\": {\n#                     \"on_startup\": {\n#                         \"time\": 110\n#                     },\n#                     \"router_lsa\": true\n#                 },\n#                 \"network\": {\n#                     \"address\": \"198.51.100.0\",\n#                     \"area\": \"5\",\n#                     \"wildcard_bits\": \"0.0.0.255\"\n#                 },\n#                 \"process_id\": 1\n#             },\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"10\",\n#                         \"capability\": true\n#                     }\n#                 ],\n#                 \"auto_cost\": {\n#                     \"reference_bandwidth\": 4\n#                 },\n#                 \"distribute_list\": {\n#                     \"acls\": [\n#                         {\n#                             \"direction\": \"out\",\n#                             \"name\": \"10\"\n#                         },\n#                         {\n#                             \"direction\": \"in\",\n#                             \"name\": \"123\"\n#                         }\n#                     ]\n#                 },\n#                 \"domain_id\": {\n#                     \"ip_address\": {\n#                         \"address\": \"192.0.3.1\"\n#                     }\n#                 },\n#                 \"max_metric\": {\n#                     \"on_startup\": {\n#                         \"time\": 100\n#                     },\n#                     \"router_lsa\": true\n#                 },\n#                 \"process_id\": 200,\n#                 \"vrf\": \"blue\"\n#             }\n#         ]\n#      }\n\n# After state:\n# ------------\n#\n# router-ios#sh running-config | section ^router ospf\n# router ospf 200 vrf blue\n#  domain-id 192.0.3.1\n#  max-metric router-lsa on-startup 100\n#  auto-cost reference-bandwidth 4\n#  area 10 capability default-exclusion\n#  distribute-list 10 out\n#  distribute-list 123 in\n# router ospf 1\n#  max-metric router-lsa on-startup 110\n#  area 10 authentication message-digest\n#  area 10 nssa default-information-originate metric 10\n#  area 10 nssa translate type7 suppress-fa\n#  area 10 default-cost 10\n#  area 10 filter-list prefix test_prefix_out out\n#  network 198.51.100.0 0.0.0.255 area 5\n#  default-information originate\n\n# Using Rendered\n\n- name: Render the commands for provided  configuration\n  cisco.ios.ios_ospfv2:\n    config:\n      processes:\n      - process_id: 1\n        max_metric:\n          router_lsa: true\n          on_startup:\n            time: 110\n        areas:\n        - area_id: '5'\n          capability: true\n          authentication:\n            enable: true\n        - area_id: '10'\n          authentication:\n            message_digest: true\n          nssa:\n            default_information_originate:\n              metric: 10\n            translate: suppress-fa\n          default_cost: 10\n          filter_list:\n          - name: test_prefix_in\n            direction: in\n          - name: test_prefix_out\n            direction: out\n        network:\n          address: 198.51.100.0\n          wildcard_bits: 0.0.0.255\n          area: 5\n        default_information:\n          originate: true\n      - process_id: 200\n        vrf: blue\n        domain_id:\n          ip_address:\n            address: 192.0.3.1\n        max_metric:\n          router_lsa: true\n          on_startup:\n            time: 100\n        auto_cost:\n          reference_bandwidth: 4\n        areas:\n        - area_id: '10'\n          capability: true\n        distribute_list:\n          acls:\n          - name: 10\n            direction: out\n          - name: 123\n            direction: in\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"rendered\": [\n#         \"router ospf 200 vrf blue\",\n#         \"auto-cost reference-bandwidth 4\",\n#         \"distribute-list 10 out\",\n#         \"distribute-list 123 in\",\n#         \"domain-id 192.0.3.1\",\n#         \"max-metric router-lsa on-startup 100\",\n#         \"area 10 capability default-exclusion\",\n#         \"router ospf 1\",\n#         \"default-information originate\",\n#         \"max-metric router-lsa on-startup 110\",\n#         \"network 198.51.100.0 0.0.0.255 area 5\",\n#         \"area 10 authentication message-digest\",\n#         \"area 10 default-cost 10\",\n#         \"area 10 nssa translate type7 suppress-fa\",\n#         \"area 10 nssa default-information-originate metric 10\",\n#         \"area 10 filter-list prefix test_prefix_out out\",\n#         \"area 10 filter-list prefix test_prefix_in in\",\n#         \"area 5 authentication\",\n#         \"area 5 capability default-exclusion\"\n#     ]\n\n# Using Parsed\n\n# File: parsed.cfg\n# ----------------\n#\n# router ospf 100\n#  auto-cost reference-bandwidth 5\n#  domain-id 192.0.5.1\n#  area 5 authentication message-digest\n#  area 5 nssa translate type7 suppress-fa\n#  area 5 nssa default-information-originate metric 10\n\n- name: Parse the provided configuration with the existing running configuration\n  cisco.ios.ios_ospfv2:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n#\n# \"parsed\": {\n#         \"processes\": [\n#             {\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"5\",\n#                         \"authentication\": {\n#                             \"message_digest\": true\n#                         },\n#                         \"nssa\": {\n#                             \"default_information_originate\": {\n#                                 \"metric\": 10\n#                             },\n#                             \"translate\": \"suppress-fa\"\n#                         }\n#                     }\n#                 ],\n#                 \"auto_cost\": {\n#                     \"reference_bandwidth\": 5\n#                 },\n#                 \"domain_id\": {\n#                     \"ip_address\": {\n#                         \"address\": \"192.0.5.1\"\n#                     }\n#                 },\n#                 \"process_id\": 100\n#             }\n#         ]\n#     }\n\n"
  },
  "cisco.ios.ios_ospfv3": {
    "doc": {
      "description": "This module configures and manages the Open Shortest Path First (OSPF) version 3 on IOS platforms.",
      "has_action": false,
      "notes": "Tested against Cisco IOSv Version 15.2 on VIRL.\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of configurations for ospfv3.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "processes": {
              "aliases": [],
              "description": "List of OSPF instance configurations.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "address_family": {
                  "aliases": [],
                  "description": "Enter Address Family command mode",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "adjacency": {
                      "aliases": [],
                      "description": "Control adjacency formation",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Disable adjacency staggering",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "max_adjacency": {
                          "aliases": [],
                          "description": "Maximum number of adjacencies allowed to be forming\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "min_adjacency": {
                          "aliases": [],
                          "description": "Initial number of adjacencies allowed to be forming in an area\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "none": {
                          "aliases": [],
                          "description": "No initial",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "afi": {
                      "aliases": [],
                      "description": "Enter Address Family command mode",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "ipv4",
                        "ipv6"
                      ],
                      "suboptions": {}
                    },
                    "areas": {
                      "aliases": [],
                      "description": "OSPF area parameters",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "area_id": {
                          "aliases": [],
                          "description": "OSPF area ID as a decimal value. Please refer vendor documentation of Valid values.\nOSPF area ID in IP address format(e.g. A.B.C.D)",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "authentication": {
                          "aliases": [],
                          "description": "Authentication parameters",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "key_chain": {
                              "aliases": [],
                              "description": "Use a key-chain for cryptographic authentication keys",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "null": {
                              "aliases": [],
                              "description": "Use no authentication",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "default_cost": {
                          "aliases": [],
                          "description": "Set the summary default-cost of a NSSA/stub area\nStub's advertised external route metric\nNote, please refer vendor documentation for respective valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "filter_list": {
                          "aliases": [],
                          "description": "Filter networks between OSPFv3 areas",
                          "type": "list",
                          "required": false,
                          "elements": "dict",
                          "suboptions": {
                            "direction": {
                              "aliases": [],
                              "description": "The direction to apply on the filter networks sent to and from this area.",
                              "type": "str",
                              "required": true,
                              "choices": [
                                "in",
                                "out"
                              ],
                              "suboptions": {}
                            },
                            "name": {
                              "aliases": [],
                              "description": "Name of an IP prefix-list",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "normal": {
                          "aliases": [],
                          "description": "Specify a normal area type",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "nssa": {
                          "aliases": [],
                          "description": "Specify a NSSA area",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "default_information_originate": {
                              "aliases": [],
                              "description": "Originate Type 7 default into NSSA area",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "metric": {
                                  "aliases": [],
                                  "description": "OSPF default metric",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "metric_type": {
                                  "aliases": [],
                                  "description": "OSPF metric type for default routes\nOSPF Link State type",
                                  "type": "int",
                                  "required": false,
                                  "choices": [
                                    "1",
                                    "2"
                                  ],
                                  "suboptions": {}
                                },
                                "nssa_only": {
                                  "aliases": [],
                                  "description": "Limit default advertisement to this NSSA area",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "no_redistribution": {
                              "aliases": [],
                              "description": "No redistribution into this NSSA area",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "no_summary": {
                              "aliases": [],
                              "description": "Do not send summary LSA into NSSA",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Enable a NSSA area",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "translate": {
                              "aliases": [],
                              "description": "Translate LSA\nAlways translate LSAs on this ABR\nSuppress forwarding address in translated LSAs",
                              "type": "str",
                              "required": false,
                              "choices": [
                                "always",
                                "suppress-fa"
                              ],
                              "suboptions": {}
                            }
                          }
                        },
                        "ranges": {
                          "aliases": [],
                          "description": "Summarize routes matching address/mask (border routers only)",
                          "type": "list",
                          "required": false,
                          "elements": "dict",
                          "suboptions": {
                            "address": {
                              "aliases": [],
                              "description": "IP address to match",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "advertise": {
                              "aliases": [],
                              "description": "Advertise this range (default)\nSince, advertise when enabled is not shown in running-config idempotency won't be maintained for the play in the second or next run of the play.",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "cost": {
                              "aliases": [],
                              "description": "User specified metric for this range",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "netmask": {
                              "aliases": [],
                              "description": "IP mask for address",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "not_advertise": {
                              "aliases": [],
                              "description": "DoNotAdvertise this range",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "sham_link": {
                          "aliases": [],
                          "description": "Define a sham link and its parameters",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "authentication": {
                              "aliases": [],
                              "description": "Authentication parameters",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "key_chain": {
                                  "aliases": [],
                                  "description": "Use a key-chain for cryptographic authentication keys",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "null": {
                                  "aliases": [],
                                  "description": "Use no authentication",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "cost": {
                              "aliases": [],
                              "description": "Associate a cost with the sham-link\nCost of the sham-link",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "destination": {
                              "aliases": [],
                              "description": "IPv6 address associated with sham-link destination (X:X:X:X::X)",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "source": {
                              "aliases": [],
                              "description": "IPv6 address associated with sham-link source (X:X:X:X::X)",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "ttl_security": {
                              "aliases": [],
                              "description": "TTL security check\nmaximum number of hops allowed",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "stub": {
                          "aliases": [],
                          "description": "Specify a stub area\nBackbone can not be configured as stub area",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "no_summary": {
                              "aliases": [],
                              "description": "Do not send summary LSA into stub area",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Enable a stub area",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "authentication": {
                      "aliases": [],
                      "description": "Authentication parameters\nAuthentication operation mode",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "deployment": {
                          "aliases": [],
                          "description": "Deployment mode of operation",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "normal": {
                          "aliases": [],
                          "description": "Normal mode of operation",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "auto_cost": {
                      "aliases": [],
                      "description": "Calculate OSPF interface cost according to bandwidth",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "reference_bandwidth": {
                          "aliases": [],
                          "description": "Use reference bandwidth method to assign OSPF cost\nNote, refer vendor documentation for respective valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Enable OSPF auto-cost",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "bfd": {
                      "aliases": [],
                      "description": "BFD configuration commands",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "all_interfaces": {
                          "aliases": [],
                          "description": "Enable BFD on all interfaces",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "disable": {
                          "aliases": [],
                          "description": "Disable BFD on all interfaces",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "capability": {
                      "aliases": [],
                      "description": "Enable a specific feature\nDo not perform PE specific checks",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "compatible": {
                      "aliases": [],
                      "description": "OSPFv3 router compatibility list",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "rfc1583": {
                          "aliases": [],
                          "description": "compatible with RFC 1583",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "rfc1587": {
                          "aliases": [],
                          "description": "compatible with RFC 1587",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "rfc5243": {
                          "aliases": [],
                          "description": "supports DBD exchange optimization",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "default_information": {
                      "aliases": [],
                      "description": "Control distribution of default information",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "always": {
                          "aliases": [],
                          "description": "Always advertise default route",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric": {
                          "aliases": [],
                          "description": "OSPF default metric\nNote, refer vendor documentation for respective valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric_type": {
                          "aliases": [],
                          "description": "OSPF metric type for default routes\nNote, please refer vendor documentation for respective valid range",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "originate": {
                          "aliases": [],
                          "description": "Distribute a default route",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Route-map reference name",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "default_metric": {
                      "aliases": [],
                      "description": "Set metric of redistributed routes",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "discard_route": {
                      "aliases": [],
                      "description": "Enable or disable discard-route installation",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "external": {
                          "aliases": [],
                          "description": "Discard route for summarised redistributed routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "internal": {
                          "aliases": [],
                          "description": "Discard route for summarised inter-area routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "sham_link": {
                          "aliases": [],
                          "description": "Discard route for sham-link routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "distance": {
                      "aliases": [],
                      "description": "Define an administrative distance\nNote, please refer vendor documentation for respective valid range",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "distribute_list": {
                      "aliases": [],
                      "description": "Filter networks in routing updates",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "acls": {
                          "aliases": [],
                          "description": "IP access list",
                          "type": "list",
                          "required": false,
                          "elements": "dict",
                          "suboptions": {
                            "direction": {
                              "aliases": [],
                              "description": "Filter incoming and outgoing routing updates.",
                              "type": "str",
                              "required": true,
                              "choices": [
                                "in",
                                "out"
                              ],
                              "suboptions": {}
                            },
                            "interface": {
                              "aliases": [],
                              "description": "Interface configuration (GigabitEthernet A/B)\nValid with incoming traffic",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "name": {
                              "aliases": [],
                              "description": "IP access list name/number",
                              "type": "str",
                              "required": true,
                              "suboptions": {}
                            },
                            "protocol": {
                              "aliases": [],
                              "description": "Protocol config (bgp 1).\nValid with outgoing traffic",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "prefix": {
                          "aliases": [],
                          "description": "Filter prefixes in routing updates",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "direction": {
                              "aliases": [],
                              "description": "Filter incoming and outgoing routing updates.",
                              "type": "str",
                              "required": true,
                              "choices": [
                                "in",
                                "out"
                              ],
                              "suboptions": {}
                            },
                            "gateway_name": {
                              "aliases": [],
                              "description": "Gateway name for filtering incoming updates based on gateway",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "interface": {
                              "aliases": [],
                              "description": "Interface configuration (GigabitEthernet A/B)\nValid with incoming traffic",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "name": {
                              "aliases": [],
                              "description": "Name of an IP prefix-list",
                              "type": "str",
                              "required": true,
                              "suboptions": {}
                            },
                            "protocol": {
                              "aliases": [],
                              "description": "Protocol config (bgp 1).\nValid with outgoing traffic",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "route_map": {
                          "aliases": [],
                          "description": "Filter prefixes in routing updates",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "name": {
                              "aliases": [],
                              "description": "Route-map name",
                              "type": "str",
                              "required": true,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "event_log": {
                      "aliases": [],
                      "description": "Event Logging",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "enable": {
                          "aliases": [],
                          "description": "Enable event Logging",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "one_shot": {
                          "aliases": [],
                          "description": "Disable Logging When Log Buffer Becomes Full",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "pause": {
                          "aliases": [],
                          "description": "Pause Event Logging",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "size": {
                          "aliases": [],
                          "description": "Maximum Number of Events Stored in the Event Log\nNote, refer vendor documentation for respective valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "graceful_restart": {
                      "aliases": [],
                      "description": "Graceful-restart options\nhelper support",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "disable helper support",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "enable": {
                          "aliases": [],
                          "description": "helper support enabled",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "strict_lsa_checking": {
                          "aliases": [],
                          "description": "enable helper strict LSA checking",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "interface_id": {
                      "aliases": [],
                      "description": "Source of the interface ID",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "ios_if_index": {
                          "aliases": [],
                          "description": "IOS interface number",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "snmp_if_index": {
                          "aliases": [],
                          "description": "SNMP MIB ifIndex",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "limit": {
                      "aliases": [],
                      "description": "Limit a specific OSPF feature",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "dc": {
                          "aliases": [],
                          "description": "Demand circuit retransmissions",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "Disble the feature",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "number": {
                              "aliases": [],
                              "description": "The maximum number of retransmissions",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "non_dc": {
                          "aliases": [],
                          "description": "Non-demand-circuit retransmissions",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "Disble the feature",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "number": {
                              "aliases": [],
                              "description": "The maximum number of retransmissions",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "local_rib_criteria": {
                      "aliases": [],
                      "description": "Enable or disable usage of local RIB as route criteria",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "enable": {
                          "aliases": [],
                          "description": "Enable usage of local RIB as route criteria",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "forwarding_address": {
                          "aliases": [],
                          "description": "Local RIB used to validate external/NSSA forwarding addresses",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "inter_area_summary": {
                          "aliases": [],
                          "description": "Local RIB used as criteria for inter-area summaries",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "nssa_translation": {
                          "aliases": [],
                          "description": "Local RIB used as criteria for NSSA translation",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "log_adjacency_changes": {
                      "aliases": [],
                      "description": "Log changes in adjacency state",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "detail": {
                          "aliases": [],
                          "description": "Log all state changes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Log changes in adjacency state",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "manet": {
                      "aliases": [],
                      "description": "Specify MANET OSPF parameters",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "cache": {
                          "aliases": [],
                          "description": "Specify MANET cache sizes",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "acknowledgement": {
                              "aliases": [],
                              "description": "Specify MANET acknowledgement cache size\nMaximum number of acknowledgements in cache",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "update": {
                              "aliases": [],
                              "description": "Specify MANET LSA cache size\nMaximum number of LSAs in cache",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "hello": {
                          "aliases": [],
                          "description": "Unicast Hellos rather than multicast",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "multicast": {
                              "aliases": [],
                              "description": "Multicast Hello requests and responses rather than unicast",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "unicast": {
                              "aliases": [],
                              "description": "Unicast Hello requests and responses rather than multicast",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "peering": {
                          "aliases": [],
                          "description": "MANET OSPF Smart Peering",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "disable": {
                              "aliases": [],
                              "description": "Disable selective peering",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "per_interface": {
                              "aliases": [],
                              "description": "Select peers per interface rather than per node",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "redundancy": {
                              "aliases": [],
                              "description": "Redundant paths\nNumber of redundant OSPF paths",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Enable selective peering",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "willingness": {
                          "aliases": [],
                          "description": "Specify and Relay willingness value",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "max_lsa": {
                      "aliases": [],
                      "description": "Maximum number of non self-generated LSAs to accept",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "ignore_count": {
                          "aliases": [],
                          "description": "Maximum number of times adjacencies can be suppressed\nNote, refer vendor documentation for respective valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "ignore_time": {
                          "aliases": [],
                          "description": "Number of minutes during which all adjacencies are suppressed\nNote, refer vendor documentation for respective valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "number": {
                          "aliases": [],
                          "description": "Maximum number of non self-generated LSAs to accept\nNote, refer vendor documentation for respective valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "reset_time": {
                          "aliases": [],
                          "description": "Number of minutes after which ignore-count is reset to zero\nNote, refer vendor documentation for respective valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "threshold_value": {
                          "aliases": [],
                          "description": "Threshold value (%) at which to generate a warning msg\nNote, refer vendor documentation for respective valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "warning_only": {
                          "aliases": [],
                          "description": "Only give a warning message when limit is exceeded",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "max_metric": {
                      "aliases": [],
                      "description": "Set maximum metric\nMaximum metric in self-originated router-LSAs",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "disable maximum metric in self-originated router-LSAs",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "external_lsa": {
                          "aliases": [],
                          "description": "Override external-lsa metric with max-metric value\nOverriding metric in external-LSAs\nNote, refer vendor documentation for respective valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "inter_area_lsas": {
                          "aliases": [],
                          "description": "Override inter-area-lsas metric with max-metric value\nOverriding metric in inter-area-LSAs\nNote, refer vendor documentation for respective valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "on_startup": {
                          "aliases": [],
                          "description": "Set maximum metric temporarily after reboot",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "time": {
                              "aliases": [],
                              "description": "Time, in seconds, router-LSAs are originated with max-metric\nNote, please refer vendor documentation for respective valid range",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "wait_for_bgp": {
                              "aliases": [],
                              "description": "Let BGP decide when to originate router-LSA with normal metric",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "stub_prefix_lsa": {
                          "aliases": [],
                          "description": "Set maximum metric for stub links in prefix LSAs",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "maximum_paths": {
                      "aliases": [],
                      "description": "Forward packets over multiple paths\nNumber of paths",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "passive_interface": {
                      "aliases": [],
                      "description": "Suppress routing updates on an interface",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix_suppression": {
                      "aliases": [],
                      "description": "Prefix suppression",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Disable prefix suppression",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "enable": {
                          "aliases": [],
                          "description": "Enable prefix suppression",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "queue_depth": {
                      "aliases": [],
                      "description": "Hello/Router process queue depth",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "hello": {
                          "aliases": [],
                          "description": "OSPF Hello process queue depth",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "max_packets": {
                              "aliases": [],
                              "description": "maximum number of packets in the queue",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "unlimited": {
                              "aliases": [],
                              "description": "Unlimited queue depth",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "update": {
                          "aliases": [],
                          "description": "OSPF Router process queue depth",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "max_packets": {
                              "aliases": [],
                              "description": "maximum number of packets in the queue",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "unlimited": {
                              "aliases": [],
                              "description": "Unlimited queue depth",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "router_id": {
                      "aliases": [],
                      "description": "Router-id address for this OSPF process\nOSPF router-id in IP address format (A.B.C.D)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "shutdown": {
                      "aliases": [],
                      "description": "Shutdown the router process",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Disable Shutdown",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "enable": {
                          "aliases": [],
                          "description": "Shutdown the router process",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "summary_prefix": {
                      "aliases": [],
                      "description": "Configure IP address summaries",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "IP summary address (A.B.C.D)\nIP prefix <network>/<length> (A.B.C.D/nn)",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "mask": {
                          "aliases": [],
                          "description": "IP Summary mask",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "not_advertise": {
                          "aliases": [],
                          "description": "Do not advertise or translate",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "nssa_only": {
                          "aliases": [],
                          "description": "Limit summary to NSSA areas",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "tag": {
                          "aliases": [],
                          "description": "Set tag",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "timers": {
                      "aliases": [],
                      "description": "Adjust routing timers",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "lsa": {
                          "aliases": [],
                          "description": "OSPF LSA timers, arrival timer\nThe minimum interval in milliseconds between accepting the same LSA\nNote, refer vendor documentation for respective valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "manet": {
                          "aliases": [],
                          "description": "OSPF MANET timers",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "cache": {
                              "aliases": [],
                              "description": "Specify MANET cache sizes",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "acknowledgement": {
                                  "aliases": [],
                                  "description": "Specify MANET acknowledgement cache size",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "redundancy": {
                                  "aliases": [],
                                  "description": "Specify MANET LSA cache size",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "hello": {
                              "aliases": [],
                              "description": "Unicast Hellos rather than multicast\nUnicast Hello requests and responses rather than multicast",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "peering": {
                              "aliases": [],
                              "description": "MANET OSPF Smart Peering",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "per_interface": {
                                  "aliases": [],
                                  "description": "Select peers per interface rather than per node",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "redundancy": {
                                  "aliases": [],
                                  "description": "Redundant paths\nNumber of redundant OSPF paths",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "Enable selective peering",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "willingness": {
                              "aliases": [],
                              "description": "Specify and Relay willingness value",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "pacing": {
                          "aliases": [],
                          "description": "OSPF pacing timers",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "flood": {
                              "aliases": [],
                              "description": "OSPF flood pacing timer\nThe minimum interval in msec to pace limit flooding on interface\nNote, refer vendor documentation for respective valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "lsa_group": {
                              "aliases": [],
                              "description": "OSPF LSA group pacing timer\nInterval in sec between group of LSA being refreshed or maxaged\nNote, refer vendor documentation for respective valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "retransmission": {
                              "aliases": [],
                              "description": "OSPF retransmission pacing timer\nThe minimum interval in msec between neighbor retransmissions\nNote, refer vendor documentation for respective valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "throttle": {
                          "aliases": [],
                          "description": "OSPF throttle timers",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "lsa": {
                              "aliases": [],
                              "description": "OSPF LSA throttle timers",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "first_delay": {
                                  "aliases": [],
                                  "description": "Delay to generate first occurrence of LSA in milliseconds\nNote, refer vendor documentation for respective valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "max_delay": {
                                  "aliases": [],
                                  "description": "Maximum delay between originating the same LSA in milliseconds\nNote, refer vendor documentation for respective valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "min_delay": {
                                  "aliases": [],
                                  "description": "Minimum delay between originating the same LSA in milliseconds\nNote, refer vendor documentation for respective valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "spf": {
                              "aliases": [],
                              "description": "OSPF SPF throttle timers - Delay between receiving a change to SPF calculation in milliseconds - Note, refer vendor documentation for respective valid values",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "between_delay": {
                                  "aliases": [],
                                  "description": "Delay between first and second SPF calculation in milliseconds\nNote, refer vendor documentation for respective valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "max_delay": {
                                  "aliases": [],
                                  "description": "Maximum wait time in milliseconds for SPF calculations\nNote, refer vendor documentation for respective valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "receive_delay": {
                                  "aliases": [],
                                  "description": "Delay between receiving a change to SPF calculation in milliseconds\nNote, refer vendor documentation for respective valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "unicast": {
                      "aliases": [],
                      "description": "Address Family modifier",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "vrf": {
                      "aliases": [],
                      "description": "Specify parameters for a VPN Routing/Forwarding instance",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "adjacency": {
                  "aliases": [],
                  "description": "Control adjacency formation",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "max_adjacency": {
                      "aliases": [],
                      "description": "Maximum number of adjacencies allowed to be forming\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "min_adjacency": {
                      "aliases": [],
                      "description": "Initial number of adjacencies allowed to be forming in an area\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "none": {
                      "aliases": [],
                      "description": "No initial",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "areas": {
                  "aliases": [],
                  "description": "OSPF area parameters",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "area_id": {
                      "aliases": [],
                      "description": "OSPF area ID as a decimal value. Please refer vendor documentation of Valid values.\nOSPF area ID in IP address format(e.g. A.B.C.D)",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "authentication": {
                      "aliases": [],
                      "description": "Authentication parameters",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "ipsec": {
                          "aliases": [],
                          "description": "Use IPsec authentication",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "hex_string": {
                              "aliases": [],
                              "description": "SHA-1 key (40 chars)",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "md5": {
                              "aliases": [],
                              "description": "Use MD5 authentication",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "sha1": {
                              "aliases": [],
                              "description": "Use SHA-1 authentication",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "spi": {
                              "aliases": [],
                              "description": "Set the SPI (Security Parameters Index)",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "key_chain": {
                          "aliases": [],
                          "description": "Use a key-chain for cryptographic authentication keys",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "default_cost": {
                      "aliases": [],
                      "description": "Set the summary default-cost of a NSSA/stub area\nStub's advertised external route metric\nNote, please refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "nssa": {
                      "aliases": [],
                      "description": "Specify a NSSA area",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "default_information_originate": {
                          "aliases": [],
                          "description": "Originate Type 7 default into NSSA area",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "metric": {
                              "aliases": [],
                              "description": "OSPF default metric",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "metric_type": {
                              "aliases": [],
                              "description": "OSPF metric type for default routes\nOSPF Link State type",
                              "type": "int",
                              "required": false,
                              "choices": [
                                "1",
                                "2"
                              ],
                              "suboptions": {}
                            },
                            "nssa_only": {
                              "aliases": [],
                              "description": "Limit default advertisement to this NSSA area",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "no_redistribution": {
                          "aliases": [],
                          "description": "No redistribution into this NSSA area",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "no_summary": {
                          "aliases": [],
                          "description": "Do not send summary LSA into NSSA",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Enable a NSSA area",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "translate": {
                          "aliases": [],
                          "description": "Translate LSA\nAlways translate LSAs on this ABR\nSuppress forwarding address in translated LSAs",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "always",
                            "suppress-fa"
                          ],
                          "suboptions": {}
                        }
                      }
                    },
                    "stub": {
                      "aliases": [],
                      "description": "Specify a stub area\nBackbone can not be configured as stub area",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "no_summary": {
                          "aliases": [],
                          "description": "Do not send summary LSA into stub area",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Enable a stub area",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "authentication": {
                  "aliases": [],
                  "description": "Authentication parameter mode\nDeployment mode of operation",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "auto_cost": {
                  "aliases": [],
                  "description": "Calculate OSPF interface cost according to bandwidth",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "reference_bandwidth": {
                      "aliases": [],
                      "description": "Use reference bandwidth method to assign OSPF cost\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Enable OSPF auto-cost",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bfd": {
                  "aliases": [],
                  "description": "BFD configuration commands\nEnable BFD on all interfaces",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "compatible": {
                  "aliases": [],
                  "description": "OSPFv3 router compatibility list",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "rfc1583": {
                      "aliases": [],
                      "description": "compatible with RFC 1583",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "rfc1587": {
                      "aliases": [],
                      "description": "compatible with RFC 1587",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "rfc5243": {
                      "aliases": [],
                      "description": "supports DBD exchange optimization",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "event_log": {
                  "aliases": [],
                  "description": "Event Logging",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "enable": {
                      "aliases": [],
                      "description": "Enable event Logging",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "one_shot": {
                      "aliases": [],
                      "description": "Disable Logging When Log Buffer Becomes Full",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "pause": {
                      "aliases": [],
                      "description": "Pause Event Logging",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "size": {
                      "aliases": [],
                      "description": "Maximum Number of Events Stored in the Event Log\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "graceful_restart": {
                  "aliases": [],
                  "description": "Graceful-restart options for helper support",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disable": {
                      "aliases": [],
                      "description": "disable helper support",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "strict_lsa_checking": {
                      "aliases": [],
                      "description": "enable helper strict LSA checking",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "help": {
                  "aliases": [],
                  "description": "Description of the interactive help system",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "interface_id": {
                  "aliases": [],
                  "description": "Source of the interface ID\nSNMP MIB ifIndex",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "limit": {
                  "aliases": [],
                  "description": "Limit a specific OSPF feature and LS update, DBD, and LS request retransmissions",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "dc": {
                      "aliases": [],
                      "description": "Demand circuit retransmissions",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Disable the feature",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "number": {
                          "aliases": [],
                          "description": "The maximum number of retransmissions",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "non_dc": {
                      "aliases": [],
                      "description": "Non-demand-circuit retransmissions",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "disable": {
                          "aliases": [],
                          "description": "Disable the feature",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "number": {
                          "aliases": [],
                          "description": "The maximum number of retransmissions",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "local_rib_criteria": {
                  "aliases": [],
                  "description": "Enable or disable usage of local RIB as route criteria",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "enable": {
                      "aliases": [],
                      "description": "Enable usage of local RIB as route criteria",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "forwarding_address": {
                      "aliases": [],
                      "description": "Local RIB used to validate external/NSSA forwarding addresses",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "inter_area_summary": {
                      "aliases": [],
                      "description": "Local RIB used as criteria for inter-area summaries",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "nssa_translation": {
                      "aliases": [],
                      "description": "Local RIB used as criteria for NSSA translation",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "log_adjacency_changes": {
                  "aliases": [],
                  "description": "Log changes in adjacency state",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "detail": {
                      "aliases": [],
                      "description": "Log all state changes",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Log changes in adjacency state",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "manet": {
                  "aliases": [],
                  "description": "Specify MANET OSPF parameters",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "cache": {
                      "aliases": [],
                      "description": "Specify MANET cache sizes",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "acknowledgement": {
                          "aliases": [],
                          "description": "Specify MANET acknowledgement cache size",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "redundancy": {
                          "aliases": [],
                          "description": "Specify MANET LSA cache size",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "hello": {
                      "aliases": [],
                      "description": "Unicast Hellos rather than multicast\nUnicast Hello requests and responses rather than multicast",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "peering": {
                      "aliases": [],
                      "description": "MANET OSPF Smart Peering",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "per_interface": {
                          "aliases": [],
                          "description": "Select peers per interface rather than per node",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "redundancy": {
                          "aliases": [],
                          "description": "Redundant paths\nNumber of redundant OSPF paths",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Enable selective peering",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "willingness": {
                      "aliases": [],
                      "description": "Specify and Relay willingness value",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "max_lsa": {
                  "aliases": [],
                  "description": "Maximum number of non self-generated LSAs to accept",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "ignore_count": {
                      "aliases": [],
                      "description": "Maximum number of times adjacencies can be suppressed\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "ignore_time": {
                      "aliases": [],
                      "description": "Number of minutes during which all adjacencies are suppressed\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "number": {
                      "aliases": [],
                      "description": "Maximum number of non self-generated LSAs to accept\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "reset_time": {
                      "aliases": [],
                      "description": "Number of minutes after which ignore-count is reset to zero\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "threshold_value": {
                      "aliases": [],
                      "description": "Threshold value (%) at which to generate a warning msg\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "warning_only": {
                      "aliases": [],
                      "description": "Only give a warning message when limit is exceeded",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "max_metric": {
                  "aliases": [],
                  "description": "Set maximum metric",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "external_lsa": {
                      "aliases": [],
                      "description": "Override external-lsa metric with max-metric value\nOverriding metric in external-LSAs\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "include_stub": {
                      "aliases": [],
                      "description": "Set maximum metric for stub links in router-LSAs",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "on_startup": {
                      "aliases": [],
                      "description": "Set maximum metric temporarily after reboot",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "time": {
                          "aliases": [],
                          "description": "Time, in seconds, router-LSAs are originated with max-metric\nNote, please refer vendor documentation for respective valid range",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "wait_for_bgp": {
                          "aliases": [],
                          "description": "Let BGP decide when to originate router-LSA with normal metric",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "router_lsa": {
                      "aliases": [],
                      "description": "Maximum metric in self-originated router-LSAs",
                      "type": "bool",
                      "required": true,
                      "suboptions": {}
                    },
                    "summary_lsa": {
                      "aliases": [],
                      "description": "Override summary-lsa metric with max-metric value\nNote, please refer vendor documentation for respective valid range",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "passive_interface": {
                  "aliases": [],
                  "description": "Suppress routing updates on an interface",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "prefix_suppression": {
                  "aliases": [],
                  "description": "Enable prefix suppression",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "process_id": {
                  "aliases": [],
                  "description": "Process ID",
                  "type": "int",
                  "required": true,
                  "suboptions": {}
                },
                "queue_depth": {
                  "aliases": [],
                  "description": "Hello/Router process queue depth",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "hello": {
                      "aliases": [],
                      "description": "OSPF Hello process queue depth",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "max_packets": {
                          "aliases": [],
                          "description": "maximum number of packets in the queue",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "unlimited": {
                          "aliases": [],
                          "description": "Unlimited queue depth",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "router_id": {
                  "aliases": [],
                  "description": "Router-id address for this OSPF process\nOSPF router-id in IP address format (A.B.C.D)",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "shutdown": {
                  "aliases": [],
                  "description": "Shutdown the router process",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "timers": {
                  "aliases": [],
                  "description": "Adjust routing timers",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "lsa": {
                      "aliases": [],
                      "description": "OSPF LSA timers, arrival timer\nThe minimum interval in milliseconds between accepting the same LSA\nNote, refer vendor documentation for respective valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "manet": {
                      "aliases": [],
                      "description": "OSPF MANET timers",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "cache": {
                          "aliases": [],
                          "description": "Specify MANET cache sizes",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "acknowledgement": {
                              "aliases": [],
                              "description": "Specify MANET acknowledgement cache size",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "redundancy": {
                              "aliases": [],
                              "description": "Specify MANET LSA cache size",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "hello": {
                          "aliases": [],
                          "description": "Unicast Hellos rather than multicast\nUnicast Hello requests and responses rather than multicast",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "peering": {
                          "aliases": [],
                          "description": "MANET OSPF Smart Peering",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "per_interface": {
                              "aliases": [],
                              "description": "Select peers per interface rather than per node",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "redundancy": {
                              "aliases": [],
                              "description": "Redundant paths\nNumber of redundant OSPF paths",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Enable selective peering",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "willingness": {
                          "aliases": [],
                          "description": "Specify and Relay willingness value",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "pacing": {
                      "aliases": [],
                      "description": "OSPF pacing timers",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "flood": {
                          "aliases": [],
                          "description": "OSPF flood pacing timer\nThe minimum interval in msec to pace limit flooding on interface\nNote, refer vendor documentation for respective valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "lsa_group": {
                          "aliases": [],
                          "description": "OSPF LSA group pacing timer\nInterval in sec between group of LSA being refreshed or maxaged\nNote, refer vendor documentation for respective valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "retransmission": {
                          "aliases": [],
                          "description": "OSPF retransmission pacing timer\nThe minimum interval in msec between neighbor retransmissions\nNote, refer vendor documentation for respective valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "throttle": {
                      "aliases": [],
                      "description": "OSPF throttle timers",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "lsa": {
                          "aliases": [],
                          "description": "OSPF LSA throttle timers",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "first_delay": {
                              "aliases": [],
                              "description": "Delay to generate first occurrence of LSA in milliseconds\nNote, refer vendor documentation for respective valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "max_delay": {
                              "aliases": [],
                              "description": "Maximum delay between originating the same LSA in milliseconds\nNote, refer vendor documentation for respective valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "min_delay": {
                              "aliases": [],
                              "description": "Minimum delay between originating the same LSA in milliseconds\nNote, refer vendor documentation for respective valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "spf": {
                          "aliases": [],
                          "description": "OSPF SPF throttle timers - Delay between receiving a change to SPF calculation in milliseconds - Note, refer vendor documentation for respective valid values",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "between_delay": {
                              "aliases": [],
                              "description": "Delay between first and second SPF calculation in milliseconds\nNote, refer vendor documentation for respective valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "max_delay": {
                              "aliases": [],
                              "description": "Maximum wait time in milliseconds for SPF calculations\nNote, refer vendor documentation for respective valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "receive_delay": {
                              "aliases": [],
                              "description": "Delay between receiving a change to SPF calculation in milliseconds\nNote, refer vendor documentation for respective valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(sh running-config | section ^router ospfv3).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(show running-config | include ip route|ipv6 route) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "parsed",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "OSPFv3 resource module",
      "version_added": "1.1.0"
    },
    "examples": "\n\n# Using deleted\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^router ospfv3\n# router ospfv3 1\n#  max-metric router-lsa on-startup 110\n#  area 10 nssa default-information-originate metric 10\n#  !\n#  address-family ipv4 unicast vrf blue\n#   adjacency stagger 50 50\n#   area 25 nssa default-information-originate metric 25 nssa-only\n#  exit-address-family\n# router ospfv3 200\n#  max-metric router-lsa on-startup 100\n#  auto-cost reference-bandwidth 4\n#  !\n#  address-family ipv4 unicast\n#   adjacency stagger 200 200\n#  exit-address-family\n\n- name: Delete provided OSPF V3 processes\n  cisco.ios.ios_ospfv3:\n    config:\n      processes:\n      - process_id: 1\n    state: deleted\n\n# Commands Fired:\n# ---------------\n#\n# \"commands\": [\n#        \"no router ospfv3 1\"\n#    ]\n\n# After state:\n# -------------\n# router-ios#sh running-config | section ^router ospfv3\n# router ospfv3 200\n#  max-metric router-lsa on-startup 100\n#  auto-cost reference-bandwidth 4\n#  !\n#  address-family ipv4 unicast\n#   adjacency stagger 200 200\n#  exit-address-family\n\n# Using deleted without any config passed (NOTE: This will delete all OSPFV3 configuration from device)\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^router ospfv3\n# router ospfv3 1\n#  max-metric router-lsa on-startup 110\n#  area 10 nssa default-information-originate metric 10\n#  !\n#  address-family ipv4 unicast vrf blue\n#   adjacency stagger 50 50\n#   area 25 nssa default-information-originate metric 25 nssa-only\n#  exit-address-family\n# router ospfv3 200\n#  max-metric router-lsa on-startup 100\n#  auto-cost reference-bandwidth 4\n#  !\n#  address-family ipv4 unicast\n#   adjacency stagger 200 200\n#  exit-address-family\n\n- name: Delete all OSPF processes\n  cisco.ios.ios_ospfv3:\n    state: deleted\n\n# Commands Fired:\n# ---------------\n#\n# \"commands\": [\n#        \"no router ospfv3 200\",\n#        \"no router ospfv3 1\"\n#    ]\n\n# After state:\n# -------------\n# router-ios#sh running-config | section ^router ospfv3\n# router-ios#\n\n# Using merged\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^router ospfv3\n# router-ios#\n\n- name: Merge provided OSPFV3 configuration\n  cisco.ios.ios_ospfv3:\n    config:\n      processes:\n      - process_id: 1\n        max_metric:\n          router_lsa: true\n          on_startup:\n            time: 110\n        address_family:\n          - afi: ipv4\n            unicast: true\n            vrf: blue\n            adjacency:\n              min_adjacency: 50\n              max_adjacency: 50\n            areas:\n              - area_id: 25\n                nssa:\n                  default_information_originate:\n                    metric: 25\n                    nssa_only: true\n        areas:\n          - area_id: \"10\"\n            nssa:\n              default_information_originate:\n                metric: 10\n        timers:\n          throttle:\n            lsa:\n              first_delay: 12\n              min_delay: 14\n              max_delay: 16\n      - process_id: 200\n        address_family:\n          - afi: ipv4\n            unicast: true\n            adjacency:\n              min_adjacency: 200\n              max_adjacency: 200\n        max_metric:\n          router_lsa: true\n          on_startup:\n            time: 100\n        auto_cost:\n          reference_bandwidth: 4\n    state: merged\n\n# Commands Fired:\n# ---------------\n#\n#  \"commands\": [\n#         \"router ospfv3 1\",\n#         \"max-metric router-lsa on-startup 110\",\n#         \"area 10 nssa default-information-originate metric 10\",\n#         \"address-family ipv4 unicast vrf blue\",\n#         \"adjacency stagger 50 50\",\n#         \"area 25 nssa default-information-originate metric 25 nssa-only\",\n#         \"exit-address-family\",\n#         \"router ospfv3 200\",\n#         \"auto-cost reference-bandwidth 4\",\n#         \"max-metric router-lsa on-startup 100\",\n#         \"address-family ipv4 unicast\",\n#         \"adjacency stagger 200 200\",\n#         \"exit-address-family\"\n#     ]\n\n# After state:\n# -------------\n#\n# router-ios#sh running-config | section ^router ospfv3\n# router ospfv3 1\n#  max-metric router-lsa on-startup 110\n#  area 10 nssa default-information-originate metric 10\n#  !\n#  address-family ipv4 unicast vrf blue\n#   adjacency stagger 50 50\n#   area 25 nssa default-information-originate metric 25 nssa-only\n#  exit-address-family\n# router ospfv3 200\n#  max-metric router-lsa on-startup 100\n#  auto-cost reference-bandwidth 4\n#  !\n#  address-family ipv4 unicast\n#   adjacency stagger 200 200\n#  exit-address-family\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# router ospfv3 1\n#  max-metric router-lsa on-startup 110\n#  area 10 nssa default-information-originate metric 10\n#  !\n#  address-family ipv4 unicast vrf blue\n#   adjacency stagger 50 50\n#   area 25 nssa default-information-originate metric 25 nssa-only\n#  exit-address-family\n# router ospfv3 200\n#  max-metric router-lsa on-startup 100\n#  auto-cost reference-bandwidth 4\n#  !\n#  address-family ipv4 unicast\n#   adjacency stagger 200 200\n#  exit-address-family\n\n- name: Override provided OSPFV3 configuration\n  cisco.ios.ios_ospfv3:\n    config:\n      processes:\n        - process_id: 200\n          max_metric:\n            router_lsa: true\n            on_startup:\n              time: 200\n          address_family:\n            - afi: ipv4\n              unicast: true\n              adjacency:\n                min_adjacency: 50\n                max_adjacency: 50\n              areas:\n                - area_id: 200\n                  nssa:\n                    default_information_originate:\n                      metric: 200\n                      nssa_only: true\n          areas:\n            - area_id: \"10\"\n              nssa:\n                default_information_originate:\n                  metric: 10\n    state: overridden\n\n# Commands Fired:\n# ---------------\n#\n# \"commands\": [\n#         \"no router ospfv3 1\",\n#         \"router ospfv3 200\",\n#         \"no auto-cost reference-bandwidth 4\",\n#         \"max-metric router-lsa on-startup 200\",\n#         \"area 10 nssa default-information-originate metric 10\",\n#         \"address-family ipv4 unicast\",\n#         \"adjacency stagger 50 50\",\n#         \"area 200 nssa default-information-originate metric 200 nssa-only\",\n#         \"exit-address-family\"\n#     ]\n\n# After state:\n# -------------\n#\n# router-ios#sh running-config | section ^router ospfv3\n# router ospfv3 200\n#  max-metric router-lsa on-startup 200\n#  area 10 nssa default-information-originate metric 10\n#  !\n#  address-family ipv4 unicast\n#   adjacency stagger 50 50\n#   area 200 nssa default-information-originate metric 200 nssa-only\n#  exit-address-family\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^router ospfv3\n# router ospfv3 1\n#  max-metric router-lsa on-startup 110\n#  area 10 nssa default-information-originate metric 10\n#  !\n#  address-family ipv4 unicast vrf blue\n#   adjacency stagger 50 50\n#   area 25 nssa default-information-originate metric 25 nssa-only\n#  exit-address-family\n# router ospfv3 200\n#  max-metric router-lsa on-startup 100\n#  auto-cost reference-bandwidth 4\n#  !\n#  address-family ipv4 unicast\n#   adjacency stagger 200 200\n#  exit-address-family\n\n- name: Replaced provided OSPFV3 configuration\n  cisco.ios.ios_ospfv3:\n    config:\n      processes:\n        - process_id: 200\n          max_metric:\n            router_lsa: true\n            on_startup:\n              time: 200\n          address_family:\n            - afi: ipv4\n              unicast: true\n              adjacency:\n                min_adjacency: 50\n                max_adjacency: 50\n              areas:\n                - area_id: 200\n                  nssa:\n                    default_information_originate:\n                      metric: 200\n                      nssa_only: true\n          areas:\n            - area_id: \"10\"\n              nssa:\n                default_information_originate:\n                  metric: 10\n    state: replaced\n\n# Commands Fired:\n# ---------------\n# \"commands\": [\n#         \"router ospfv3 200\",\n#         \"no auto-cost reference-bandwidth 4\",\n#         \"max-metric router-lsa on-startup 200\",\n#         \"area 10 nssa default-information-originate metric 10\",\n#         \"address-family ipv4 unicast\",\n#         \"adjacency stagger 50 50\",\n#         \"area 200 nssa default-information-originate metric 200 nssa-only\",\n#         \"exit-address-family\"\n#     ]\n\n# After state:\n# -------------\n# router-ios#sh running-config | section ^router ospfv3\n# router ospfv3 1\n#  max-metric router-lsa on-startup 110\n#  area 10 nssa default-information-originate metric 10\n#  !\n#  address-family ipv4 unicast vrf blue\n#   adjacency stagger 50 50\n#   area 25 nssa default-information-originate metric 25 nssa-only\n#  exit-address-family\n# router ospfv3 200\n#  max-metric router-lsa on-startup 200\n#  area 10 nssa default-information-originate metric 10\n#  !\n#  address-family ipv4 unicast\n#   adjacency stagger 50 50\n#   area 200 nssa default-information-originate metric 200 nssa-only\n#  exit-address-family\n\n# Using Gathered\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^router ospfv3\n# router ospfv3 1\n#  max-metric router-lsa on-startup 110\n#  area 10 nssa default-information-originate metric 10\n#  !\n#  address-family ipv4 unicast vrf blue\n#   adjacency stagger 50 50\n#   area 25 nssa default-information-originate metric 25 nssa-only\n#  exit-address-family\n# router ospfv3 200\n#  max-metric router-lsa on-startup 100\n#  auto-cost reference-bandwidth 4\n#  !\n#  address-family ipv4 unicast\n#   adjacency stagger 200 200\n#  exit-address-family\n\n- name: Gather OSPFV3 provided configurations\n  cisco.ios.ios_ospfv3:\n    config:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"gathered\": {\n#         \"processes\": [\n#             {\n#                 \"address_family\": [\n#                     {\n#                         \"adjacency\": {\n#                             \"max_adjacency\": 50,\n#                             \"min_adjacency\": 50\n#                         },\n#                         \"afi\": \"ipv4\",\n#                         \"areas\": [\n#                             {\n#                                 \"area_id\": \"25\",\n#                                 \"nssa\": {\n#                                     \"default_information_originate\": {\n#                                         \"metric\": 25,\n#                                         \"nssa_only\": true\n#                                     }\n#                                 }\n#                             }\n#                         ],\n#                         \"unicast\": true,\n#                         \"vrf\": \"blue\"\n#                     }\n#                 ],\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"10\",\n#                         \"nssa\": {\n#                             \"default_information_originate\": {\n#                                 \"metric\": 10\n#                             }\n#                         }\n#                     }\n#                 ],\n#                 \"max_metric\": {\n#                     \"on_startup\": {\n#                         \"time\": 110\n#                     },\n#                     \"router_lsa\": true\n#                 },\n#                 \"process_id\": 1\n#             },\n#             {\n#                 \"address_family\": [\n#                     {\n#                         \"adjacency\": {\n#                             \"max_adjacency\": 200,\n#                             \"min_adjacency\": 200\n#                         },\n#                         \"afi\": \"ipv4\",\n#                         \"unicast\": true\n#                     }\n#                 ],\n#                 \"auto_cost\": {\n#                     \"reference_bandwidth\": 4\n#                 },\n#                 \"max_metric\": {\n#                     \"on_startup\": {\n#                         \"time\": 100\n#                     },\n#                     \"router_lsa\": true\n#                 },\n#                 \"process_id\": 200\n#             }\n#         ]\n#     }\n\n# After state:\n# ------------\n#\n# router-ios#sh running-config | section ^router ospfv3\n# router ospfv3 1\n#  max-metric router-lsa on-startup 110\n#  area 10 nssa default-information-originate metric 10\n#  !\n#  address-family ipv4 unicast vrf blue\n#   adjacency stagger 50 50\n#   area 25 nssa default-information-originate metric 25 nssa-only\n#  exit-address-family\n# router ospfv3 200\n#  max-metric router-lsa on-startup 100\n#  auto-cost reference-bandwidth 4\n#  !\n#  address-family ipv4 unicast\n#   adjacency stagger 200 200\n#  exit-address-family\n\n# Using Rendered\n\n- name: Render the commands for provided  configuration\n  cisco.ios.ios_ospfv3:\n    config:\n      processes:\n      - process_id: 1\n        max_metric:\n          router_lsa: true\n          on_startup:\n            time: 110\n        address_family:\n          - afi: ipv4\n            unicast: true\n            vrf: blue\n            adjacency:\n              min_adjacency: 50\n              max_adjacency: 50\n            areas:\n              - area_id: 25\n                nssa:\n                  default_information_originate:\n                    metric: 25\n                    nssa_only: true\n        areas:\n          - area_id: \"10\"\n            nssa:\n              default_information_originate:\n                metric: 10\n        timers:\n          throttle:\n            lsa:\n              first_delay: 12\n              min_delay: 14\n              max_delay: 16\n      - process_id: 200\n        address_family:\n          - afi: ipv4\n            unicast: true\n            adjacency:\n              min_adjacency: 200\n              max_adjacency: 200\n        max_metric:\n          router_lsa: true\n          on_startup:\n            time: 100\n        auto_cost:\n          reference_bandwidth: 4\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"rendered\": [\n#         \"router ospfv3 1\",\n#         \"max-metric router-lsa on-startup 110\",\n#         \"area 10 nssa default-information-originate metric 10\",\n#         \"address-family ipv4 unicast vrf blue\",\n#         \"adjacency stagger 50 50\",\n#         \"area 25 nssa default-information-originate metric 25 nssa-only\",\n#         \"exit-address-family\",\n#         \"router ospfv3 200\",\n#         \"auto-cost reference-bandwidth 4\",\n#         \"max-metric router-lsa on-startup 100\",\n#         \"address-family ipv4 unicast\",\n#         \"adjacency stagger 200 200\",\n#         \"exit-address-family\"\n#     ]\n\n# Using Parsed\n\n# File: parsed.cfg\n# ----------------\n#\n# router ospfv3 1\n#  max-metric router-lsa on-startup 110\n#  area 10 nssa default-information-originate metric 10\n#  !\n#  address-family ipv4 unicast vrf blue\n#   adjacency stagger 50 50\n#   area 25 nssa default-information-originate metric 25 nssa-only\n#  exit-address-family\n# router ospfv3 200\n#  max-metric router-lsa on-startup 100\n#  auto-cost reference-bandwidth 4\n#  !\n#  address-family ipv4 unicast\n#   adjacency stagger 200 200\n#  exit-address-family\n\n- name: Parse the provided configuration with the existing running configuration\n  cisco.ios.ios_ospfv3:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n#\n# \"parsed\": {\n#         \"processes\": [\n#             {\n#                 \"address_family\": [\n#                     {\n#                         \"adjacency\": {\n#                             \"max_adjacency\": 50,\n#                             \"min_adjacency\": 50\n#                         },\n#                         \"afi\": \"ipv4\",\n#                         \"areas\": [\n#                             {\n#                                 \"area_id\": \"25\",\n#                                 \"nssa\": {\n#                                     \"default_information_originate\": {\n#                                         \"metric\": 25,\n#                                         \"nssa_only\": true\n#                                     }\n#                                 }\n#                             }\n#                         ],\n#                         \"unicast\": true,\n#                         \"vrf\": \"blue\"\n#                     }\n#                 ],\n#                 \"areas\": [\n#                     {\n#                         \"area_id\": \"10\",\n#                         \"nssa\": {\n#                             \"default_information_originate\": {\n#                                 \"metric\": 10\n#                             }\n#                         }\n#                     }\n#                 ],\n#                 \"max_metric\": {\n#                     \"on_startup\": {\n#                         \"time\": 110\n#                     },\n#                     \"router_lsa\": true\n#                 },\n#                 \"process_id\": 1\n#             }\n#         ]\n#     }\n\n"
  },
  "cisco.ios.ios_ping": {
    "doc": {
      "description": "Tests reachability using ping from switch to a remote destination.\nFor a general purpose network module, see the L(net_ping,https://docs.ansible.com/ansible/latest/collections/ansible/netcommon/net_ping_module.html) module.\nFor Windows targets, use the L(win_ping,https://docs.ansible.com/ansible/latest/collections/ansible/windows/win_ping_module.html) module instead.\nFor targets running Python, use the L(ping,https://docs.ansible.com/ansible/latest/collections/ansible/builtin/ping_module.html) module instead.",
      "has_action": true,
      "notes": "For a general purpose network module, see the L(net_ping,https://docs.ansible.com/ansible/latest/collections/ansible/netcommon/net_ping_module.html) module.\nFor Windows targets, use the L(win_ping,https://docs.ansible.com/ansible/latest/collections/ansible/windows/win_ping_module.html) module instead.\nFor targets running Python, use the L(ping,https://docs.ansible.com/ansible/latest/collections/ansible/builtin/ping_module.html) module instead.\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "count": {
          "aliases": [],
          "description": "Number of packets to send.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "dest": {
          "aliases": [],
          "description": "The IP Address or hostname (resolvable by switch) of the remote node.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "df_bit": {
          "aliases": [],
          "description": "Set the DF bit.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "size": {
          "aliases": [],
          "description": "Size of packets to send.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "source": {
          "aliases": [],
          "description": "The source IP Address.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Determines if the expected result is success or fail.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present"
          ],
          "suboptions": {}
        },
        "vrf": {
          "aliases": [],
          "description": "The VRF to use for forwarding.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Tests reachability using ping from Cisco IOS network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Test reachability to 10.10.10.10 using default vrf\n  cisco.ios.ios_ping:\n    dest: 10.10.10.10\n\n- name: Test reachability to 10.20.20.20 using prod vrf\n  cisco.ios.ios_ping:\n    dest: 10.20.20.20\n    vrf: prod\n\n- name: Test unreachability to 10.30.30.30 using default vrf\n  cisco.ios.ios_ping:\n    dest: 10.30.30.30\n    state: absent\n\n- name: Test reachability to 10.40.40.40 using prod vrf and setting count and source\n  cisco.ios.ios_ping:\n    dest: 10.40.40.40\n    source: loopback0\n    vrf: prod\n    count: 20\n\n- name: Test reachability to 10.50.50.50 using df-bit and size\n  cisco.ios.ios_ping:\n    dest: 10.50.50.50\n    df_bit: true\n    size: 1400\n"
  },
  "cisco.ios.ios_prefix_lists": {
    "doc": {
      "description": "This module configures and manages the attributes of prefix list on Cisco IOS.",
      "has_action": true,
      "notes": "Tested against Cisco IOSv Version 15.2 on VIRL\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of configurations for Prefix lists.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "afi": {
              "aliases": [],
              "description": "The Address Family Indicator (AFI) for the  prefix list.",
              "type": "str",
              "required": false,
              "choices": [
                "ipv4",
                "ipv6"
              ],
              "suboptions": {}
            },
            "prefix_lists": {
              "aliases": [],
              "description": "List of Prefix-lists.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "description": {
                  "aliases": [],
                  "description": "Prefix-list specific description",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "entries": {
                  "aliases": [],
                  "description": "Prefix-lists supported params.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "action": {
                      "aliases": [],
                      "description": "Specify packets to be rejected or forwarded",
                      "type": "str",
                      "required": false,
                      "choices": [
                        "deny",
                        "permit"
                      ],
                      "suboptions": {}
                    },
                    "description": {
                      "aliases": [],
                      "description": "Prefix-list specific description\nDescription param at entries level is DEPRECATED\nNew Description is introduced at prefix_lists level, please use the Description param defined at prefix_lists level instead of Description param at entries level, as at this level description option will get removed in a future release.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "ge": {
                      "aliases": [],
                      "description": "Minimum prefix length to be matched",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "le": {
                      "aliases": [],
                      "description": "Maximum prefix length to be matched",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix": {
                      "aliases": [],
                      "description": "IPv4 prefix <network>/<length>, e.g., A.B.C.D/nn\nIPv6 prefix <network>/<length>, e.g., X:X:X:X::X/<0-128>",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "sequence": {
                      "aliases": [],
                      "description": "sequence number of an entry",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "name": {
                  "aliases": [],
                  "description": "Name of a prefix-list",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(sh bgp).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(merged) is the default state which merges the want and have config, but for Prefix-List module as the IOS platform doesn't allow update of Prefix-List over an pre-existing Prefix-List, same way Prefix-Lists resource module will error out for respective scenario and only addition of new Prefix-List over new sequence will be allowed with merge state.\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(sh running-config | section ^ip prefix-list|^ipv6 prefix-list) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "parsed",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Prefix Lists resource module",
      "version_added": "2.2.0"
    },
    "examples": "\n# Using deleted by Name\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^ip prefix-list|^ipv6 prefix-list\n# ip prefix-list 10 description this is test description\n# ip prefix-list 10 seq 5 deny 1.0.0.0/8 le 15\n# ip prefix-list 10 seq 10 deny 35.0.0.0/8 ge 10\n# ip prefix-list 10 seq 15 deny 12.0.0.0/8 ge 15\n# ip prefix-list 10 seq 20 deny 14.0.0.0/8 ge 20 le 21\n# ip prefix-list test description this is test\n# ip prefix-list test seq 50 deny 12.0.0.0/8 ge 15\n# ip prefix-list test_prefix description this is for prefix-list\n# ip prefix-list test_prefix seq 5 deny 35.0.0.0/8 ge 10 le 15\n# ip prefix-list test_prefix seq 10 deny 35.0.0.0/8 ge 20\n# ipv6 prefix-list test_ipv6 description this is ipv6 prefix-list\n# ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80\n\n- name: Delete provided Prefix lists config by Prefix name\n  cisco.ios.ios_prefix_lists:\n    config:\n      - afi: ipv4\n        prefix_lists:\n          - name: 10\n          - name: test_prefix\n    state: deleted\n\n#  Commands Fired:\n#  ---------------\n#\n#  \"commands\": [\n#         \"no ip prefix-list 10\",\n#         \"no ip prefix-list test_prefix\"\n#     ]\n\n# After state:\n# -------------\n# router-ios#sh running-config | section ^ip prefix-list|^ipv6 prefix-list\n# ip prefix-list test description this is test\n# ip prefix-list test seq 50 deny 12.0.0.0/8 ge 15\n# ipv6 prefix-list test_ipv6 description this is ipv6 prefix-list\n# ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80\n\n# Using deleted by AFI\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^ip prefix-list|^ipv6 prefix-list\n# ip prefix-list 10 description this is test description\n# ip prefix-list 10 seq 5 deny 1.0.0.0/8 le 15\n# ip prefix-list 10 seq 10 deny 35.0.0.0/8 ge 10\n# ip prefix-list 10 seq 15 deny 12.0.0.0/8 ge 15\n# ip prefix-list 10 seq 20 deny 14.0.0.0/8 ge 20 le 21\n# ip prefix-list test description this is test\n# ip prefix-list test seq 50 deny 12.0.0.0/8 ge 15\n# ip prefix-list test_prefix description this is for prefix-list\n# ip prefix-list test_prefix seq 5 deny 35.0.0.0/8 ge 10 le 15\n# ip prefix-list test_prefix seq 10 deny 35.0.0.0/8 ge 20\n# ipv6 prefix-list test_ipv6 description this is ipv6 prefix-list\n# ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80\n\n- name: Delete provided Prefix lists config by AFI\n  cisco.ios.ios_prefix_lists:\n    config:\n      - afi: ipv4\n    state: deleted\n\n#  Commands Fired:\n#  ---------------\n#\n#  \"commands\": [\n#         \"no ip prefix-list test\",\n#         \"no ip prefix-list 10\",\n#         \"no ip prefix-list test_prefix\"\n#     ]\n\n# After state:\n# -------------\n# router-ios#sh running-config | section ^ip prefix-list|^ipv6 prefix-list\n# ipv6 prefix-list test_ipv6 description this is ipv6 prefix-list\n# ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80\n\n# Using deleted without any config passed (NOTE: This will delete all Prefix lists configuration from device)\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^ip prefix-list|^ipv6 prefix-list\n# ip prefix-list 10 description this is test description\n# ip prefix-list 10 seq 5 deny 1.0.0.0/8 le 15\n# ip prefix-list 10 seq 10 deny 35.0.0.0/8 ge 10\n# ip prefix-list 10 seq 15 deny 12.0.0.0/8 ge 15\n# ip prefix-list 10 seq 20 deny 14.0.0.0/8 ge 20 le 21\n# ip prefix-list test description this is test\n# ip prefix-list test seq 50 deny 12.0.0.0/8 ge 15\n# ip prefix-list test_prefix description this is for prefix-list\n# ip prefix-list test_prefix seq 5 deny 35.0.0.0/8 ge 10 le 15\n# ip prefix-list test_prefix seq 10 deny 35.0.0.0/8 ge 20\n# ipv6 prefix-list test_ipv6 description this is ipv6 prefix-list\n# ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80\n\n- name: Delete all Prefix lists config\n  cisco.ios.ios_prefix_lists:\n    state: deleted\n\n# Commands Fired:\n# ---------------\n#\n#  \"commands\": [\n#         \"no ip prefix-list test\",\n#         \"no ip prefix-list 10\",\n#         \"no ip prefix-list test_prefix\",\n#         \"no ipv6 prefix-list test_ipv6\"\n#     ]\n\n# After state:\n# -------------\n# router-ios#sh running-config | section ^ip prefix-list|^ipv6 prefix-list\n# router-ios#\n\n# Using merged\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^ip prefix-list|^ipv6 prefix-list\n# ipv6 prefix-list test_ipv6 description this is ipv6\n# ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80\n\n- name: Merge provided Prefix lists configuration\n  cisco.ios.ios_prefix_lists:\n    config:\n      - afi: ipv6\n        prefix_lists:\n          - name: test_ipv6\n            description: this is ipv6 merge test\n            entries:\n              - action: deny\n                prefix: 2001:DB8:0:4::/64\n                ge: 80\n                le: 100\n                sequence: 10\n    state: merged\n\n# After state:\n# -------------\n#\n# Play Execution fails, with error:\n# Cannot update existing sequence 10 of Prefix Lists test_ipv6 with state merged.\n# Please use state replaced or overridden.\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^ip prefix-list|^ipv6 prefix-list\n# ipv6 prefix-list test_ipv6 description this is ipv6\n# ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80\n\n- name: Merge provided Prefix lists configuration\n  cisco.ios.ios_prefix_lists:\n    config:\n      - afi: ipv4\n        prefix_lists:\n          - name: 10\n            description: this is new merge test\n            entries:\n              - action: deny\n                prefix: 1.0.0.0/8\n                le: 15\n                sequence: 5\n              - action: deny\n                prefix: 35.0.0.0/8\n                ge: 10\n                sequence: 10\n              - action: deny\n                prefix: 12.0.0.0/8\n                ge: 15\n                sequence: 15\n              - action: deny\n                prefix: 14.0.0.0/8\n                ge: 20\n                le: 21\n                sequence: 20\n          - name: test\n            description: this is merge test\n            entries:\n              - action: deny\n                prefix: 12.0.0.0/8\n                ge: 15\n                sequence: 50\n          - name: test_prefix\n            description: this is for prefix-list\n            entries:\n              - action: deny\n                prefix: 35.0.0.0/8\n                ge: 10\n                le: 15\n                sequence: 5\n              - action: deny\n                prefix: 35.0.0.0/8\n                ge: 20\n                sequence: 10\n      - afi: ipv6\n        prefix_lists:\n          - name: test_ipv6\n            description: this is ipv6 merge test\n            entries:\n              - action: deny\n                prefix: 2001:DB8:0:4::/64\n                ge: 80\n                le: 100\n                sequence: 20\n    state: merged\n\n#  Commands Fired:\n#  ---------------\n#\n#   \"commands\": [\n#         \"ip prefix-list test description this is merge test\",\n#         \"ip prefix-list test seq 50 deny 12.0.0.0/8 ge 15\",\n#         \"ip prefix-list 10 seq 15 deny 12.0.0.0/8 ge 15\",\n#         \"ip prefix-list 10 seq 10 deny 35.0.0.0/8 ge 10\",\n#         \"ip prefix-list 10 seq 5 deny 1.0.0.0/8 le 15\",\n#         \"ip prefix-list 10 description this is new merge test\",\n#         \"ip prefix-list 10 seq 20 deny 14.0.0.0/8 ge 20 le 21\",\n#         \"ip prefix-list test_prefix seq 10 deny 35.0.0.0/8 ge 20\",\n#         \"ip prefix-list test_prefix seq 5 deny 35.0.0.0/8 ge 10 le 15\",\n#         \"ip prefix-list test_prefix description this is for prefix-list\",\n#         \"ipv6 prefix-list test_ipv6 seq 20 deny 2001:DB8:0:4::/64 ge 80 le 100\",\n#         \"ipv6 prefix-list test_ipv6 description this is ipv6 merge test\"\n#     ]\n\n# After state:\n# -------------\n#\n# router-ios#sh running-config | section ^ip prefix-list|^ipv6 prefix-list\n# ip prefix-list 10 description this is new merge test\n# ip prefix-list 10 seq 5 deny 1.0.0.0/8 le 15\n# ip prefix-list 10 seq 10 deny 35.0.0.0/8 ge 10\n# ip prefix-list 10 seq 15 deny 12.0.0.0/8 ge 15\n# ip prefix-list 10 seq 20 deny 14.0.0.0/8 ge 20 le 21\n# ip prefix-list test description this is merge test\n# ip prefix-list test seq 50 deny 12.0.0.0/8 ge 15\n# ip prefix-list test_prefix description this is for prefix-list\n# ip prefix-list test_prefix seq 5 deny 35.0.0.0/8 ge 10 le 15\n# ip prefix-list test_prefix seq 10 deny 35.0.0.0/8 ge 20\n# ipv6 prefix-list test_ipv6 description this is ipv6 merge test\n# ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80 le 100\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^ip prefix-list|^ipv6 prefix-list\n# ip prefix-list 10 description this is test description\n# ip prefix-list 10 seq 5 deny 1.0.0.0/8 le 15\n# ip prefix-list 10 seq 10 deny 35.0.0.0/8 ge 10\n# ip prefix-list 10 seq 15 deny 12.0.0.0/8 ge 15\n# ip prefix-list 10 seq 20 deny 14.0.0.0/8 ge 20 le 21\n# ip prefix-list test description this is test\n# ip prefix-list test seq 50 deny 12.0.0.0/8 ge 15\n# ip prefix-list test_prefix description this is for prefix-list\n# ip prefix-list test_prefix seq 5 deny 35.0.0.0/8 ge 10 le 15\n# ip prefix-list test_prefix seq 10 deny 35.0.0.0/8 ge 20\n# ipv6 prefix-list test_ipv6 description this is ipv6 prefix-list\n# ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80\n\n- name: Override provided Prefix lists configuration\n  cisco.ios.ios_prefix_lists:\n    config:\n      - afi: ipv4\n        prefix_lists:\n          - name: 10\n            description: this is override test\n            entries:\n              - action: deny\n                prefix: 12.0.0.0/8\n                ge: 15\n                sequence: 15\n              - action: deny\n                prefix: 14.0.0.0/8\n                ge: 20\n                le: 21\n                sequence: 20\n          - name: test_override\n            description: this is override test\n            entries:\n              - action: deny\n                prefix: 35.0.0.0/8\n                ge: 20\n                sequence: 10\n      - afi: ipv6\n        prefix_lists:\n          - name: test_ipv6\n            description: this is ipv6 override test\n            entries:\n              - action: deny\n                prefix: 2001:DB8:0:4::/64\n                ge: 80\n                le: 100\n                sequence: 10\n    state: overridden\n\n# Commands Fired:\n# ---------------\n#\n#  \"commands\": [\n#         \"no ip prefix-list test\",\n#         \"no ip prefix-list test_prefix\",\n#         \"ip prefix-list 10 description this is override test\",\n#         \"no ip prefix-list 10 seq 10 deny 35.0.0.0/8 ge 10\",\n#         \"no ip prefix-list 10 seq 5 deny 1.0.0.0/8 le 15\",\n#         \"ip prefix-list test_override seq 10 deny 35.0.0.0/8 ge 20\",\n#         \"ip prefix-list test_override description this is override test\",\n#         \"no ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80\",\n#         \"ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80 le 100\",\n#         \"ipv6 prefix-list test_ipv6 description this is ipv6 override test\"\n#     ]\n\n# After state:\n# -------------\n#\n# router-ios#sh running-config | section ^ip prefix-list|^ipv6 prefix-list\n# ip prefix-list 10 description this is override test\n# ip prefix-list 10 seq 15 deny 12.0.0.0/8 ge 15\n# ip prefix-list 10 seq 20 deny 14.0.0.0/8 ge 20 le 21\n# ip prefix-list test_override description this is override test\n# ip prefix-list test_override seq 10 deny 35.0.0.0/8 ge 20\n# ipv6 prefix-list test_ipv6 description this is ipv6 override test\n# ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80 le 100\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^ip prefix-list|^ipv6 prefix-list\n# ip prefix-list 10 description this is test description\n# ip prefix-list 10 seq 5 deny 1.0.0.0/8 le 15\n# ip prefix-list 10 seq 10 deny 35.0.0.0/8 ge 10\n# ip prefix-list 10 seq 15 deny 12.0.0.0/8 ge 15\n# ip prefix-list 10 seq 20 deny 14.0.0.0/8 ge 20 le 21\n# ip prefix-list test description this is test\n# ip prefix-list test seq 50 deny 12.0.0.0/8 ge 15\n# ip prefix-list test_prefix description this is for prefix-list\n# ip prefix-list test_prefix seq 5 deny 35.0.0.0/8 ge 10 le 15\n# ip prefix-list test_prefix seq 10 deny 35.0.0.0/8 ge 20\n# ipv6 prefix-list test_ipv6 description this is ipv6 prefix-list\n# ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80\n\n- name: Replaced provided Prefix lists configuration\n  cisco.ios.ios_prefix_lists:\n    config:\n      - afi: ipv4\n        prefix_lists:\n          - name: 10\n            description: this is replace test\n            entries:\n              - action: deny\n                prefix: 12.0.0.0/8\n                ge: 15\n                sequence: 15\n              - action: deny\n                prefix: 14.0.0.0/8\n                ge: 20\n                le: 21\n                sequence: 20\n          - name: test_replace\n            description: this is replace test\n            entries:\n              - action: deny\n                prefix: 35.0.0.0/8\n                ge: 20\n                sequence: 10\n      - afi: ipv6\n        prefix_lists:\n          - name: test_ipv6\n            description: this is ipv6 replace test\n            entries:\n              - action: deny\n                prefix: 2001:DB8:0:4::/64\n                ge: 80\n                le: 100\n                sequence: 10\n    state: replaced\n\n# Commands Fired:\n# ---------------\n#  \"commands\": [\n#         \"ip prefix-list 10 description this is replace test\",\n#         \"no ip prefix-list 10 seq 10 deny 35.0.0.0/8 ge 10\",\n#         \"no ip prefix-list 10 seq 5 deny 1.0.0.0/8 le 15\",\n#         \"ip prefix-list test_replace seq 10 deny 35.0.0.0/8 ge 20\",\n#         \"ip prefix-list test_replace description this is replace test\",\n#         \"no ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80\",\n#         \"ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80 le 100\",\n#         \"ipv6 prefix-list test_ipv6 description this is ipv6 replace test\"\n#     ]\n\n# After state:\n# -------------\n#\n# router-ios#sh running-config | section ^ip prefix-list|^ipv6 prefix-list\n# ip prefix-list 10 description this is replace test\n# ip prefix-list 10 seq 15 deny 12.0.0.0/8 ge 15\n# ip prefix-list 10 seq 20 deny 14.0.0.0/8 ge 20 le 21\n# ip prefix-list test description this is test\n# ip prefix-list test seq 50 deny 12.0.0.0/8 ge 15\n# ip prefix-list test_prefix description this is for prefix-list\n# ip prefix-list test_prefix seq 5 deny 35.0.0.0/8 ge 10 le 15\n# ip prefix-list test_prefix seq 10 deny 35.0.0.0/8 ge 20\n# ip prefix-list test_replace description this is replace test\n# ip prefix-list test_replace seq 10 deny 35.0.0.0/8 ge 20\n# ipv6 prefix-list test_ipv6 description this is ipv6 replace test\n# ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80 le 100\n\n# Using Gathered\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^ip prefix-list|^ipv6 prefix-list\n# ip prefix-list 10 description this is test description\n# ip prefix-list 10 seq 5 deny 1.0.0.0/8 le 15\n# ip prefix-list 10 seq 10 deny 35.0.0.0/8 ge 10\n# ip prefix-list 10 seq 15 deny 12.0.0.0/8 ge 15\n# ip prefix-list 10 seq 20 deny 14.0.0.0/8 ge 20 le 21\n# ip prefix-list test description this is test\n# ip prefix-list test seq 50 deny 12.0.0.0/8 ge 15\n# ip prefix-list test_prefix description this is for prefix-list\n# ip prefix-list test_prefix seq 5 deny 35.0.0.0/8 ge 10 le 15\n# ip prefix-list test_prefix seq 10 deny 35.0.0.0/8 ge 20\n# ipv6 prefix-list test_ipv6 description this is ipv6 prefix-list\n# ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80\n\n- name: Gather Prefix lists provided configurations\n  cisco.ios.ios_prefix_lists:\n    config:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"gathered\": [\n#         {\n#             \"afi\": \"ipv4\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"description\": \"this is test description\"\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"le\": 15,\n#                             \"prefix\": \"1.0.0.0/8\",\n#                             \"sequence\": 5\n#                         },\n#                         {\n#                             \"action\": \"deny\",\n#                             \"ge\": 10,\n#                             \"prefix\": \"35.0.0.0/8\",\n#                             \"sequence\": 10\n#                         },\n#                         {\n#                             \"action\": \"deny\",\n#                             \"ge\": 15,\n#                             \"prefix\": \"12.0.0.0/8\",\n#                             \"sequence\": 15\n#                         },\n#                         {\n#                             \"action\": \"deny\",\n#                             \"ge\": 20,\n#                             \"le\": 21,\n#                             \"prefix\": \"14.0.0.0/8\",\n#                             \"sequence\": 20\n#                         }\n#                     ],\n#                     \"name\": \"10\"\n#                 },\n#                 {\n#                     \"description\": \"this is test\"\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"ge\": 15,\n#                             \"prefix\": \"12.0.0.0/8\",\n#                             \"sequence\": 50\n#                         }\n#                     ],\n#                     \"name\": \"test\"\n#                 },\n#                 {\n#                     \"description\": \"this is for prefix-list\"\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"ge\": 10,\n#                             \"le\": 15,\n#                             \"prefix\": \"35.0.0.0/8\",\n#                             \"sequence\": 5\n#                         },\n#                         {\n#                             \"action\": \"deny\",\n#                             \"ge\": 20,\n#                             \"prefix\": \"35.0.0.0/8\",\n#                             \"sequence\": 10\n#                         }\n#                     ],\n#                     \"name\": \"test_prefix\"\n#                 }\n#             ]\n#         },\n#         {\n#             \"afi\": \"ipv6\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"description\": \"this is ipv6 prefix-list\"\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"ge\": 80,\n#                             \"prefix\": \"2001:DB8:0:4::/64\",\n#                             \"sequence\": 10\n#                         }\n#                     ],\n#                     \"name\": \"test_ipv6\"\n#                 }\n#             ]\n#         }\n#     ]\n\n# After state:\n# ------------\n#\n# router-ios#sh running-config | section ^ip prefix-list|^ipv6 prefix-list\n# ip prefix-list 10 description this is test description\n# ip prefix-list 10 seq 5 deny 1.0.0.0/8 le 15\n# ip prefix-list 10 seq 10 deny 35.0.0.0/8 ge 10\n# ip prefix-list 10 seq 15 deny 12.0.0.0/8 ge 15\n# ip prefix-list 10 seq 20 deny 14.0.0.0/8 ge 20 le 21\n# ip prefix-list test description this is test\n# ip prefix-list test seq 50 deny 12.0.0.0/8 ge 15\n# ip prefix-list test_prefix description this is for prefix-list\n# ip prefix-list test_prefix seq 5 deny 35.0.0.0/8 ge 10 le 15\n# ip prefix-list test_prefix seq 10 deny 35.0.0.0/8 ge 20\n# ipv6 prefix-list test_ipv6 description this is ipv6 prefix-list\n# ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80\n\n# Using Rendered\n\n- name: Render the commands for provided  configuration\n  cisco.ios.ios_prefix_lists:\n    config:\n      - afi: ipv4\n        prefix_lists:\n          - name: 10\n            description: this is new merge test\n            entries:\n              - action: deny\n                prefix: 1.0.0.0/8\n                le: 15\n                sequence: 5\n              - action: deny\n                prefix: 35.0.0.0/8\n                ge: 10\n                sequence: 10\n              - action: deny\n                prefix: 12.0.0.0/8\n                ge: 15\n                sequence: 15\n              - action: deny\n                prefix: 14.0.0.0/8\n                ge: 20\n                le: 21\n                sequence: 20\n          - name: test\n            description: this is merge test\n            entries:\n              - action: deny\n                prefix: 12.0.0.0/8\n                ge: 15\n                sequence: 50\n          - name: test_prefix\n            description: this is for prefix-list\n            entries:\n              - action: deny\n                prefix: 35.0.0.0/8\n                ge: 10\n                le: 15\n                sequence: 5\n              - action: deny\n                prefix: 35.0.0.0/8\n                ge: 20\n                sequence: 10\n      - afi: ipv6\n        prefix_lists:\n          - name: test_ipv6\n            description: this is ipv6 merge test\n            entries:\n              - action: deny\n                prefix: 2001:DB8:0:4::/64\n                ge: 80\n                le: 100\n                sequence: 10\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n#\n#  \"rendered\": [\n#         \"ip prefix-list test description this is test\",\n#         \"ip prefix-list test seq 50 deny 12.0.0.0/8 ge 15\",\n#         \"ip prefix-list 10 seq 15 deny 12.0.0.0/8 ge 15\",\n#         \"ip prefix-list 10 seq 10 deny 35.0.0.0/8 ge 10\",\n#         \"ip prefix-list 10 seq 5 deny 1.0.0.0/8 le 15\",\n#         \"ip prefix-list 10 description this is test description\",\n#         \"ip prefix-list 10 seq 20 deny 14.0.0.0/8 ge 20 le 21\",\n#         \"ip prefix-list test_prefix seq 10 deny 35.0.0.0/8 ge 20\",\n#         \"ip prefix-list test_prefix seq 5 deny 35.0.0.0/8 ge 10 le 15\",\n#         \"ip prefix-list test_prefix description this is for prefix-list\",\n#         \"ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80 l2 100\",\n#         \"ipv6 prefix-list test_ipv6 description this is ipv6 prefix-list\"\n#     ]\n\n# Using Parsed\n\n# File: parsed.cfg\n# ----------------\n#\n# ip prefix-list 10 description this is test description\n# ip prefix-list 10 seq 5 deny 1.0.0.0/8 le 15\n# ip prefix-list 10 seq 10 deny 35.0.0.0/8 ge 10\n# ip prefix-list 10 seq 15 deny 12.0.0.0/8 ge 15\n# ip prefix-list 10 seq 20 deny 14.0.0.0/8 ge 20 le 21\n# ip prefix-list test description this is test\n# ip prefix-list test seq 50 deny 12.0.0.0/8 ge 15\n# ip prefix-list test_prefix description this is for prefix-list\n# ip prefix-list test_prefix seq 5 deny 35.0.0.0/8 ge 10 le 15\n# ip prefix-list test_prefix seq 10 deny 35.0.0.0/8 ge 20\n# ipv6 prefix-list test_ipv6 description this is ipv6 prefix-list\n# ipv6 prefix-list test_ipv6 seq 10 deny 2001:DB8:0:4::/64 ge 80\n\n- name: Parse the provided configuration with the existing running configuration\n  cisco.ios.ios_prefix_lists:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n#\n# \"parsed\": [\n#         {\n#             \"afi\": \"ipv4\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"description\": \"this is test description\"\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"le\": 15,\n#                             \"prefix\": \"1.0.0.0/8\",\n#                             \"sequence\": 5\n#                         },\n#                         {\n#                             \"action\": \"deny\",\n#                             \"ge\": 10,\n#                             \"prefix\": \"35.0.0.0/8\",\n#                             \"sequence\": 10\n#                         },\n#                         {\n#                             \"action\": \"deny\",\n#                             \"ge\": 15,\n#                             \"prefix\": \"12.0.0.0/8\",\n#                             \"sequence\": 15\n#                         },\n#                         {\n#                             \"action\": \"deny\",\n#                             \"ge\": 20,\n#                             \"le\": 21,\n#                             \"prefix\": \"14.0.0.0/8\",\n#                             \"sequence\": 20\n#                         }\n#                     ],\n#                     \"name\": \"10\"\n#                 },\n#                 {\n#                     \"description\": \"this is test\"\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"ge\": 15,\n#                             \"prefix\": \"12.0.0.0/8\",\n#                             \"sequence\": 50\n#                         }\n#                     ],\n#                     \"name\": \"test\"\n#                 },\n#                 {\n#                     \"description\": \"this is for prefix-list\"\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"ge\": 10,\n#                             \"le\": 15,\n#                             \"prefix\": \"35.0.0.0/8\",\n#                             \"sequence\": 5\n#                         },\n#                         {\n#                             \"action\": \"deny\",\n#                             \"ge\": 20,\n#                             \"prefix\": \"35.0.0.0/8\",\n#                             \"sequence\": 10\n#                         }\n#                     ],\n#                     \"name\": \"test_prefix\"\n#                 }\n#             ]\n#         },\n#         {\n#             \"afi\": \"ipv6\",\n#             \"prefix_lists\": [\n#                 {\n#                     \"description\": \"this is ipv6 prefix-list\"\n#                     \"entries\": [\n#                         {\n#                             \"action\": \"deny\",\n#                             \"ge\": 80,\n#                             \"prefix\": \"2001:DB8:0:4::/64\",\n#                             \"sequence\": 10\n#                         }\n#                     ],\n#                     \"name\": \"test_ipv6\"\n#                 }\n#             ]\n#         }\n#     ]\n"
  },
  "cisco.ios.ios_route_maps": {
    "doc": {
      "description": "This module configures and manages the attributes of Route maps on Cisco IOS.",
      "has_action": true,
      "notes": "Tested against Cisco IOSv Version 15.2 on VIRL\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A list of configurations for Route maps.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "entries": {
              "aliases": [],
              "description": "A list of configurations entries for Route maps.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "action": {
                  "aliases": [],
                  "description": "Route map set operations",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "deny",
                    "permit"
                  ],
                  "suboptions": {}
                },
                "continue_entry": {
                  "aliases": [],
                  "description": "Continue on a different entry within the route-map",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "entry_sequence": {
                      "aliases": [],
                      "description": "Route-map entry sequence number\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "set": {
                      "aliases": [],
                      "description": "Set continue",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "description": {
                  "aliases": [],
                  "description": "Route-map comment",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "match": {
                  "aliases": [],
                  "description": "Match values from routing table",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "additional_paths": {
                      "aliases": [],
                      "description": "BGP Add-Path match policie\nBGP Add-Path advertise-set policy",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "all": {
                          "aliases": [],
                          "description": "BGP Add-Path advertise all paths",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "best": {
                          "aliases": [],
                          "description": "BGP Add-Path advertise best n paths (1-3)",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "best_range": {
                          "aliases": [],
                          "description": "BGP Add-Path advertise best paths (range m to n)",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "lower_limit": {
                              "aliases": [],
                              "description": "BGP Add-Path best paths to advertise (lower limit) (1-3)",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "upper_limit": {
                              "aliases": [],
                              "description": "BGP Add-Path best paths to advertise (upper limit) (1-3)",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "group_best": {
                          "aliases": [],
                          "description": "BGP Add-Path advertise group-best path",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "as_path": {
                      "aliases": [],
                      "description": "Match BGP AS path list",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "acls": {
                          "aliases": [],
                          "description": "AS path access-list\nPlease refer vendor documentation for valid values",
                          "type": "list",
                          "required": false,
                          "elements": "int",
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set AS path list",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "clns": {
                      "aliases": [],
                      "description": "CLNS information",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "Match address of route or match packet",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "next_hop": {
                          "aliases": [],
                          "description": "Match next-hop address of route",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "route_source": {
                          "aliases": [],
                          "description": "Match advertising source address of route",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "community": {
                      "aliases": [],
                      "description": "Match BGP community list",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "exact_match": {
                          "aliases": [],
                          "description": "Do exact matching of communities",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "Community-list number/Community-list name\nPlease refer vendor documentation for valid values",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        }
                      }
                    },
                    "extcommunity": {
                      "aliases": [],
                      "description": "Match BGP/VPN extended community list\nExtended community-list number\nPlease refer vendor documentation for valid values",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "interfaces": {
                      "aliases": [],
                      "description": "Match first hop interface of route",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "ip": {
                      "aliases": [],
                      "description": "IP specific information",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "Match address of route or match packet",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "acls": {
                              "aliases": [],
                              "description": "Match entries of acl\nIP acl name/number\nPlease refer vendor documentation for valid values",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "prefix_lists": {
                              "aliases": [],
                              "description": "Match entries of prefix-lists\nIP prefix-list name",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            }
                          }
                        },
                        "flowspec": {
                          "aliases": [],
                          "description": "Match src/dest prefix component of flowspec prefix",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "acls": {
                              "aliases": [],
                              "description": "Match entries of acl\nIP acl name/number\nPlease refer vendor documentation for valid values",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "dest_pfx": {
                              "aliases": [],
                              "description": "Match dest prefix component of flowspec prefix",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "prefix_lists": {
                              "aliases": [],
                              "description": "Match entries of prefix-lists\nIP prefix-list name",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "src_pfx": {
                              "aliases": [],
                              "description": "Match source prefix component of flowspec prefix",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "next_hop": {
                          "aliases": [],
                          "description": "Match next-hop address of route",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "acls": {
                              "aliases": [],
                              "description": "Match entries of acl\nIP acl name/number\nPlease refer vendor documentation for valid values",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "prefix_lists": {
                              "aliases": [],
                              "description": "Match entries of prefix-lists\nIP prefix-list name",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set next-hop address",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "redistribution_source": {
                          "aliases": [],
                          "description": "route redistribution source (EIGRP only)",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "acls": {
                              "aliases": [],
                              "description": "Match entries of acl\nIP acl name/number\nPlease refer vendor documentation for valid values",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "prefix_lists": {
                              "aliases": [],
                              "description": "Match entries of prefix-lists\nIP prefix-list name",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set redistribution-source",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "route_source": {
                          "aliases": [],
                          "description": "Match advertising source address of route",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "acls": {
                              "aliases": [],
                              "description": "Match entries of acl\nIP acl name/number\nPlease refer vendor documentation for valid values",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "prefix_lists": {
                              "aliases": [],
                              "description": "Match entries of prefix-lists\nIP prefix-list name",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "redistribution_source": {
                              "aliases": [],
                              "description": "route redistribution source (EIGRP only)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Set redistribution-source",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "ipv6": {
                      "aliases": [],
                      "description": "IPv6 specific information",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "Match address of route or match packet",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "acl": {
                              "aliases": [],
                              "description": "IPv6 access-list name",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "prefix_list": {
                              "aliases": [],
                              "description": "IPv6 prefix-list name",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "flowspec": {
                          "aliases": [],
                          "description": "Match next-hop address of route",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "acl": {
                              "aliases": [],
                              "description": "IPv6 access-list name",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "dest_pfx": {
                              "aliases": [],
                              "description": "Match dest prefix component of flowspec prefix",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "prefix_list": {
                              "aliases": [],
                              "description": "IPv6 prefix-list name",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "src_pfx": {
                              "aliases": [],
                              "description": "Match source prefix component of flowspec prefix",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "next_hop": {
                          "aliases": [],
                          "description": "Match next-hop address of route",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "acl": {
                              "aliases": [],
                              "description": "IPv6 access-list name",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "prefix_list": {
                              "aliases": [],
                              "description": "IPv6 prefix-list name",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "route_source": {
                          "aliases": [],
                          "description": "Match advertising source address of route",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "acl": {
                              "aliases": [],
                              "description": "IPv6 access-list name",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "prefix_list": {
                              "aliases": [],
                              "description": "IPv6 prefix-list name",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "length": {
                      "aliases": [],
                      "description": "Packet length",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "maximum": {
                          "aliases": [],
                          "description": "Maximum packet length\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "minimum": {
                          "aliases": [],
                          "description": "Minimum packet length\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "local_preference": {
                      "aliases": [],
                      "description": "Local preference for route",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "set": {
                          "aliases": [],
                          "description": "Set the Local preference for route",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "value": {
                          "aliases": [],
                          "description": "Local preference value\nPlease refer vendor documentation for valid values",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        }
                      }
                    },
                    "mdt_group": {
                      "aliases": [],
                      "description": "Match routes corresponding to MDT group",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "acls": {
                          "aliases": [],
                          "description": "IP access-list number/IP standard access-list name\nPlease refer vendor documentation for valid values",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "set": {
                          "aliases": [],
                          "description": "Set and Match routes corresponding to MDT group",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "metric": {
                      "aliases": [],
                      "description": "Match metric of route",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "deviation": {
                          "aliases": [],
                          "description": "Deviation option to match metric in a range",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "deviation_value": {
                          "aliases": [],
                          "description": "deviation value, 500 +- 10 creates the range 490 - 510\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "external": {
                          "aliases": [],
                          "description": "Match route using external protocol metric",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "value": {
                          "aliases": [],
                          "description": "Metric value\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "mpls_label": {
                      "aliases": [],
                      "description": "Match routes which have MPLS labels",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "policy_lists": {
                      "aliases": [],
                      "description": "Match IP policy list",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "route_type": {
                      "aliases": [],
                      "description": "Match route-type of route",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "external": {
                          "aliases": [],
                          "description": "external route (BGP, EIGRP and OSPF type 1/2)",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "set": {
                              "aliases": [],
                              "description": "Set external route",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "type_1": {
                              "aliases": [],
                              "description": "OSPF external type 1 route",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "type_2": {
                              "aliases": [],
                              "description": "OSPF external type 2 route",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "internal": {
                          "aliases": [],
                          "description": "internal route (including OSPF intra/inter area)",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "level_1": {
                          "aliases": [],
                          "description": "IS-IS level-1 route",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "level_2": {
                          "aliases": [],
                          "description": "IS-IS level-2 route",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "local": {
                          "aliases": [],
                          "description": "locally generated route",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "nssa_external": {
                          "aliases": [],
                          "description": "nssa-external route (OSPF type 1/2)",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "set": {
                              "aliases": [],
                              "description": "Set nssa-external route",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "type_1": {
                              "aliases": [],
                              "description": "OSPF external type 1 route",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "type_2": {
                              "aliases": [],
                              "description": "OSPF external type 2 route",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "rpki": {
                      "aliases": [],
                      "description": "Match RPKI state of route",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "invalid": {
                          "aliases": [],
                          "description": "RPKI Invalid State",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "not_found": {
                          "aliases": [],
                          "description": "RPKI Not Found State",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "valid": {
                          "aliases": [],
                          "description": "RPKI Valid State",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "security_group": {
                      "aliases": [],
                      "description": "Security Group",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "destination": {
                          "aliases": [],
                          "description": "Destination Security Group, destination Security tag\nPlease refer vendor documentation for valid values",
                          "type": "list",
                          "required": false,
                          "elements": "int",
                          "suboptions": {}
                        },
                        "source": {
                          "aliases": [],
                          "description": "Source Security Group, source Security tag\nPlease refer vendor documentation for valid values",
                          "type": "list",
                          "required": false,
                          "elements": "int",
                          "suboptions": {}
                        }
                      }
                    },
                    "source_protocol": {
                      "aliases": [],
                      "description": "Match source-protocol of route",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "bgp": {
                          "aliases": [],
                          "description": "Border Gateway Protocol (BGP)\nAutonomous system number\nPlease refer vendor documentation for valid values",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "connected": {
                          "aliases": [],
                          "description": "Connected",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "eigrp": {
                          "aliases": [],
                          "description": "Enhanced Interior Gateway Routing Protocol (EIGRP)\nAutonomous system number\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "isis": {
                          "aliases": [],
                          "description": "ISO IS-IS",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "lisp": {
                          "aliases": [],
                          "description": "Locator ID Separation Protocol (LISP)",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "mobile": {
                          "aliases": [],
                          "description": "Mobile routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "ospf": {
                          "aliases": [],
                          "description": "Open Shortest Path First (OSPF) Process ID\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "ospfv3": {
                          "aliases": [],
                          "description": "OSPFv3 Process ID\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "rip": {
                          "aliases": [],
                          "description": "Routing Information Protocol (RIP)",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "static": {
                          "aliases": [],
                          "description": "Static routes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "tag": {
                      "aliases": [],
                      "description": "Match tag of route",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "tag_list": {
                          "aliases": [],
                          "description": "Route Tag List/Tag list name",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "value": {
                          "aliases": [],
                          "description": "Tag value/Tag in Dotted Decimal eg, 10.10.10.10",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        }
                      }
                    },
                    "track": {
                      "aliases": [],
                      "description": "tracking object",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "sequence": {
                  "aliases": [],
                  "description": "Sequence to insert to/delete from existing route-map entry\nPlease refer vendor documentation for valid values",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "set": {
                  "aliases": [],
                  "description": "Match source-protocol of route",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "aigp_metric": {
                      "aliases": [],
                      "description": "accumulated metric value",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "igp_metric": {
                          "aliases": [],
                          "description": "metric value from rib",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "value": {
                          "aliases": [],
                          "description": "manual value",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "as_path": {
                      "aliases": [],
                      "description": "Prepend string for a BGP AS-path attribute",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "prepend": {
                          "aliases": [],
                          "description": "Prepend to the as-path",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "as_number": {
                              "aliases": [],
                              "description": "AS number\nPlease refer vendor documentation for valid values",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "last_as": {
                              "aliases": [],
                              "description": "Prepend last AS to the as-path\nNumber of last-AS prepends\nPlease refer vendor documentation for valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "tag": {
                          "aliases": [],
                          "description": "Set the tag as an AS-path attribute",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "automatic_tag": {
                      "aliases": [],
                      "description": "Automatically compute TAG value",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "clns": {
                      "aliases": [],
                      "description": "OSI summary address\nNext hop address\nCLNS summary prefix",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "comm_list": {
                      "aliases": [],
                      "description": "set BGP community list (for deletion)\nCommunity-list name/number\nDelete matching communities",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "community": {
                      "aliases": [],
                      "description": "BGP community attribute",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "additive": {
                          "aliases": [],
                          "description": "Add to the existing community",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "gshut": {
                          "aliases": [],
                          "description": "Graceful Shutdown (well-known community)",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "internet": {
                          "aliases": [],
                          "description": "Internet (well-known community)",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "local_as": {
                          "aliases": [],
                          "description": "Do not send outside local AS (well-known community)",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "no_advertise": {
                          "aliases": [],
                          "description": "Do not advertise to any peer (well-known community)",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "no_export": {
                          "aliases": [],
                          "description": "Do not export to next AS (well-known community)",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "none": {
                          "aliases": [],
                          "description": "No community attribute",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "number": {
                          "aliases": [],
                          "description": "community number\ncommunity number in aa:nn format\nPlease refer vendor documentation for valid values",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "dampening": {
                      "aliases": [],
                      "description": "Set BGP route flap dampening parameters",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "max_suppress": {
                          "aliases": [],
                          "description": "Maximum duration to suppress a stable route\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "penalty_half_time": {
                          "aliases": [],
                          "description": "half-life time for the penalty\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "reuse_route_val": {
                          "aliases": [],
                          "description": "Penalty to start reusing a route\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "suppress_route_val": {
                          "aliases": [],
                          "description": "Penalty to start suppressing a route\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "default": {
                      "aliases": [],
                      "description": "Set default information\nDefault output interface",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "extcomm_list": {
                      "aliases": [],
                      "description": "Set BGP/VPN extended community list (for deletion)\nExtended community-list number/name\nDelete matching extended communities",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "extcommunity": {
                      "aliases": [],
                      "description": "BGP extended community attribute",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "cost": {
                          "aliases": [],
                          "description": "Cost extended community",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "cost_value": {
                              "aliases": [],
                              "description": "Cost Value (No-preference Cost = 2147483647)\nPlease refer vendor documentation for valid values",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "id": {
                              "aliases": [],
                              "description": "Community ID\nPlease refer vendor documentation for valid values",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "igp": {
                              "aliases": [],
                              "description": "Compare following IGP cost comparison",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "pre_bestpath": {
                              "aliases": [],
                              "description": "Compare before all other steps in bestpath calculation",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "rt": {
                          "aliases": [],
                          "description": "Route Target extended community",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "additive": {
                              "aliases": [],
                              "description": "Add to the existing extcommunity",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "address": {
                              "aliases": [],
                              "description": "VPN extended community",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "range": {
                              "aliases": [],
                              "description": "Specify a range of extended community",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "lower_limit": {
                                  "aliases": [],
                                  "description": "VPN extended community",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "upper_limit": {
                                  "aliases": [],
                                  "description": "VPN extended community",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "soo": {
                          "aliases": [],
                          "description": "Site-of-Origin extended community",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "vpn_distinguisher": {
                          "aliases": [],
                          "description": "VPN Distinguisher",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "additive": {
                              "aliases": [],
                              "description": "Add to the existing extcommunity",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "address": {
                              "aliases": [],
                              "description": "VPN extended community",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "range": {
                              "aliases": [],
                              "description": "Specify a range of extended community",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "lower_limit": {
                                  "aliases": [],
                                  "description": "VPN extended community",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "upper_limit": {
                                  "aliases": [],
                                  "description": "VPN extended community",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "global_route": {
                      "aliases": [],
                      "description": "Set to global routing table",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "interfaces": {
                      "aliases": [],
                      "description": "Output interface",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "ip": {
                      "aliases": [],
                      "description": "IP specific information",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "Specify IP address\nPrefix-list name to set ip address",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "df": {
                          "aliases": [],
                          "description": "Set DF bit",
                          "type": "int",
                          "required": false,
                          "choices": [
                            "0",
                            "1"
                          ],
                          "suboptions": {}
                        },
                        "global_route": {
                          "aliases": [],
                          "description": "global routing table",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "address": {
                              "aliases": [],
                              "description": "IP address of next hop",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "verify_availability": {
                              "aliases": [],
                              "description": "Verify if nexthop is reachable",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "address": {
                                  "aliases": [],
                                  "description": "IP address of next hop",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "sequence": {
                                  "aliases": [],
                                  "description": "Sequence to insert into next-hop list\nPlease refer vendor documentation for valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "track": {
                                  "aliases": [],
                                  "description": "Set the next hop depending on the state of a tracked object\ntracked object number\nPlease refer vendor documentation for valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "next_hop": {
                          "aliases": [],
                          "description": "Next hop address",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "address": {
                              "aliases": [],
                              "description": "IP address of next hop",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "dynamic": {
                              "aliases": [],
                              "description": "application dynamically sets next hop\nDHCP learned next hop",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "encapsulate": {
                              "aliases": [],
                              "description": "Encapsulation profile for VPN nexthop\nL3VPN\nEncapsulation profile name",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "peer_address": {
                              "aliases": [],
                              "description": "Use peer address (for BGP only)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "recursive": {
                              "aliases": [],
                              "description": "Recursive next-hop",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "address": {
                                  "aliases": [],
                                  "description": "IP address of recursive next hop",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "global_route": {
                                  "aliases": [],
                                  "description": "global routing table",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "vrf": {
                                  "aliases": [],
                                  "description": "VRF",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            },
                            "self": {
                              "aliases": [],
                              "description": "Use self address (for BGP only)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "verify_availability": {
                              "aliases": [],
                              "description": "Verify if nexthop is reachable",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "address": {
                                  "aliases": [],
                                  "description": "IP address of next hop",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "sequence": {
                                  "aliases": [],
                                  "description": "Sequence to insert into next-hop list\nPlease refer vendor documentation for valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "Set and Verify if nexthop is reachable",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "track": {
                                  "aliases": [],
                                  "description": "Set the next hop depending on the state of a tracked object\ntracked object number\nPlease refer vendor documentation for valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "precedence": {
                          "aliases": [],
                          "description": "Set precedence field",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "critical": {
                              "aliases": [],
                              "description": "Set critical precedence (5)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "flash": {
                              "aliases": [],
                              "description": "Set flash precedence (3)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "flash_override": {
                              "aliases": [],
                              "description": "Set flash override precedence (4)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "immediate": {
                              "aliases": [],
                              "description": "Set immediate precedence (2)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "internet": {
                              "aliases": [],
                              "description": "Set internetwork control precedence (6)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "network": {
                              "aliases": [],
                              "description": "Set network control precedence (7)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "priority": {
                              "aliases": [],
                              "description": "Set priority precedence (1)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "routine": {
                              "aliases": [],
                              "description": "Set routine precedence (0)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Just set precedence field",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "qos_group": {
                          "aliases": [],
                          "description": "Set QOS Group ID\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "tos": {
                          "aliases": [],
                          "description": "Set type of service field",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "max_reliability": {
                              "aliases": [],
                              "description": "Set max reliable TOS (2)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "max_throughput": {
                              "aliases": [],
                              "description": "Set max throughput TOS (4)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "min_delay": {
                              "aliases": [],
                              "description": "Set min delay TOS (8)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "min_monetary_cost": {
                              "aliases": [],
                              "description": "Set min monetary cost TOS (1)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "normal": {
                              "aliases": [],
                              "description": "Set normal TOS (0)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "set": {
                              "aliases": [],
                              "description": "Just set type of service field",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "vrf": {
                          "aliases": [],
                          "description": "VRF",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "address": {
                              "aliases": [],
                              "description": "IP address of next hop",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "name": {
                              "aliases": [],
                              "description": "VRF name",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "verify_availability": {
                              "aliases": [],
                              "description": "Verify if nexthop is reachable",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "address": {
                                  "aliases": [],
                                  "description": "IP address of next hop",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "sequence": {
                                  "aliases": [],
                                  "description": "Sequence to insert into next-hop list\nPlease refer vendor documentation for valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "set": {
                                  "aliases": [],
                                  "description": "Set and Verify if nexthop is reachable",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "track": {
                                  "aliases": [],
                                  "description": "Set the next hop depending on the state of a tracked object\ntracked object number\nPlease refer vendor documentation for valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ipv6": {
                      "aliases": [],
                      "description": "IPv6 specific information",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "address": {
                          "aliases": [],
                          "description": "IPv6 address\nIPv6 prefix-list",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "default": {
                          "aliases": [],
                          "description": "Set default information",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "global_route": {
                          "aliases": [],
                          "description": "global routing table",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "address": {
                              "aliases": [],
                              "description": "Next hop address (X:X:X:X::X)",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "verify_availability": {
                              "aliases": [],
                              "description": "Verify if nexthop is reachable",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "address": {
                                  "aliases": [],
                                  "description": "Next hop address (X:X:X:X::X)",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "sequence": {
                                  "aliases": [],
                                  "description": "Sequence to insert into next-hop list\nPlease refer vendor documentation for valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "track": {
                                  "aliases": [],
                                  "description": "Set the next hop depending on the state of a tracked object\ntracked object number\nPlease refer vendor documentation for valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        },
                        "next_hop": {
                          "aliases": [],
                          "description": "IPv6 Next hop",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "address": {
                              "aliases": [],
                              "description": "Next hop address (X:X:X:X::X)",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "encapsulate": {
                              "aliases": [],
                              "description": "Encapsulation profile for VPN nexthop\nL3VPN\nEncapsulation profile name",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "peer_address": {
                              "aliases": [],
                              "description": "Use peer address (for BGP only)",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "recursive": {
                              "aliases": [],
                              "description": "Recursive next-hop\nIPv6 address of recursive next-hop",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "precedence": {
                          "aliases": [],
                          "description": "Set precedence field\nPrecedence value\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "vrf": {
                          "aliases": [],
                          "description": "VRF name",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "name": {
                              "aliases": [],
                              "description": "VRF name",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "verify_availability": {
                              "aliases": [],
                              "description": "Verify if nexthop is reachable",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "address": {
                                  "aliases": [],
                                  "description": "IPv6 address of next hop",
                                  "type": "str",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "sequence": {
                                  "aliases": [],
                                  "description": "Sequence to insert into next-hop list\nPlease refer vendor documentation for valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "track": {
                                  "aliases": [],
                                  "description": "Set the next hop depending on the state of a tracked object\ntracked object number\nPlease refer vendor documentation for valid values",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "level": {
                      "aliases": [],
                      "description": "Where to import route",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "level_1": {
                          "aliases": [],
                          "description": "Import into a level-1 area",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "level_1_2": {
                          "aliases": [],
                          "description": "Import into level-1 and level-2",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "level_2": {
                          "aliases": [],
                          "description": "Import into level-2 sub-domain",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "nssa_only": {
                          "aliases": [],
                          "description": "Import only into OSPF NSSA areas and don't propagate",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "lisp": {
                      "aliases": [],
                      "description": "Locator ID Separation Protocol specific information\nSpecify a locator-set to use in LISP route-import\nThe name of the locator set",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "local_preference": {
                      "aliases": [],
                      "description": "BGP local preference path attribute\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "metric": {
                      "aliases": [],
                      "description": "Metric value for destination routing protocol",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "deviation": {
                          "aliases": [],
                          "description": "Add or subtract metric",
                          "type": "str",
                          "required": false,
                          "choices": [
                            "plus",
                            "minus"
                          ],
                          "suboptions": {}
                        },
                        "eigrp_delay": {
                          "aliases": [],
                          "description": "EIGRP delay metric, in 10 microsecond units\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric_bandwidth": {
                          "aliases": [],
                          "description": "EIGRP Effective bandwidth metric (Loading) where 255 is 100 loaded\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric_reliability": {
                          "aliases": [],
                          "description": "EIGRP reliability metric where 255 is 100 reliable\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "metric_value": {
                          "aliases": [],
                          "description": "Metric value or Bandwidth in Kbits per second\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "mtu": {
                          "aliases": [],
                          "description": "EIGRP MTU of the path\nPlease refer vendor documentation for valid values",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "metric_type": {
                      "aliases": [],
                      "description": "Type of metric for destination routing protocol",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "external": {
                          "aliases": [],
                          "description": "IS-IS external metric",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "internal": {
                          "aliases": [],
                          "description": "IS-IS internal metric or Use IGP metric as the MED for BGP",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "type_1": {
                          "aliases": [],
                          "description": "OSPF external type 1 metric",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "type_2": {
                          "aliases": [],
                          "description": "OSPF external type 2 metric",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "mpls_label": {
                      "aliases": [],
                      "description": "Set MPLS label for prefix",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "origin": {
                      "aliases": [],
                      "description": "BGP origin code",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "igp": {
                          "aliases": [],
                          "description": "local IGP",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "incomplete": {
                          "aliases": [],
                          "description": "unknown heritage",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "tag": {
                      "aliases": [],
                      "description": "Tag value for destination routing protocol\nTag value A.B.C.D(dotted decimal format)/Tag value",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "traffic_index": {
                      "aliases": [],
                      "description": "BGP traffic classification number for accounting\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "vrf": {
                      "aliases": [],
                      "description": "Define VRF name\nVPN Routing/Forwarding instance name",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "weight": {
                      "aliases": [],
                      "description": "BGP weight for routing table\nPlease refer vendor documentation for valid values",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "route_map": {
              "aliases": [],
              "description": "Route map tag/name",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(sh running-config | section ^route-map).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(sh running-config | section ^route-map) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "parsed",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Route maps resource module",
      "version_added": "2.1.0"
    },
    "examples": "\n\n# Using deleted\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^route-map\n# route-map test_1 deny 10\n#  description this is test route\n#  match ip next-hop prefix-list test_2_new test_1_new\n#  match ip route-source 10\n#  match security-group source tag 10 20\n#  match local-preference 100 50\n#  match mpls-label\n# route-map test_1 deny 20\n#  match track  105\n#  match tag list test_match_tag\n#  match route-type level-1\n#  match additional-paths advertise-set all group-best\n#  match as-path 200 100\n#  match ipv6 address test_acl_20\n#  continue 100\n# route-map test_2 deny 10\n#  match security-group source tag 10 20\n#  match local-preference 55 105\n#  match mpls-label\n#  match ipv6 address test_ip_acl\n#  match ipv6 next-hop prefix-list test_new\n#  match ipv6 route-source route_src_acl\n#  set automatic-tag\n#  set ip precedence critical\n#  set ip address prefix-list 192.0.2.1\n#  set aigp-metric 100\n#  set extcommunity cost pre-bestpath 10 100\n#  set ip df 1\n#  set ip next-hop verify-availability 198.51.111.1 100 track 10\n#  set ip next-hop recursive global 198.51.110.1\n\n- name: Delete provided Route maps config\n  cisco.ios.ios_route_maps:\n    config:\n      - route_map: test_1\n    state: deleted\n\n#  Commands Fired:\n#  ---------------\n#\n#  \"commands\": [\n#         \"no route-map test_1\"\n#     ]\n\n# After state:\n# -------------\n# router-ios#sh running-config | section ^route-map\n# route-map test_2 deny 10\n#  match security-group source tag 10 20\n#  match local-preference 55 105\n#  match mpls-label\n#  match ipv6 address test_ip_acl\n#  match ipv6 next-hop prefix-list test_new\n#  match ipv6 route-source route_src_acl\n#  set automatic-tag\n#  set ip precedence critical\n#  set ip address prefix-list 192.0.2.1\n#  set aigp-metric 100\n#  set extcommunity cost pre-bestpath 10 100\n#  set ip df 1\n#  set ip next-hop verify-availability 198.51.111.1 100 track 10\n#  set ip next-hop recursive global 198.51.110.1\n\n# Using deleted without any config passed (NOTE: This will delete all Route maps configuration from device)\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^route-map\n# route-map test_1 deny 10\n#  description this is test route\n#  match ip next-hop prefix-list test_2_new test_1_new\n#  match ip route-source 10\n#  match security-group source tag 10 20\n#  match local-preference 100 50\n#  match mpls-label\n# route-map test_1 deny 20\n#  match track  105\n#  match tag list test_match_tag\n#  match route-type level-1\n#  match additional-paths advertise-set all group-best\n#  match as-path 200 100\n#  match ipv6 address test_acl_20\n#  continue 100\n# route-map test_2 deny 10\n#  match security-group source tag 10 20\n#  match local-preference 55 105\n#  match mpls-label\n#  match ipv6 address test_ip_acl\n#  match ipv6 next-hop prefix-list test_new\n#  match ipv6 route-source route_src_acl\n#  set automatic-tag\n#  set ip precedence critical\n#  set ip address prefix-list 192.0.2.1\n#  set aigp-metric 100\n#  set extcommunity cost pre-bestpath 10 100\n#  set ip df 1\n#  set ip next-hop verify-availability 198.51.111.1 100 track 10\n#  set ip next-hop recursive global 198.51.110.1\n\n- name: Delete all Route maps config\n  cisco.ios.ios_route_maps:\n    state: deleted\n\n# Commands Fired:\n# ---------------\n#\n#  \"commands\": [\n#         \"no route-map test_1\",\n#         \"no route-map test_2\"\n#     ]\n\n# After state:\n# -------------\n# router-ios#sh running-config | section ^route-map\n# router-ios#\n\n# Using merged\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^route-map\n# router-ios#\n\n- name: Merge provided Route maps configuration\n  cisco.ios.ios_route_maps:\n    config:\n      - route_map: test_1\n        entries:\n          - sequence: 10\n            action: deny\n            description: this is test route\n            match:\n              ip:\n                next_hop:\n                  prefix_lists:\n                    - test_1_new\n                    - test_2_new\n                route_source:\n                  acls:\n                    - 10\n              security_group:\n                source:\n                  - 10\n                  - 20\n              local_preference:\n                value:\n                  - 50\n                  - 100\n              mpls_label: true\n          - sequence: 20\n            action: deny\n            continue_entry:\n              entry_sequence: 100\n            match:\n              additional_paths:\n                all: true\n                group_best: true\n              as_path:\n                acls:\n                  - 100\n                  - 200\n              ipv6:\n                address:\n                  acl: test_acl_20\n              route_type:\n                level_1: true\n              tag:\n                tag_list:\n                  - test_match_tag\n              track: 105\n      - route_map: test_2\n        entries:\n          - sequence: 10\n            action: deny\n            match:\n              ipv6:\n                address:\n                  acl: test_ip_acl\n                next_hop:\n                  prefix_list: test_new\n                route_source:\n                  acl: route_src_acl\n              security_group:\n                source:\n                  - 10\n                  - 20\n              local_preference:\n                value:\n                  - 55\n                  - 105\n              mpls_label: true\n            set:\n              aigp_metric:\n                value: 100\n              automatic_tag: true\n              extcommunity:\n                cost:\n                  id: 10\n                  cost_value: 100\n                  pre_bestpath: true\n              ip:\n                address: 192.0.2.1\n                df: 1\n                next_hop:\n                  recursive:\n                    global_route: true\n                    address: 198.51.110.1\n                  verify_availability:\n                    address: 198.51.111.1\n                    sequence: 100\n                    track: 10\n                precedence:\n                  critical: true\n    state: merged\n\n#  Commands Fired:\n#  ---------------\n#\n#   \"commands\": [\n#      \"route-map test_2 deny 10\",\n#      \"match security-group source tag 10 20\",\n#      \"match local-preference 55 105\",\n#      \"match mpls-label\",\n#      \"match ipv6 next-hop prefix-list test_new\",\n#      \"match ipv6 route-source route_src_acl\",\n#      \"match ipv6 address test_ip_acl\",\n#      \"set extcommunity cost pre-bestpath 10 100\",\n#      \"set ip df 1\",\n#      \"set ip next-hop recursive global 198.51.110.1\",\n#      \"set ip next-hop verify-availability 198.51.111.1 100 track 10\",\n#      \"set ip precedence critical\",\n#      \"set ip address prefix-list 192.0.2.1\",\n#      \"set automatic-tag\",\n#      \"set aigp-metric 100\",\n#      \"route-map test_1 deny 20\",\n#      \"continue 100\",\n#      \"match track 105\",\n#      \"match tag list test_match_tag\",\n#      \"match ipv6 address test_acl_20\",\n#      \"match route-type level-1\",\n#      \"match as-path 200 100\",\n#      \"match additional-paths advertise-set all group-best\",\n#      \"route-map test_1 deny 10\",\n#      \"description this is test route\",\n#      \"match security-group source tag 10 20\",\n#      \"match ip next-hop prefix-list test_2_new test_1_new\",\n#      \"match ip route-source 10\",\n#      \"match local-preference 100 50\",\n#      \"match mpls-label\"\n#     ]\n\n# After state:\n# -------------\n#\n# router-ios#sh running-config | section ^route-map\n# route-map test_1 deny 10\n#  description this is test route\n#  match ip next-hop prefix-list test_2_new test_1_new\n#  match ip route-source 10\n#  match security-group source tag 10 20\n#  match local-preference 100 50\n#  match mpls-label\n# route-map test_1 deny 20\n#  match track  105\n#  match tag list test_match_tag\n#  match route-type level-1\n#  match additional-paths advertise-set all group-best\n#  match as-path 200 100\n#  match ipv6 address test_acl_20\n#  continue 100\n# route-map test_2 deny 10\n#  match security-group source tag 10 20\n#  match local-preference 55 105\n#  match mpls-label\n#  match ipv6 address test_ip_acl\n#  match ipv6 next-hop prefix-list test_new\n#  match ipv6 route-source route_src_acl\n#  set automatic-tag\n#  set ip precedence critical\n#  set ip address prefix-list 192.0.2.1\n#  set aigp-metric 100\n#  set extcommunity cost pre-bestpath 10 100\n#  set ip df 1\n#  set ip next-hop verify-availability 198.51.111.1 100 track 10\n#  set ip next-hop recursive global 198.51.110.1\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^route-map\n# route-map test_1 deny 10\n#  description this is test route\n#  match ip next-hop prefix-list test_2_new test_1_new\n#  match ip route-source 10\n#  match security-group source tag 10 20\n#  match local-preference 100 50\n#  match mpls-label\n# route-map test_1 deny 20\n#  match track  105\n#  match tag list test_match_tag\n#  match route-type level-1\n#  match additional-paths advertise-set all group-best\n#  match as-path 200 100\n#  match ipv6 address test_acl_20\n#  continue 100\n# route-map test_2 deny 10\n#  match security-group source tag 10 20\n#  match local-preference 55 105\n#  match mpls-label\n#  match ipv6 address test_ip_acl\n#  match ipv6 next-hop prefix-list test_new\n#  match ipv6 route-source route_src_acl\n#  set automatic-tag\n#  set ip precedence critical\n#  set ip address prefix-list 192.0.2.1\n#  set aigp-metric 100\n#  set extcommunity cost pre-bestpath 10 100\n#  set ip df 1\n#  set ip next-hop verify-availability 198.51.111.1 100 track 10\n#  set ip next-hop recursive global 198.51.110.1\n\n- name: Override provided Route maps configuration\n  cisco.ios.ios_route_maps:\n    config:\n      - route_map: test_1\n        entries:\n          - sequence: 10\n            action: deny\n            description: this is override route\n            match:\n              ip:\n                next_hop:\n                  acls:\n                    - 10\n                    - test1_acl\n                flowspec:\n                  dest_pfx: true\n                  acls:\n                    - test_acl_1\n                    - test_acl_2\n              length:\n                minimum: 10\n                maximum: 100\n              metric:\n                value: 10\n                external: true\n              security_group:\n                source:\n                  - 10\n                  - 20\n              mpls_label: true\n            set:\n              extcommunity:\n                vpn_distinguisher:\n                  address: 192.0.2.1:12\n                  additive: true\n              metric:\n                metric_value: 100\n                deviation: plus\n                eigrp_delay: 100\n                metric_reliability: 10\n                metric_bandwidth: 20\n                mtu: 30\n      - route_map: test_override\n        entries:\n          - sequence: 10\n            action: deny\n            match:\n              ipv6:\n                address:\n                  acl: test_acl\n                next_hop:\n                  prefix_list: test_new\n                route_source:\n                  acl: route_src_acl\n              security_group:\n                source:\n                  - 15\n                  - 20\n              local_preference:\n                value:\n                  - 105\n                  - 110\n              mpls_label: true\n            set:\n              aigp_metric:\n                value: 100\n              automatic_tag: true\n              extcommunity:\n                cost:\n                  id: 10\n                  cost_value: 100\n                  pre_bestpath: true\n              ip:\n                address: 192.0.2.1\n                df: 1\n                next_hop:\n                  recursive:\n                    global_route: true\n                    address: 198.110.51.1\n                  verify_availability:\n                    address: 198.110.51.2\n                    sequence: 100\n                    track: 10\n                precedence:\n                  critical: true\n    state: overridden\n\n# Commands Fired:\n# ---------------\n#\n#  \"commands\": [\n#         \"no route-map test_2\",\n#         \"route-map test_override deny 10\",\n#         \"match security-group source tag 15 20\",\n#         \"match local-preference 110 105\",\n#         \"match mpls-label\",\n#         \"match ipv6 next-hop prefix-list test_new\",\n#         \"match ipv6 route-source route_src_acl\",\n#         \"match ipv6 address test_acl\",\n#         \"set extcommunity cost pre-bestpath 10 100\",\n#         \"set ip df 1\",\n#         \"set ip next-hop recursive global 198.110.51.1\",\n#         \"set ip next-hop verify-availability 198.110.51.2 100 track 10\",\n#         \"set ip precedence critical\",\n#         \"set ip address prefix-list 192.0.2.1\",\n#         \"set automatic-tag\",\n#         \"set aigp-metric 100\",\n#         \"route-map test_1 deny 10\",\n#         \"no description this is test route\",\n#         \"description this is override route\",\n#         \"match ip flowspec dest-pfx test_acl_1 test_acl_2\",\n#         \"no match ip next-hop prefix-list test_2_new test_1_new\",\n#         \"match ip next-hop test1_acl 10\",\n#         \"no match ip route-source 10\",\n#         \"match metric external 10\",\n#         \"match length 10 100\",\n#         \"no match local-preference 100 50\",\n#         \"set extcommunity vpn-distinguisher 192.0.2.1:12 additive\",\n#         \"set metric 100 +100 10 20 30\",\n#         \"no route-map test_1 deny 20\"\n#     ]\n\n# After state:\n# -------------\n#\n# router-ios#sh running-config | section ^route-map\n# route-map test_override deny 10\n#  match security-group source tag 15 20\n#  match local-preference 110 105\n#  match mpls-label\n#  match ipv6 address test_acl\n#  match ipv6 next-hop prefix-list test_new\n#  match ipv6 route-source route_src_acl\n#  set automatic-tag\n#  set ip precedence critical\n#  set ip address prefix-list 192.0.2.1\n#  set aigp-metric 100\n#  set extcommunity cost pre-bestpath 10 100\n#  set ip df 1\n#  set ip next-hop verify-availability 198.110.51.2 100 track 10\n#  set ip next-hop recursive global 198.110.51.1\n# route-map test_1 deny 10\n#  description this is override route\n#  match ip flowspec dest-pfx test_acl_1 test_acl_2\n#  match ip next-hop test1_acl 10\n#  match security-group source tag 10 20\n#  match metric external 10\n#  match mpls-label\n#  match length 10 100\n#  set metric 100 +100 10 20 30\n#  set extcommunity vpn-distinguisher 192.0.2.1:12 additive\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^route-map\n# route-map test_1 deny 10\n#  description this is test route\n#  match ip next-hop prefix-list test_2_new test_1_new\n#  match ip route-source 10\n#  match security-group source tag 10 20\n#  match local-preference 100 50\n#  match mpls-label\n# route-map test_1 deny 20\n#  match track  105\n#  match tag list test_match_tag\n#  match route-type level-1\n#  match additional-paths advertise-set all group-best\n#  match as-path 200 100\n#  match ipv6 address test_acl_20\n#  continue 100\n# route-map test_2 deny 10\n#  match security-group source tag 10 20\n#  match local-preference 55 105\n#  match mpls-label\n#  match ipv6 address test_ip_acl\n#  match ipv6 next-hop prefix-list test_new\n#  match ipv6 route-source route_src_acl\n#  set automatic-tag\n#  set ip precedence critical\n#  set ip address prefix-list 192.0.2.1\n#  set aigp-metric 100\n#  set extcommunity cost pre-bestpath 10 100\n#  set ip df 1\n#  set ip next-hop verify-availability 198.51.111.1 100 track 10\n#  set ip next-hop recursive global 198.51.110.1\n\n- name: Replaced provided Route maps configuration\n  cisco.ios.ios_route_maps:\n    config:\n      - route_map: test_1\n        entries:\n          - sequence: 10\n            action: deny\n            description: this is replaced route\n            match:\n              ip:\n                next_hop:\n                  acls:\n                    - 10\n                    - test1_acl\n                flowspec:\n                  dest_pfx: true\n                  acls:\n                    - test_acl_1\n                    - test_acl_2\n              length:\n                minimum: 10\n                maximum: 100\n              metric:\n                value: 10\n                external: true\n              security_group:\n                source:\n                  - 10\n                  - 20\n              mpls_label: true\n            set:\n              extcommunity:\n                vpn_distinguisher:\n                  address: 192.0.2.1:12\n                  additive: true\n              metric:\n                metric_value: 100\n                deviation: plus\n                eigrp_delay: 100\n                metric_reliability: 10\n                metric_bandwidth: 20\n                mtu: 30\n      - route_map: test_replaced\n        entries:\n          - sequence: 10\n            action: deny\n            match:\n              ipv6:\n                address:\n                  acl: test_acl\n                next_hop:\n                  prefix_list: test_new\n                route_source:\n                  acl: route_src_acl\n              security_group:\n                source:\n                  - 15\n                  - 20\n              local_preference:\n                value:\n                  - 105\n                  - 110\n              mpls_label: true\n            set:\n              aigp_metric:\n                value: 100\n              automatic_tag: true\n              extcommunity:\n                cost:\n                  id: 10\n                  cost_value: 100\n                  pre_bestpath: true\n              ip:\n                address: 192.0.2.1\n                df: 1\n                next_hop:\n                  recursive:\n                    global_route: true\n                    address: 198.110.51.1\n                  verify_availability:\n                    address: 198.110.51.2\n                    sequence: 100\n                    track: 10\n                precedence:\n                  critical: true\n    state: replaced\n\n# Commands Fired:\n# ---------------\n#  \"commands\": [\n#         \"route-map test_replaced deny 10\",\n#         \"match security-group source tag 15 20\",\n#         \"match local-preference 110 105\",\n#         \"match mpls-label\",\n#         \"match ipv6 next-hop prefix-list test_new\",\n#         \"match ipv6 route-source route_src_acl\",\n#         \"match ipv6 address test_acl\",\n#         \"set extcommunity cost pre-bestpath 10 100\",\n#         \"set ip df 1\",\n#         \"set ip next-hop recursive global 198.110.51.1\",\n#         \"set ip next-hop verify-availability 198.110.51.2 100 track 10\",\n#         \"set ip precedence critical\",\n#         \"set ip address prefix-list 192.0.2.1\",\n#         \"set automatic-tag\",\n#         \"set aigp-metric 100\",\n#         \"route-map test_1 deny 10\",\n#         \"no description this is test route\",\n#         \"description this is replaced route\",\n#         \"match ip flowspec dest-pfx test_acl_1 test_acl_2\",\n#         \"no match ip next-hop prefix-list test_2_new test_1_new\",\n#         \"match ip next-hop test1_acl 10\",\n#         \"no match ip route-source 10\",\n#         \"match metric external 10\",\n#         \"match length 10 100\",\n#         \"no match local-preference 100 50\",\n#         \"set extcommunity vpn-distinguisher 192.0.2.1:12 additive\",\n#         \"set metric 100 +100 10 20 30\",\n#         \"no route-map test_1 deny 20\"\n#     ]\n\n# After state:\n# -------------\n#\n# router-ios#sh running-config | section ^route-map\n# route-map test_replaced deny 10\n#  match security-group source tag 15 20\n#  match local-preference 110 105\n#  match mpls-label\n#  match ipv6 address test_acl\n#  match ipv6 next-hop prefix-list test_new\n#  match ipv6 route-source route_src_acl\n#  set automatic-tag\n#  set ip precedence critical\n#  set ip address prefix-list 192.0.2.1\n#  set aigp-metric 100\n#  set extcommunity cost pre-bestpath 10 100\n#  set ip df 1\n#  set ip next-hop verify-availability 198.110.51.2 100 track 10\n#  set ip next-hop recursive global 198.110.51.1\n# route-map test_1 deny 10\n#  description this is replaced route\n#  match ip flowspec dest-pfx test_acl_1 test_acl_2\n#  match ip next-hop test1_acl 10\n#  match security-group source tag 10 20\n#  match metric external 10\n#  match mpls-label\n#  match length 10 100\n#  set metric 100 +100 10 20 30\n#  set extcommunity vpn-distinguisher 192.0.2.1:12 additive\n# route-map test_2 deny 10\n#  match security-group source tag 10 20\n#  match local-preference 55 105\n#  match mpls-label\n#  match ipv6 address test_ip_acl\n#  match ipv6 next-hop prefix-list test_new\n#  match ipv6 route-source route_src_acl\n#  set automatic-tag\n#  set ip precedence critical\n#  set ip address prefix-list 192.0.2.1\n#  set aigp-metric 100\n#  set extcommunity cost pre-bestpath 10 100\n#  set ip df 1\n#  set ip next-hop verify-availability 198.51.111.1 100 track 10\n#  set ip next-hop recursive global 198.51.110.1\n\n# Using Gathered\n\n# Before state:\n# -------------\n#\n# router-ios#sh running-config | section ^route-map\n# route-map test_1 deny 10\n#  description this is test route\n#  match ip next-hop prefix-list test_2_new test_1_new\n#  match ip route-source 10\n#  match security-group source tag 10 20\n#  match local-preference 100 50\n#  match mpls-label\n# route-map test_1 deny 20\n#  match track  105\n#  match tag list test_match_tag\n#  match route-type level-1\n#  match additional-paths advertise-set all group-best\n#  match as-path 200 100\n#  match ipv6 address test_acl_20\n#  continue 100\n# route-map test_2 deny 10\n#  match security-group source tag 10 20\n#  match local-preference 55 105\n#  match mpls-label\n#  match ipv6 address test_ip_acl\n#  match ipv6 next-hop prefix-list test_new\n#  match ipv6 route-source route_src_acl\n#  set automatic-tag\n#  set ip precedence critical\n#  set ip address prefix-list 192.0.2.1\n#  set aigp-metric 100\n#  set extcommunity cost pre-bestpath 10 100\n#  set ip df 1\n#  set ip next-hop verify-availability 198.51.111.1 100 track 10\n#  set ip next-hop recursive global 198.51.110.1\n\n- name: Gather Route maps provided configurations\n  cisco.ios.ios_route_maps:\n    config:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"gathered\": [\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"deny\",\n#                     \"description\": \"this is test route\",\n#                     \"match\": {\n#                         \"ip\": {\n#                             \"next_hop\": {\n#                                 \"prefix_lists\": [\n#                                     \"test_2_new\",\n#                                     \"test_1_new\"\n#                                 ]\n#                             },\n#                             \"route_source\": {\n#                                 \"acls\": [\n#                                     \"10\"\n#                                 ]\n#                             }\n#                         },\n#                         \"local_preference\": {\n#                             \"value\": [\n#                                 \"100\",\n#                                 \"50\"\n#                             ]\n#                         },\n#                         \"mpls_label\": true,\n#                         \"security_group\": {\n#                             \"source\": [\n#                                 10,\n#                                 20\n#                             ]\n#                         }\n#                     },\n#                     \"sequence\": 10\n#                 },\n#                 {\n#                     \"action\": \"deny\",\n#                     \"continue_entry\": {\n#                         \"entry_sequence\": 100\n#                     },\n#                     \"match\": {\n#                         \"additional_paths\": {\n#                             \"all\": true,\n#                             \"group_best\": true\n#                         },\n#                         \"as_path\": {\n#                             \"acls\": [\n#                                 200,\n#                                 100\n#                             ]\n#                         },\n#                         \"ipv6\": {\n#                             \"address\": {\n#                                 \"acl\": \"test_acl_20\"\n#                             }\n#                         },\n#                         \"route_type\": {\n#                             \"external\": {\n#                                 \"set\": true\n#                             },\n#                             \"level_1\": true,\n#                             \"nssa_external\": {\n#                                 \"set\": true\n#                             }\n#                         },\n#                         \"tag\": {\n#                             \"tag_list\": [\n#                                 \"test_match_tag\"\n#                             ]\n#                         },\n#                         \"track\": 105\n#                     },\n#                     \"sequence\": 20\n#                 }\n#             ],\n#             \"route_map\": \"test_1\"\n#         },\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"deny\",\n#                     \"match\": {\n#                         \"ipv6\": {\n#                             \"address\": {\n#                                 \"acl\": \"test_ip_acl\"\n#                             },\n#                             \"next_hop\": {\n#                                 \"prefix_list\": \"test_new\"\n#                             },\n#                             \"route_source\": {\n#                                 \"acl\": \"route_src_acl\"\n#                             }\n#                         },\n#                         \"local_preference\": {\n#                             \"value\": [\n#                                 \"55\",\n#                                 \"105\"\n#                             ]\n#                         },\n#                         \"mpls_label\": true,\n#                         \"security_group\": {\n#                             \"source\": [\n#                                 10,\n#                                 20\n#                             ]\n#                         }\n#                     },\n#                     \"sequence\": 10,\n#                     \"set\": {\n#                         \"aigp_metric\": {\n#                             \"value\": 100\n#                         },\n#                         \"automatic_tag\": true,\n#                         \"extcommunity\": {\n#                             \"cost\": {\n#                                 \"cost_value\": 100,\n#                                 \"id\": \"10\",\n#                                 \"pre_bestpath\": true\n#                             }\n#                         },\n#                         \"ip\": {\n#                             \"address\": \"192.0.2.1\",\n#                             \"df\": 1,\n#                             \"next_hop\": {\n#                                 \"recursive\": {\n#                                     \"address\": \"198.51.110.1\",\n#                                     \"global_route\": true\n#                                 },\n#                                 \"verify_availability\": {\n#                                     \"address\": \"198.51.111.1\",\n#                                     \"sequence\": 100,\n#                                     \"track\": 10\n#                                 }\n#                             },\n#                             \"precedence\": {\n#                                 \"critical\": true\n#                             }\n#                         }\n#                     }\n#                 }\n#             ],\n#             \"route_map\": \"test_2\"\n#         }\n#     ]\n\n# After state:\n# ------------\n#\n# router-ios#sh running-config | section ^route-map\n# route-map test_1 deny 10\n#  description this is test route\n#  match ip next-hop prefix-list test_2_new test_1_new\n#  match ip route-source 10\n#  match security-group source tag 10 20\n#  match local-preference 100 50\n#  match mpls-label\n# route-map test_1 deny 20\n#  match track  105\n#  match tag list test_match_tag\n#  match route-type level-1\n#  match additional-paths advertise-set all group-best\n#  match as-path 200 100\n#  match ipv6 address test_acl_20\n#  continue 100\n# route-map test_2 deny 10\n#  match security-group source tag 10 20\n#  match local-preference 55 105\n#  match mpls-label\n#  match ipv6 address test_ip_acl\n#  match ipv6 next-hop prefix-list test_new\n#  match ipv6 route-source route_src_acl\n#  set automatic-tag\n#  set ip precedence critical\n#  set ip address prefix-list 192.0.2.1\n#  set aigp-metric 100\n#  set extcommunity cost pre-bestpath 10 100\n#  set ip df 1\n#  set ip next-hop verify-availability 198.51.111.1 100 track 10\n#  set ip next-hop recursive global 198.51.110.1\n\n# Using Rendered\n\n- name: Render the commands for provided  configuration\n  cisco.ios.ios_route_maps:\n    config:\n      - route_map: test_1\n        entries:\n          - sequence: 10\n            action: deny\n            description: this is test route\n            match:\n              ip:\n                next_hop:\n                  prefix_lists:\n                    - test_1_new\n                    - test_2_new\n                route_source:\n                  acls:\n                    - 10\n              security_group:\n                source:\n                  - 10\n                  - 20\n              local_preference:\n                value:\n                  - 50\n                  - 100\n              mpls_label: true\n          - sequence: 20\n            action: deny\n            continue_entry:\n              entry_sequence: 100\n            match:\n              additional_paths:\n                all: true\n                group_best: true\n              as_path:\n                acls:\n                  - 100\n                  - 200\n              ipv6:\n                address:\n                  acl: test_acl_20\n              route_type:\n                level_1: true\n              tag:\n                tag_list:\n                  - test_match_tag\n              track: 105\n      - route_map: test_2\n        entries:\n          - sequence: 10\n            action: deny\n            match:\n              ipv6:\n                address:\n                  acl: test_ip_acl\n                next_hop:\n                  prefix_list: test_new\n                route_source:\n                  acl: route_src_acl\n              security_group:\n                source:\n                  - 10\n                  - 20\n              local_preference:\n                value:\n                  - 55\n                  - 105\n              mpls_label: true\n            set:\n              aigp_metric:\n                value: 100\n              automatic_tag: true\n              extcommunity:\n                cost:\n                  id: 10\n                  cost_value: 100\n                  pre_bestpath: true\n              ip:\n                address: 192.0.2.1\n                df: 1\n                next_hop:\n                  recursive:\n                    global_route: true\n                    address: 198.51.110.1\n                  verify_availability:\n                    address: 198.51.111.1\n                    sequence: 100\n                    track: 10\n                precedence:\n                  critical: true\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n#\n#  \"rendered\": [\n#      \"route-map test_2 deny 10\",\n#      \"match security-group source tag 10 20\",\n#      \"match local-preference 55 105\",\n#      \"match mpls-label\",\n#      \"match ipv6 next-hop prefix-list test_new\",\n#      \"match ipv6 route-source route_src_acl\",\n#      \"match ipv6 address test_ip_acl\",\n#      \"set extcommunity cost pre-bestpath 10 100\",\n#      \"set ip df 1\",\n#      \"set ip next-hop recursive global 198.51.110.1\",\n#      \"set ip next-hop verify-availability 198.51.111.1 100 track 10\",\n#      \"set ip precedence critical\",\n#      \"set ip address prefix-list 192.0.2.1\",\n#      \"set automatic-tag\",\n#      \"set aigp-metric 100\",\n#      \"route-map test_1 deny 20\",\n#      \"continue 100\",\n#      \"match track 105\",\n#      \"match tag list test_match_tag\",\n#      \"match ipv6 address test_acl_20\",\n#      \"match route-type level-1\",\n#      \"match as-path 200 100\",\n#      \"match additional-paths advertise-set all group-best\",\n#      \"route-map test_1 deny 10\",\n#      \"description this is test route\",\n#      \"match security-group source tag 10 20\",\n#      \"match ip next-hop prefix-list test_2_new test_1_new\",\n#      \"match ip route-source 10\",\n#      \"match local-preference 100 50\",\n#      \"match mpls-label\"\n#     ]\n\n# Using Parsed\n\n# File: parsed.cfg\n# ----------------\n#\n# route-map test_1 deny 10\n#  description this is test route\n#  match ip next-hop prefix-list test_2_new test_1_new\n#  match ip route-source 10\n#  match security-group source tag 10 20\n#  match local-preference 100 50\n#  match mpls-label\n# route-map test_1 deny 20\n#  match track  105\n#  match tag list test_match_tag\n#  match route-type level-1\n#  match additional-paths advertise-set all group-best\n#  match as-path 200 100\n#  match ipv6 address test_acl_20\n#  continue 100\n# route-map test_2 deny 10\n#  match security-group source tag 10 20\n#  match local-preference 55 105\n#  match mpls-label\n#  match ipv6 address test_ip_acl\n#  match ipv6 next-hop prefix-list test_new\n#  match ipv6 route-source route_src_acl\n#  set automatic-tag\n#  set ip precedence critical\n#  set ip address prefix-list 192.0.2.1\n#  set aigp-metric 100\n#  set extcommunity cost pre-bestpath 10 100\n#  set ip df 1\n#  set ip next-hop verify-availability 198.51.111.1 100 track 10\n#  set ip next-hop recursive global 198.51.110.1\n\n- name: Parse the provided configuration with the existing running configuration\n  cisco.ios.ios_route_maps:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n#\n# \"parsed\": [\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"deny\",\n#                     \"description\": \"this is test route\",\n#                     \"match\": {\n#                         \"ip\": {\n#                             \"next_hop\": {\n#                                 \"prefix_lists\": [\n#                                     \"test_2_new\",\n#                                     \"test_1_new\"\n#                                 ]\n#                             },\n#                             \"route_source\": {\n#                                 \"acls\": [\n#                                     \"10\"\n#                                 ]\n#                             }\n#                         },\n#                         \"local_preference\": {\n#                             \"value\": [\n#                                 \"100\",\n#                                 \"50\"\n#                             ]\n#                         },\n#                         \"mpls_label\": true,\n#                         \"security_group\": {\n#                             \"source\": [\n#                                 10,\n#                                 20\n#                             ]\n#                         }\n#                     },\n#                     \"sequence\": 10\n#                 },\n#                 {\n#                     \"action\": \"deny\",\n#                     \"continue_entry\": {\n#                         \"entry_sequence\": 100\n#                     },\n#                     \"match\": {\n#                         \"additional_paths\": {\n#                             \"all\": true,\n#                             \"group_best\": true\n#                         },\n#                         \"as_path\": {\n#                             \"acls\": [\n#                                 200,\n#                                 100\n#                             ]\n#                         },\n#                         \"ipv6\": {\n#                             \"address\": {\n#                                 \"acl\": \"test_acl_20\"\n#                             }\n#                         },\n#                         \"route_type\": {\n#                             \"external\": {\n#                                 \"set\": true\n#                             },\n#                             \"level_1\": true,\n#                             \"nssa_external\": {\n#                                 \"set\": true\n#                             }\n#                         },\n#                         \"tag\": {\n#                             \"tag_list\": [\n#                                 \"test_match_tag\"\n#                             ]\n#                         },\n#                         \"track\": 105\n#                     },\n#                     \"sequence\": 20\n#                 }\n#             ],\n#             \"route_map\": \"test_1\"\n#         },\n#         {\n#             \"entries\": [\n#                 {\n#                     \"action\": \"deny\",\n#                     \"match\": {\n#                         \"ipv6\": {\n#                             \"address\": {\n#                                 \"acl\": \"test_ip_acl\"\n#                             },\n#                             \"next_hop\": {\n#                                 \"prefix_list\": \"test_new\"\n#                             },\n#                             \"route_source\": {\n#                                 \"acl\": \"route_src_acl\"\n#                             }\n#                         },\n#                         \"local_preference\": {\n#                             \"value\": [\n#                                 \"55\",\n#                                 \"105\"\n#                             ]\n#                         },\n#                         \"mpls_label\": true,\n#                         \"security_group\": {\n#                             \"source\": [\n#                                 10,\n#                                 20\n#                             ]\n#                         }\n#                     },\n#                     \"sequence\": 10,\n#                     \"set\": {\n#                         \"aigp_metric\": {\n#                             \"value\": 100\n#                         },\n#                         \"automatic_tag\": true,\n#                         \"extcommunity\": {\n#                             \"cost\": {\n#                                 \"cost_value\": 100,\n#                                 \"id\": \"10\",\n#                                 \"pre_bestpath\": true\n#                             }\n#                         },\n#                         \"ip\": {\n#                             \"address\": \"192.0.2.1\",\n#                             \"df\": 1,\n#                             \"next_hop\": {\n#                                 \"recursive\": {\n#                                     \"address\": \"198.51.110.1\",\n#                                     \"global_route\": true\n#                                 },\n#                                 \"verify_availability\": {\n#                                     \"address\": \"198.51.111.1\",\n#                                     \"sequence\": 100,\n#                                     \"track\": 10\n#                                 }\n#                             },\n#                             \"precedence\": {\n#                                 \"critical\": true\n#                             }\n#                         }\n#                     }\n#                 }\n#             ],\n#             \"route_map\": \"test_2\"\n#         }\n#     ]\n\n"
  },
  "cisco.ios.ios_snmp_server": {
    "doc": {
      "description": "This module provides declarative management of SNMP server on Cisco IOS devices.",
      "has_action": true,
      "notes": "Tested against Cisco IOSv Version 15.6.\nThis module works with connection C(network_cli).",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of SNMP server configuration",
          "type": "dict",
          "required": false,
          "suboptions": {
            "accounting": {
              "aliases": [],
              "description": "SNMP Accounting parameters",
              "type": "dict",
              "required": false,
              "suboptions": {
                "command": {
                  "aliases": [],
                  "description": "For SNMP set commands",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "cache": {
              "aliases": [],
              "description": "Enable SNMP cache and MIB expiry interval",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "chassis_id": {
              "aliases": [],
              "description": "String to uniquely identify this chassis (Hexadecimal)",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "communities": {
              "aliases": [],
              "description": "Community name configuration.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "acl_v4": {
                  "aliases": [],
                  "description": "standard access-list name",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "acl_v6": {
                  "aliases": [],
                  "description": "IPv6 access list name",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Community name (default RO)",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "ro": {
                  "aliases": [],
                  "description": "Only reads are permitted",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "rw": {
                  "aliases": [],
                  "description": "Read-write access",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "view": {
                  "aliases": [],
                  "description": "MIB view name",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "contact": {
              "aliases": [],
              "description": "Text for mib object sysContact",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "context": {
              "aliases": [],
              "description": "Create/Delete a context apart from default",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "drop": {
              "aliases": [],
              "description": "Silently drop SNMP packets",
              "type": "dict",
              "required": false,
              "suboptions": {
                "unknown_user": {
                  "aliases": [],
                  "description": "Silently drop unknown v3 user packets",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "vrf_traffic": {
                  "aliases": [],
                  "description": "Silently drop SNMP packets that come on VRF interfaces",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "engine_id": {
              "aliases": [],
              "description": "Configure a local or remote SNMPv3 engineID",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "id": {
                  "aliases": [],
                  "description": "engine ID octet string",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "local": {
                  "aliases": [],
                  "description": "Local SNMP agent",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "remote": {
                  "aliases": [],
                  "description": "Remote SNMP agent",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "host": {
                      "aliases": [],
                      "description": "Hostname or IP address of remote SNMP notification host",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "udp_port": {
                      "aliases": [],
                      "description": "The remote SNMP notification host's UDP port number.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "vrf": {
                      "aliases": [],
                      "description": "The remote notification host's VPN routing instance",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "file_transfer": {
              "aliases": [],
              "description": "File transfer related commands",
              "type": "dict",
              "required": false,
              "suboptions": {
                "access_group": {
                  "aliases": [],
                  "description": "Access control for file transfers",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "protocol": {
                  "aliases": [],
                  "description": "Access control protocol for file transfers",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                }
              }
            },
            "groups": {
              "aliases": [],
              "description": "Define a User Security Model group",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "acl_v4": {
                  "aliases": [],
                  "description": "specify an access-list associated with this group",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "acl_v6": {
                  "aliases": [],
                  "description": "specify an access-list associated with this group",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "context": {
                  "aliases": [],
                  "description": "Specify a context to associate with the group",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "group": {
                  "aliases": [],
                  "description": "SNMP group for the user",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "notify": {
                  "aliases": [],
                  "description": "View to restrict notifications",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "read": {
                  "aliases": [],
                  "description": "View to restrict read access",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "version": {
                  "aliases": [],
                  "description": "snmp security group version",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "v1",
                    "v3",
                    "v2c"
                  ],
                  "suboptions": {}
                },
                "version_option": {
                  "aliases": [],
                  "description": "community name to the host.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "auth",
                    "noauth",
                    "priv"
                  ],
                  "suboptions": {}
                },
                "write": {
                  "aliases": [],
                  "description": "View to restrict write access",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "hosts": {
              "aliases": [],
              "description": "Specify hosts to receive SNMP notifications",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "community_string": {
                  "aliases": [],
                  "description": "SNMPv1/v2c community string or SNMPv3 user name",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "host": {
                  "aliases": [],
                  "description": "Hostname or IP address of SNMP notification host.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "informs": {
                  "aliases": [],
                  "description": "Use SNMP inform messages.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "traps": {
                  "aliases": [],
                  "description": "Use SNMP trap messages",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "version": {
                  "aliases": [],
                  "description": "Notification message SNMP version.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "1",
                    "2c",
                    "3"
                  ],
                  "suboptions": {}
                },
                "version_option": {
                  "aliases": [],
                  "description": "community name to the host.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "auth",
                    "noauth",
                    "priv"
                  ],
                  "suboptions": {}
                },
                "vrf": {
                  "aliases": [],
                  "description": "Specify the VRF in which the host is configured",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "if_index": {
              "aliases": [],
              "description": "Enable ifindex persistence",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "inform": {
              "aliases": [],
              "description": "Configure SNMP Informs options",
              "type": "dict",
              "required": false,
              "suboptions": {
                "pending": {
                  "aliases": [],
                  "description": "Set number of unacked informs to hold",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "retries": {
                  "aliases": [],
                  "description": "Set retry count for informs",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "timeout": {
                  "aliases": [],
                  "description": "Set timeout for informs",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "ip": {
              "aliases": [],
              "description": "IP ToS configuration for SNMP traffic",
              "type": "dict",
              "required": false,
              "suboptions": {
                "dscp": {
                  "aliases": [],
                  "description": "IP DSCP value for SNMP traffic",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "precedence": {
                  "aliases": [],
                  "description": "IP Precedence value for SNMP traffic",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "location": {
              "aliases": [],
              "description": "Text for mib object sysLocation",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "manager": {
              "aliases": [],
              "description": "Modify SNMP manager parameters",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "packet_size": {
              "aliases": [],
              "description": "Largest SNMP packet size",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "password_policy": {
              "aliases": [],
              "description": "SNMP v3 users password policy",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "change": {
                  "aliases": [],
                  "description": "Number of Character changes b/w old and new password",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "digits": {
                  "aliases": [],
                  "description": "Number of digits",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "lower_case": {
                  "aliases": [],
                  "description": "Number of lower-case characters",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "max_len": {
                  "aliases": [],
                  "description": "Maximum password length",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "min_len": {
                  "aliases": [],
                  "description": "Minimum password length",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "policy_name": {
                  "aliases": [],
                  "description": "Name of the policy",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "special_char": {
                  "aliases": [],
                  "description": "Number of special case character",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "upper_case": {
                  "aliases": [],
                  "description": "Number of upper-case characters",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "username": {
                  "aliases": [],
                  "description": "Name of the user",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "queue_length": {
              "aliases": [],
              "description": "Message queue length for each TRAP host",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "source_interface": {
              "aliases": [],
              "description": "Source interface to be used for sending out SNMP notifications.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "system_shutdown": {
              "aliases": [],
              "description": "Enable use of the SNMP reload command",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "trap_source": {
              "aliases": [],
              "description": "Assign an interface for the source address of all traps",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "trap_timeout": {
              "aliases": [],
              "description": "Set timeout for TRAP message retransmissions",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "traps": {
              "aliases": [],
              "description": "Enable SNMP Traps",
              "type": "dict",
              "required": false,
              "suboptions": {
                "auth_framework": {
                  "aliases": [],
                  "description": "Enable SNMP CISCO-AUTH-FRAMEWORK-MIB traps",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "enable": {
                      "aliases": [],
                      "description": "Enable/disable auth framework",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "sec_violation": {
                      "aliases": [],
                      "description": "Mode sec_violation",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bfd": {
                  "aliases": [],
                  "description": "Allow SNMP BFD traps",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "enable": {
                      "aliases": [],
                      "description": "Enable/disable bfd",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "session_down": {
                      "aliases": [],
                      "description": "Enable BFD session down traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "session_up": {
                      "aliases": [],
                      "description": "Enable BFD session up traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "bgp": {
                  "aliases": [],
                  "description": "Allow bgp traps",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "cbgp2": {
                      "aliases": [],
                      "description": "Enable BGP MIBv2 traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "enable": {
                      "aliases": [],
                      "description": "Enable/disable bgp traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "state_changes": {
                      "aliases": [],
                      "description": "Traps for FSM state changes",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "all": {
                          "aliases": [],
                          "description": "CISCO specific trap for all fsm state changes",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "backward_trans": {
                          "aliases": [],
                          "description": "CISCO specific trap for backward transition",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "enable": {
                          "aliases": [],
                          "description": "Enable/disable bgp state_changes traps",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "limited": {
                          "aliases": [],
                          "description": "Trap for standard backward transition and established",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "threshold": {
                      "aliases": [],
                      "description": "Mode threshold",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "prefix": {
                          "aliases": [],
                          "description": "Enable/disable bgp threshold traps",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "bridge": {
                  "aliases": [],
                  "description": "Allow bridge related traps",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "enable": {
                      "aliases": [],
                      "description": "Enable/disable bridge traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "newroot": {
                      "aliases": [],
                      "description": "Enable SNMP STP Bridge MIB newroot traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "topologychange": {
                      "aliases": [],
                      "description": "Enable SNMP STP Bridge MIB topologychange traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "casa": {
                  "aliases": [],
                  "description": "Enable SNMP config casa traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "cef": {
                  "aliases": [],
                  "description": "Allow cef related traps",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "enable": {
                      "aliases": [],
                      "description": "Enable/disable cef traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "inconsistency": {
                      "aliases": [],
                      "description": "Enable SNMP CEF Inconsistency traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "peer_fib_state_change": {
                      "aliases": [],
                      "description": "Enable SNMP CEF Peer FIB State change traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "peer_state_change": {
                      "aliases": [],
                      "description": "Enable SNMP CEF Peer state change traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "resource_failure": {
                      "aliases": [],
                      "description": "Enable SNMP CEF Resource Failure traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "cnpd": {
                  "aliases": [],
                  "description": "Enable SNMP cnpd traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "config": {
                  "aliases": [],
                  "description": "Enable SNMP config traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "config_copy": {
                  "aliases": [],
                  "description": "Enable SNMP config copy traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "config_ctid": {
                  "aliases": [],
                  "description": "Enable SNMP config ctid traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "cpu": {
                  "aliases": [],
                  "description": "Allow CPU related traps",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "enable": {
                      "aliases": [],
                      "description": "Enable/disable cpu traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "threshold": {
                      "aliases": [],
                      "description": "Mode threshold",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "dhcp": {
                  "aliases": [],
                  "description": "Enable SNMP dhcp traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "dlsw": {
                  "aliases": [],
                  "description": "Allow dlsw related traps",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "circuit": {
                      "aliases": [],
                      "description": "Enable SNMP dlsw circuit traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "enable": {
                      "aliases": [],
                      "description": "Enable/disable cef traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "tconn": {
                      "aliases": [],
                      "description": "Enable SNMP dlsw peer transport connection traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "eigrp": {
                  "aliases": [],
                  "description": "Enable SNMP eigrp traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "energywise": {
                  "aliases": [],
                  "description": "Enable SNMP energywise traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "entity": {
                  "aliases": [],
                  "description": "Enable SNMP entity traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "ethernet": {
                  "aliases": [],
                  "description": "Allow ethernet traps",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "cfm": {
                      "aliases": [],
                      "description": "Enable SNMP Ethernet CFM traps",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "alarm": {
                          "aliases": [],
                          "description": "Enable SNMP Ethernet CFM fault alarm trap",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "cc": {
                          "aliases": [],
                          "description": "Enable SNMP Ethernet CC trap",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "config": {
                              "aliases": [],
                              "description": "Enable SNMP Ethernet CFM configuration error traps",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "cross_connect": {
                              "aliases": [],
                              "description": "Enable SNMP Ethernet CFM cross-connect traps",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "loop": {
                              "aliases": [],
                              "description": "Enable SNMP Ethernet CFM loop traps",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "mep_down": {
                              "aliases": [],
                              "description": "Enable SNMP Ethernet CFM CC Down traps",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "mep_up": {
                              "aliases": [],
                              "description": "Enable SNMP Ethernet CFM CC Up traps",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "crosscheck": {
                          "aliases": [],
                          "description": "Enable SNMP Ethernet CC crosscheck trap",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "mep_missing": {
                              "aliases": [],
                              "description": "Enable SNMP Ethernet CC crosscheck missing trap",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "mep_unknown": {
                              "aliases": [],
                              "description": "Enable SNMP Ethernet CC crosscheck unknown traps",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "service_up": {
                              "aliases": [],
                              "description": "Enable SNMP Ethernet CC crosscheck service traps",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "evc": {
                      "aliases": [],
                      "description": "Enable SNMP Ethernet EVC traps",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "create": {
                          "aliases": [],
                          "description": "Enable SNMP Ethernet EVC create traps",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "delete": {
                          "aliases": [],
                          "description": "Enable SNMP Ethernet EVC delete traps",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "status": {
                          "aliases": [],
                          "description": "Enable SNMP Ethernet EVC status traps",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "event_manager": {
                  "aliases": [],
                  "description": "Enable SNMP event-manager traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "firewall": {
                  "aliases": [],
                  "description": "Enable SNMP firewall traps",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "enable": {
                      "aliases": [],
                      "description": "Enable/disable firewall traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "serverstatus": {
                      "aliases": [],
                      "description": "Enable firewall server status change trap",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "flowmon": {
                  "aliases": [],
                  "description": "Enable SNMP flowmon traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "frame_relay": {
                  "aliases": [],
                  "description": "Allow frame-relay traps",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "enable": {
                      "aliases": [],
                      "description": "Enable/disable frame-relay traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "subif": {
                      "aliases": [],
                      "description": "Enable SNMP frame-relay subinterface traps",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "count": {
                          "aliases": [],
                          "description": "Maximum number of traps sent per interval",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "enable": {
                          "aliases": [],
                          "description": "Enable/disable subif traps",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "interval": {
                          "aliases": [],
                          "description": "Interval duration in which to limit the number of traps sent",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "fru_ctrl": {
                  "aliases": [],
                  "description": "Enable SNMP fru-ctrl traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "hsrp": {
                  "aliases": [],
                  "description": "Enable SNMP hsrp traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "ike": {
                  "aliases": [],
                  "description": "Allow ike traps",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "policy": {
                      "aliases": [],
                      "description": "Enable IKE Policy traps",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "add": {
                          "aliases": [],
                          "description": "Enable IKE Policy add trap",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "delete": {
                          "aliases": [],
                          "description": "Enable IKE Policy delete trap",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "tunnel": {
                      "aliases": [],
                      "description": "Enable IKE Tunnel traps",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "start": {
                          "aliases": [],
                          "description": "Enable IKE Tunnel start trap",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "stop": {
                          "aliases": [],
                          "description": "Enable IKE Tunnel stop trap",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "ipmulticast": {
                  "aliases": [],
                  "description": "Enable SNMP ip multi cast traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "ipsec": {
                  "aliases": [],
                  "description": "Allow ike traps",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "cryptomap": {
                      "aliases": [],
                      "description": "Enable IPsec Cryptomap traps",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "add": {
                          "aliases": [],
                          "description": "Enable IPsec Cryptomap add trap",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "attach": {
                          "aliases": [],
                          "description": "Enable IPsec Cryptomap Attach trap",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "delete": {
                          "aliases": [],
                          "description": "Enable IPsec Cryptomap delete trap",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "detach": {
                          "aliases": [],
                          "description": "Enable IPsec Cryptomap Detach trap",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "too_many_sas": {
                      "aliases": [],
                      "description": "Enable IPsec Tunnel Start trap",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "tunnel": {
                      "aliases": [],
                      "description": "Enable IPsec Tunnel traps",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "start": {
                          "aliases": [],
                          "description": "Enable IPsec Tunnel start trap",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "stop": {
                          "aliases": [],
                          "description": "Enable IPsec Tunnel stop trap",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "ipsla": {
                  "aliases": [],
                  "description": "Enable SNMP ipsla traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "isis": {
                  "aliases": [],
                  "description": "Enable SNMP isis traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "l2tun": {
                  "aliases": [],
                  "description": "Allow SNMP l2tun traps",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "pseudowire_status": {
                      "aliases": [],
                      "description": "Enable BFD pseudo wire status traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "session": {
                      "aliases": [],
                      "description": "Enable BFD session traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "mpls_vpn": {
                  "aliases": [],
                  "description": "Enable SNMP mpls traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "msdp": {
                  "aliases": [],
                  "description": "Enable SNMP msdp traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "mvpn": {
                  "aliases": [],
                  "description": "Enable SNMP mvpn traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "ospf": {
                  "aliases": [],
                  "description": "Allow ospf related traps",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "cisco_specific": {
                      "aliases": [],
                      "description": "Cisco specific traps",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "error": {
                          "aliases": [],
                          "description": "error traps",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "lsa": {
                          "aliases": [],
                          "description": "Lsa related traps",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "retransmit": {
                          "aliases": [],
                          "description": "Packet retransmit traps",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "state_change": {
                          "aliases": [],
                          "description": "state change traps",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "nssa_trans_change": {
                              "aliases": [],
                              "description": "Nssa translator state changes",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            },
                            "shamlink": {
                              "aliases": [],
                              "description": "Config mismatch errors on virtual interfaces",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "interface": {
                                  "aliases": [],
                                  "description": "Sham link interface state changes",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "neighbor": {
                                  "aliases": [],
                                  "description": "Sham link neighbor state changes",
                                  "type": "bool",
                                  "required": false,
                                  "suboptions": {}
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "error": {
                      "aliases": [],
                      "description": "Enable error traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "lsa": {
                      "aliases": [],
                      "description": "Enable/disable ospf lsa traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "retransmit": {
                      "aliases": [],
                      "description": "Enable/disable ospf retransmit traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "state_change": {
                      "aliases": [],
                      "description": "Enable/disable state change traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "pim": {
                  "aliases": [],
                  "description": "Allow PIM traps",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "enable": {
                      "aliases": [],
                      "description": "Enable/disable PIM traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "invalid_pim_message": {
                      "aliases": [],
                      "description": "Enable invalid pim message trap",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "neighbor_change": {
                      "aliases": [],
                      "description": "Enable neighbor change trap",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "rp_mapping_change": {
                      "aliases": [],
                      "description": "Enable rp mapping change trap",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "pki": {
                  "aliases": [],
                  "description": "Enable SNMP pki traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "pw_vc": {
                  "aliases": [],
                  "description": "Enable SNMP pw vc traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "rsvp": {
                  "aliases": [],
                  "description": "Enable SNMP RSVP traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "snmp": {
                  "aliases": [],
                  "description": "Enable SNMP traps",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "authentication": {
                      "aliases": [],
                      "description": "Enable authentication trap",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "coldstart": {
                      "aliases": [],
                      "description": "Enable coldStart trap",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "linkdown": {
                      "aliases": [],
                      "description": "Enable linkDown trap",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "linkup": {
                      "aliases": [],
                      "description": "Enable linkUp trap",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "warmstart": {
                      "aliases": [],
                      "description": "Enable warmStart trap",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "syslog": {
                  "aliases": [],
                  "description": "Enable SNMP syslog traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "transceiver_all": {
                  "aliases": [],
                  "description": "Enable SNMP transceiver traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "tty": {
                  "aliases": [],
                  "description": "Enable SNMP tty TCP connection traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "vrfmib": {
                  "aliases": [],
                  "description": "Allow vrfmib traps",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "vnet_trunk_down": {
                      "aliases": [],
                      "description": "Enable vnet-trunk-down traps",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "vnet_trunk_up": {
                      "aliases": [],
                      "description": "Enable vnet-trunk-up trap",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "vrf_down": {
                      "aliases": [],
                      "description": "Enable vrf-down trap",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "vrf_up": {
                      "aliases": [],
                      "description": "Enable vrf-up trap",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "vrrp": {
                  "aliases": [],
                  "description": "Enable SNMP vrrp traps",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "users": {
              "aliases": [],
              "description": "Define a user who can access the SNMP engine",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "acl_v4": {
                  "aliases": [],
                  "description": "Access list ipv4 associated",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "acl_v6": {
                  "aliases": [],
                  "description": "Access list ipv6 associated",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "group": {
                  "aliases": [],
                  "description": "SNMP group for the user.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "remote": {
                  "aliases": [],
                  "description": "System where an SNMPv3 user is hosted",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "udp_port": {
                  "aliases": [],
                  "description": "UDP port used by the remote SNMP system",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "username": {
                  "aliases": [],
                  "description": "SNMP user name",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "version": {
                  "aliases": [],
                  "description": "SNMP security version",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "v1",
                    "v2c",
                    "v3"
                  ],
                  "suboptions": {}
                },
                "version_option": {
                  "aliases": [],
                  "description": "community name to the host.",
                  "type": "str",
                  "required": false,
                  "choices": [
                    "auth",
                    "access",
                    "encrypted"
                  ],
                  "suboptions": {}
                },
                "vrf": {
                  "aliases": [],
                  "description": "The remote SNMP entity's VPN Routing instance",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "views": {
              "aliases": [],
              "description": "Define an SNMPv2 MIB view",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "excluded": {
                  "aliases": [],
                  "description": "MIB family is excluded from the view",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "family_name": {
                  "aliases": [],
                  "description": "MIB view family name",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "included": {
                  "aliases": [],
                  "description": "MIB family is included in the view",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "Name of the view",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(show running-config | include snmp-server).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in.\nRefer to examples for more details.\nThe states I(replaced) and I(overridden) have identical behaviour for this module.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "parsed",
            "gathered",
            "rendered"
          ],
          "suboptions": {}
        }
      },
      "short_description": "snmp_server resource module",
      "version_added": "2.6.0"
    },
    "examples": "\n# Using state: merged\n\n# Before state:\n# -------------\n\n# router-ios#show running-config | section ^snmp-server\n# --------------------- EMPTY -----------------\n\n# Merged play:\n# ------------\n\n- name: Apply the provided configuration\n  cisco.ios.ios_snmp_server:\n    config:\n      communities:\n      -   acl_v4: testACL\n          name: mergedComm\n          rw: true\n      contact: contact updated using merged\n      engine_id:\n      -   id: AB0C5342FF0F\n          remote:\n              host: 172.16.0.12\n              udp_port: 25\n      groups:\n      -   group: mergedGroup\n          version: v3\n          version_option: auth\n      file_transfer:\n              access_group: test\n              protocol:\n              - ftp\n      hosts:\n      -   community_string: mergedComm\n          host: 172.16.2.9\n          informs: true\n          traps:\n          - msdp\n          - stun\n          - pki\n          version: 2c\n      -   community_string: mergedComm\n          host: 172.16.2.9\n          traps:\n          - slb\n          - pki\n      password_policy:\n      -   change: 3\n          digits: 23\n          lower_case: 12\n          max_len: 24\n          policy_name: MergedPolicy\n          special_char: 32\n          upper_case: 12\n      -   change: 43\n          min_len: 12\n          policy_name: MergedPolicy2\n          special_char: 22\n          upper_case: 12\n      -   change: 11\n          digits: 23\n          max_len: 12\n          min_len: 12\n          policy_name: policy3\n          special_char: 22\n          upper_case: 12\n      traps:\n          cef:\n              enable: true\n              inconsistency: true\n              peer_fib_state_change: true\n              peer_state_change: true\n              resource_failure: true\n          msdp: true\n          ospf:\n              cisco_specific:\n                  error: true\n                  lsa: true\n                  retransmit: true\n                  state_change:\n                      nssa_trans_change: true\n                      shamlink:\n                          interface: true\n                          neighbor: true\n              error: true\n              lsa: true\n              retransmit: true\n              state_change: true\n          syslog: true\n          tty: true\n      users:\n      -   acl_v4: '24'\n          group: dev\n          username: userPaul\n          version: v1\n    state: merged\n\n# Commands Fired:\n# ---------------\n\n# \"commands\": [\n#         \"snmp-server contact contact updated using merged\",\n#         \"snmp-server file-transfer access-group test protocol ftp\",\n#         \"snmp-server enable traps msdp\",\n#         \"snmp-server enable traps syslog\",\n#         \"snmp-server enable traps tty\",\n#         \"snmp-server enable traps ospf cisco-specific errors\",\n#         \"snmp-server enable traps ospf cisco-specific retransmit\",\n#         \"snmp-server enable traps ospf cisco-specific lsa\",\n#         \"snmp-server enable traps ospf cisco-specific state-change nssa-trans-change\",\n#         \"snmp-server enable traps ospf cisco-specific state-change shamlink interface\",\n#         \"snmp-server enable traps ospf cisco-specific state-change shamlink neighbor\",\n#         \"snmp-server enable traps ospf errors\",\n#         \"snmp-server enable traps ospf retransmit\",\n#         \"snmp-server enable traps ospf lsa\",\n#         \"snmp-server enable traps ospf state-change\",\n#         \"snmp-server enable traps cef resource-failure peer-state-change peer-fib-state-change inconsistency\",\n#         \"snmp-server host 172.16.2.9 informs version 2c mergedComm msdp stun pki\",\n#         \"snmp-server host 172.16.2.9 mergedComm slb pki\",\n#         \"snmp-server group mergedGroup v3 auth\",\n#         \"snmp-server engineID remote 172.16.0.12 udp-port 25 AB0C5342FF0F\",\n#         \"snmp-server community mergedComm rw testACL\",\n#         \"snmp-server password-policy MergedPolicy define max-len 24 upper-case 12 lower-case 12 special-char 32 digits 23 change 3\",\n#         \"snmp-server password-policy MergedPolicy2 define min-len 12 upper-case 12 special-char 22 change 43\",\n#         \"snmp-server password-policy policy3 define min-len 12 max-len 12 upper-case 12 special-char 22 digits 23 change 11\",\n#         \"snmp-server user userPaul dev v1 access 24\"\n# ],\n\n\n# After state:\n# ------------\n\n# router-ios#show running-config | section ^snmp-server\n# snmp-server engineID remote 172.16.0.12 udp-port 25 AB0C5342FF0F\n# snmp-server user userPaul dev v1 access 24\n# snmp-server group mergedGroup v3 auth\n# snmp-server community mergedComm RW testACL\n# snmp-server contact contact updated using merged\n# snmp-server enable traps tty\n# snmp-server enable traps ospf state-change\n# snmp-server enable traps ospf errors\n# snmp-server enable traps ospf retransmit\n# snmp-server enable traps ospf lsa\n# snmp-server enable traps ospf cisco-specific state-change nssa-trans-change\n# snmp-server enable traps ospf cisco-specific state-change shamlink interface\n# snmp-server enable traps ospf cisco-specific state-change shamlink neighbor\n# snmp-server enable traps ospf cisco-specific errors\n# snmp-server enable traps ospf cisco-specific retransmit\n# snmp-server enable traps ospf cisco-specific lsa\n# snmp-server enable traps cef resource-failure peer-state-change peer-fib-state-change inconsistency\n# snmp-server enable traps msdp\n# snmp-server enable traps syslog\n# snmp-server host 172.16.2.9 informs version 2c mergedComm  msdp stun pki\n# snmp-server host 172.16.2.9 mergedComm  slb pki\n# snmp-server file-transfer access-group test protocol ftp\n# snmp-server password-policy MergedPolicy define max-len 24 upper-case 12 lower-case 12 special-char 32 digits 23 change 3\n# snmp-server password-policy MergedPolicy2 define min-len 12 upper-case 12 special-char 22 change 43\n# snmp-server password-policy policy3 define min-len 12 max-len 12 upper-case 12 special-char 22 digits 23 change 11\n\n# Using state: deleted\n\n# Before state:\n# -------------\n\n# router-ios#show running-config | section ^snmp-server\n# snmp-server engineID remote 172.16.0.12 udp-port 25 AB0C5342FF0F\n# snmp-server user userPaul dev v1 access 24\n# snmp-server group mergedGroup v3 auth\n# snmp-server community mergedComm RW testACL\n# snmp-server contact contact updated using merged\n# snmp-server enable traps tty\n# snmp-server enable traps ospf state-change\n# snmp-server enable traps ospf errors\n# snmp-server enable traps ospf retransmit\n# snmp-server enable traps ospf lsa\n# snmp-server enable traps ospf cisco-specific state-change nssa-trans-change\n# snmp-server enable traps ospf cisco-specific state-change shamlink interface\n# snmp-server enable traps ospf cisco-specific state-change shamlink neighbor\n# snmp-server enable traps ospf cisco-specific errors\n# snmp-server enable traps ospf cisco-specific retransmit\n# snmp-server enable traps ospf cisco-specific lsa\n# snmp-server enable traps cef resource-failure peer-state-change peer-fib-state-change inconsistency\n# snmp-server enable traps msdp\n# snmp-server enable traps syslog\n# snmp-server host 172.16.2.9 informs version 2c mergedComm  msdp stun pki\n# snmp-server host 172.16.2.9 mergedComm  slb pki\n# snmp-server file-transfer access-group test protocol ftp\n# snmp-server password-policy MergedPolicy define max-len 24 upper-case 12 lower-case 12 special-char 32 digits 23 change 3\n# snmp-server password-policy MergedPolicy2 define min-len 12 upper-case 12 special-char 22 change 43\n# snmp-server password-policy policy3 define min-len 12 max-len 12 upper-case 12 special-char 22 digits 23 change 11\n\n# Deleted play:\n# -------------\n\n- name: Remove all existing configuration\n  cisco.ios.ios_snmp_server:\n    state: deleted\n\n# Commands Fired:\n# ---------------\n\n# \"commands\": [\n#     \"no snmp-server contact contact updated using merged\",\n#     \"no snmp-server file-transfer access-group test protocol ftp\",\n#     \"no snmp-server enable traps msdp\",\n#     \"no snmp-server enable traps syslog\",\n#     \"no snmp-server enable traps tty\",\n#     \"no snmp-server enable traps ospf cisco-specific errors\",\n#     \"no snmp-server enable traps ospf cisco-specific retransmit\",\n#     \"no snmp-server enable traps ospf cisco-specific lsa\",\n#     \"no snmp-server enable traps ospf cisco-specific state-change nssa-trans-change\",\n#     \"no snmp-server enable traps ospf cisco-specific state-change shamlink interface\",\n#     \"no snmp-server enable traps ospf cisco-specific state-change shamlink neighbor\",\n#     \"no snmp-server enable traps ospf errors\",\n#     \"no snmp-server enable traps ospf retransmit\",\n#     \"no snmp-server enable traps ospf lsa\",\n#     \"no snmp-server enable traps ospf state-change\",\n#     \"no snmp-server enable traps cef resource-failure peer-state-change peer-fib-state-change inconsistency\",\n#     \"no snmp-server host 172.16.2.9 informs version 2c mergedComm msdp stun pki\",\n#     \"no snmp-server host 172.16.2.9 mergedComm slb pki\",\n#     \"no snmp-server group mergedGroup v3 auth\",\n#     \"no snmp-server engineID remote 172.16.0.12 udp-port 25 AB0C5342FF0F\",\n#     \"no snmp-server community mergedComm rw testACL\",\n#     \"no snmp-server password-policy MergedPolicy define max-len 24 upper-case 12 lower-case 12 special-char 32 digits 23 change 3\",\n#     \"no snmp-server password-policy MergedPolicy2 define min-len 12 upper-case 12 special-char 22 change 43\",\n#     \"no snmp-server password-policy policy3 define min-len 12 max-len 12 upper-case 12 special-char 22 digits 23 change 11\",\n#     \"no snmp-server user userPaul dev v1 access 24\"\n# ],\n\n# After state:\n# ------------\n\n# router-ios#show running-config | section ^snmp-server\n# --------------------- EMPTY -----------------\n\n# Using state: overridden\n\n# Before state:\n# -------------\n\n# router-ios#show running-config | section ^snmp-server\n# snmp-server engineID remote 172.16.0.12 udp-port 25 AB0C5342FF0F\n# snmp-server user userPaul dev v1 access 24\n# snmp-server group mergedGroup v3 auth\n# snmp-server community mergedComm RW testACL\n# snmp-server contact contact updated using merged\n# snmp-server enable traps tty\n# snmp-server enable traps ospf state-change\n# snmp-server enable traps ospf errors\n# snmp-server enable traps ospf retransmit\n# snmp-server enable traps ospf lsa\n# snmp-server enable traps ospf cisco-specific state-change nssa-trans-change\n# snmp-server enable traps ospf cisco-specific state-change shamlink interface\n# snmp-server enable traps ospf cisco-specific state-change shamlink neighbor\n# snmp-server enable traps ospf cisco-specific errors\n# snmp-server enable traps ospf cisco-specific retransmit\n# snmp-server enable traps ospf cisco-specific lsa\n# snmp-server enable traps cef resource-failure peer-state-change peer-fib-state-change inconsistency\n# snmp-server enable traps msdp\n# snmp-server enable traps syslog\n# snmp-server host 172.16.2.9 informs version 2c mergedComm  msdp stun pki\n# snmp-server host 172.16.2.9 mergedComm  slb pki\n# snmp-server file-transfer access-group test protocol ftp\n# snmp-server password-policy MergedPolicy define max-len 24 upper-case 12 lower-case 12 special-char 32 digits 23 change 3\n# snmp-server password-policy MergedPolicy2 define min-len 12 upper-case 12 special-char 22 change 43\n# snmp-server password-policy policy3 define min-len 12 max-len 12 upper-case 12 special-char 22 digits 23 change 11\n\n# Overridden play:\n# ----------------\n\n- name: Override commands with provided configuration\n  cisco.ios.ios_snmp_server:\n    config:\n      location: 'location entry for snmp'\n      packet_size: 500\n      communities:\n        - acl_v4: acl_uq\n          name: communityOverriden\n          rw: true\n    state: overridden\n\n\n# Commands Fired:\n# ---------------\n# \"commands\": [\n#       \"no snmp-server contact contact updated using merged\",\n#       \"no snmp-server file-transfer access-group test protocol ftp\",\n#       \"snmp-server location location entry for snmp\",\n#       \"snmp-server packetsize 500\",\n#       \"no snmp-server enable traps msdp\",\n#       \"no snmp-server enable traps syslog\",\n#       \"no snmp-server enable traps tty\",\n#       \"no snmp-server enable traps ospf cisco-specific errors\",\n#       \"no snmp-server enable traps ospf cisco-specific retransmit\",\n#       \"no snmp-server enable traps ospf cisco-specific lsa\",\n#       \"no snmp-server enable traps ospf cisco-specific state-change nssa-trans-change\",\n#       \"no snmp-server enable traps ospf cisco-specific state-change shamlink interface\",\n#       \"no snmp-server enable traps ospf cisco-specific state-change shamlink neighbor\",\n#       \"no snmp-server enable traps ospf errors\",\n#       \"no snmp-server enable traps ospf retransmit\",\n#       \"no snmp-server enable traps ospf lsa\",\n#       \"no snmp-server enable traps ospf state-change\",\n#       \"no snmp-server enable traps cef resource-failure peer-state-change peer-fib-state-change inconsistency\",\n#       \"no snmp-server host 172.16.2.9 informs version 2c mergedComm msdp stun pki\",\n#       \"no snmp-server host 172.16.2.9 mergedComm slb pki\",\n#       \"no snmp-server group mergedGroup v3 auth\",\n#       \"no snmp-server engineID remote 172.16.0.12 udp-port 25 AB0C5342FF0F\",\n#       \"snmp-server community communityOvverriden rw acl_uq\",\n#       \"no snmp-server community mergedComm rw testACL\",\n#       \"no snmp-server password-policy MergedPolicy define max-len 24 upper-case 12 lower-case 12 special-char 32 digits 23 change 3\",\n#       \"no snmp-server password-policy MergedPolicy2 define min-len 12 upper-case 12 special-char 22 change 43\",\n#       \"no snmp-server password-policy policy3 define min-len 12 max-len 12 upper-case 12 special-char 22 digits 23 change 11\",\n#       \"no snmp-server user userPaul dev v1 access 24\"\n#     ],\n\n# After state:\n# ------------\n\n# router-ios#show running-config | section ^snmp-server\n# snmp-server community communityOverriden RW acl_uq\n# snmp-server packetsize 500\n# snmp-server location location entry for snmp\n\n# Using state: replaced\n\n# Before state:\n# -------------\n\n# router-ios#show running-config | section ^snmp-server\n# snmp-server community communityOverriden RW acl_uq\n# snmp-server packetsize 500\n# snmp-server location location entry for snmp\n\n# Replaced play:\n# --------------\n\n- name: Replace commands with provided configuration\n  cisco.ios.ios_snmp_server:\n    config:\n      location: 'updated location entry'\n      packet_size: 500\n      communities:\n        - acl_v4: acl_uq\n          name: communityOverriden\n          rw: true\n    state: replaced\n\n# Commands Fired:\n# ---------------\n\n# \"commands\": [\n#     \"snmp-server location updated location entry\"\n#     ],\n\n# After state:\n# ------------\n\n# router-ios#show running-config | section ^snmp-server\n# snmp-server community communityOverriden RW acl_uq\n# snmp-server packetsize 500\n# snmp-server location updated location entry\n\n# Using state: gathered\n\n# Before state:\n# -------------\n\n#router-ios#show running-config | section ^snmp-server\n# snmp-server engineID remote 172.16.0.12 udp-port 25 AB0C5342FF0F\n# snmp-server user userPaul dev v1 access 24\n# snmp-server group mergedGroup v3 auth\n# snmp-server community communityOvverriden RW acl_uq\n# snmp-server community mergedComm RW testACL\n# snmp-server packetsize 500\n# snmp-server location updated location entry\n# snmp-server contact contact updated using merged\n# snmp-server enable traps tty\n# snmp-server enable traps ospf state-change\n# snmp-server enable traps ospf errors\n# snmp-server enable traps ospf retransmit\n# snmp-server enable traps ospf lsa\n# snmp-server enable traps ospf cisco-specific state-change nssa-trans-change\n# snmp-server enable traps ospf cisco-specific state-change shamlink interface\n# snmp-server enable traps ospf cisco-specific state-change shamlink neighbor\n# snmp-server enable traps ospf cisco-specific errors\n# snmp-server enable traps ospf cisco-specific retransmit\n# snmp-server enable traps ospf cisco-specific lsa\n# snmp-server enable traps cef resource-failure peer-state-change peer-fib-state-change inconsistency\n# snmp-server enable traps msdp\n# snmp-server enable traps syslog\n# snmp-server host 172.16.2.9 informs version 2c mergedComm  msdp stun pki\n# snmp-server host 172.16.2.9 mergedComm  slb pki\n# snmp-server file-transfer access-group test protocol ftp\n# snmp-server password-policy MergedPolicy define max-len 24 upper-case 12 lower-case 12 special-char 32 digits 23 change 3\n# snmp-server password-policy MergedPolicy2 define min-len 12 upper-case 12 special-char 22 change 43\n# snmp-server password-policy policy3 define min-len 12 max-len 12 upper-case 12 special-char 22 digits 23 change 11\n\n# Gathered play:\n# --------------\n\n- name: Gather listed snmp config\n  cisco.ios.ios_snmp_server:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n\n#   \"gathered\": {\n#         \"communities\": [\n#             {\n#                 \"acl_v4\": \"acl_uq\",\n#                 \"name\": \"communityOvverriden\",\n#                 \"rw\": true\n#             },\n#             {\n#                 \"acl_v4\": \"testACL\",\n#                 \"name\": \"mergedComm\",\n#                 \"rw\": true\n#             }\n#         ],\n#         \"contact\": \"contact updated using merged\",\n#         \"engine_id\": [\n#             {\n#                 \"id\": \"AB0C5342FF0F\",\n#                 \"remote\": {\n#                     \"host\": \"172.16.0.12\",\n#                     \"udp_port\": 25\n#                 }\n#             }\n#         ],\n#         \"file_transfer\": {\n#             \"access_group\": \"test\",\n#             \"protocol\": [\n#                 \"ftp\"\n#             ]\n#         },\n#         \"groups\": [\n#             {\n#                 \"group\": \"mergedGroup\",\n#                 \"version\": \"v3\",\n#                 \"version_option\": \"auth\"\n#             }\n#         ],\n#         \"hosts\": [\n#             {\n#                 \"community_string\": \"mergedComm\",\n#                 \"host\": \"172.16.2.9\",\n#                 \"informs\": true,\n#                 \"traps\": [\n#                     \"msdp\",\n#                     \"stun\",\n#                     \"pki\"\n#                 ],\n#                 \"version\": \"2c\"\n#             },\n#             {\n#                 \"community_string\": \"mergedComm\",\n#                 \"host\": \"172.16.2.9\",\n#                 \"traps\": [\n#                     \"slb\",\n#                     \"pki\"\n#                 ]\n#             }\n#         ],\n#         \"location\": \"updated location entry\",\n#         \"packet_size\": 500,\n#         \"password_policy\": [\n#             {\n#                 \"change\": 3,\n#                 \"digits\": 23,\n#                 \"lower_case\": 12,\n#                 \"max_len\": 24,\n#                 \"policy_name\": \"MergedPolicy\",\n#                 \"special_char\": 32,\n#                 \"upper_case\": 12\n#             },\n#             {\n#                 \"change\": 43,\n#                 \"min_len\": 12,\n#                 \"policy_name\": \"MergedPolicy2\",\n#                 \"special_char\": 22,\n#                 \"upper_case\": 12\n#             },\n#             {\n#                 \"change\": 11,\n#                 \"digits\": 23,\n#                 \"max_len\": 12,\n#                 \"min_len\": 12,\n#                 \"policy_name\": \"policy3\",\n#                 \"special_char\": 22,\n#                 \"upper_case\": 12\n#             }\n#         ],\n#         \"traps\": {\n#             \"cef\": {\n#                 \"enable\": true,\n#                 \"inconsistency\": true,\n#                 \"peer_fib_state_change\": true,\n#                 \"peer_state_change\": true,\n#                 \"resource_failure\": true\n#             },\n#             \"msdp\": true,\n#             \"ospf\": {\n#                 \"cisco_specific\": {\n#                     \"error\": true,\n#                     \"lsa\": true,\n#                     \"retransmit\": true,\n#                     \"state_change\": {\n#                         \"nssa_trans_change\": true,\n#                         \"shamlink\": {\n#                             \"interface\": true,\n#                             \"neighbor\": true\n#                         }\n#                     }\n#                 },\n#                 \"error\": true,\n#                 \"lsa\": true,\n#                 \"retransmit\": true,\n#                 \"state_change\": true\n#             },\n#             \"syslog\": true,\n#             \"tty\": true\n#         },\n#         \"users\": [\n#             {\n#                 \"acl_v4\": \"24\",\n#                 \"group\": \"dev\",\n#                 \"username\": \"userPaul\",\n#                 \"version\": \"v1\"\n#             }\n#         ]\n#     },\n\n# Using state: rendered\n\n# Rendered play:\n# --------------\n\n- name: Render the commands for provided configuration\n  cisco.ios.ios_snmp_server:\n    config:\n      accounting:\n          command: default\n      cache: 2\n      chassis_id: entry for chassis id\n      communities:\n      -   acl_v6: te\n          name: test\n          ro: true\n          view: terst1\n      -   acl_v4: '1322'\n          name: wete\n          ro: true\n      -   acl_v4: paul\n          name: weteww\n          rw: true\n      contact: details contact\n      context:\n      - contextA\n      - contextB\n      engine_id:\n      -   id: AB0C5342FA0A\n          local: true\n      -   id: AB0C5342FAAB\n          remote:\n              host: 172.16.0.2\n              udp_port: 23\n      -   id: AB0C5342FAAA\n          remote:\n              host: 172.16.0.1\n              udp_port: 22\n      file_transfer:\n          access_group: testAcl\n          protocol:\n          - ftp\n          - rcp\n      groups:\n      -   group: grpFamily\n          version: v3\n          version_option: auth\n      -   context: mycontext\n          group: grpFamily\n          version: v1\n      -   acl_v4: '2'\n          group: grp1\n          notify: me\n          version: v1\n      -   group: newtera\n          version: v3\n          version_option: priv\n      -   group: relaplacing\n          version: v3\n          version_option: noauth\n      hosts:\n      -   community_string: check\n          host: 172.16.2.99\n          informs: true\n          traps:\n          - msdp\n          - stun\n          version: 2c\n      -   community_string: check\n          host: 172.16.2.99\n          traps:\n          - slb\n          - pki\n      -   community_string: checktrap\n          host: 172.16.2.99\n          traps:\n          - isis\n          - hsrp\n      -   community_string: newtera\n          host: 172.16.2.1\n          traps:\n          - rsrb\n          - pim\n          - rsvp\n          - slb\n          - pki\n          version: '3'\n          version_option: priv\n      -   community_string: relaplacing\n          host: 172.16.2.1\n          traps:\n          - slb\n          - pki\n          version: '3'\n          version_option: noauth\n      -   community_string: trapsac\n          host: 172.16.2.1\n          traps:\n          - tty\n          - bgp\n          version: 2c\n      -   community_string: www\n          host: 172.16.1.1\n          traps:\n          - tty\n          - bgp\n          version: '3'\n          version_option: auth\n      inform:\n          pending: 2\n      ip:\n          dscp: 2\n      location: 'entry for snmp location'\n      packet_size: 500\n      password_policy:\n      -   change: 3\n          digits: 23\n          lower_case: 12\n          max_len: 24\n          policy_name: policy1\n          special_char: 32\n          upper_case: 12\n      -   change: 9\n          min_len: 12\n          policy_name: policy2\n          special_char: 22\n          upper_case: 12\n      -   change: 11\n          digits: 23\n          max_len: 12\n          min_len: 12\n          policy_name: policy3\n          special_char: 22\n          upper_case: 12\n      queue_length: 2\n      source_interface: Loopback999\n      system_shutdown: true\n      trap_source: GigabitEthernet0/0\n      trap_timeout: 2\n      traps:\n          auth_framework:\n              enable: true\n          bgp:\n              cbgp2: true\n              enable: true\n          bfd:\n              enable: true\n              session_down: true\n              session_up: true\n          bridge:\n              enable: true\n              newroot: true\n              topologychange: true\n          casa: true\n          cef:\n              enable: true\n              inconsistency: true\n              peer_fib_state_change: true\n              peer_state_change: true\n              resource_failure: true\n          dlsw:\n              enable: true\n          eigrp: true\n          ethernet:\n              cfm:\n                  alarm: true\n              evc:\n                  status: true\n          event_manager: true\n          flowmon: true\n          frame_relay:\n              enable: true\n              subif:\n                  enable: true\n          hsrp: true\n          ike:\n              policy:\n                  add: true\n                  delete: true\n              tunnel:\n                  start: true\n                  stop: true\n          ipmulticast: true\n          ipsec:\n              cryptomap:\n                  add: true\n                  attach: true\n                  delete: true\n                  detach: true\n              too_many_sas: true\n              tunnel:\n                  start: true\n                  stop: true\n          ipsla: true\n          l2tun:\n              pseudowire_status: true\n              session: true\n          msdp: true\n          ospf:\n              cisco_specific:\n                  error: true\n                  lsa: true\n                  retransmit: true\n                  state_change:\n                      nssa_trans_change: true\n                      shamlink:\n                          interface: true\n                          neighbor: true\n              error: true\n              lsa: true\n              retransmit: true\n              state_change: true\n          pim:\n              enable: true\n              invalid_pim_message: true\n              neighbor_change: true\n              rp_mapping_change: true\n          pki: true\n          rsvp: true\n          snmp:\n              authentication: true\n              coldstart: true\n              linkdown: true\n              linkup: true\n              warmstart: true\n          syslog: true\n          tty: true\n      users:\n      -   acl_v4: '24'\n          group: groupFamily\n          username: paul\n          version: v1\n      -   acl_v4: ipv6\n          group: groupFamily\n          username: domnic\n          version: v3\n      -   group: relaplacing\n          username: relaplacing\n          version: v3\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n\n# \"rendered\": [\n#     \"snmp-server accounting commands default\",\n#     \"snmp-server cache interval 2\",\n#     \"snmp-server chassis-id entry for chassis id\",\n#     \"snmp-server contact details contact\",\n#     \"snmp-server file-transfer access-group testAcl protocol ftp rcp\",\n#     \"snmp-server inform pending 2\",\n#     \"snmp-server ip dscp 2\",\n#     \"snmp-server location entry for snmp location\",\n#     \"snmp-server packetsize 500\",\n#     \"snmp-server queue-length 2\",\n#     \"snmp-server trap timeout 2\",\n#     \"snmp-server source-interface informs Loopback999\",\n#     \"snmp-server trap-source GigabitEthernet0/0\",\n#     \"snmp-server system-shutdown\",\n#     \"snmp-server enable traps auth-framework\",\n#     \"snmp-server enable traps bfd session-down session-up\",\n#     \"snmp-server enable traps bgp cbgp2\",\n#     \"snmp-server enable traps bridge newroot topologychange\",\n#     \"snmp-server enable traps casa\",\n#     \"snmp-server enable traps eigrp\",\n#     \"snmp-server enable traps event-manager\",\n#     \"snmp-server enable traps flowmon\",\n#     \"snmp-server enable traps hsrp\",\n#     \"snmp-server enable traps ipsla\",\n#     \"snmp-server enable traps msdp\",\n#     \"snmp-server enable traps pki\",\n#     \"snmp-server enable traps rsvp\",\n#     \"snmp-server enable traps syslog\",\n#     \"snmp-server enable traps tty\",\n#     \"snmp-server enable traps ipmulticast\",\n#     \"snmp-server enable traps ike policy add\",\n#     \"snmp-server enable traps ike policy delete\",\n#     \"snmp-server enable traps ike tunnel start\",\n#     \"snmp-server enable traps ike tunnel stop\",\n#     \"snmp-server enable traps ipsec cryptomap add\",\n#     \"snmp-server enable traps ipsec cryptomap delete\",\n#     \"snmp-server enable traps ipsec cryptomap attach\",\n#     \"snmp-server enable traps ipsec cryptomap detach\",\n#     \"snmp-server enable traps ipsec tunnel start\",\n#     \"snmp-server enable traps ipsec tunnel stop\",\n#     \"snmp-server enable traps ipsec too-many-sas\",\n#     \"snmp-server enable traps ospf cisco-specific errors\",\n#     \"snmp-server enable traps ospf cisco-specific retransmit\",\n#     \"snmp-server enable traps ospf cisco-specific lsa\",\n#     \"snmp-server enable traps ospf cisco-specific state-change nssa-trans-change\",\n#     \"snmp-server enable traps ospf cisco-specific state-change shamlink interface\",\n#     \"snmp-server enable traps ospf cisco-specific state-change shamlink neighbor\",\n#     \"snmp-server enable traps ospf errors\",\n#     \"snmp-server enable traps ospf retransmit\",\n#     \"snmp-server enable traps ospf lsa\",\n#     \"snmp-server enable traps ospf state-change\",\n#     \"snmp-server enable traps l2tun pseudowire status\",\n#     \"snmp-server enable traps l2tun session\",\n#     \"snmp-server enable traps pim neighbor-change rp-mapping-change invalid-pim-message\",\n#     \"snmp-server enable traps snmp authentication linkdown linkup warmstart coldstart\",\n#     \"snmp-server enable traps frame-relay\",\n#     \"snmp-server enable traps cef resource-failure peer-state-change peer-fib-state-change inconsistency\",\n#     \"snmp-server enable traps dlsw\",\n#     \"snmp-server enable traps ethernet evc status\",\n#     \"snmp-server enable traps ethernet cfm alarm\",\n#     \"snmp-server host 172.16.2.99 informs version 2c check msdp stun\",\n#     \"snmp-server host 172.16.2.99 check slb pki\",\n#     \"snmp-server host 172.16.2.99 checktrap isis hsrp\",\n#     \"snmp-server host 172.16.2.1 version 3 priv newtera rsrb pim rsvp slb pki\",\n#     \"snmp-server host 172.16.2.1 version 3 noauth relaplacing slb pki\",\n#     \"snmp-server host 172.16.2.1 version 2c trapsac tty bgp\",\n#     \"snmp-server host 172.16.1.1 version 3 auth www tty bgp\",\n#     \"snmp-server group grpFamily v1 context mycontext\",\n#     \"snmp-server group grp1 v1 notify me access 2\",\n#     \"snmp-server group newtera v3 priv\",\n#     \"snmp-server group relaplacing v3 noauth\",\n#     \"snmp-server engineID local AB0C5342FA0A\",\n#     \"snmp-server engineID remote 172.16.0.2 udp-port 23 AB0C5342FAAB\",\n#     \"snmp-server engineID remote 172.16.0.1 udp-port 22 AB0C5342FAAA\",\n#     \"snmp-server community test view terst1 ro ipv6 te\",\n#     \"snmp-server community wete ro 1322\",\n#     \"snmp-server community weteww rw paul\",\n#     \"snmp-server context contextA\",\n#     \"snmp-server context contextB\",\n#     \"snmp-server password-policy policy1 define max-len 24 upper-case 12 lower-case 12 special-char 32 digits 23 change 3\",\n#     \"snmp-server password-policy policy2 define min-len 12 upper-case 12 special-char 22 change 9\",\n#     \"snmp-server password-policy policy3 define min-len 12 max-len 12 upper-case 12 special-char 22 digits 23 change 11\",\n#     \"snmp-server user paul groupFamily v1 access 24\",\n#     \"snmp-server user domnic groupFamily v3 access ipv6\",\n#     \"snmp-server user relaplacing relaplacing v3\"\n# ]\n\n# Using state: parsed\n\n# File: parsed.cfg\n# ----------------\n\n# snmp-server engineID local AB0C5342FA0A\n# snmp-server engineID remote 172.16.0.2 udp-port 23 AB0C5342FAAB\n# snmp-server engineID remote 172.16.0.1 udp-port 22 AB0C5342FAAA\n# snmp-server user newuser newfamily v1 access 24\n# snmp-server user paul familypaul v3 access ipv6 ipv6acl\n# snmp-server user replaceUser replaceUser v3\n# snmp-server group group0 v3 auth\n# snmp-server group group1 v1 notify me access 2\n# snmp-server group group2 v3 priv\n# snmp-server group replaceUser v3 noauth\n# snmp-server community commu1 view view1 RO ipv6 te\n# snmp-server community commu2 RO 1322\n# snmp-server community commu3 RW paul\n# snmp-server trap timeout 2\n# snmp-server trap-source GigabitEthernet0/0\n# snmp-server source-interface informs Loopback999\n# snmp-server packetsize 500\n# snmp-server enable traps vrfmib vrf-up vrf-down vnet-trunk-up vnet-trunk-down\n# snmp-server host 172.16.2.99 informs version 2c check  msdp stun\n# snmp-server host 172.16.2.1 version 2c trapsac  tty bgp\n# snmp-server host 172.16.1.1 version 3 auth group0  tty bgp\n# snmp-server context contextWord1\n# snmp-server context contextWord2\n# snmp-server file-transfer access-group testAcl protocol ftp\n# snmp-server file-transfer access-group testAcl protocol rcp\n# snmp-server cache interval 2\n# snmp-server password-policy policy2 define min-len 12 upper-case 12 special-char 22 change 9\n# snmp-server password-policy policy3 define min-len 12 max-len 12 upper-case 12 special-char 22 digits 23 change 11\n# snmp-server accounting commands default\n# snmp-server inform pending 2\n\n# Parsed play:\n# ------------\n\n- name: Parse the provided configuration with the existing running configuration\n  cisco.ios.ios_snmp_server:\n    running_config: \"{{ lookup('file', 'parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n\n#  \"parsed\": {\n#     \"accounting\": {\n#         \"command\": \"default\"\n#     },\n#     \"cache\": 2,\n#     \"communities\": [\n#         {\n#             \"acl_v6\": \"te\",\n#             \"name\": \"commu1\",\n#             \"ro\": true,\n#             \"view\": \"view1\"\n#         },\n#         {\n#             \"acl_v4\": \"1322\",\n#             \"name\": \"commu2\",\n#             \"ro\": true\n#         },\n#         {\n#             \"acl_v4\": \"paul\",\n#             \"name\": \"commu3\",\n#             \"rw\": true\n#         }\n#     ],\n#     \"context\": [\n#         \"contextWord1\",\n#         \"contextWord2\"\n#     ],\n#     \"engine_id\": [\n#         {\n#             \"id\": \"AB0C5342FA0A\",\n#             \"local\": true\n#         },\n#         {\n#             \"id\": \"AB0C5342FAAA\",\n#             \"remote\": {\n#                 \"host\": \"172.16.0.1\",\n#                 \"udp_port\": 22\n#             }\n#         },\n#         {\n#             \"id\": \"AB0C5342FAAB\",\n#             \"remote\": {\n#                 \"host\": \"172.16.0.2\",\n#                 \"udp_port\": 23\n#             }\n#         }\n#     ],\n#     \"file_transfer\": {\n#         \"access_group\": \"testAcl\",\n#         \"protocol\": [\n#             \"rcp\",\n#             \"ftp\"\n#         ]\n#     },\n#     \"groups\": [\n#         {\n#             \"group\": \"group0\",\n#             \"version\": \"v3\",\n#             \"version_option\": \"auth\"\n#         },\n#         {\n#             \"acl_v4\": \"2\",\n#             \"group\": \"group1\",\n#             \"notify\": \"me\",\n#             \"version\": \"v1\"\n#         },\n#         {\n#             \"group\": \"group2\",\n#             \"version\": \"v3\",\n#             \"version_option\": \"priv\"\n#         },\n#         {\n#             \"group\": \"replaceUser\",\n#             \"version\": \"v3\",\n#             \"version_option\": \"noauth\"\n#         }\n#     ],\n#     \"hosts\": [\n#         {\n#             \"community_string\": \"group0\",\n#             \"host\": \"172.16.1.1\",\n#             \"traps\": [\n#                 \"tty\",\n#                 \"bgp\"\n#             ],\n#             \"version\": \"3\",\n#             \"version_option\": \"auth\"\n#         },\n#         {\n#             \"community_string\": \"trapsac\",\n#             \"host\": \"172.16.2.1\",\n#             \"traps\": [\n#                 \"tty\",\n#                 \"bgp\"\n#             ],\n#             \"version\": \"2c\"\n#         },\n#         {\n#             \"community_string\": \"check\",\n#             \"host\": \"172.16.2.99\",\n#             \"informs\": true,\n#             \"traps\": [\n#                 \"msdp\",\n#                 \"stun\"\n#             ],\n#             \"version\": \"2c\"\n#         }\n#     ],\n#     \"inform\": {\n#         \"pending\": 2\n#     },\n#     \"packet_size\": 500,\n#     \"password_policy\": [\n#         {\n#             \"change\": 9,\n#             \"min_len\": 12,\n#             \"policy_name\": \"policy2\",\n#             \"special_char\": 22,\n#             \"upper_case\": 12\n#         },\n#         {\n#             \"change\": 11,\n#             \"digits\": 23,\n#             \"max_len\": 12,\n#             \"min_len\": 12,\n#             \"policy_name\": \"policy3\",\n#             \"special_char\": 22,\n#             \"upper_case\": 12\n#         }\n#     ],\n#     \"source_interface\": \"Loopback999\",\n#     \"trap_source\": \"GigabitEthernet0/0\",\n#     \"trap_timeout\": 2,\n#     \"traps\": {\n#         \"vrfmib\": {\n#             \"vnet_trunk_down\": true,\n#             \"vnet_trunk_up\": true,\n#             \"vrf_down\": true,\n#             \"vrf_up\": true\n#         }\n#     },\n#     \"users\": [\n#         {\n#             \"acl_v4\": \"24\",\n#             \"group\": \"newfamily\",\n#             \"username\": \"newuser\",\n#             \"version\": \"v1\"\n#         },\n#         {\n#             \"acl_v4\": \"ipv6\",\n#             \"group\": \"familypaul\",\n#             \"username\": \"paul\",\n#             \"version\": \"v3\"\n#         },\n#         {\n#             \"group\": \"replaceUser\",\n#             \"username\": \"replaceUser\",\n#             \"version\": \"v3\"\n#         }\n#     ]\n# }\n"
  },
  "cisco.ios.ios_static_route": {
    "doc": {
      "description": "This module provides declarative management of static IP routes on Cisco IOS network devices.",
      "has_action": true,
      "notes": "Tested against IOS 15.6\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "admin_distance": {
          "aliases": [],
          "description": "Admin distance of the static route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "aggregate": {
          "aliases": [],
          "description": "List of static route definitions.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "admin_distance": {
              "aliases": [],
              "description": "Admin distance of the static route.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "interface": {
              "aliases": [],
              "description": "Interface of the static route.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "mask": {
              "aliases": [],
              "description": "Network prefix mask of the static route.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [
                "description"
              ],
              "description": "Name of the static route",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "next_hop": {
              "aliases": [],
              "description": "Next hop IP of the static route.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "prefix": {
              "aliases": [],
              "description": "Network prefix of the static route.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the static route configuration.",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            },
            "tag": {
              "aliases": [],
              "description": "Set tag of the static route.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "track": {
              "aliases": [],
              "description": "Tracked item to depend on for the static route.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "vrf": {
              "aliases": [],
              "description": "VRF of the static route.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "interface": {
          "aliases": [],
          "description": "Interface of the static route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mask": {
          "aliases": [],
          "description": "Network prefix mask of the static route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [
            "description"
          ],
          "description": "Name of the static route",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "next_hop": {
          "aliases": [],
          "description": "Next hop IP of the static route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "prefix": {
          "aliases": [],
          "description": "Network prefix of the static route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "State of the static route configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tag": {
          "aliases": [],
          "description": "Set tag of the static route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "track": {
          "aliases": [],
          "description": "Tracked item to depend on for the static route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vrf": {
          "aliases": [],
          "description": "VRF of the static route.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "(deprecated, removed after 2022-06-01) Manage static IP routes on Cisco IOS network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure static route\n  cisco.ios.ios_static_route:\n    prefix: 192.168.2.0\n    mask: 255.255.255.0\n    next_hop: 10.0.0.1\n\n- name: configure black hole in vrf blue depending on tracked item 10\n  cisco.ios.ios_static_route:\n    prefix: 192.168.2.0\n    mask: 255.255.255.0\n    vrf: blue\n    interface: null0\n    track: 10\n\n- name: configure ultimate route with name and tag\n  cisco.ios.ios_static_route:\n    prefix: 192.168.2.0\n    mask: 255.255.255.0\n    interface: GigabitEthernet1\n    name: hello world\n    tag: 100\n\n- name: remove configuration\n  cisco.ios.ios_static_route:\n    prefix: 192.168.2.0\n    mask: 255.255.255.0\n    next_hop: 10.0.0.1\n    state: absent\n\n- name: Add static route aggregates\n  cisco.ios.ios_static_route:\n    aggregate:\n    - {prefix: 172.16.32.0, mask: 255.255.255.0, next_hop: 10.0.0.8}\n    - {prefix: 172.16.33.0, mask: 255.255.255.0, next_hop: 10.0.0.8}\n\n- name: Remove static route aggregates\n  cisco.ios.ios_static_route:\n    aggregate:\n    - {prefix: 172.16.32.0, mask: 255.255.255.0, next_hop: 10.0.0.8}\n    - {prefix: 172.16.33.0, mask: 255.255.255.0, next_hop: 10.0.0.8}\n    state: absent\n"
  },
  "cisco.ios.ios_static_routes": {
    "doc": {
      "description": "This module configures and manages the static routes on IOS platforms.",
      "has_action": true,
      "notes": "Tested against Cisco IOSv Version 15.2 on VIRL.\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of static route options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "address_families": {
              "aliases": [],
              "description": "Address family to use for the static routes",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "afi": {
                  "aliases": [],
                  "description": "Top level address family indicator.",
                  "type": "str",
                  "required": true,
                  "choices": [
                    "ipv4",
                    "ipv6"
                  ],
                  "suboptions": {}
                },
                "routes": {
                  "aliases": [],
                  "description": "Configuring static route",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "dest": {
                      "aliases": [],
                      "description": "Destination prefix with its subnet mask",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "next_hops": {
                      "aliases": [],
                      "description": "next hop address or interface",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "dhcp": {
                          "aliases": [],
                          "description": "Default gateway obtained from DHCP",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "distance_metric": {
                          "aliases": [],
                          "description": "Distance metric for this route",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "forward_router_address": {
                          "aliases": [],
                          "description": "Forwarding router's address",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "global": {
                          "aliases": [],
                          "description": "Next hop address is global",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "interface": {
                          "aliases": [],
                          "description": "Interface for directly connected static routes",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "multicast": {
                          "aliases": [],
                          "description": "multicast route",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "Specify name of the next hop",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "permanent": {
                          "aliases": [],
                          "description": "permanent route",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "tag": {
                          "aliases": [],
                          "description": "Set tag for this route\nRefer to vendor documentation for valid values.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "track": {
                          "aliases": [],
                          "description": "Install route depending on tracked item with tracked object number.\nTracking does not support multicast\nRefer to vendor documentation for valid values.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "topology": {
                      "aliases": [],
                      "description": "Configure static route for a Topology Routing/Forwarding instance\nNOTE, VRF and Topology can be used together only with Multicast and Topology should pre-exist before it can be used",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "vrf": {
              "aliases": [],
              "description": "IP VPN Routing/Forwarding instance name.\nNOTE, In case of IPV4/IPV6 VRF routing table should pre-exist before configuring.\nNOTE, if the vrf information is not provided then the routes shall be configured under global vrf.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(show running-config | include ip route|ipv6 route).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(show running-config | include ip route|ipv6 route) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "gathered",
            "rendered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Static routes resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n\n# Before state:\n# -------------\n#\n# vios#show running-config | include ip route|ipv6 route\n\n- name: Merge provided configuration with device configuration\n  cisco.ios.ios_static_routes:\n    config:\n    - vrf: blue\n      address_families:\n      - afi: ipv4\n        routes:\n        - dest: 192.0.2.0/24\n          next_hops:\n          - forward_router_address: 192.0.2.1\n            name: merged_blue\n            tag: 50\n            track: 150\n    - address_families:\n      - afi: ipv4\n        routes:\n        - dest: 198.51.100.0/24\n          next_hops:\n          - forward_router_address: 198.51.101.1\n            name: merged_route_1\n            distance_metric: 110\n            tag: 40\n            multicast: true\n          - forward_router_address: 198.51.101.2\n            name: merged_route_2\n            distance_metric: 30\n          - forward_router_address: 198.51.101.3\n            name: merged_route_3\n      - afi: ipv6\n        routes:\n        - dest: 2001:DB8:0:3::/64\n          next_hops:\n          - forward_router_address: 2001:DB8:0:3::2\n            name: merged_v6\n            tag: 105\n    state: merged\n\n# Commands fired:\n# ---------------\n# ip route vrf blue 192.0.2.0 255.255.255.0 10.0.0.8 name merged_blue track 150 tag 50\n# ip route 198.51.100.0 255.255.255.0 198.51.101.1 110 multicast name merged_route_1 tag 40\n# ip route 198.51.100.0 255.255.255.0 198.51.101.2 30 name merged_route_2\n# ip route 198.51.100.0 255.255.255.0 198.51.101.3 name merged_route_3\n# ipv6 route 2001:DB8:0:3::/64 2001:DB8:0:3::2 name merged_v6 tag 105\n\n# After state:\n# ------------\n#\n# vios#show running-config | include ip route|ipv6 route\n# ip route vrf blue 192.0.2.0 255.255.255.0 192.0.2.1 tag 50 name merged_blue track 150\n# ip route 198.51.100.0 255.255.255.0 198.51.101.3 name merged_route_3\n# ip route 198.51.100.0 255.255.255.0 198.51.101.2 30 name merged_route_2\n# ip route 198.51.100.0 255.255.255.0 198.51.101.1 110 tag 40 name merged_route_1 multicast\n# ipv6 route 2001:DB8:0:3::/64 2001:DB8:0:3::2 tag 105 name merged_v6\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# vios#show running-config | include ip route|ipv6 route\n# ip route vrf ansible_temp_vrf 192.0.2.0 255.255.255.0 192.0.2.1 name test_vrf track 150 tag 50\n# ip route 198.51.100.0 255.255.255.0 198.51.101.1 110 multicast name route_1 tag 40\n# ip route 198.51.100.0 255.255.255.0 198.51.101.2 30 name route_2\n# ip route 198.51.100.0 255.255.255.0 198.51.101.3 name route_3\n# ipv6 route 2001:DB8:0:3::/64 2001:DB8:0:3::2 name test_v6 tag 105\n\n- name: Replace provided configuration with device configuration\n  cisco.ios.ios_static_routes:\n    config:\n    - address_families:\n      - afi: ipv4\n        routes:\n        - dest: 198.51.100.0/24\n          next_hops:\n          - forward_router_address: 198.51.101.1\n            name: replaced_route\n            distance_metric: 175\n            tag: 70\n            multicast: true\n    state: replaced\n\n# Commands fired:\n# ---------------\n# no ip route 198.51.100.0 255.255.255.0 198.51.101.1 110 multicast name route_1 tag 40\n# no ip route 198.51.100.0 255.255.255.0 198.51.101.2 30 name route_2\n# no ip route 198.51.100.0 255.255.255.0 198.51.101.3 name route_3\n# ip route 198.51.100.0 255.255.255.0 198.51.101.1 175 name replaced_route track 150 tag 70\n\n# After state:\n# ------------\n#\n# vios#show running-config | include ip route|ipv6 route\n# ip route vrf ansible_temp_vrf 192.0.2.0 255.255.255.0 192.0.2.1 name test_vrf track 150 tag 50\n# ip route 198.51.100.0 255.255.255.0 198.51.101.1 175 name replaced_route track 150 tag 70\n# ipv6 route 2001:DB8:0:3::/64 2001:DB8:0:3::2 tag 105 name test_v6\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# vios#show running-config | include ip route|ipv6 route\n# ip route vrf ansible_temp_vrf 192.0.2.0 255.255.255.0 192.0.2.1 name test_vrf track 150 tag 50\n# ip route 198.51.100.0 255.255.255.0 198.51.101.1 110 multicast name route_1 tag 40\n# ip route 198.51.100.0 255.255.255.0 198.51.101.2 30 name route_2\n# ip route 198.51.100.0 255.255.255.0 198.51.101.3 name route_3\n# ipv6 route 2001:DB8:0:3::/64 2001:DB8:0:3::2 name test_v6 tag 105\n\n- name: Override provided configuration with device configuration\n  cisco.ios.ios_static_routes:\n    config:\n    - vrf: blue\n      address_families:\n      - afi: ipv4\n        routes:\n        - dest: 192.0.2.0/24\n          next_hops:\n          - forward_router_address: 192.0.2.1\n            name: override_vrf\n            tag: 50\n            track: 150\n    state: overridden\n\n# Commands fired:\n# ---------------\n# no ip route 198.51.100.0 255.255.255.0 198.51.101.1 110 multicast name route_1 tag 40\n# no ip route 198.51.100.0 255.255.255.0 198.51.101.2 30 name route_2\n# no ip route 198.51.100.0 255.255.255.0 198.51.101.3 name route_3\n# no ip route vrf ansible_temp_vrf 192.0.2.0 255.255.255.0 198.51.101.8 name test_vrf track 150 tag 50\n# no ipv6 route FD5D:12C9:2201:1::/64 FD5D:12C9:2202::2 name test_v6 tag 105\n# ip route vrf blue 192.0.2.0 255.255.255.0 198.51.101.4 name override_vrf track 150 tag 50\n\n# After state:\n# ------------\n#\n# vios#show running-config | include ip route|ipv6 route\n# ip route vrf blue 192.0.2.0 255.255.255.0 192.0.2.1 tag 50 name override_vrf track 150\n\n# Using Deleted\n\n# Example 1:\n# ----------\n# To delete the exact static routes, with all the static routes explicitly mentioned in want\n\n# Before state:\n# -------------\n#\n# vios#show running-config | include ip route|ipv6 route\n# ip route vrf ansible_temp_vrf 192.0.2.0 255.255.255.0 192.0.2.1 name test_vrf track 150 tag 50\n# ip route 198.51.100.0 255.255.255.0 198.51.101.1 110 multicast name route_1 tag 40\n# ip route 198.51.100.0 255.255.255.0 198.51.101.2 30 name route_2\n# ip route 198.51.100.0 255.255.255.0 198.51.101.3 name route_3\n# ipv6 route 2001:DB8:0:3::/64 2001:DB8:0:3::2 name test_v6 tag 105\n\n- name: Delete provided configuration from the device configuration\n  cisco.ios.ios_static_routes:\n    config:\n    - vrf: ansible_temp_vrf\n      address_families:\n      - afi: ipv4\n        routes:\n        - dest: 192.0.2.0/24\n          next_hops:\n          - forward_router_address: 192.0.2.1\n            name: test_vrf\n            tag: 50\n            track: 150\n    - address_families:\n      - afi: ipv4\n        routes:\n        - dest: 198.51.100.0/24\n          next_hops:\n          - forward_router_address: 198.51.101.1\n            name: route_1\n            distance_metric: 110\n            tag: 40\n            multicast: true\n          - forward_router_address: 198.51.101.2\n            name: route_2\n            distance_metric: 30\n          - forward_router_address: 198.51.101.3\n            name: route_3\n      - afi: ipv6\n        routes:\n        - dest: 2001:DB8:0:3::/64\n          next_hops:\n          - forward_router_address: 2001:DB8:0:3::2\n            name: test_v6\n            tag: 105\n    state: deleted\n\n# Commands fired:\n# ---------------\n# no ip route vrf ansible_temp_vrf 192.0.2.0 255.255.255.0 198.51.101.8 name test_vrf track 150 tag 50\n# no ip route 198.51.100.0 255.255.255.0 198.51.101.1 110 multicast name route_1 tag 40\n# no ip route 198.51.100.0 255.255.255.0 198.51.101.2 30 name route_2\n# no ip route 198.51.100.0 255.255.255.0 198.51.101.3 name route_3\n# no ipv6 route FD5D:12C9:2201:1::/64 FD5D:12C9:2202::2 name test_v6 tag 105\n\n# After state:\n# ------------\n#\n# vios#show running-config | include ip route|ipv6 route\n\n# Example 2:\n# ----------\n# To delete the destination specific static routes\n\n# Before state:\n# -------------\n#\n# vios#show running-config | include ip route|ipv6 route\n# ip route vrf ansible_temp_vrf 192.0.2.0 255.255.255.0 192.0.2.1 name test_vrf track 150 tag 50\n# ip route 198.51.100.0 255.255.255.0 198.51.101.1 110 multicast name route_1 tag 40\n# ip route 198.51.100.0 255.255.255.0 198.51.101.2 30 name route_2\n# ip route 198.51.100.0 255.255.255.0 198.51.101.3 name route_3\n# ipv6 route 2001:DB8:0:3::/64 2001:DB8:0:3::2 name test_v6 tag 105\n\n- name: Delete provided configuration from the device configuration\n  cisco.ios.ios_static_routes:\n    config:\n    - address_families:\n      - afi: ipv4\n        routes:\n        - dest: 198.51.100.0/24\n    state: deleted\n\n# Commands fired:\n# ---------------\n# no ip route 198.51.100.0 255.255.255.0 198.51.101.3 name route_3\n# no ip route 198.51.100.0 255.255.255.0 198.51.101.2 30 name route_2\n# no ip route 198.51.100.0 255.255.255.0 198.51.101.1 110 tag 40 name route_1 multicast\n\n# After state:\n# ------------\n#\n# vios#show running-config | include ip route|ipv6 route\n# ip route vrf ansible_temp_vrf 192.0.2.0 255.255.255.0 192.0.2.1 tag 50 name test_vrf track 150\n# ipv6 route 2001:DB8:0:3::/64 2001:DB8:0:3::2 tag 105 name test_v6\n\n\n# Example 3:\n# ----------\n# To delete the vrf specific static routes\n\n# Before state:\n# -------------\n#\n# vios#show running-config | include ip route|ipv6 route\n# ip route vrf ansible_temp_vrf 192.0.2.0 255.255.255.0 192.0.2.1 name test_vrf track 150 tag 50\n# ip route 198.51.100.0 255.255.255.0 198.51.101.1 110 multicast name route_1 tag 40\n# ip route 198.51.100.0 255.255.255.0 198.51.101.2 30 name route_2\n# ip route 198.51.100.0 255.255.255.0 198.51.101.3 name route_3\n# ipv6 route 2001:DB8:0:3::/64 2001:DB8:0:3::2 name test_v6 tag 105\n\n- name: Delete provided configuration from the device configuration\n  cisco.ios.ios_static_routes:\n    config:\n    - vrf: ansible_temp_vrf\n    state: deleted\n\n# Commands fired:\n# ---------------\n# no ip route vrf ansible_temp_vrf 192.0.2.0 255.255.255.0 192.0.2.1 name test_vrf track 150 tag 50\n\n# After state:\n# ------------\n#\n# vios#show running-config | include ip route|ipv6 route\n# ip route 198.51.100.0 255.255.255.0 198.51.101.3 name route_3\n# ip route 198.51.100.0 255.255.255.0 198.51.101.2 30 name route_2\n# ip route 198.51.100.0 255.255.255.0 198.51.101.1 110 tag 40 name route_1 multicast\n# ipv6 route 2001:DB8:0:3::/64 2001:DB8:0:3::2 tag 105 name test_v6\n\n# Using Deleted without any config passed\n#\"(NOTE: This will delete all of configured resource module attributes from each configured interface)\"\n\n# Before state:\n# -------------\n#\n# vios#show running-config | include ip route|ipv6 route\n# ip route vrf ansible_temp_vrf 192.0.2.0 255.255.255.0 192.0.2.1 name test_vrf track 150 tag 50\n# ip route 198.51.100.0 255.255.255.0 198.51.101.1 110 multicast name route_1 tag 40\n# ip route 198.51.100.0 255.255.255.0 198.51.101.2 30 name route_2\n# ip route 198.51.100.0 255.255.255.0 198.51.101.3 name route_3\n# ipv6 route 2001:DB8:0:3::/64 2001:DB8:0:3::2 name test_v6 tag 105\n\n- name: Delete ALL configured IOS static routes\n  cisco.ios.ios_static_routes:\n    state: deleted\n\n# Commands fired:\n# ---------------\n# no ip route vrf ansible_temp_vrf 192.0.2.0 255.255.255.0 192.0.2.1 tag 50 name test_vrf track 150\n# no ip route 198.51.100.0 255.255.255.0 198.51.101.3 name route_3\n# no ip route 198.51.100.0 255.255.255.0 198.51.101.2 30 name route_2\n# no ip route 198.51.100.0 255.255.255.0 198.51.101.1 110 tag 40 name route_1 multicast\n# no ipv6 route 2001:DB8:0:3::/64 2001:DB8:0:3::2 tag 105 name test_v6\n\n# After state:\n# -------------\n#\n# vios#show running-config | include ip route|ipv6 route\n#\n\n# Using gathered\n\n# Before state:\n# -------------\n#\n# vios#show running-config | include ip route|ipv6 route\n# ip route vrf ansible_temp_vrf 192.0.2.0 255.255.255.0 192.0.2.1 name test_vrf track 150 tag 50\n# ip route 198.51.100.0 255.255.255.0 198.51.101.1 110 multicast name route_1 tag 40\n# ip route 198.51.100.0 255.255.255.0 198.51.101.2 30 name route_2\n# ip route 198.51.100.0 255.255.255.0 198.51.101.3 name route_3\n# ipv6 route 2001:DB8:0:3::/64 2001:DB8:0:3::2 name test_v6 tag 105\n\n- name: Gather listed static routes with provided configurations\n  cisco.ios.ios_static_routes:\n    config:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"gathered\": [\n#         {\n#             \"address_families\": [\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"routes\": [\n#                         {\n#                             \"dest\": \"192.0.2.0/24\",\n#                             \"next_hops\": [\n#                                 {\n#                                     \"forward_router_address\": \"192.0.2.1\",\n#                                     \"name\": \"test_vrf\",\n#                                     \"tag\": 50,\n#                                     \"track\": 150\n#                                 }\n#                             ]\n#                         }\n#                     ]\n#                 }\n#             ],\n#             \"vrf\": \"ansible_temp_vrf\"\n#         },\n#         {\n#             \"address_families\": [\n#                 {\n#                     \"afi\": \"ipv6\",\n#                     \"routes\": [\n#                         {\n#                             \"dest\": \"2001:DB8:0:3::/64\",\n#                             \"next_hops\": [\n#                                 {\n#                                     \"forward_router_address\": \"2001:DB8:0:3::2\",\n#                                     \"name\": \"test_v6\",\n#                                     \"tag\": 105\n#                                 }\n#                             ]\n#                         }\n#                     ]\n#                 },\n#                 {\n#                     \"afi\": \"ipv4\",\n#                     \"routes\": [\n#                         {\n#                             \"dest\": \"198.51.100.0/24\",\n#                             \"next_hops\": [\n#                                 {\n#                                     \"distance_metric\": 110,\n#                                     \"forward_router_address\": \"198.51.101.1\",\n#                                     \"multicast\": true,\n#                                     \"name\": \"route_1\",\n#                                     \"tag\": 40\n#                                 },\n#                                 {\n#                                     \"distance_metric\": 30,\n#                                     \"forward_router_address\": \"198.51.101.2\",\n#                                     \"name\": \"route_2\"\n#                                 },\n#                                 {\n#                                     \"forward_router_address\": \"198.51.101.3\",\n#                                     \"name\": \"route_3\"\n#                                 }\n#                             ]\n#                         }\n#                     ]\n#                 }\n#             ]\n#         }\n#     ]\n\n# After state:\n# ------------\n#\n# vios#show running-config | include ip route|ipv6 route\n# ip route vrf ansible_temp_vrf 192.0.2.0 255.255.255.0 192.0.2.1 name test_vrf track 150 tag 50\n# ip route 198.51.100.0 255.255.255.0 198.51.101.1 110 multicast name route_1 tag 40\n# ip route 198.51.100.0 255.255.255.0 198.51.101.2 30 name route_2\n# ip route 198.51.100.0 255.255.255.0 198.51.101.3 name route_3\n# ipv6 route 2001:DB8:0:3::/64 2001:DB8:0:3::2 name test_v6 tag 105\n\n# Using rendered\n\n- name: Render the commands for provided  configuration\n  cisco.ios.ios_static_routes:\n    config:\n    - vrf: ansible_temp_vrf\n      address_families:\n      - afi: ipv4\n        routes:\n        - dest: 192.0.2.0/24\n          next_hops:\n          - forward_router_address: 192.0.2.1\n            name: test_vrf\n            tag: 50\n            track: 150\n    - address_families:\n      - afi: ipv4\n        routes:\n        - dest: 198.51.100.0/24\n          next_hops:\n          - forward_router_address: 198.51.101.1\n            name: route_1\n            distance_metric: 110\n            tag: 40\n            multicast: true\n          - forward_router_address: 198.51.101.2\n            name: route_2\n            distance_metric: 30\n          - forward_router_address: 198.51.101.3\n            name: route_3\n      - afi: ipv6\n        routes:\n        - dest: 2001:DB8:0:3::/64\n          next_hops:\n          - forward_router_address: 2001:DB8:0:3::2\n            name: test_v6\n            tag: 105\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"rendered\": [\n#         \"ip route vrf ansible_temp_vrf 192.0.2.0 255.255.255.0 192.0.2.1 name test_vrf track 150 tag 50\",\n#         \"ip route 198.51.100.0 255.255.255.0 198.51.101.1 110 multicast name route_1 tag 40\",\n#         \"ip route 198.51.100.0 255.255.255.0 198.51.101.2 30 name route_2\",\n#         \"ip route 198.51.100.0 255.255.255.0 198.51.101.3 name route_3\",\n#         \"ipv6 route 2001:DB8:0:3::/64 2001:DB8:0:3::2 name test_v6 tag 105\"\n#     ]\n"
  },
  "cisco.ios.ios_system": {
    "doc": {
      "description": "This module provides declarative management of node system attributes on Cisco IOS devices.  It provides an option to configure host system parameters or remove those parameters from the device active configuration.",
      "has_action": true,
      "notes": "Tested against IOS 15.6\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "domain_name": {
          "aliases": [],
          "description": "Configure the IP domain name on the remote device to the provided value. Value should be in the dotted name form and will be appended to the C(hostname) to create a fully-qualified domain name.",
          "type": "list",
          "required": false,
          "elements": "raw",
          "suboptions": {}
        },
        "domain_search": {
          "aliases": [],
          "description": "Provides the list of domain suffixes to append to the hostname for the purpose of doing name resolution. This argument accepts a list of names and will be reconciled with the current active configuration on the running node.",
          "type": "list",
          "required": false,
          "elements": "raw",
          "suboptions": {}
        },
        "hostname": {
          "aliases": [],
          "description": "Configure the device hostname parameter. This option takes an ASCII string value.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lookup_enabled": {
          "aliases": [],
          "description": "Administrative control for enabling or disabling DNS lookups.  When this argument is set to True, lookups are performed and when it is set to False, lookups are not performed.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "lookup_source": {
          "aliases": [],
          "description": "Provides one or more source interfaces to use for performing DNS lookups.  The interface provided in C(lookup_source) must be a valid interface configured on the device.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name_servers": {
          "aliases": [],
          "description": "List of DNS name servers by IP address to use to perform name resolution lookups.  This argument accepts either a list of DNS servers See examples.",
          "type": "list",
          "required": false,
          "elements": "raw",
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "State of the configuration values in the device's current active configuration.  When set to I(present), the values should be configured in the device active configuration and when set to I(absent) the values should not be in the device active configuration",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "short_description": "Manage the system attributes on Cisco IOS devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure hostname and domain name\n  cisco.ios.ios_system:\n    hostname: ios01\n    domain_name: test.example.com\n    domain_search:\n    - ansible.com\n    - redhat.com\n    - cisco.com\n\n- name: remove configuration\n  cisco.ios.ios_system:\n    state: absent\n\n- name: configure DNS lookup sources\n  cisco.ios.ios_system:\n    lookup_source: MgmtEth0/0/CPU0/0\n    lookup_enabled: yes\n\n- name: configure name servers\n  cisco.ios.ios_system:\n    name_servers:\n    - 8.8.8.8\n    - 8.8.4.4\n"
  },
  "cisco.ios.ios_user": {
    "doc": {
      "description": "This module provides declarative management of the local usernames configured on network devices. It allows playbooks to manage either individual usernames or the aggregate of usernames in the current running config. It also supports purging usernames from the configuration that are not explicitly defined.",
      "has_action": true,
      "notes": "Tested against IOS 15.6\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "aggregate": {
          "aliases": [
            "users",
            "collection"
          ],
          "description": "The set of username objects to be configured on the remote Cisco IOS device. The list entries can either be the username or a hash of username and properties. This argument is mutually exclusive with the C(name) argument.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "configured_password": {
              "aliases": [],
              "description": "The password to be configured on the Cisco IOS device. The password needs to be provided in clear and it will be encrypted on the device. Please note that this option is not same as C(provider password).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "hashed_password": {
              "aliases": [],
              "description": "This option allows configuring hashed passwords on Cisco IOS devices.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "type": {
                  "aliases": [],
                  "description": "Specifies the type of hash (e.g., 5 for MD5, 8 for PBKDF2, etc.)\nFor this to work, the device needs to support the desired hash type",
                  "type": "int",
                  "required": true,
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "The actual hashed password to be configured on the device",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "The username to be configured on the Cisco IOS device. This argument accepts a string value and is mutually exclusive with the C(aggregate) argument. Please note that this option is not same as C(provider username).",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "nopassword": {
              "aliases": [],
              "description": "Defines the username without assigning a password. This will allow the user to login to the system without being authenticated by a password.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "password_type": {
              "aliases": [],
              "description": "This argument determines whether a 'password' or 'secret' will be configured.",
              "type": "str",
              "required": false,
              "choices": [
                "secret",
                "password"
              ],
              "suboptions": {}
            },
            "privilege": {
              "aliases": [],
              "description": "The C(privilege) argument configures the privilege level of the user when logged into the system. This argument accepts integer values in the range of 1 to 15.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "sshkey": {
              "aliases": [],
              "description": "Specifies one or more SSH public key(s) to configure for the given username.\nThis argument accepts a valid SSH key value.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "Configures the state of the username definition as it relates to the device operational configuration. When set to I(present), the username(s) should be configured in the device active configuration and when set to I(absent) the username(s) should not be in the device active configuration",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent"
              ],
              "suboptions": {}
            },
            "update_password": {
              "aliases": [],
              "description": "Since passwords are encrypted in the device running config, this argument will instruct the module when to change the password.  When set to C(always), the password will always be updated in the device and when set to C(on_create) the password will be updated only if the username is created.",
              "type": "str",
              "required": false,
              "choices": [
                "on_create",
                "always"
              ],
              "suboptions": {}
            },
            "view": {
              "aliases": [
                "role"
              ],
              "description": "Configures the view for the username in the device running configuration. The argument accepts a string value defining the view name. This argument does not check if the view has been configured on the device.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "configured_password": {
          "aliases": [],
          "description": "The password to be configured on the Cisco IOS device. The password needs to be provided in clear and it will be encrypted on the device. Please note that this option is not same as C(provider password).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "hashed_password": {
          "aliases": [],
          "description": "This option allows configuring hashed passwords on Cisco IOS devices.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "type": {
              "aliases": [],
              "description": "Specifies the type of hash (e.g., 5 for MD5, 8 for PBKDF2, etc.)\nFor this to work, the device needs to support the desired hash type",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "value": {
              "aliases": [],
              "description": "The actual hashed password to be configured on the device",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "The username to be configured on the Cisco IOS device. This argument accepts a string value and is mutually exclusive with the C(aggregate) argument. Please note that this option is not same as C(provider username).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "nopassword": {
          "aliases": [],
          "description": "Defines the username without assigning a password. This will allow the user to login to the system without being authenticated by a password.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "password_type": {
          "aliases": [],
          "description": "This argument determines whether a 'password' or 'secret' will be configured.",
          "default": "secret",
          "type": "str",
          "required": false,
          "choices": [
            "secret",
            "password"
          ],
          "suboptions": {}
        },
        "privilege": {
          "aliases": [],
          "description": "The C(privilege) argument configures the privilege level of the user when logged into the system. This argument accepts integer values in the range of 1 to 15.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "purge": {
          "aliases": [],
          "description": "Instructs the module to consider the resource definition absolute. It will remove any previously configured usernames on the device with the exception of the `admin` user (the current defined set of users).",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "sshkey": {
          "aliases": [],
          "description": "Specifies one or more SSH public key(s) to configure for the given username.\nThis argument accepts a valid SSH key value.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Configures the state of the username definition as it relates to the device operational configuration. When set to I(present), the username(s) should be configured in the device active configuration and when set to I(absent) the username(s) should not be in the device active configuration",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "update_password": {
          "aliases": [],
          "description": "Since passwords are encrypted in the device running config, this argument will instruct the module when to change the password.  When set to C(always), the password will always be updated in the device and when set to C(on_create) the password will be updated only if the username is created.",
          "default": "always",
          "type": "str",
          "required": false,
          "choices": [
            "on_create",
            "always"
          ],
          "suboptions": {}
        },
        "view": {
          "aliases": [
            "role"
          ],
          "description": "Configures the view for the username in the device running configuration. The argument accepts a string value defining the view name. This argument does not check if the view has been configured on the device.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Manage the aggregate of local users on Cisco IOS device",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: create a new user\n  cisco.ios.ios_user:\n    name: ansible\n    nopassword: true\n    sshkey: \"{{ lookup('file', '~/.ssh/id_rsa.pub') }}\"\n    state: present\n\n- name: create a new user with multiple keys\n  cisco.ios.ios_user:\n    name: ansible\n    sshkey:\n    - \"{{ lookup('file', '~/.ssh/id_rsa.pub') }}\"\n    - \"{{ lookup('file', '~/path/to/public_key') }}\"\n    state: present\n\n- name: remove all users except admin\n  cisco.ios.ios_user:\n    purge: yes\n\n- name: remove all users except admin and these listed users\n  cisco.ios.ios_user:\n    aggregate:\n    - name: testuser1\n    - name: testuser2\n    - name: testuser3\n    purge: yes\n\n- name: set multiple users to privilege level 15\n  cisco.ios.ios_user:\n    aggregate:\n    - name: netop\n    - name: netend\n    privilege: 15\n    state: present\n\n- name: set user view/role\n  cisco.ios.ios_user:\n    name: netop\n    view: network-operator\n    state: present\n\n- name: Change Password for User netop\n  cisco.ios.ios_user:\n    name: netop\n    configured_password: '{{ new_password }}'\n    update_password: always\n    state: present\n\n- name: Aggregate of users\n  cisco.ios.ios_user:\n    aggregate:\n    - name: ansibletest2\n    - name: ansibletest3\n    view: network-admin\n\n- name: Add a user specifying password type\n  cisco.ios.ios_user:\n    name: ansibletest4\n    configured_password: '{{ new_password }}'\n    password_type: password\n\n- name: Add a user with MD5 hashed password\n  cisco.ios.ios_user:\n    name: ansibletest5\n    hashed_password:\n      type: 5\n      value: $3$8JcDilcYgFZi.yz4ApaqkHG2.8/\n\n- name: Delete users with aggregate\n  cisco.ios.ios_user:\n    aggregate:\n    - name: ansibletest1\n    - name: ansibletest2\n    - name: ansibletest3\n    state: absent\n"
  },
  "cisco.ios.ios_vlan": {
    "doc": {
      "description": "This module provides declarative management of VLANs on Cisco IOS network devices.",
      "has_action": true,
      "notes": "Tested against IOS 15.2\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "aggregate": {
          "aliases": [],
          "description": "List of VLANs definitions.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "associated_interfaces": {
              "aliases": [],
              "description": "This is a intent option and checks the operational state of the for given vlan C(name) for associated interfaces. If the value in the C(associated_interfaces) does not match with the operational state of vlan interfaces on device it will result in failure.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "delay": {
              "aliases": [],
              "description": "Delay the play should wait to check for declarative intent params values.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "interfaces": {
              "aliases": [],
              "description": "List of interfaces that should be associated to the VLAN.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Name of the VLAN.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "State of the VLAN configuration.",
              "type": "str",
              "required": false,
              "choices": [
                "present",
                "absent",
                "active",
                "suspend"
              ],
              "suboptions": {}
            },
            "vlan_id": {
              "aliases": [],
              "description": "ID of the VLAN. Range 1-4094.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "associated_interfaces": {
          "aliases": [],
          "description": "This is a intent option and checks the operational state of the for given vlan C(name) for associated interfaces. If the value in the C(associated_interfaces) does not match with the operational state of vlan interfaces on device it will result in failure.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "delay": {
          "aliases": [],
          "description": "Delay the play should wait to check for declarative intent params values.",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "interfaces": {
          "aliases": [],
          "description": "List of interfaces that should be associated to the VLAN.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the VLAN.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "purge": {
          "aliases": [],
          "description": "Purge VLANs not defined in the I(aggregate) parameter.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the VLAN configuration.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "active",
            "suspend"
          ],
          "suboptions": {}
        },
        "vlan_id": {
          "aliases": [],
          "description": "ID of the VLAN. Range 1-4094.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "(deprecated, removed after 2022-06-01) Manage VLANs on IOS network devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create vlan\n  cisco.ios.ios_vlan:\n    vlan_id: 100\n    name: test-vlan\n    state: present\n\n- name: Add interfaces to VLAN\n  cisco.ios.ios_vlan:\n    vlan_id: 100\n    interfaces:\n    - GigabitEthernet0/0\n    - GigabitEthernet0/1\n\n- name: Check if interfaces is assigned to VLAN\n  cisco.ios.ios_vlan:\n    vlan_id: 100\n    associated_interfaces:\n    - GigabitEthernet0/0\n    - GigabitEthernet0/1\n\n- name: Delete vlan\n  cisco.ios.ios_vlan:\n    vlan_id: 100\n    state: absent\n\n- name: Add vlan using aggregate\n  cisco.ios.ios_vlan:\n    aggregate:\n    - {vlan_id: 100, name: test-vlan, interfaces: [GigabitEthernet0/1, GigabitEthernet0/2],\n      delay: 15, state: suspend}\n    - {vlan_id: 101, name: test-vlan, interfaces: GigabitEthernet0/3}\n\n- name: Move interfaces to a different VLAN\n  cisco.ios.ios_vlan:\n    vlan_id: 102\n    interfaces:\n    - GigabitEthernet0/0\n    - GigabitEthernet0/1\n"
  },
  "cisco.ios.ios_vlans": {
    "doc": {
      "description": "This module provides declarative management of VLANs on Cisco IOS network devices.",
      "has_action": true,
      "notes": "Tested against Cisco IOSl2 device with Version 15.2 on VIRL.\nStarting from v2.5.0, this module will fail when run against Cisco IOS devices that do not support VLANs. The offline states (C(rendered) and C(parsed)) will work as expected.\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)",
      "options": {
        "config": {
          "aliases": [],
          "description": "A dictionary of VLANs options",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "mtu": {
              "aliases": [],
              "description": "VLAN Maximum Transmission Unit.\nRefer to vendor documentation for valid values.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Ascii name of the VLAN.\nNOTE, I(name) should not be named/appended with I(default) as it is reserved for device default vlans.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "remote_span": {
              "aliases": [],
              "description": "Configure as Remote SPAN VLAN",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "shutdown": {
              "aliases": [],
              "description": "Shutdown VLAN switching.",
              "type": "str",
              "required": false,
              "choices": [
                "enabled",
                "disabled"
              ],
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "Operational state of the VLAN",
              "type": "str",
              "required": false,
              "choices": [
                "active",
                "suspend"
              ],
              "suboptions": {}
            },
            "vlan_id": {
              "aliases": [],
              "description": "ID of the VLAN. Range 1-4094",
              "type": "int",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "running_config": {
          "aliases": [],
          "description": "This option is used only with state I(parsed).\nThe value of this option should be the output received from the IOS device by executing the command B(show vlan).\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into Ansible structured data as per the resource module's argspec and the value is then returned in the I(parsed) key within the result.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state the configuration should be left in\nThe states I(rendered), I(gathered) and I(parsed) does not perform any change on the device.\nThe state I(rendered) will transform the configuration in C(config) option to platform specific CLI commands which will be returned in the I(rendered) key within the result. For state I(rendered) active connection to remote host is not required.\nThe state I(gathered) will fetch the running configuration from device and transform it into structured data in the format as per the resource module argspec and the value is returned in the I(gathered) key within the result.\nThe state I(parsed) reads the configuration from C(running_config) option and transforms it into JSON format as per the resource module parameters and the value is returned in the I(parsed) key within the result. The value of C(running_config) option should be the same format as the output of command I(show running-config | include ip route|ipv6 route) executed on device. For state I(parsed) active connection to remote host is not required.",
          "default": "merged",
          "type": "str",
          "required": false,
          "choices": [
            "merged",
            "replaced",
            "overridden",
            "deleted",
            "rendered",
            "gathered",
            "parsed"
          ],
          "suboptions": {}
        }
      },
      "short_description": "VLANs resource module",
      "version_added": "1.0.0"
    },
    "examples": "\n# Using merged\n\n# Before state:\n# -------------\n#\n# vios_l2#show vlan\n# VLAN Name                             Status    Ports\n# ---- -------------------------------- --------- -------------------------------\n# 1    default                          active    Gi0/1, Gi0/2\n# 1002 fddi-default                     act/unsup\n# 1003 token-ring-default               act/unsup\n# 1004 fddinet-default                  act/unsup\n# 1005 trnet-default                    act/unsup\n#\n# VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2\n# ---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------\n# 1    enet  100001     1500  -      -      -        -    -        0      0\n# 1002 fddi  101002     1500  -      -      -        -    -        0      0\n# 1003 tr    101003     1500  -      -      -        -    -        0      0\n# 1004 fdnet 101004     1500  -      -      -        ieee -        0      0\n# 1005 trnet 101005     1500  -      -      -        ibm  -        0      0\n\n- name: Merge provided configuration with device configuration\n  cisco.ios.ios_vlans:\n    config:\n    - name: Vlan_10\n      vlan_id: 10\n      state: active\n      shutdown: disabled\n      remote_span: true\n    - name: Vlan_20\n      vlan_id: 20\n      mtu: 610\n      state: active\n      shutdown: enabled\n    - name: Vlan_30\n      vlan_id: 30\n      state: suspend\n      shutdown: enabled\n    state: merged\n\n# After state:\n# ------------\n#\n# vios_l2#show vlan\n# VLAN Name                             Status    Ports\n# ---- -------------------------------- --------- -------------------------------\n# 1    default                          active    Gi0/1, Gi0/2\n# 10   vlan_10                          active\n# 20   vlan_20                          act/lshut\n# 30   vlan_30                          sus/lshut\n# 1002 fddi-default                     act/unsup\n# 1003 token-ring-default               act/unsup\n# 1004 fddinet-default                  act/unsup\n# 1005 trnet-default                    act/unsup\n#\n# VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2\n# ---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------\n# 1    enet  100001     1500  -      -      -        -    -        0      0\n# 10   enet  100010     1500  -      -      -        -    -        0      0\n# 20   enet  100020     610   -      -      -        -    -        0      0\n# 30   enet  100030     1500  -      -      -        -    -        0      0\n# 1002 fddi  101002     1500  -      -      -        -    -        0      0\n# 1003 tr    101003     1500  -      -      -        -    -        0      0\n# 1004 fdnet 101004     1500  -      -      -        ieee -        0      0\n# 1005 trnet 101005     1500  -      -      -        ibm  -        0      0\n#\n# Remote SPAN VLANs\n# ------------------------------------------------------------------------------\n# 10\n\n# Using overridden\n\n# Before state:\n# -------------\n#\n# vios_l2#show vlan\n# VLAN Name                             Status    Ports\n# ---- -------------------------------- --------- -------------------------------\n# 1    default                          active    Gi0/1, Gi0/2\n# 10   vlan_10                          active\n# 20   vlan_20                          act/lshut\n# 30   vlan_30                          sus/lshut\n# 1002 fddi-default                     act/unsup\n# 1003 token-ring-default               act/unsup\n# 1004 fddinet-default                  act/unsup\n# 1005 trnet-default                    act/unsup\n#\n# VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2\n# ---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------\n# 1    enet  100001     1500  -      -      -        -    -        0      0\n# 10   enet  100010     1500  -      -      -        -    -        0      0\n# 20   enet  100020     610   -      -      -        -    -        0      0\n# 30   enet  100030     1500  -      -      -        -    -        0      0\n# 1002 fddi  101002     1500  -      -      -        -    -        0      0\n# 1003 tr    101003     1500  -      -      -        -    -        0      0\n# 1004 fdnet 101004     1500  -      -      -        ieee -        0      0\n# 1005 trnet 101005     1500  -      -      -        ibm  -        0      0\n#\n# Remote SPAN VLANs\n# ------------------------------------------------------------------------------\n# 10\n\n- name: Override device configuration of all VLANs with provided configuration\n  cisco.ios.ios_vlans:\n    config:\n    - name: Vlan_10\n      vlan_id: 10\n      mtu: 1000\n    state: overridden\n\n# After state:\n# ------------\n#\n# vios_l2#show vlan\n# VLAN Name                             Status    Ports\n# ---- -------------------------------- --------- -------------------------------\n# 1    default                          active    Gi0/1, Gi0/2\n# 10   Vlan_10                          active\n# 1002 fddi-default                     act/unsup\n# 1003 token-ring-default               act/unsup\n# 1004 fddinet-default                  act/unsup\n# 1005 trnet-default                    act/unsup\n#\n# VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2\n# ---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------\n# 1    enet  100001     1500  -      -      -        -    -        0      0\n# 10   enet  100010     1000  -      -      -        -    -        0      0\n# 1002 fddi  101002     1500  -      -      -        -    -        0      0\n# 1003 tr    101003     1500  -      -      -        -    -        0      0\n# 1004 fdnet 101004     1500  -      -      -        ieee -        0      0\n# 1005 trnet 101005     1500  -      -      -        ibm  -        0      0\n\n# Using replaced\n\n# Before state:\n# -------------\n#\n# vios_l2#show vlan\n# VLAN Name                             Status    Ports\n# ---- -------------------------------- --------- -------------------------------\n# 1    default                          active    Gi0/1, Gi0/2\n# 10   vlan_10                          active\n# 20   vlan_20                          act/lshut\n# 30   vlan_30                          sus/lshut\n# 1002 fddi-default                     act/unsup\n# 1003 token-ring-default               act/unsup\n# 1004 fddinet-default                  act/unsup\n# 1005 trnet-default                    act/unsup\n#\n# VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2\n# ---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------\n# 1    enet  100001     1500  -      -      -        -    -        0      0\n# 10   enet  100010     1500  -      -      -        -    -        0      0\n# 20   enet  100020     610   -      -      -        -    -        0      0\n# 30   enet  100030     1500  -      -      -        -    -        0      0\n# 1002 fddi  101002     1500  -      -      -        -    -        0      0\n# 1003 tr    101003     1500  -      -      -        -    -        0      0\n# 1004 fdnet 101004     1500  -      -      -        ieee -        0      0\n# 1005 trnet 101005     1500  -      -      -        ibm  -        0      0\n#\n# Remote SPAN VLANs\n# ------------------------------------------------------------------------------\n# 10\n\n- name: Replaces device configuration of listed VLANs with provided configuration\n  cisco.ios.ios_vlans:\n    config:\n    - vlan_id: 20\n      name: Test_VLAN20\n      mtu: 700\n      shutdown: disabled\n    - vlan_id: 30\n      name: Test_VLAN30\n      mtu: 1000\n    state: replaced\n\n# After state:\n# ------------\n#\n# vios_l2#show vlan\n# VLAN Name                             Status    Ports\n# ---- -------------------------------- --------- -------------------------------\n# 1    default                          active    Gi0/1, Gi0/2\n# 10   vlan_10                          active\n# 20   Test_VLAN20                      active\n# 30   Test_VLAN30                      active\n# 1002 fddi-default                     act/unsup\n# 1003 token-ring-default               act/unsup\n# 1004 fddinet-default                  act/unsup\n# 1005 trnet-default                    act/unsup\n#\n# VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2\n# ---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------\n# 1    enet  100001     1500  -      -      -        -    -        0      0\n# 10   enet  100010     1500  -      -      -        -    -        0      0\n# 20   enet  100020     700   -      -      -        -    -        0      0\n# 30   enet  100030     1000  -      -      -        -    -        0      0\n# 1002 fddi  101002     1500  -      -      -        -    -        0      0\n# 1003 tr    101003     1500  -      -      -        -    -        0      0\n# 1004 fdnet 101004     1500  -      -      -        ieee -        0      0\n# 1005 trnet 101005     1500  -      -      -        ibm  -        0      0\n#\n# Remote SPAN VLANs\n# ------------------------------------------------------------------------------\n# 10\n\n# Using deleted\n\n# Before state:\n# -------------\n#\n# vios_l2#show vlan\n# VLAN Name                             Status    Ports\n# ---- -------------------------------- --------- -------------------------------\n# 1    default                          active    Gi0/1, Gi0/2\n# 10   vlan_10                          active\n# 20   vlan_20                          act/lshut\n# 30   vlan_30                          sus/lshut\n# 1002 fddi-default                     act/unsup\n# 1003 token-ring-default               act/unsup\n# 1004 fddinet-default                  act/unsup\n# 1005 trnet-default                    act/unsup\n#\n# VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2\n# ---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------\n# 1    enet  100001     1500  -      -      -        -    -        0      0\n# 10   enet  100010     1500  -      -      -        -    -        0      0\n# 20   enet  100020     610   -      -      -        -    -        0      0\n# 30   enet  100030     1500  -      -      -        -    -        0      0\n# 1002 fddi  101002     1500  -      -      -        -    -        0      0\n# 1003 tr    101003     1500  -      -      -        -    -        0      0\n# 1004 fdnet 101004     1500  -      -      -        ieee -        0      0\n# 1005 trnet 101005     1500  -      -      -        ibm  -        0      0\n#\n# Remote SPAN VLANs\n# ------------------------------------------------------------------------------\n# 10\n\n- name: Delete attributes of given VLANs\n  cisco.ios.ios_vlans:\n    config:\n    - vlan_id: 10\n    - vlan_id: 20\n    state: deleted\n\n# After state:\n# -------------\n#\n# vios_l2#show vlan\n# VLAN Name                             Status    Ports\n# ---- -------------------------------- --------- -------------------------------\n# 1    default                          active    Gi0/1, Gi0/2\n# 30   vlan_30                          sus/lshut\n# 1002 fddi-default                     act/unsup\n# 1003 token-ring-default               act/unsup\n# 1004 fddinet-default                  act/unsup\n# 1005 trnet-default                    act/unsup\n#\n# VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2\n# ---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------\n# 1    enet  100001     1500  -      -      -        -    -        0      0\n# 30   enet  100030     1500  -      -      -        -    -        0      0\n# 1002 fddi  101002     1500  -      -      -        -    -        0      0\n# 1003 tr    101003     1500  -      -      -        -    -        0      0\n# 1004 fdnet 101004     1500  -      -      -        ieee -        0      0\n# 1005 trnet 101005     1500  -      -      -        ibm  -        0      0\n\n# Using Deleted without any config passed\n#\"(NOTE: This will delete all of configured vlans attributes)\"\n\n# Before state:\n# -------------\n#\n# vios_l2#show vlan\n# VLAN Name                             Status    Ports\n# ---- -------------------------------- --------- -------------------------------\n# 1    default                          active    Gi0/1, Gi0/2\n# 10   vlan_10                          active\n# 20   vlan_20                          act/lshut\n# 30   vlan_30                          sus/lshut\n# 1002 fddi-default                     act/unsup\n# 1003 token-ring-default               act/unsup\n# 1004 fddinet-default                  act/unsup\n# 1005 trnet-default                    act/unsup\n#\n# VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2\n# ---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------\n# 1    enet  100001     1500  -      -      -        -    -        0      0\n# 10   enet  100010     1500  -      -      -        -    -        0      0\n# 20   enet  100020     610   -      -      -        -    -        0      0\n# 30   enet  100030     1500  -      -      -        -    -        0      0\n# 1002 fddi  101002     1500  -      -      -        -    -        0      0\n# 1003 tr    101003     1500  -      -      -        -    -        0      0\n# 1004 fdnet 101004     1500  -      -      -        ieee -        0      0\n# 1005 trnet 101005     1500  -      -      -        ibm  -        0      0\n#\n# Remote SPAN VLANs\n# ------------------------------------------------------------------------------\n# 10\n\n- name: Delete attributes of ALL VLANs\n  cisco.ios.ios_vlans:\n    state: deleted\n\n# After state:\n# -------------\n#\n# vios_l2#show vlan\n# VLAN Name                             Status    Ports\n# ---- -------------------------------- --------- -------------------------------\n# 1    default                          active    Gi0/1, Gi0/2\n# 1002 fddi-default                     act/unsup\n# 1003 token-ring-default               act/unsup\n# 1004 fddinet-default                  act/unsup\n# 1005 trnet-default                    act/unsup\n#\n# VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2\n# ---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------\n# 1    enet  100001     1500  -      -      -        -    -        0      0\n# 1002 fddi  101002     1500  -      -      -        -    -        0      0\n# 1003 tr    101003     1500  -      -      -        -    -        0      0\n# 1004 fdnet 101004     1500  -      -      -        ieee -        0      0\n# 1005 trnet 101005     1500  -      -      -        ibm  -        0      0\n\n# Using Gathered\n\n# Before state:\n# -------------\n#\n# vios_l2#show vlan\n# VLAN Name                             Status    Ports\n# ---- -------------------------------- --------- -------------------------------\n# 1    default                          active    Gi0/1, Gi0/2\n# 10   vlan_10                          active\n# 20   vlan_20                          act/lshut\n# 30   vlan_30                          sus/lshut\n# 1002 fddi-default                     act/unsup\n# 1003 token-ring-default               act/unsup\n# 1004 fddinet-default                  act/unsup\n# 1005 trnet-default                    act/unsup\n#\n# VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2\n# ---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------\n# 1    enet  100001     1500  -      -      -        -    -        0      0\n# 10   enet  100010     1500  -      -      -        -    -        0      0\n# 20   enet  100020     610   -      -      -        -    -        0      0\n# 30   enet  100030     1500  -      -      -        -    -        0      0\n# 1002 fddi  101002     1500  -      -      -        -    -        0      0\n# 1003 tr    101003     1500  -      -      -        -    -        0      0\n# 1004 fdnet 101004     1500  -      -      -        ieee -        0      0\n# 1005 trnet 101005     1500  -      -      -        ibm  -        0      0\n#\n# Remote SPAN VLANs\n# ------------------------------------------------------------------------------\n# 10\n\n- name: Gather listed vlans with provided configurations\n  cisco.ios.ios_vlans:\n    config:\n    state: gathered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"gathered\": [\n#         {\n#             \"mtu\": 1500,\n#             \"name\": \"default\",\n#             \"shutdown\": \"disabled\",\n#             \"state\": \"active\",\n#             \"vlan_id\": 1\n#         },\n#         {\n#             \"mtu\": 1500,\n#             \"name\": \"VLAN0010\",\n#             \"shutdown\": \"disabled\",\n#             \"state\": \"active\",\n#             \"vlan_id\": 10\n#         },\n#         {\n#             \"mtu\": 1500,\n#             \"name\": \"VLAN0020\",\n#             \"shutdown\": \"disabled\",\n#             \"state\": \"active\",\n#             \"vlan_id\": 20\n#         },\n#         {\n#             \"mtu\": 1500,\n#             \"name\": \"VLAN0030\",\n#             \"shutdown\": \"disabled\",\n#             \"state\": \"active\",\n#             \"vlan_id\": 30\n#         },\n#         {\n#             \"mtu\": 1500,\n#             \"name\": \"fddi-default\",\n#             \"shutdown\": \"enabled\",\n#             \"state\": \"active\",\n#             \"vlan_id\": 1002\n#         },\n#         {\n#             \"mtu\": 1500,\n#             \"name\": \"token-ring-default\",\n#             \"shutdown\": \"enabled\",\n#             \"state\": \"active\",\n#             \"vlan_id\": 1003\n#         },\n#         {\n#             \"mtu\": 1500,\n#             \"name\": \"fddinet-default\",\n#             \"shutdown\": \"enabled\",\n#             \"state\": \"active\",\n#             \"vlan_id\": 1004\n#         },\n#         {\n#             \"mtu\": 1500,\n#             \"name\": \"trnet-default\",\n#             \"shutdown\": \"enabled\",\n#             \"state\": \"active\",\n#             \"vlan_id\": 1005\n#         }\n#     ]\n\n# After state:\n# ------------\n#\n# vios_l2#show vlan\n# VLAN Name                             Status    Ports\n# ---- -------------------------------- --------- -------------------------------\n# 1    default                          active    Gi0/1, Gi0/2\n# 10   vlan_10                          active\n# 20   vlan_20                          act/lshut\n# 30   vlan_30                          sus/lshut\n# 1002 fddi-default                     act/unsup\n# 1003 token-ring-default               act/unsup\n# 1004 fddinet-default                  act/unsup\n# 1005 trnet-default                    act/unsup\n#\n# VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2\n# ---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------\n# 1    enet  100001     1500  -      -      -        -    -        0      0\n# 10   enet  100010     1500  -      -      -        -    -        0      0\n# 20   enet  100020     610   -      -      -        -    -        0      0\n# 30   enet  100030     1500  -      -      -        -    -        0      0\n# 1002 fddi  101002     1500  -      -      -        -    -        0      0\n# 1003 tr    101003     1500  -      -      -        -    -        0      0\n# 1004 fdnet 101004     1500  -      -      -        ieee -        0      0\n# 1005 trnet 101005     1500  -      -      -        ibm  -        0      0\n#\n# Remote SPAN VLANs\n# ------------------------------------------------------------------------------\n# 10\n\n# Using Rendered\n\n- name: Render the commands for provided  configuration\n  cisco.ios.ios_vlans:\n    config:\n    - name: Vlan_10\n      vlan_id: 10\n      state: active\n      shutdown: disabled\n      remote_span: true\n    - name: Vlan_20\n      vlan_id: 20\n      mtu: 610\n      state: active\n      shutdown: enabled\n    - name: Vlan_30\n      vlan_id: 30\n      state: suspend\n      shutdown: enabled\n    state: rendered\n\n# Module Execution Result:\n# ------------------------\n#\n# \"rendered\": [\n#         \"vlan 10\",\n#         \"name Vlan_10\",\n#         \"state active\",\n#         \"remote-span\",\n#         \"no shutdown\",\n#         \"vlan 20\",\n#         \"name Vlan_20\",\n#         \"state active\",\n#         \"mtu 610\",\n#         \"shutdown\",\n#         \"vlan 30\",\n#         \"name Vlan_30\",\n#         \"state suspend\",\n#         \"shutdown\"\n#     ]\n\n# Using Parsed\n\n# File: parsed.cfg\n# ----------------\n#\n# VLAN Name                             Status    Ports\n# ---- -------------------------------- --------- -------------------------------\n# 1    default                          active    Gi0/1, Gi0/2\n# 10   vlan_10                          active\n# 20   vlan_20                          act/lshut\n# 30   vlan_30                          sus/lshut\n# 1002 fddi-default                     act/unsup\n# 1003 token-ring-default               act/unsup\n# 1004 fddinet-default                  act/unsup\n# 1005 trnet-default                    act/unsup\n#\n# VLAN Type  SAID       MTU   Parent RingNo BridgeNo Stp  BrdgMode Trans1 Trans2\n# ---- ----- ---------- ----- ------ ------ -------- ---- -------- ------ ------\n# 1    enet  100001     1500  -      -      -        -    -        0      0\n# 10   enet  100010     1500  -      -      -        -    -        0      0\n# 20   enet  100020     1500  -      -      -        -    -        0      0\n# 30   enet  100030     1500  -      -      -        -    -        0      0\n# 1002 fddi  101002     1500  -      -      -        -    -        0      0\n# 1003 tr    101003     1500  -      -      -        -    -        0      0\n# 1004 fdnet 101004     1500  -      -      -        ieee -        0      0\n# 1005 trnet 101005     1500  -      -      -        ibm  -        0      0\n\n- name: Parse the commands for provided configuration\n  cisco.ios.ios_vlans:\n    running_config: \"{{ lookup('file', './parsed.cfg') }}\"\n    state: parsed\n\n# Module Execution Result:\n# ------------------------\n#\n# \"parsed\": [\n#         {\n#             \"mtu\": 1500,\n#             \"name\": \"default\",\n#             \"shutdown\": \"disabled\",\n#             \"state\": \"active\",\n#             \"vlan_id\": 1\n#         },\n#         {\n#             \"mtu\": 1500,\n#             \"name\": \"vlan_10\",\n#             \"shutdown\": \"disabled\",\n#             \"state\": \"active\",\n#             \"vlan_id\": 10\n#         },\n#         {\n#             \"mtu\": 1500,\n#             \"name\": \"vlan_20\",\n#             \"shutdown\": \"enabled\",\n#             \"state\": \"active\",\n#             \"vlan_id\": 20\n#         },\n#         {\n#             \"mtu\": 1500,\n#             \"name\": \"vlan_30\",\n#             \"shutdown\": \"enabled\",\n#             \"state\": \"suspend\",\n#             \"vlan_id\": 30\n#         },\n#         {\n#             \"mtu\": 1500,\n#             \"name\": \"fddi-default\",\n#             \"shutdown\": \"enabled\",\n#             \"state\": \"active\",\n#             \"vlan_id\": 1002\n#         },\n#         {\n#             \"mtu\": 1500,\n#             \"name\": \"token-ring-default\",\n#             \"shutdown\": \"enabled\",\n#             \"state\": \"active\",\n#             \"vlan_id\": 1003\n#         },\n#         {\n#             \"mtu\": 1500,\n#             \"name\": \"fddinet-default\",\n#             \"shutdown\": \"enabled\",\n#             \"state\": \"active\",\n#             \"vlan_id\": 1004\n#         },\n#         {\n#             \"mtu\": 1500,\n#             \"name\": \"trnet-default\",\n#             \"shutdown\": \"enabled\",\n#             \"state\": \"active\",\n#             \"vlan_id\": 1005\n#         }\n#     ]\n\n"
  },
  "cisco.ios.ios_vrf": {
    "doc": {
      "description": "This module provides declarative management of VRF definitions on Cisco IOS devices.  It allows playbooks to manage individual or the entire VRF collection.  It also supports purging VRF definitions from the configuration that are not explicitly defined.",
      "has_action": true,
      "notes": "Tested against IOS 15.6\nThis module works with connection C(network_cli). See U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html)\nFor more information on using Ansible to manage network devices see the :ref:`Ansible Network Guide <network_guide>`\nFor more information on using Ansible to manage Cisco devices see the `Cisco integration page <https://www.ansible.com/integrations/networks/cisco>`_.",
      "options": {
        "associated_interfaces": {
          "aliases": [],
          "description": "This is a intent option and checks the operational state of the for given vrf C(name) for associated interfaces. If the value in the C(associated_interfaces) does not match with the operational state of vrf interfaces on device it will result in failure.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "delay": {
          "aliases": [],
          "description": "Time in seconds to wait before checking for the operational state on remote device.",
          "default": "10",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Provides a short description of the VRF definition in the current active configuration.  The VRF definition value accepts alphanumeric characters used to provide additional information about the VRF.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interfaces": {
          "aliases": [],
          "description": "Identifies the set of interfaces that should be configured in the VRF.  Interfaces must be routed interfaces in order to be placed into a VRF.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the VRF definition to be managed on the remote IOS device.  The VRF definition name is an ASCII string name used to uniquely identify the VRF.  This argument is mutually exclusive with the C(vrfs) argument",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "B(Deprecated)\nStarting with Ansible 2.5 we recommend using C(connection: network_cli).\nFor more information please see the U(https://docs.ansible.com/ansible/latest/network/user_guide/platform_ios.html).\nHORIZONTALLINE\nA dict object containing connection details.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auth_pass": {
              "aliases": [],
              "description": "Specifies the password to use if required to enter privileged mode on the remote device.  If I(authorize) is false, then this argument does nothing. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTH_PASS) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "authorize": {
              "aliases": [],
              "description": "Instructs the module to enter privileged mode on the remote device before sending any commands.  If not specified, the device will attempt to execute all commands in non-privileged mode. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_AUTHORIZE) will be used instead.",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Specifies the DNS host name or address for connecting to the remote device over the specified transport.  The value of host is used as the destination address for the transport.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Specifies the password to use to authenticate the connection to the remote device.   This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_PASSWORD) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "Specifies the port to use when building the connection to the remote device.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ssh_keyfile": {
              "aliases": [],
              "description": "Specifies the SSH key to use to authenticate the connection to the remote device.   This value is the path to the key used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_SSH_KEYFILE) will be used instead.",
              "type": "path",
              "required": false,
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout in seconds for communicating with the network device for either connecting or sending commands.  If the timeout is exceeded before the operation is completed, the module will error.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Configures the username to use to authenticate the connection to the remote device.  This value is used to authenticate the SSH session. If the value is not specified in the task, the value of environment variable C(ANSIBLE_NET_USERNAME) will be used instead.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "purge": {
          "aliases": [],
          "description": "Instructs the module to consider the VRF definition absolute.  It will remove any previously configured VRFs on the device.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "rd": {
          "aliases": [],
          "description": "The router-distinguisher value uniquely identifies the VRF to routing processes on the remote IOS system.  The RD value takes the form of C(A:B) where C(A) and C(B) are both numeric values.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "route_both": {
          "aliases": [],
          "description": "Adds an export and import list of extended route target communities to the VRF.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "route_both_ipv4": {
          "aliases": [],
          "description": "Adds an export and import list of extended route target communities in address-family configuration submode to the VRF.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "route_both_ipv6": {
          "aliases": [],
          "description": "Adds an export and import list of extended route target communities in address-family configuration submode to the VRF.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "route_export": {
          "aliases": [],
          "description": "Adds an export list of extended route target communities to the VRF.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "route_export_ipv4": {
          "aliases": [],
          "description": "Adds an export list of extended route target communities in address-family configuration submode to the VRF.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "route_export_ipv6": {
          "aliases": [],
          "description": "Adds an export list of extended route target communities in address-family configuration submode to the VRF.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "route_import": {
          "aliases": [],
          "description": "Adds an import list of extended route target communities to the VRF.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "route_import_ipv4": {
          "aliases": [],
          "description": "Adds an import list of extended route target communities in address-family configuration submode to the VRF.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "route_import_ipv6": {
          "aliases": [],
          "description": "Adds an import list of extended route target communities in address-family configuration submode to the VRF.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Configures the state of the VRF definition as it relates to the device operational configuration.  When set to I(present), the VRF should be configured in the device active configuration and when set to I(absent) the VRF should not be in the device active configuration",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "vrfs": {
          "aliases": [],
          "description": "The set of VRF definition objects to be configured on the remote IOS device.  Ths list entries can either be the VRF name or a hash of VRF definitions and attributes.  This argument is mutually exclusive with the C(name) argument.",
          "type": "list",
          "required": false,
          "elements": "raw",
          "suboptions": {}
        }
      },
      "short_description": "Manage the collection of VRF definitions on Cisco IOS devices",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: configure a vrf named management\n  cisco.ios.ios_vrf:\n    name: management\n    description: oob mgmt vrf\n    interfaces:\n    - Management1\n\n- name: remove a vrf named test\n  cisco.ios.ios_vrf:\n    name: test\n    state: absent\n\n- name: configure set of VRFs and purge any others\n  cisco.ios.ios_vrf:\n    vrfs:\n    - red\n    - blue\n    - green\n    purge: yes\n\n- name: Creates a list of import RTs for the VRF with the same parameters\n  cisco.ios.ios_vrf:\n    name: test_import\n    rd: 1:100\n    route_import:\n    - 1:100\n    - 3:100\n\n- name: Creates a list of import RTs in address-family configuration submode for the\n    VRF with the same parameters\n  cisco.ios.ios_vrf:\n    name: test_import_ipv4\n    rd: 1:100\n    route_import_ipv4:\n    - 1:100\n    - 3:100\n\n- name: Creates a list of import RTs in address-family configuration submode for the\n    VRF with the same parameters\n  cisco.ios.ios_vrf:\n    name: test_import_ipv6\n    rd: 1:100\n    route_import_ipv6:\n    - 1:100\n    - 3:100\n\n- name: Creates a list of export RTs for the VRF with the same parameters\n  cisco.ios.ios_vrf:\n    name: test_export\n    rd: 1:100\n    route_export:\n    - 1:100\n    - 3:100\n\n- name: Creates a list of export RTs in address-family configuration submode for the\n    VRF with the same parameters\n  cisco.ios.ios_vrf:\n    name: test_export_ipv4\n    rd: 1:100\n    route_export_ipv4:\n    - 1:100\n    - 3:100\n\n- name: Creates a list of export RTs in address-family configuration submode for the\n    VRF with the same parameters\n  cisco.ios.ios_vrf:\n    name: test_export_ipv6\n    rd: 1:100\n    route_export_ipv6:\n    - 1:100\n    - 3:100\n\n- name: Creates a list of import and export route targets for the VRF with the same\n    parameters\n  cisco.ios.ios_vrf:\n    name: test_both\n    rd: 1:100\n    route_both:\n    - 1:100\n    - 3:100\n\n- name: Creates a list of import and export route targets in address-family configuration\n    submode for the VRF with the same parameters\n  cisco.ios.ios_vrf:\n    name: test_both_ipv4\n    rd: 1:100\n    route_both_ipv4:\n    - 1:100\n    - 3:100\n\n- name: Creates a list of import and export route targets in address-family configuration\n    submode for the VRF with the same parameters\n  cisco.ios.ios_vrf:\n    name: test_both_ipv6\n    rd: 1:100\n    route_both_ipv6:\n    - 1:100\n    - 3:100\n"
  }
}