{
  "google.cloud.gcp_appengine_firewall_rule": {
    "doc": {
      "description": "A single firewall rule that is evaluated against incoming traffic and provides an action to take on matched requests.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.firewall.ingressRules)\nOfficial Documentation: U(https://cloud.google.com/appengine/docs/standard/python/creating-firewalls#creating_firewall_rules)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "action": {
          "aliases": [],
          "description": "The action to take if this rule matches.\nSome valid choices include: \"UNSPECIFIED_ACTION\", \"ALLOW\", \"DENY\"",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional string description of this rule.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "priority": {
          "aliases": [],
          "description": "A positive integer that defines the order of rule evaluation.\nRules with the lowest priority are evaluated first.\nA default rule at priority Int32.MaxValue matches all IPv4 and IPv6 traffic when no previous rule matches. Only the action of this rule can be modified by the user.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "source_range": {
          "aliases": [],
          "description": "IP address or range, defined using CIDR notation, of requests that this rule applies to.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP FirewallRule"
    },
    "examples": "\n- name: create a firewall rule\n  google.cloud.gcp_appengine_firewall_rule:\n    priority: 1000\n    source_range: 10.0.0.0\n    action: ALLOW\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_appengine_firewall_rule_info": {
    "doc": {
      "description": "Gather info for GCP FirewallRule",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP FirewallRule"
    },
    "examples": "\n- name: get info on a firewall rule\n  gcp_appengine_firewall_rule_info:\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_bigquery_dataset": {
    "doc": {
      "description": "Datasets allow you to organize and control access to your tables.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/bigquery/docs/reference/rest/v2/datasets)\nDatasets Intro: U(https://cloud.google.com/bigquery/docs/datasets-intro)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "access": {
          "aliases": [],
          "description": "An array of objects that define dataset access for one or more entities.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "domain": {
              "aliases": [],
              "description": "A domain to grant access to. Any users signed in with the domain specified will be granted the specified access .",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "group_by_email": {
              "aliases": [],
              "description": "An email address of a Google Group to grant access to.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "role": {
              "aliases": [],
              "description": "Describes the rights granted to the user specified by the other member of the access object. Basic, predefined, and custom roles are supported. Predefined roles that have equivalent basic roles are swapped by the API to their basic counterparts. See [official docs](U(https://cloud.google.com/bigquery/docs/access-control)).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "special_group": {
              "aliases": [],
              "description": "A special group to grant access to. Possible values include: * `projectOwners`: Owners of the enclosing project.\n* `projectReaders`: Readers of the enclosing project.\n* `projectWriters`: Writers of the enclosing project.\n* `allAuthenticatedUsers`: All authenticated BigQuery users.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "user_by_email": {
              "aliases": [],
              "description": "An email address of a user to grant access to. For example: fred@example.com .",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "view": {
              "aliases": [],
              "description": "A view from a different dataset to grant access to. Queries executed against that view will have read access to tables in this dataset. The role field is not required when this field is set. If that view is updated by any user, access to the view needs to be granted again via an update operation.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "dataset_id": {
                  "aliases": [],
                  "description": "The ID of the dataset containing this table.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "project_id": {
                  "aliases": [],
                  "description": "The ID of the project containing this table.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "table_id": {
                  "aliases": [],
                  "description": "The ID of the table. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores. The maximum length is 1,024 characters.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "dataset_reference": {
          "aliases": [],
          "description": "A reference that identifies the dataset.",
          "type": "dict",
          "required": true,
          "suboptions": {
            "dataset_id": {
              "aliases": [],
              "description": "A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores. The maximum length is 1,024 characters.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "project_id": {
              "aliases": [],
              "description": "The ID of the project containing this dataset.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "default_encryption_configuration": {
          "aliases": [],
          "description": "The default encryption key for all tables in the dataset. Once this property is set, all newly-created partitioned tables in the dataset will have encryption key set to this value, unless table creation request (or query) overrides the key.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "kms_key_name": {
              "aliases": [],
              "description": "Describes the Cloud KMS encryption key that will be used to protect destination BigQuery table. The BigQuery Service Account associated with your project requires access to this encryption key.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "default_partition_expiration_ms": {
          "aliases": [],
          "description": "The default partition expiration for all partitioned tables in the dataset, in milliseconds.\nOnce this property is set, all newly-created partitioned tables in the dataset will have an `expirationMs` property in the `timePartitioning` settings set to this value, and changing the value will only affect new tables, not existing ones. The storage in a partition will have an expiration time of its partition time plus this value.\nSetting this property overrides the use of `defaultTableExpirationMs` for partitioned tables: only one of `defaultTableExpirationMs` and `defaultPartitionExpirationMs` will be used for any new partitioned table. If you provide an explicit `timePartitioning.expirationMs` when creating or updating a partitioned table, that value takes precedence over the default partition expiration time indicated by this property.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "default_table_expiration_ms": {
          "aliases": [],
          "description": "The default lifetime of all tables in the dataset, in milliseconds.\nThe minimum value is 3600000 milliseconds (one hour).\nOnce this property is set, all newly-created tables in the dataset will have an `expirationTime` property set to the creation time plus the value in this property, and changing the value will only affect new tables, not existing ones. When the `expirationTime` for a given table is reached, that table will be deleted automatically.\nIf a table's `expirationTime` is modified or removed before the table expires, or if you provide an explicit `expirationTime` when creating a table, that value takes precedence over the default expiration time indicated by this property.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "A user-friendly description of the dataset.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "friendly_name": {
          "aliases": [],
          "description": "A descriptive name for the dataset.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "labels": {
          "aliases": [],
          "description": "The labels associated with this dataset. You can use these to organize and group your datasets .",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "The geographic location where the dataset should reside.\nSee [official docs](U(https://cloud.google.com/bigquery/docs/dataset-locations)).\nThere are two types of locations, regional or multi-regional. A regional location is a specific geographic place, such as Tokyo, and a multi-regional location is a large geographic area, such as the United States, that contains at least two geographic places.\nThe default value is multi-regional location `US`.\nChanging this forces a new resource to be created.",
          "default": "US",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Dataset name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Dataset"
    },
    "examples": "\n- name: create a dataset\n  google.cloud.gcp_bigquery_dataset:\n    name: my_example_dataset\n    dataset_reference:\n      dataset_id: my_example_dataset\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_bigquery_dataset_info": {
    "doc": {
      "description": "Gather info for GCP Dataset",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Dataset"
    },
    "examples": "\n- name: get info on a dataset\n  gcp_bigquery_dataset_info:\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_bigquery_table": {
    "doc": {
      "description": "A Table that belongs to a Dataset .",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "clustering": {
          "aliases": [],
          "description": "One or more fields on which data should be clustered. Only top-level, non-repeated, simple-type fields are supported. When you cluster a table using multiple columns, the order of columns you specify is important. The order of the specified columns determines the sort order of the data.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "dataset": {
          "aliases": [],
          "description": "Name of the dataset.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "A user-friendly description of the dataset.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "encryption_configuration": {
          "aliases": [],
          "description": "Custom encryption configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "kms_key_name": {
              "aliases": [],
              "description": "Describes the Cloud KMS encryption key that will be used to protect destination BigQuery table. The BigQuery Service Account associated with your project requires access to this encryption key.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "expiration_time": {
          "aliases": [],
          "description": "The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "external_data_configuration": {
          "aliases": [],
          "description": "Describes the data format, location, and other properties of a table stored outside of BigQuery. By defining these properties, the data source can then be queried as if it were a standard BigQuery table.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "autodetect": {
              "aliases": [],
              "description": "Try to detect schema and format options automatically. Any option specified explicitly will be honored.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "bigtable_options": {
              "aliases": [],
              "description": "Additional options if sourceFormat is set to BIGTABLE.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "column_families": {
                  "aliases": [],
                  "description": "List of column families to expose in the table schema along with their types.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "columns": {
                      "aliases": [],
                      "description": "Lists of columns that should be exposed as individual fields as opposed to a list of (column name, value) pairs.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "encoding": {
                          "aliases": [],
                          "description": "The encoding of the values when the type is not STRING.\nSome valid choices include: \"TEXT\", \"BINARY\"",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "field_name": {
                          "aliases": [],
                          "description": "If the qualifier is not a valid BigQuery field identifier, a valid identifier must be provided as the column field name and is used as field name in queries.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "only_read_latest": {
                          "aliases": [],
                          "description": "If this is set, only the latest version of value in this column are exposed .",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "qualifier_string": {
                          "aliases": [],
                          "description": "Qualifier of the column.",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "type": {
                          "aliases": [],
                          "description": "The type to convert the value in cells of this column.\nSome valid choices include: \"BYTES\", \"STRING\", \"INTEGER\", \"FLOAT\", \"BOOLEAN\"",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "encoding": {
                      "aliases": [],
                      "description": "The encoding of the values when the type is not STRING.\nSome valid choices include: \"TEXT\", \"BINARY\"",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "family_id": {
                      "aliases": [],
                      "description": "Identifier of the column family.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "only_read_latest": {
                      "aliases": [],
                      "description": "If this is set only the latest version of value are exposed for all columns in this column family .",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "type": {
                      "aliases": [],
                      "description": "The type to convert the value in cells of this column family.\nSome valid choices include: \"BYTES\", \"STRING\", \"INTEGER\", \"FLOAT\", \"BOOLEAN\"",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "ignore_unspecified_column_families": {
                  "aliases": [],
                  "description": "If field is true, then the column families that are not specified in columnFamilies list are not exposed in the table schema .",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "read_rowkey_as_string": {
                  "aliases": [],
                  "description": "If field is true, then the rowkey column families will be read and converted to string.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "compression": {
              "aliases": [],
              "description": "The compression type of the data source.\nSome valid choices include: \"GZIP\", \"NONE\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "csv_options": {
              "aliases": [],
              "description": "Additional properties to set if sourceFormat is set to CSV.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "allow_jagged_rows": {
                  "aliases": [],
                  "description": "Indicates if BigQuery should accept rows that are missing trailing optional columns .",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "allow_quoted_newlines": {
                  "aliases": [],
                  "description": "Indicates if BigQuery should allow quoted data sections that contain newline characters in a CSV file .",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "encoding": {
                  "aliases": [],
                  "description": "The character encoding of the data.\nSome valid choices include: \"UTF-8\", \"ISO-8859-1\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "field_delimiter": {
                  "aliases": [],
                  "description": "The separator for fields in a CSV file.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "quote": {
                  "aliases": [],
                  "description": "The value that is used to quote data sections in a CSV file.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "skip_leading_rows": {
                  "aliases": [],
                  "description": "The number of rows at the top of a CSV file that BigQuery will skip when reading the data.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "google_sheets_options": {
              "aliases": [],
              "description": "Additional options if sourceFormat is set to GOOGLE_SHEETS.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "skip_leading_rows": {
                  "aliases": [],
                  "description": "The number of rows at the top of a Google Sheet that BigQuery will skip when reading the data.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "ignore_unknown_values": {
              "aliases": [],
              "description": "Indicates if BigQuery should allow extra values that are not represented in the table schema .",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "max_bad_records": {
              "aliases": [],
              "description": "The maximum number of bad records that BigQuery can ignore when reading data .",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "schema": {
              "aliases": [],
              "description": "The schema for the data. Schema is required for CSV and JSON formats.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "fields": {
                  "aliases": [],
                  "description": "Describes the fields in a table.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "description": {
                      "aliases": [],
                      "description": "The field description.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "fields": {
                      "aliases": [],
                      "description": "Describes the nested schema fields if the type property is set to RECORD .",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "mode": {
                      "aliases": [],
                      "description": "Field mode.\nSome valid choices include: \"NULLABLE\", \"REQUIRED\", \"REPEATED\"",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "Field name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "type": {
                      "aliases": [],
                      "description": "Field data type.\nSome valid choices include: \"STRING\", \"BYTES\", \"INTEGER\", \"FLOAT\", \"TIMESTAMP\", \"DATE\", \"TIME\", \"DATETIME\", \"RECORD\"",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "source_format": {
              "aliases": [],
              "description": "The data format.\nSome valid choices include: \"CSV\", \"GOOGLE_SHEETS\", \"NEWLINE_DELIMITED_JSON\", \"AVRO\", \"DATASTORE_BACKUP\", \"BIGTABLE\", \"ORC\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "source_uris": {
              "aliases": [],
              "description": "The fully-qualified URIs that point to your data in Google Cloud.\nFor Google Cloud Storage URIs: Each URI can contain one '*' wildcard character and it must come after the 'bucket' name. Size limits related to load jobs apply to external data sources. For Google Cloud Bigtable URIs: Exactly one URI can be specified and it has be a fully specified and valid HTTPS URL for a Google Cloud Bigtable table. For Google Cloud Datastore backups, exactly one URI can be specified. Also, the '*' wildcard character is not allowed.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            }
          }
        },
        "friendly_name": {
          "aliases": [],
          "description": "A descriptive name for this table.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "labels": {
          "aliases": [],
          "description": "The labels associated with this dataset. You can use these to organize and group your datasets .",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the table.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "num_rows": {
          "aliases": [],
          "description": "The number of rows of data in this table, excluding any data in the streaming buffer.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "schema": {
          "aliases": [],
          "description": "Describes the schema of this table.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "fields": {
              "aliases": [],
              "description": "Describes the fields in a table.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "description": {
                  "aliases": [],
                  "description": "The field description. The maximum length is 1,024 characters.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "fields": {
                  "aliases": [],
                  "description": "Describes the nested schema fields if the type property is set to RECORD.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "mode": {
                  "aliases": [],
                  "description": "The field mode.\nSome valid choices include: \"NULLABLE\", \"REQUIRED\", \"REPEATED\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "The field name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "type": {
                  "aliases": [],
                  "description": "The field data type.\nSome valid choices include: \"STRING\", \"BYTES\", \"INTEGER\", \"FLOAT\", \"TIMESTAMP\", \"DATE\", \"TIME\", \"DATETIME\", \"RECORD\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "table_reference": {
          "aliases": [],
          "description": "Reference describing the ID of this table.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "dataset_id": {
              "aliases": [],
              "description": "The ID of the dataset containing this table.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "project_id": {
              "aliases": [],
              "description": "The ID of the project containing this table.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "table_id": {
              "aliases": [],
              "description": "The ID of the the table.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "time_partitioning": {
          "aliases": [],
          "description": "If specified, configures time-based partitioning for this table.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "expiration_ms": {
              "aliases": [],
              "description": "Number of milliseconds for which to keep the storage for a partition.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "field": {
              "aliases": [],
              "description": "If not set, the table is partitioned by pseudo column, referenced via either '_PARTITIONTIME' as TIMESTAMP type, or '_PARTITIONDATE' as DATE type. If field is specified, the table is instead partitioned by this field. The field must be a top-level TIMESTAMP or DATE field. Its mode must be NULLABLE or REQUIRED.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "The only type supported is DAY, which will generate one partition per day.\nSome valid choices include: \"DAY\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "view": {
          "aliases": [],
          "description": "The view definition.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "use_legacy_sql": {
              "aliases": [],
              "description": "Specifies whether to use BigQuery's legacy SQL for this view .",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "user_defined_function_resources": {
              "aliases": [],
              "description": "Describes user-defined function resources used in the query.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "inline_code": {
                  "aliases": [],
                  "description": "An inline resource that contains code for a user-defined function (UDF). Providing a inline code resource is equivalent to providing a URI for a file containing the same code.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "resource_uri": {
                  "aliases": [],
                  "description": "A code resource to load from a Google Cloud Storage URI (gs://bucket/path).",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Table"
    },
    "examples": "\n- name: create a dataset\n  google.cloud.gcp_bigquery_dataset:\n    name: example_dataset\n    dataset_reference:\n      dataset_id: example_dataset\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: dataset\n\n- name: create a table\n  google.cloud.gcp_bigquery_table:\n    name: example_table\n    dataset: example_dataset\n    table_reference:\n      dataset_id: example_dataset\n      project_id: test_project\n      table_id: example_table\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_bigquery_table_info": {
    "doc": {
      "description": "Gather info for GCP Table",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "dataset": {
          "aliases": [],
          "description": "Name of the dataset.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Table"
    },
    "examples": "\n- name: get info on a table\n  gcp_bigquery_table_info:\n    dataset: example_dataset\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_bigtable_instance": {
    "doc": {
      "description": "A collection of Bigtable Tables and the resources that serve them. All tables in an instance are served from all Clusters in the instance.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "clusters": {
          "aliases": [],
          "description": "An array of clusters. Maximum 4.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "default_storage_type": {
              "aliases": [],
              "description": "The type of storage used by this cluster to serve its parent instance's tables, unless explicitly overridden.\nSome valid choices include: \"STORAGE_TYPE_UNSPECIFIED\", \"SSD\", \"HDD\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "location": {
              "aliases": [],
              "description": "The location where this cluster's nodes and storage reside. For best performance, clients should be located as close as possible to this cluster. Currently only zones are supported, so values should be of the form `projects/<project>/locations/<zone>`.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The unique name of the cluster.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "serve_nodes": {
              "aliases": [],
              "description": "The number of nodes allocated to this cluster. More nodes enable higher throughput and more consistent performance.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "display_name": {
          "aliases": [],
          "description": "The descriptive name for this instance as it appears in UIs.\nCan be changed at any time, but should be kept globally unique to avoid confusion.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "labels": {
          "aliases": [],
          "description": "Labels are a flexible and lightweight mechanism for organizing cloud resources into groups that reflect a customer's organizational needs and deployment strategies. They can be used to filter resources and aggregate metrics.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The unique name of the instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "The type of the instance. Defaults to `PRODUCTION`.\nSome valid choices include: \"TYPE_UNSPECIFIED\", \"PRODUCTION\", \"DEVELOPMENT\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Instance"
    },
    "examples": "\n- name: create a instance\n  google.cloud.gcp_bigtable_instance:\n    name: my-instance\n    display_name: My Test Cluster\n    clusters:\n    - name: mycluster\n      location: projects/test_project/locations/us-central1-a\n      serve_nodes: 1\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_bigtable_instance_info": {
    "doc": {
      "description": "Gather info for GCP Instance",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Instance"
    },
    "examples": "\n- name: get info on an instance\n  gcp_bigtable_instance_info:\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_cloudbuild_trigger": {
    "doc": {
      "description": "Configuration for an automated build in response to source repository changes.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/cloud-build/docs/api/reference/rest/v1/projects.triggers)\nAutomating builds using build triggers: U(https://cloud.google.com/cloud-build/docs/running-builds/automate-builds)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.\nThe id for this resource is created by the API after you create the resource the first time. If you want to manage this resource after creation, you'll have to copy the generated id into the playbook. If you do not, new triggers will be created on subsequent runs.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "build": {
          "aliases": [],
          "description": "Contents of the build template. Either a filename or build template must be provided.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "artifacts": {
              "aliases": [],
              "description": "Artifacts produced by the build that should be uploaded upon successful completion of all build steps.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "images": {
                  "aliases": [],
                  "description": "A list of images to be pushed upon the successful completion of all build steps.\nThe images will be pushed using the builder service account's credentials.\nThe digests of the pushed images will be stored in the Build resource's results field.\nIf any of the images fail to be pushed, the build is marked FAILURE.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "objects": {
                  "aliases": [],
                  "description": "A list of objects to be uploaded to Cloud Storage upon successful completion of all build steps.\nFiles in the workspace matching specified paths globs will be uploaded to the Cloud Storage location using the builder service account's credentials.\nThe location and generation of the uploaded objects will be stored in the Build resource's results field.\nIf any objects fail to be pushed, the build is marked FAILURE.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "location": {
                      "aliases": [],
                      "description": "Cloud Storage bucket and optional object path, in the form \"gs://bucket/path/to/somewhere/\".\nFiles in the workspace matching any path pattern will be uploaded to Cloud Storage with this location as a prefix.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "paths": {
                      "aliases": [],
                      "description": "Path globs used to match files in the build's workspace.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "images": {
              "aliases": [],
              "description": "A list of images to be pushed upon the successful completion of all build steps.\nThe images are pushed using the builder service account's credentials.\nThe digests of the pushed images will be stored in the Build resource's results field.\nIf any of the images fail to be pushed, the build status is marked FAILURE.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "logs_bucket": {
              "aliases": [],
              "description": "Google Cloud Storage bucket where logs should be written. Logs file names will be of the format ${logsBucket}/log-${build_id}.txt.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "options": {
              "aliases": [],
              "description": "Special options for this build.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "disk_size_gb": {
                  "aliases": [],
                  "description": "Requested disk size for the VM that runs the build. Note that this is NOT \"disk free\"; some of the space will be used by the operating system and build utilities.\nAlso note that this is the minimum disk size that will be allocated for the build -- the build may run with a larger disk than requested. At present, the maximum disk size is 1000GB; builds that request more than the maximum are rejected with an error.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "dynamic_substitutions": {
                  "aliases": [],
                  "description": "Option to specify whether or not to apply bash style string operations to the substitutions.\nNOTE this is always enabled for triggered builds and cannot be overridden in the build configuration file.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "env": {
                  "aliases": [],
                  "description": "A list of global environment variable definitions that will exist for all build steps in this build. If a variable is defined in both globally and in a build step, the variable will use the build step value.\nThe elements are of the form \"KEY=VALUE\" for the environment variable \"KEY\" being given the value \"VALUE\".",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "log_streaming_option": {
                  "aliases": [],
                  "description": "Option to define build log streaming behavior to Google Cloud Storage.\nSome valid choices include: \"STREAM_DEFAULT\", \"STREAM_ON\", \"STREAM_OFF\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "logging": {
                  "aliases": [],
                  "description": "Option to specify the logging mode, which determines if and where build logs are stored.\nSome valid choices include: \"LOGGING_UNSPECIFIED\", \"LEGACY\", \"GCS_ONLY\", \"STACKDRIVER_ONLY\", \"NONE\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "machine_type": {
                  "aliases": [],
                  "description": "Compute Engine machine type on which to run the build.\nSome valid choices include: \"UNSPECIFIED\", \"N1_HIGHCPU_8\", \"N1_HIGHCPU_32\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "requested_verify_option": {
                  "aliases": [],
                  "description": "Requested verifiability options.\nSome valid choices include: \"NOT_VERIFIED\", \"VERIFIED\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "secret_env": {
                  "aliases": [],
                  "description": "A list of global environment variables, which are encrypted using a Cloud Key Management Service crypto key. These values must be specified in the build's Secret. These variables will be available to all build steps in this build.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "source_provenance_hash": {
                  "aliases": [],
                  "description": "Requested hash for SourceProvenance.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "substitution_option": {
                  "aliases": [],
                  "description": "Option to specify behavior when there is an error in the substitution checks.\nNOTE this is always set to ALLOW_LOOSE for triggered builds and cannot be overridden in the build configuration file.\nSome valid choices include: \"MUST_MATCH\", \"ALLOW_LOOSE\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "volumes": {
                  "aliases": [],
                  "description": "Global list of volumes to mount for ALL build steps Each volume is created as an empty volume prior to starting the build process.\nUpon completion of the build, volumes and their contents are discarded. Global volume names and paths cannot conflict with the volumes defined a build step.\nUsing a global volume in a build with only one step is not valid as it is indicative of a build request with an incorrect configuration.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "name": {
                      "aliases": [],
                      "description": "Name of the volume to mount.\nVolume names must be unique per build step and must be valid names for Docker volumes.\nEach named volume must be used by at least two build steps.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "path": {
                      "aliases": [],
                      "description": "Path at which to mount the volume.\nPaths must be absolute and cannot conflict with other volume paths on the same build step or with certain reserved volume paths.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "worker_pool": {
                  "aliases": [],
                  "description": "Option to specify a WorkerPool for the build. Format projects/{project}/workerPools/{workerPool} This field is experimental.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "queue_ttl": {
              "aliases": [],
              "description": "TTL in queue for this build. If provided and the build is enqueued longer than this value, the build will expire and the build status will be EXPIRED.\nThe TTL starts ticking from createTime.\nA duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "secrets": {
              "aliases": [],
              "description": "Secrets to decrypt using Cloud Key Management Service.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "kms_key_name": {
                  "aliases": [],
                  "description": "Cloud KMS key name to use to decrypt these envs.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "secret_env": {
                  "aliases": [],
                  "description": "Map of environment variable name to its encrypted value.\nSecret environment variables must be unique across all of a build's secrets, and must be used by at least one build step. Values can be at most 64 KB in size. There can be at most 100 secret values across all of a build's secrets.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "source": {
              "aliases": [],
              "description": "The location of the source files to build.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "repo_source": {
                  "aliases": [],
                  "description": "Location of the source in a Google Cloud Source Repository.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "branch_name": {
                      "aliases": [],
                      "description": "Regex matching branches to build. Exactly one a of branch name, tag, or commit SHA must be provided.\nThe syntax of the regular expressions accepted is the syntax accepted by RE2 and described at U(https://github.com/google/re2/wiki/Syntax) .",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "commit_sha": {
                      "aliases": [],
                      "description": "Explicit commit SHA to build. Exactly one a of branch name, tag, or commit SHA must be provided.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "dir": {
                      "aliases": [],
                      "description": "Directory, relative to the source root, in which to run the build.\nThis must be a relative path. If a step's dir is specified and is an absolute path, this value is ignored for that step's execution.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "invert_regex": {
                      "aliases": [],
                      "description": "Only trigger a build if the revision regex does NOT match the revision regex.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "project_id": {
                      "aliases": [],
                      "description": "ID of the project that owns the Cloud Source Repository. If omitted, the project ID requesting the build is assumed.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "repo_name": {
                      "aliases": [],
                      "description": "Name of the Cloud Source Repository.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "substitutions": {
                      "aliases": [],
                      "description": "Substitutions to use in a triggered build. Should only be used with triggers.run .",
                      "type": "dict",
                      "required": false,
                      "suboptions": {}
                    },
                    "tag_name": {
                      "aliases": [],
                      "description": "Regex matching tags to build. Exactly one a of branch name, tag, or commit SHA must be provided.\nThe syntax of the regular expressions accepted is the syntax accepted by RE2 and described at U(https://github.com/google/re2/wiki/Syntax) .",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "storage_source": {
                  "aliases": [],
                  "description": "Location of the source in an archive file in Google Cloud Storage.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "bucket": {
                      "aliases": [],
                      "description": "Google Cloud Storage bucket containing the source.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "generation": {
                      "aliases": [],
                      "description": "Google Cloud Storage generation for the object. If the generation is omitted, the latest generation will be used .",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "object": {
                      "aliases": [],
                      "description": "Google Cloud Storage object containing the source.\nThis object must be a gzipped archive file (.tar.gz) containing source to build.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "steps": {
              "aliases": [],
              "description": "The operations to be performed on the workspace.",
              "type": "list",
              "required": true,
              "elements": "dict",
              "suboptions": {
                "args": {
                  "aliases": [],
                  "description": "A list of arguments that will be presented to the step when it is started.\nIf the image used to run the step's container has an entrypoint, the args are used as arguments to that entrypoint. If the image does not define an entrypoint, the first element in args is used as the entrypoint, and the remainder will be used as arguments.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "dir": {
                  "aliases": [],
                  "description": "Working directory to use when running this step's container.\nIf this value is a relative path, it is relative to the build's working directory. If this value is absolute, it may be outside the build's working directory, in which case the contents of the path may not be persisted across build step executions, unless a `volume` for that path is specified.\nIf the build specifies a `RepoSource` with `dir` and a step with a `dir`, which specifies an absolute path, the `RepoSource` `dir` is ignored for the step's execution.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "entrypoint": {
                  "aliases": [],
                  "description": "Entrypoint to be used instead of the build step image's default entrypoint.\nIf unset, the image's default entrypoint is used .",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "env": {
                  "aliases": [],
                  "description": "A list of environment variable definitions to be used when running a step.\nThe elements are of the form \"KEY=VALUE\" for the environment variable \"KEY\" being given the value \"VALUE\".",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "id": {
                  "aliases": [],
                  "description": "Unique identifier for this build step, used in `wait_for` to reference this build step as a dependency.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "name": {
                  "aliases": [],
                  "description": "The name of the container image that will run this particular build step.\nIf the image is available in the host's Docker daemon's cache, it will be run directly. If not, the host will attempt to pull the image first, using the builder service account's credentials if necessary.\nThe Docker daemon's cache will already have the latest versions of all of the officially supported build steps (see U(https://github.com/GoogleCloudPlatform/cloud-builders) for images and examples).\nThe Docker daemon will also have cached many of the layers for some popular images, like \"ubuntu\", \"debian\", but they will be refreshed at the time you attempt to use them.\nIf you built an image in a previous build step, it will be stored in the host's Docker daemon's cache and is available to use as the name for a later build step.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "secret_env": {
                  "aliases": [],
                  "description": "A list of environment variables which are encrypted using a Cloud Key Management Service crypto key. These values must be specified in the build's `Secret`.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "timeout": {
                  "aliases": [],
                  "description": "Time limit for executing this build step. If not defined, the step has no time limit and will be allowed to continue to run until either it completes or the build itself times out.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "timing": {
                  "aliases": [],
                  "description": "Output only. Stores timing information for executing this build step.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "volumes": {
                  "aliases": [],
                  "description": "List of volumes to mount into the build step.\nEach volume is created as an empty volume prior to execution of the build step. Upon completion of the build, volumes and their contents are discarded.\nUsing a named volume in only one step is not valid as it is indicative of a build request with an incorrect configuration.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "name": {
                      "aliases": [],
                      "description": "Name of the volume to mount.\nVolume names must be unique per build step and must be valid names for Docker volumes. Each named volume must be used by at least two build steps.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "path": {
                      "aliases": [],
                      "description": "Path at which to mount the volume.\nPaths must be absolute and cannot conflict with other volume paths on the same build step or with certain reserved volume paths.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                },
                "wait_for": {
                  "aliases": [],
                  "description": "The ID(s) of the step(s) that this build step depends on.\nThis build step will not start until all the build steps in `wait_for` have completed successfully. If `wait_for` is empty, this build step will start when all previous build steps in the `Build.Steps` list have completed successfully.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                }
              }
            },
            "substitutions": {
              "aliases": [],
              "description": "Substitutions data for Build resource.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "tags": {
              "aliases": [],
              "description": "Tags for annotation of a Build. These are not docker tags.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "timeout": {
              "aliases": [],
              "description": "Amount of time that this build should be allowed to run, to second granularity.\nIf this amount of time elapses, work on the build will cease and the build status will be TIMEOUT.\nThis timeout must be equal to or greater than the sum of the timeouts for build steps within the build.\nThe expected format is the number of seconds followed by s.\nDefault time is ten minutes (600s).",
              "default": "600s",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "Human-readable description of the trigger.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "disabled": {
          "aliases": [],
          "description": "Whether the trigger is disabled or not. If true, the trigger will never result in a build.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filename": {
          "aliases": [],
          "description": "Path, from the source root, to a file whose contents is used for the template. Either a filename or build template must be provided.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "github": {
          "aliases": [],
          "description": "Describes the configuration of a trigger that creates a build whenever a GitHub event is received.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the repository. For example: The name for U(https://github.com/googlecloudplatform/cloud-builders) is \"cloud-builders\".",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "owner": {
              "aliases": [],
              "description": "Owner of the repository. For example: The owner for U(https://github.com/googlecloudplatform/cloud-builders) is \"googlecloudplatform\".",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "pull_request": {
              "aliases": [],
              "description": "filter to match changes in pull requests. Specify only one of pullRequest or push.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "branch": {
                  "aliases": [],
                  "description": "Regex of branches to match.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "comment_control": {
                  "aliases": [],
                  "description": "Whether to block builds on a \"/gcbrun\" comment from a repository owner or collaborator.\nSome valid choices include: \"COMMENTS_DISABLED\", \"COMMENTS_ENABLED\", \"COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "invert_regex": {
                  "aliases": [],
                  "description": "If true, branches that do NOT match the git_ref will trigger a build.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "push": {
              "aliases": [],
              "description": "filter to match changes in refs, like branches or tags. Specify only one of pullRequest or push.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "branch": {
                  "aliases": [],
                  "description": "Regex of branches to match. Specify only one of branch or tag.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "invert_regex": {
                  "aliases": [],
                  "description": "When true, only trigger a build if the revision regex does NOT match the git_ref regex.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "tag": {
                  "aliases": [],
                  "description": "Regex of tags to match. Specify only one of branch or tag.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "id": {
          "aliases": [],
          "description": "The unique identifier for the trigger.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ignored_files": {
          "aliases": [],
          "description": "ignoredFiles and includedFiles are file glob matches using U(https://golang.org/pkg/path/filepath/#Match) extended with support for `**`.\nIf ignoredFiles and changed files are both empty, then they are not used to determine whether or not to trigger a build.\nIf ignoredFiles is not empty, then we ignore any files that match any of the ignored_file globs. If the change has no files that are outside of the ignoredFiles globs, then we do not trigger a build.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "included_files": {
          "aliases": [],
          "description": "ignoredFiles and includedFiles are file glob matches using U(https://golang.org/pkg/path/filepath/#Match) extended with support for `**`.\nIf any of the files altered in the commit pass the ignoredFiles filter and includedFiles is empty, then as far as this filter is concerned, we should trigger the build.\nIf any of the files altered in the commit pass the ignoredFiles filter and includedFiles is not empty, then we make sure that at least one of those files matches a includedFiles glob. If not, then we do not trigger a build.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the trigger. Must be unique within the project.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "substitutions": {
          "aliases": [],
          "description": "Substitutions data for Build resource.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "Tags for annotation of a BuildTrigger .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "trigger_template": {
          "aliases": [],
          "description": "Template describing the types of source changes to trigger a build.\nBranch and tag names in trigger templates are interpreted as regular expressions. Any branch or tag change that matches that regular expression will trigger a build.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "branch_name": {
              "aliases": [],
              "description": "Name of the branch to build. Exactly one a of branch name, tag, or commit SHA must be provided.\nThis field is a regular expression.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "commit_sha": {
              "aliases": [],
              "description": "Explicit commit SHA to build. Exactly one of a branch name, tag, or commit SHA must be provided.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "dir": {
              "aliases": [],
              "description": "Directory, relative to the source root, in which to run the build.\nThis must be a relative path. If a step's dir is specified and is an absolute path, this value is ignored for that step's execution.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "invert_regex": {
              "aliases": [],
              "description": "Only trigger a build if the revision regex does NOT match the revision regex.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "project_id": {
              "aliases": [],
              "description": "ID of the project that owns the Cloud Source Repository. If omitted, the project ID requesting the build is assumed.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "repo_name": {
              "aliases": [],
              "description": "Name of the Cloud Source Repository. If omitted, the name \"default\" is assumed.",
              "default": "default",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "tag_name": {
              "aliases": [],
              "description": "Name of the tag to build. Exactly one of a branch name, tag, or commit SHA must be provided.\nThis field is a regular expression.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Trigger"
    },
    "examples": "\n- name: create a repository\n  google.cloud.gcp_sourcerepo_repository:\n    name: projects/{{ gcp_project }}/repos/{{ resource_name }}\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n\n- name: create a trigger\n  google.cloud.gcp_cloudbuild_trigger:\n    trigger_template:\n      branch_name: master\n      project_id: test_project\n      repo_name: test_object\n    filename: cloudbuild.yaml\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_cloudbuild_trigger_info": {
    "doc": {
      "description": "Gather info for GCP Trigger",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Trigger"
    },
    "examples": "\n- name: get info on a trigger\n  gcp_cloudbuild_trigger_info:\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_cloudfunctions_cloud_function": {
    "doc": {
      "description": "A Cloud Function that contains user computation executed in response to an event.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "available_memory_mb": {
          "aliases": [],
          "description": "The amount of memory in MB available for a function.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "User-provided description of a function.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "entry_point": {
          "aliases": [],
          "description": "The name of the function (as defined in source code) that will be executed.\nDefaults to the resource name suffix, if not specified. For backward compatibility, if function with given name is not found, then the system will try to use function named \"function\". For Node.js this is name of a function exported by the module specified in source_location.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "environment_variables": {
          "aliases": [],
          "description": "Environment variables that shall be available during function execution.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "event_trigger": {
          "aliases": [],
          "description": "An HTTPS endpoint type of source that can be triggered via URL.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "event_type": {
              "aliases": [],
              "description": "The type of event to observe. For example: `providers/cloud.storage/eventTypes/object.change` and `providers/cloud.pubsub/eventTypes/topic.publish`.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "resource": {
              "aliases": [],
              "description": "The resource(s) from which to observe events, for example, `projects/_/buckets/myBucket.` .",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "service": {
              "aliases": [],
              "description": "The hostname of the service that should be observed.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "https_trigger": {
          "aliases": [],
          "description": "An HTTPS endpoint type of source that can be triggered via URL.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "labels": {
          "aliases": [],
          "description": "A set of key/value label pairs associated with this Cloud Function.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "The location of this cloud function.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "A user-defined name of the function. Function names must be unique globally and match pattern `projects/*/locations/*/functions/*`.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "runtime": {
          "aliases": [],
          "description": "The runtime in which the function is going to run. If empty, defaults to Node.js 6.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "source_archive_url": {
          "aliases": [],
          "description": "The Google Cloud Storage URL, starting with gs://, pointing to the zip archive which contains the function.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_repository": {
          "aliases": [],
          "description": "The source repository where a function is hosted.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "url": {
              "aliases": [],
              "description": "The URL pointing to the hosted repository where the function is defined .",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "source_upload_url": {
          "aliases": [],
          "description": "The Google Cloud Storage signed URL used for source uploading.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "timeout": {
          "aliases": [],
          "description": "The function execution timeout. Execution is considered failed and can be terminated if the function is not completed at the end of the timeout period. Defaults to 60 seconds.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "trigger_http": {
          "aliases": [],
          "description": "Use HTTP to trigger this function.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP CloudFunction"
    },
    "examples": "\n- name: create a cloud function\n  google.cloud.gcp_cloudfunctions_cloud_function:\n    name: test_object\n    location: us-central1\n    entry_point: helloGET\n    source_archive_url: gs://ansible-cloudfunctions-bucket/function.zip\n    trigger_http: 'true'\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_cloudfunctions_cloud_function_info": {
    "doc": {
      "description": "Gather info for GCP CloudFunction",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "The location of this cloud function.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP CloudFunction"
    },
    "examples": "\n- name: get info on a cloud function\n  gcp_cloudfunctions_cloud_function_info:\n    location: us-central1\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_cloudscheduler_job": {
    "doc": {
      "description": "A scheduled job that can publish a pubsub message or a http request every X interval of time, using crontab format string.\nTo use Cloud Scheduler your project must contain an App Engine app that is located in one of the supported regions. If your project does not have an App Engine app, you must create one.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/scheduler/docs/reference/rest/)\nOfficial Documentation: U(https://cloud.google.com/scheduler/)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "app_engine_http_target": {
          "aliases": [],
          "description": "App Engine HTTP target.\nIf the job providers a App Engine HTTP target the cron will send a request to the service instance .",
          "type": "dict",
          "required": false,
          "suboptions": {
            "app_engine_routing": {
              "aliases": [],
              "description": "App Engine Routing setting for the job.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "instance": {
                  "aliases": [],
                  "description": "App instance.\nBy default, the job is sent to an instance which is available when the job is attempted.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "service": {
                  "aliases": [],
                  "description": "App service.\nBy default, the job is sent to the service which is the default service when the job is attempted.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "version": {
                  "aliases": [],
                  "description": "App version.\nBy default, the job is sent to the version which is the default version when the job is attempted.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "body": {
              "aliases": [],
              "description": "HTTP request body. A request body is allowed only if the HTTP method is POST or PUT. It will result in invalid argument error to set a body on a job with an incompatible HttpMethod.\nA base64-encoded string.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "headers": {
              "aliases": [],
              "description": "HTTP request headers.\nThis map contains the header field names and values. Headers can be set when the job is created.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "http_method": {
              "aliases": [],
              "description": "Which HTTP method to use for the request.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "relative_uri": {
              "aliases": [],
              "description": "The relative URI.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "attempt_deadline": {
          "aliases": [],
          "description": "The deadline for job attempts. If the request handler does not respond by this deadline then the request is cancelled and the attempt is marked as a DEADLINE_EXCEEDED failure. The failed attempt can be viewed in execution logs. Cloud Scheduler will retry the job according to the RetryConfig.\nThe allowed duration for this deadline is: * For HTTP targets, between 15 seconds and 30 minutes.\n* For App Engine HTTP targets, between 15 seconds and 24 hours.\n* **Note**: For PubSub targets, this field is ignored - setting it will introduce an unresolvable diff.\nA duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\" .",
          "default": "180s",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "A human-readable description for the job. This string must not contain more than 500 characters.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "http_target": {
          "aliases": [],
          "description": "HTTP target.\nIf the job providers a http_target the cron will send a request to the targeted url .",
          "type": "dict",
          "required": false,
          "suboptions": {
            "body": {
              "aliases": [],
              "description": "HTTP request body. A request body is allowed only if the HTTP method is POST, PUT, or PATCH. It is an error to set body on a job with an incompatible HttpMethod.\nA base64-encoded string.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "headers": {
              "aliases": [],
              "description": "This map contains the header field names and values. Repeated headers are not supported, but a header value can contain commas.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "http_method": {
              "aliases": [],
              "description": "Which HTTP method to use for the request.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "oauth_token": {
              "aliases": [],
              "description": "Contains information needed for generating an OAuth token.\nThis type of authorization should be used when sending requests to a GCP endpoint.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "scope": {
                  "aliases": [],
                  "description": "OAuth scope to be used for generating OAuth access token. If not specified, \"U(https://www.googleapis.com/auth/cloud-platform\") will be used.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "service_account_email": {
                  "aliases": [],
                  "description": "Service account email to be used for generating OAuth token.\nThe service account must be within the same project as the job.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "oidc_token": {
              "aliases": [],
              "description": "Contains information needed for generating an OpenID Connect token.\nThis type of authorization should be used when sending requests to third party endpoints or Cloud Run.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "audience": {
                  "aliases": [],
                  "description": "Audience to be used when generating OIDC token. If not specified, the URI specified in target will be used.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "service_account_email": {
                  "aliases": [],
                  "description": "Service account email to be used for generating OAuth token.\nThe service account must be within the same project as the job.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "uri": {
              "aliases": [],
              "description": "The full URI path that the request will be sent to.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "The name of the job.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "pubsub_target": {
          "aliases": [],
          "description": "Pub/Sub target If the job providers a Pub/Sub target the cron will publish a message to the provided topic .",
          "type": "dict",
          "required": false,
          "suboptions": {
            "attributes": {
              "aliases": [],
              "description": "Attributes for PubsubMessage.\nPubsub message must contain either non-empty data, or at least one attribute.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "data": {
              "aliases": [],
              "description": "The message payload for PubsubMessage.\nPubsub message must contain either non-empty data, or at least one attribute.\nA base64-encoded string.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "topic_name": {
              "aliases": [],
              "description": "The full resource name for the Cloud Pub/Sub topic to which messages will be published when a job is delivered. ~>**NOTE:** The topic name must be in the same format as required by PubSub's PublishRequest.name, e.g. `projects/my-project/topics/my-topic`.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "region": {
          "aliases": [],
          "description": "Region where the scheduler job resides .",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "retry_config": {
          "aliases": [],
          "description": "By default, if a job does not complete successfully, meaning that an acknowledgement is not received from the handler, then it will be retried with exponential backoff according to the settings .",
          "type": "dict",
          "required": false,
          "suboptions": {
            "max_backoff_duration": {
              "aliases": [],
              "description": "The maximum amount of time to wait before retrying a job after it fails.\nA duration in seconds with up to nine fractional digits, terminated by 's'.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "max_doublings": {
              "aliases": [],
              "description": "The time between retries will double maxDoublings times.\nA job's retry interval starts at minBackoffDuration, then doubles maxDoublings times, then increases linearly, and finally retries retries at intervals of maxBackoffDuration up to retryCount times.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_retry_duration": {
              "aliases": [],
              "description": "The time limit for retrying a failed job, measured from time when an execution was first attempted. If specified with retryCount, the job will be retried until both limits are reached.\nA duration in seconds with up to nine fractional digits, terminated by 's'.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "min_backoff_duration": {
              "aliases": [],
              "description": "The minimum amount of time to wait before retrying a job after it fails.\nA duration in seconds with up to nine fractional digits, terminated by 's'.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "retry_count": {
              "aliases": [],
              "description": "The number of attempts that the system will make to run a job using the exponential backoff procedure described by maxDoublings.\nValues greater than 5 and negative values are not allowed.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "schedule": {
          "aliases": [],
          "description": "Describes the schedule on which the job will be executed.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "time_zone": {
          "aliases": [],
          "description": "Specifies the time zone to be used in interpreting schedule.\nThe value of this field must be a time zone name from the tz database.",
          "default": "Etc/UTC",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Job"
    },
    "examples": "\n- name: create a job\n  google.cloud.gcp_cloudscheduler_job:\n    name: job\n    region: us-central1\n    schedule: \"*/4 * * * *\"\n    description: test app engine job\n    time_zone: Europe/London\n    attempt_deadline: 320s\n    app_engine_http_target:\n      http_method: POST\n      app_engine_routing:\n        service: web\n        version: prod\n        instance: my-instance-001\n      relative_uri: \"/ping\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_cloudscheduler_job_info": {
    "doc": {
      "description": "Gather info for GCP Job",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "Region where the scheduler job resides .",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Job"
    },
    "examples": "\n- name: get info on a job\n  gcp_cloudscheduler_job_info:\n    region: us-central1\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_cloudtasks_queue": {
    "doc": {
      "description": "A named resource to which messages are sent by publishers.",
      "has_action": false,
      "options": {
        "app_engine_routing_override": {
          "aliases": [],
          "description": "Overrides for task-level appEngineRouting. These settings apply only to App Engine tasks in this queue .",
          "type": "dict",
          "required": false,
          "suboptions": {
            "instance": {
              "aliases": [],
              "description": "App instance.\nBy default, the task is sent to an instance which is available when the task is attempted.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "service": {
              "aliases": [],
              "description": "App service.\nBy default, the task is sent to the service which is the default service when the task is attempted.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "version": {
              "aliases": [],
              "description": "App version.\nBy default, the task is sent to the version which is the default version when the task is attempted.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "The location of the queue.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The queue name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "rate_limits": {
          "aliases": [],
          "description": "Rate limits for task dispatches.\nThe queue's actual dispatch rate is the result of: * Number of tasks in the queue * User-specified throttling: rateLimits, retryConfig, and the queue's state.\n* System throttling due to 429 (Too Many Requests) or 503 (Service Unavailable) responses from the worker, high error rates, or to smooth sudden large traffic spikes.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "max_concurrent_dispatches": {
              "aliases": [],
              "description": "The maximum number of concurrent tasks that Cloud Tasks allows to be dispatched for this queue. After this threshold has been reached, Cloud Tasks stops dispatching tasks until the number of concurrent requests decreases.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_dispatches_per_second": {
              "aliases": [],
              "description": "The maximum rate at which tasks are dispatched from this queue.\nIf unspecified when the queue is created, Cloud Tasks will pick the default.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "retry_config": {
          "aliases": [],
          "description": "Settings that determine the retry behavior.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "max_attempts": {
              "aliases": [],
              "description": "Number of attempts per task.\nCloud Tasks will attempt the task maxAttempts times (that is, if the first attempt fails, then there will be maxAttempts - 1 retries). Must be >= -1.\nIf unspecified when the queue is created, Cloud Tasks will pick the default.\n-1 indicates unlimited attempts.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_backoff": {
              "aliases": [],
              "description": "A task will be scheduled for retry between minBackoff and maxBackoff duration after it fails, if the queue's RetryConfig specifies that the task should be retried.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "max_doublings": {
              "aliases": [],
              "description": "The time between retries will double maxDoublings times.\nA task's retry interval starts at minBackoff, then doubles maxDoublings times, then increases linearly, and finally retries retries at intervals of maxBackoff up to maxAttempts times.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_retry_duration": {
              "aliases": [],
              "description": "If positive, maxRetryDuration specifies the time limit for retrying a failed task, measured from when the task was first attempted. Once maxRetryDuration time has passed and the task has been attempted maxAttempts times, no further attempts will be made and the task will be deleted.\nIf zero, then the task age is unlimited.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "min_backoff": {
              "aliases": [],
              "description": "A task will be scheduled for retry between minBackoff and maxBackoff duration after it fails, if the queue's RetryConfig specifies that the task should be retried.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "stackdriver_logging_config": {
          "aliases": [],
          "description": "Configuration options for writing logs to Stackdriver Logging.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "sampling_ratio": {
              "aliases": [],
              "description": "Specifies the fraction of operations to write to Stackdriver Logging.\nThis field may contain any value between 0.0 and 1.0, inclusive. 0.0 is the default and means that no operations are logged.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "status": {
          "aliases": [],
          "description": "The current state of the queue.\nSome valid choices include: \"RUNNING\", \"PAUSED\", \"DISABLED\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Queue"
    },
    "examples": "\n- name: create a queue\n  google.cloud.gcp_cloudtasks_queue:\n    name: test_object\n    location: us-central1\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_cloudtasks_queue_info": {
    "doc": {
      "description": "Gather info for GCP Queue",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "The location of the queue.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Queue"
    },
    "examples": "\n- name: get info on a queue\n  gcp_cloudtasks_queue_info:\n    location: us-central1\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_address": {
    "doc": {
      "description": "Represents an Address resource.\nEach virtual machine instance has an ephemeral internal IP address and, optionally, an external IP address. To communicate between instances on the same network, you can use an instance's internal IP address. To communicate with the Internet and instances outside of the same network, you must specify the instance's external IP address.\nInternal IP addresses are ephemeral and only belong to an instance for the lifetime of the instance; if the instance is deleted and recreated, the instance is assigned a new internal IP address, either by Compute Engine or by you. External IP addresses can be either ephemeral or static.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/beta/addresses)\nReserving a Static External IP Address: U(https://cloud.google.com/compute/docs/instances-and-network)\nReserving a Static Internal IP Address: U(https://cloud.google.com/compute/docs/ip-addresses/reserve-static-internal-ip-address)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "address": {
          "aliases": [],
          "description": "The static external IP address represented by this resource. Only IPv4 is supported. An address may only be specified for INTERNAL address types. The IP address must be inside the specified subnetwork, if any.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "address_type": {
          "aliases": [],
          "description": "The type of address to reserve.\nSome valid choices include: \"INTERNAL\", \"EXTERNAL\"",
          "default": "EXTERNAL",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network_tier": {
          "aliases": [],
          "description": "The networking tier used for configuring this address. If this field is not specified, it is assumed to be PREMIUM.\nSome valid choices include: \"PREMIUM\", \"STANDARD\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purpose": {
          "aliases": [],
          "description": "The purpose of this resource, which can be one of the following values: * GCE_ENDPOINT for addresses that are used by VM instances, alias IP ranges, internal load balancers, and similar resources.\n* SHARED_LOADBALANCER_VIP for an address that can be used by multiple internal load balancers.\n* VPC_PEERING for addresses that are reserved for VPC peer networks.\nThis should only be set when using an Internal address.\nSome valid choices include: \"GCE_ENDPOINT\", \"VPC_PEERING\", \"SHARED_LOADBALANCER_VIP\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "URL of the region where the regional address resides.\nThis field is not applicable to global addresses.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnetwork": {
          "aliases": [],
          "description": "The URL of the subnetwork in which to reserve the address. If an IP address is specified, it must be within the subnetwork's IP range.\nThis field can only be used with INTERNAL type with GCE_ENDPOINT/DNS_RESOLVER purposes.\nThis field represents a link to a Subnetwork resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_subnetwork task and then set this subnetwork field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Address"
    },
    "examples": "\n- name: create a address\n  google.cloud.gcp_compute_address:\n    name: test-address1\n    region: us-west1\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_address_info": {
    "doc": {
      "description": "Gather info for GCP Address",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "URL of the region where the regional address resides.\nThis field is not applicable to global addresses.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Address"
    },
    "examples": "\n- name: get info on an address\n  gcp_compute_address_info:\n    region: us-west1\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_autoscaler": {
    "doc": {
      "description": "Represents an Autoscaler resource.\nAutoscalers allow you to automatically scale virtual machine instances in managed instance groups according to an autoscaling policy that you define.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/autoscalers)\nAutoscaling Groups of Instances: U(https://cloud.google.com/compute/docs/autoscaler/)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "autoscaling_policy": {
          "aliases": [],
          "description": "The configuration parameters for the autoscaling algorithm. You can define one or more of the policies for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization.\nIf none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.",
          "type": "dict",
          "required": true,
          "suboptions": {
            "cool_down_period_sec": {
              "aliases": [
                "cooldownPeriod"
              ],
              "description": "The number of seconds that the autoscaler should wait before it starts collecting information from a new instance. This prevents the autoscaler from collecting information when the instance is initializing, during which the collected usage would not be reliable. The default time autoscaler waits is 60 seconds.\nVirtual machine initialization times might vary because of numerous factors. We recommend that you test how long an instance may take to initialize. To do this, create an instance and time the startup process.",
              "default": "60",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "cpu_utilization": {
              "aliases": [],
              "description": "Defines the CPU utilization policy that allows the autoscaler to scale based on the average CPU utilization of a managed instance group.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "utilization_target": {
                  "aliases": [
                    "target"
                  ],
                  "description": "The target CPU utilization that the autoscaler should maintain.\nMust be a float value in the range (0, 1]. If not specified, the default is 0.6.\nIf the CPU level is below the target utilization, the autoscaler scales down the number of instances until it reaches the minimum number of instances you specified or until the average CPU of your instances reaches the target utilization.\nIf the average CPU is above the target utilization, the autoscaler scales up until it reaches the maximum number of instances you specified or until the average utilization reaches the target utilization.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "custom_metric_utilizations": {
              "aliases": [
                "metric"
              ],
              "description": "Configuration parameters of autoscaling based on a custom metric.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "metric": {
                  "aliases": [
                    "name"
                  ],
                  "description": "The identifier (type) of the Stackdriver Monitoring metric.\nThe metric cannot have negative values.\nThe metric must have a value type of INT64 or DOUBLE.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "utilization_target": {
                  "aliases": [
                    "target"
                  ],
                  "description": "The target value of the metric that autoscaler should maintain. This must be a positive value. A utilization metric scales number of virtual machines handling requests to increase or decrease proportionally to the metric.\nFor example, a good metric to use as a utilizationTarget is U(www.googleapis.com/compute/instance/network/received_bytes_count).\nThe autoscaler will work to keep this value constant for each of the instances.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "utilization_target_type": {
                  "aliases": [
                    "type"
                  ],
                  "description": "Defines how target utilization value is expressed for a Stackdriver Monitoring metric.\nSome valid choices include: \"GAUGE\", \"DELTA_PER_SECOND\", \"DELTA_PER_MINUTE\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "load_balancing_utilization": {
              "aliases": [],
              "description": "Configuration parameters of autoscaling based on a load balancer.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "utilization_target": {
                  "aliases": [
                    "target"
                  ],
                  "description": "Fraction of backend capacity utilization (set in HTTP(s) load balancing configuration) that autoscaler should maintain. Must be a positive float value. If not defined, the default is 0.8.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "max_num_replicas": {
              "aliases": [
                "maxReplicas"
              ],
              "description": "The maximum number of instances that the autoscaler can scale up to. This is required when creating or updating an autoscaler. The maximum number of replicas should not be lower than minimal number of replicas.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "min_num_replicas": {
              "aliases": [
                "minReplicas"
              ],
              "description": "The minimum number of replicas that the autoscaler can scale down to. This cannot be less than 0. If not provided, autoscaler will choose a default value depending on maximum number of instances allowed.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "mode": {
              "aliases": [],
              "description": "Defines operating mode for this policy.\nSome valid choices include: \"OFF\", \"ONLY_UP\", \"ON\"",
              "default": "ON",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "scale_in_control": {
              "aliases": [],
              "description": "Defines scale in controls to reduce the risk of response latency and outages due to abrupt scale-in events .",
              "type": "dict",
              "required": false,
              "suboptions": {
                "max_scaled_in_replicas": {
                  "aliases": [],
                  "description": "A nested object resource.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "fixed": {
                      "aliases": [],
                      "description": "Specifies a fixed number of VM instances. This must be a positive integer.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "percent": {
                      "aliases": [],
                      "description": "Specifies a percentage of instances between 0 to 100%, inclusive.\nFor example, specify 80 for 80%.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "time_window_sec": {
                  "aliases": [],
                  "description": "How long back autoscaling should look when computing recommendations to include directives regarding slower scale down, as described above.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. The name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target": {
          "aliases": [],
          "description": "URL of the managed instance group that this autoscaler will scale.\nThis field represents a link to a InstanceGroupManager resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_instance_group_manager task and then set this target field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "URL of the zone where the instance group resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Autoscaler"
    },
    "examples": "\n- name: create a network\n  google.cloud.gcp_compute_network:\n    name: network-instancetemplate\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: network\n\n- name: create a address\n  google.cloud.gcp_compute_address:\n    name: address-instancetemplate\n    region: us-central1\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: address\n\n- name: create a instance template\n  google.cloud.gcp_compute_instance_template:\n    name: \"{{ resource_name }}\"\n    properties:\n      disks:\n      - auto_delete: 'true'\n        boot: 'true'\n        initialize_params:\n          source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts\n      machine_type: n1-standard-1\n      network_interfaces:\n      - network: \"{{ network }}\"\n        access_configs:\n        - name: test-config\n          type: ONE_TO_ONE_NAT\n          nat_ip: \"{{ address }}\"\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instancetemplate\n\n- name: create a instance group manager\n  google.cloud.gcp_compute_instance_group_manager:\n    name: \"{{ resource_name }}\"\n    base_instance_name: test1-child\n    instance_template: \"{{ instancetemplate }}\"\n    target_size: 3\n    zone: us-central1-a\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: igm\n\n- name: create a autoscaler\n  google.cloud.gcp_compute_autoscaler:\n    name: test_object\n    zone: us-central1-a\n    target: \"{{ igm }}\"\n    autoscaling_policy:\n      max_num_replicas: 5\n      min_num_replicas: 1\n      cool_down_period_sec: 60\n      cpu_utilization:\n        utilization_target: 0.5\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_autoscaler_info": {
    "doc": {
      "description": "Gather info for GCP Autoscaler",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "URL of the zone where the instance group resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Autoscaler"
    },
    "examples": "\n- name: get info on an autoscaler\n  gcp_compute_autoscaler_info:\n    zone: us-central1-a\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_backend_bucket": {
    "doc": {
      "description": "Backend buckets allow you to use Google Cloud Storage buckets with HTTP(S) load balancing.\nAn HTTP(S) load balancer can direct traffic to specified URLs to a backend bucket rather than a backend service. It can send requests for static content to a Cloud Storage bucket and requests for dynamic content to a virtual machine instance.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/v1/backendBuckets)\nUsing a Cloud Storage bucket as a load balancer backend: U(https://cloud.google.com/compute/docs/load-balancing/http/backend-bucket)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "bucket_name": {
          "aliases": [],
          "description": "Cloud Storage bucket name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "cdn_policy": {
          "aliases": [],
          "description": "Cloud CDN configuration for this Backend Bucket.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "signed_url_cache_max_age_sec": {
              "aliases": [],
              "description": "Maximum number of seconds the response to a signed URL request will be considered fresh. After this time period, the response will be revalidated before being served.\nWhen serving responses to signed URL requests, Cloud CDN will internally behave as though all responses from this backend had a \"Cache-Control: public, max-age=[TTL]\" header, regardless of any existing Cache-Control header. The actual headers served in responses will not be altered.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "An optional textual description of the resource; provided by the client when the resource is created.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enable_cdn": {
          "aliases": [],
          "description": "If true, enable Cloud CDN for this BackendBucket.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP BackendBucket"
    },
    "examples": "\n- name: create a bucket\n  google.cloud.gcp_storage_bucket:\n    name: bucket-backendbucket\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: bucket\n\n- name: create a backend bucket\n  google.cloud.gcp_compute_backend_bucket:\n    name: test_object\n    bucket_name: \"{{ bucket.name }}\"\n    description: A BackendBucket to connect LNB w/ Storage Bucket\n    enable_cdn: 'true'\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_backend_bucket_info": {
    "doc": {
      "description": "Gather info for GCP BackendBucket",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP BackendBucket"
    },
    "examples": "\n- name: get info on a backend bucket\n  gcp_compute_backend_bucket_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_backend_service": {
    "doc": {
      "description": "A Backend Service defines a group of virtual machines that will serve traffic for load balancing. This resource is a global backend service, appropriate for external load balancing or self-managed internal load balancing.\nFor managed internal load balancing, use a regional backend service instead.\nCurrently self-managed internal load balancing is only available in beta.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/v1/backendServices)\nOfficial Documentation: U(https://cloud.google.com/compute/docs/load-balancing/http/backend-service)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "affinity_cookie_ttl_sec": {
          "aliases": [],
          "description": "Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day.\nWhen the load balancing scheme is INTERNAL, this field is not used.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "backends": {
          "aliases": [],
          "description": "The set of backends that serve this BackendService.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "balancing_mode": {
              "aliases": [],
              "description": "Specifies the balancing mode for this backend.\nFor global HTTP(S) or TCP/SSL load balancing, the default is UTILIZATION. Valid values are UTILIZATION, RATE (for HTTP(S)) and CONNECTION (for TCP/SSL).\nSome valid choices include: \"UTILIZATION\", \"RATE\", \"CONNECTION\"",
              "default": "UTILIZATION",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "capacity_scaler": {
              "aliases": [],
              "description": "A multiplier applied to the group's maximum servicing capacity (based on UTILIZATION, RATE or CONNECTION).\nDefault value is 1, which means the group will serve up to 100% of its configured capacity (depending on balancingMode). A setting of 0 means the group is completely drained, offering 0% of its available Capacity. Valid range is [0.0,1.0].",
              "default": "1.0",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "An optional description of this resource.\nProvide this property when you create the resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "group": {
              "aliases": [],
              "description": "The fully-qualified URL of an Instance Group or Network Endpoint Group resource. In case of instance group this defines the list of instances that serve traffic. Member virtual machine instances from each instance group must live in the same zone as the instance group itself. No two backends in a backend service are allowed to use same Instance Group resource.\nFor Network Endpoint Groups this defines list of endpoints. All endpoints of Network Endpoint Group must be hosted on instances located in the same zone as the Network Endpoint Group.\nBackend services cannot mix Instance Group and Network Endpoint Group backends.\nNote that you must specify an Instance Group or Network Endpoint Group resource using the fully-qualified URL, rather than a partial URL.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "max_connections": {
              "aliases": [],
              "description": "The max number of simultaneous connections for the group. Can be used with either CONNECTION or UTILIZATION balancing modes.\nFor CONNECTION mode, either maxConnections or one of maxConnectionsPerInstance or maxConnectionsPerEndpoint, as appropriate for group type, must be set.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_connections_per_endpoint": {
              "aliases": [],
              "description": "The max number of simultaneous connections that a single backend network endpoint can handle. This is used to calculate the capacity of the group. Can be used in either CONNECTION or UTILIZATION balancing modes.\nFor CONNECTION mode, either maxConnections or maxConnectionsPerEndpoint must be set.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_connections_per_instance": {
              "aliases": [],
              "description": "The max number of simultaneous connections that a single backend instance can handle. This is used to calculate the capacity of the group. Can be used in either CONNECTION or UTILIZATION balancing modes.\nFor CONNECTION mode, either maxConnections or maxConnectionsPerInstance must be set.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_rate": {
              "aliases": [],
              "description": "The max requests per second (RPS) of the group.\nCan be used with either RATE or UTILIZATION balancing modes, but required if RATE mode. For RATE mode, either maxRate or one of maxRatePerInstance or maxRatePerEndpoint, as appropriate for group type, must be set.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_rate_per_endpoint": {
              "aliases": [],
              "description": "The max requests per second (RPS) that a single backend network endpoint can handle. This is used to calculate the capacity of the group. Can be used in either balancing mode. For RATE mode, either maxRate or maxRatePerEndpoint must be set.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "max_rate_per_instance": {
              "aliases": [],
              "description": "The max requests per second (RPS) that a single backend instance can handle. This is used to calculate the capacity of the group. Can be used in either balancing mode. For RATE mode, either maxRate or maxRatePerInstance must be set.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "max_utilization": {
              "aliases": [],
              "description": "Used when balancingMode is UTILIZATION. This ratio defines the CPU utilization target for the group. The default is 0.8. Valid range is [0.0, 1.0].",
              "default": "0.8",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "cdn_policy": {
          "aliases": [],
          "description": "Cloud CDN configuration for this BackendService.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "cache_key_policy": {
              "aliases": [],
              "description": "The CacheKeyPolicy for this CdnPolicy.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "include_host": {
                  "aliases": [],
                  "description": "If true requests to different hosts will be cached separately.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "include_protocol": {
                  "aliases": [],
                  "description": "If true, http and https requests will be cached separately.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "include_query_string": {
                  "aliases": [],
                  "description": "If true, include query string parameters in the cache key according to query_string_whitelist and query_string_blacklist. If neither is set, the entire query string will be included.\nIf false, the query string will be excluded from the cache key entirely.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "query_string_blacklist": {
                  "aliases": [],
                  "description": "Names of query string parameters to exclude in cache keys.\nAll other parameters will be included. Either specify query_string_whitelist or query_string_blacklist, not both.\n'&' and '=' will be percent encoded and not treated as delimiters.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "query_string_whitelist": {
                  "aliases": [],
                  "description": "Names of query string parameters to include in cache keys.\nAll other parameters will be excluded. Either specify query_string_whitelist or query_string_blacklist, not both.\n'&' and '=' will be percent encoded and not treated as delimiters.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                }
              }
            },
            "signed_url_cache_max_age_sec": {
              "aliases": [],
              "description": "Maximum number of seconds the response to a signed URL request will be considered fresh, defaults to 1hr (3600s). After this time period, the response will be revalidated before being served.\nWhen serving responses to signed URL requests, Cloud CDN will internally behave as though all responses from this backend had a \"Cache-Control: public, max-age=[TTL]\" header, regardless of any existing Cache-Control header. The actual headers served in responses will not be altered.",
              "default": "3600",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "circuit_breakers": {
          "aliases": [],
          "description": "Settings controlling the volume of connections to a backend service. This field is applicable only when the load_balancing_scheme is set to INTERNAL_SELF_MANAGED.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "max_connections": {
              "aliases": [],
              "description": "The maximum number of connections to the backend cluster.\nDefaults to 1024.",
              "default": "1024",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_pending_requests": {
              "aliases": [],
              "description": "The maximum number of pending requests to the backend cluster.\nDefaults to 1024.",
              "default": "1024",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_requests": {
              "aliases": [],
              "description": "The maximum number of parallel requests to the backend cluster.\nDefaults to 1024.",
              "default": "1024",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_requests_per_connection": {
              "aliases": [],
              "description": "Maximum requests for a single backend connection. This parameter is respected by both the HTTP/1.1 and HTTP/2 implementations. If not specified, there is no limit. Setting this parameter to 1 will effectively disable keep alive.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_retries": {
              "aliases": [],
              "description": "The maximum number of parallel retries to the backend cluster.\nDefaults to 3.",
              "default": "3",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "connection_draining": {
          "aliases": [],
          "description": "Settings for connection draining .",
          "type": "dict",
          "required": false,
          "suboptions": {
            "draining_timeout_sec": {
              "aliases": [],
              "description": "Time for which instance will be drained (not accept new connections, but still work to finish started).",
              "default": "300",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "consistent_hash": {
          "aliases": [],
          "description": "Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or other properties. This load balancing policy is applicable only for HTTP connections. The affinity to a particular destination host will be lost when one or more hosts are added/removed from the destination service. This field specifies parameters that control consistent hashing. This field only applies if the load_balancing_scheme is set to INTERNAL_SELF_MANAGED. This field is only applicable when locality_lb_policy is set to MAGLEV or RING_HASH.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "http_cookie": {
              "aliases": [],
              "description": "Hash is based on HTTP Cookie. This field describes a HTTP cookie that will be used as the hash key for the consistent hash load balancer. If the cookie is not present, it will be generated.\nThis field is applicable if the sessionAffinity is set to HTTP_COOKIE.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "name": {
                  "aliases": [],
                  "description": "Name of the cookie.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "path": {
                  "aliases": [],
                  "description": "Path to set for the cookie.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "ttl": {
                  "aliases": [],
                  "description": "Lifetime of the cookie.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "nanos": {
                      "aliases": [],
                      "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 seconds field and a positive nanos field. Must be from 0 to 999,999,999 inclusive.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "seconds": {
                      "aliases": [],
                      "description": "Span of time at a resolution of a second.\nMust be from 0 to 315,576,000,000 inclusive.",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "http_header_name": {
              "aliases": [],
              "description": "The hash based on the value of the specified header field.\nThis field is applicable if the sessionAffinity is set to HEADER_FIELD.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "minimum_ring_size": {
              "aliases": [],
              "description": "The minimum number of virtual nodes to use for the hash ring.\nLarger ring sizes result in more granular load distributions. If the number of hosts in the load balancing pool is larger than the ring size, each host will be assigned a single virtual node.\nDefaults to 1024.",
              "default": "1024",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "custom_request_headers": {
          "aliases": [],
          "description": "Headers that the HTTP/S load balancer should add to proxied requests.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enable_cdn": {
          "aliases": [],
          "description": "If true, enable Cloud CDN for this BackendService.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "health_checks": {
          "aliases": [],
          "description": "The set of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health checking this BackendService. Currently at most one health check can be specified.\nA health check must be specified unless the backend service uses an internet or serverless NEG as a backend.\nFor internal load balancing, a URL to a HealthCheck resource must be specified instead.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "iap": {
          "aliases": [],
          "description": "Settings for enabling Cloud Identity Aware Proxy.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enabled": {
              "aliases": [],
              "description": "Enables IAP.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "oauth2_client_id": {
              "aliases": [],
              "description": "OAuth2 Client ID for IAP .",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "oauth2_client_secret": {
              "aliases": [],
              "description": "OAuth2 Client Secret for IAP .",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "load_balancing_scheme": {
          "aliases": [],
          "description": "Indicates whether the backend service will be used with internal or external load balancing. A backend service created for one type of load balancing cannot be used with the other.\nSome valid choices include: \"EXTERNAL\", \"INTERNAL_SELF_MANAGED\"",
          "default": "EXTERNAL",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "locality_lb_policy": {
          "aliases": [],
          "description": "The load balancing algorithm used within the scope of the locality.\nThe possible values are - * ROUND_ROBIN - This is a simple policy in which each healthy backend is selected in round robin order.\n* LEAST_REQUEST - An O(1) algorithm which selects two random healthy hosts and picks the host which has fewer active requests.\n* RING_HASH - The ring/modulo hash load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a host from a set of N hosts only affects 1/N of the requests.\n* RANDOM - The load balancer selects a random healthy host.\n* ORIGINAL_DESTINATION - Backend host is selected based on the client connection metadata, i.e., connections are opened to the same address as the destination address of the incoming connection before the connection was redirected to the load balancer.\n* MAGLEV - used as a drop in replacement for the ring hash load balancer.\nMaglev is not as stable as ring hash but has faster table lookup build times and host selection times. For more information about Maglev, refer to https://ai.google/research/pubs/pub44824 This field is applicable only when the load_balancing_scheme is set to INTERNAL_SELF_MANAGED.\nSome valid choices include: \"ROUND_ROBIN\", \"LEAST_REQUEST\", \"RING_HASH\", \"RANDOM\", \"ORIGINAL_DESTINATION\", \"MAGLEV\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_config": {
          "aliases": [],
          "description": "This field denotes the logging options for the load balancer traffic served by this backend service.\nIf logging is enabled, logs will be exported to Stackdriver.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enable": {
              "aliases": [],
              "description": "Whether to enable logging for the load balancer traffic served by this backend service.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "sample_rate": {
              "aliases": [],
              "description": "This field can only be specified if logging is enabled for this backend service. The value of the field must be in [0, 1]. This configures the sampling rate of requests to the load balancer where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported.\nThe default value is 1.0.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "outlier_detection": {
          "aliases": [],
          "description": "Settings controlling eviction of unhealthy hosts from the load balancing pool.\nThis field is applicable only when the load_balancing_scheme is set to INTERNAL_SELF_MANAGED.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "base_ejection_time": {
              "aliases": [],
              "description": "The base time that a host is ejected for. The real time is equal to the base time multiplied by the number of times the host has been ejected. Defaults to 30000ms or 30s.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "nanos": {
                  "aliases": [],
                  "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "seconds": {
                  "aliases": [],
                  "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.",
                  "type": "int",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "consecutive_errors": {
              "aliases": [],
              "description": "Number of errors before a host is ejected from the connection pool. When the backend host is accessed over HTTP, a 5xx return code qualifies as an error.\nDefaults to 5.",
              "default": "5",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "consecutive_gateway_failure": {
              "aliases": [],
              "description": "The number of consecutive gateway failures (502, 503, 504 status or connection errors that are mapped to one of those status codes) before a consecutive gateway failure ejection occurs. Defaults to 5.",
              "default": "5",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "enforcing_consecutive_errors": {
              "aliases": [],
              "description": "The percentage chance that a host will be actually ejected when an outlier status is detected through consecutive 5xx. This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.",
              "default": "100",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "enforcing_consecutive_gateway_failure": {
              "aliases": [],
              "description": "The percentage chance that a host will be actually ejected when an outlier status is detected through consecutive gateway failures. This setting can be used to disable ejection or to ramp it up slowly. Defaults to 0.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "enforcing_success_rate": {
              "aliases": [],
              "description": "The percentage chance that a host will be actually ejected when an outlier status is detected through success rate statistics. This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.",
              "default": "100",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "interval": {
              "aliases": [],
              "description": "Time interval between ejection sweep analysis. This can result in both new ejections as well as hosts being returned to service. Defaults to 10 seconds.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "nanos": {
                  "aliases": [],
                  "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "seconds": {
                  "aliases": [],
                  "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.",
                  "type": "int",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "max_ejection_percent": {
              "aliases": [],
              "description": "Maximum percentage of hosts in the load balancing pool for the backend service that can be ejected. Defaults to 10%.",
              "default": "10",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "success_rate_minimum_hosts": {
              "aliases": [],
              "description": "The number of hosts in a cluster that must have enough request volume to detect success rate outliers. If the number of hosts is less than this setting, outlier detection via success rate statistics is not performed for any host in the cluster. Defaults to 5.",
              "default": "5",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "success_rate_request_volume": {
              "aliases": [],
              "description": "The minimum number of total requests that must be collected in one interval (as defined by the interval duration above) to include this host in success rate based outlier detection. If the volume is lower than this setting, outlier detection via success rate statistics is not performed for that host. Defaults to 100.",
              "default": "100",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "success_rate_stdev_factor": {
              "aliases": [],
              "description": "This factor is used to determine the ejection threshold for success rate outlier ejection. The ejection threshold is the difference between the mean success rate, and the product of this factor and the standard deviation of the mean success rate: mean - (stdev * success_rate_stdev_factor). This factor is divided by a thousand to get a double. That is, if the desired factor is 1.9, the runtime value should be 1900. Defaults to 1900.",
              "default": "1900",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "port_name": {
          "aliases": [],
          "description": "Name of backend port. The same name should appear in the instance groups referenced by this service. Required when the load balancing scheme is EXTERNAL.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "protocol": {
          "aliases": [],
          "description": "The protocol this BackendService uses to communicate with backends.\nThe default is HTTP. **NOTE**: HTTP2 is only valid for beta HTTP/2 load balancer types and may result in errors if used with the GA API.\nSome valid choices include: \"HTTP\", \"HTTPS\", \"HTTP2\", \"TCP\", \"SSL\", \"GRPC\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "security_policy": {
          "aliases": [],
          "description": "The security policy associated with this backend service.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "session_affinity": {
          "aliases": [],
          "description": "Type of session affinity to use. The default is NONE. Session affinity is not applicable if the protocol is UDP.\nSome valid choices include: \"NONE\", \"CLIENT_IP\", \"CLIENT_IP_PORT_PROTO\", \"CLIENT_IP_PROTO\", \"GENERATED_COOKIE\", \"HEADER_FIELD\", \"HTTP_COOKIE\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "timeout_sec": {
          "aliases": [
            "timeout_seconds"
          ],
          "description": "How many seconds to wait for the backend before considering it a failed request. Default is 30 seconds. Valid range is [1, 86400].",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP BackendService"
    },
    "examples": "\n- name: create a instance group\n  google.cloud.gcp_compute_instance_group:\n    name: instancegroup-backendservice\n    zone: us-central1-a\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instancegroup\n\n- name: create a HTTP health check\n  google.cloud.gcp_compute_http_health_check:\n    name: httphealthcheck-backendservice\n    healthy_threshold: 10\n    port: 8080\n    timeout_sec: 2\n    unhealthy_threshold: 5\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: healthcheck\n\n- name: create a backend service\n  google.cloud.gcp_compute_backend_service:\n    name: test_object\n    backends:\n    - group: \"{{ instancegroup.selfLink }}\"\n    health_checks:\n    - \"{{ healthcheck.selfLink }}\"\n    enable_cdn: 'true'\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_backend_service_info": {
    "doc": {
      "description": "Gather info for GCP BackendService",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP BackendService"
    },
    "examples": "\n- name: get info on a backend service\n  gcp_compute_backend_service_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_disk": {
    "doc": {
      "description": "Persistent disks are durable storage devices that function similarly to the physical disks in a desktop or a server. Compute Engine manages the hardware behind these devices to ensure data redundancy and optimize performance for you. Persistent disks are available as either standard hard disk drives (HDD) or solid-state drives (SSD).\nPersistent disks are located independently from your virtual machine instances, so you can detach or move persistent disks to keep your data even after you delete your instances. Persistent disk performance scales automatically with size, so you can resize your existing persistent disks or add more persistent disks to an instance to meet your performance and storage space requirements.\nAdd a persistent disk to your instance when you need reliable and affordable storage with consistent performance characteristics.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/v1/disks)\nAdding a persistent disk: U(https://cloud.google.com/compute/docs/disks/add-persistent-disk)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. Provide this property when you create the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "disk_encryption_key": {
          "aliases": [],
          "description": "Encrypts the disk using a customer-supplied encryption key.\nAfter you encrypt a disk with a customer-supplied key, you must provide the same key if you use the disk later (e.g. to create a disk snapshot or an image, or to attach the disk to a virtual machine).\nCustomer-supplied encryption keys do not protect access to metadata of the disk.\nIf you do not provide an encryption key when creating the disk, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the disk later.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "kms_key_name": {
              "aliases": [],
              "description": "The name of the encryption key that is stored in Google Cloud KMS.\nYour project's Compute Engine System service account (`service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com`) must have `roles/cloudkms.cryptoKeyEncrypterDecrypter` to use this feature.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "kms_key_service_account": {
              "aliases": [],
              "description": "The service account used for the encryption request for the given KMS key.\nIf absent, the Compute Engine Service Agent service account is used.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "raw_key": {
              "aliases": [],
              "description": "Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "labels": {
          "aliases": [],
          "description": "Labels to apply to this disk. A list of key->value pairs.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "licenses": {
          "aliases": [],
          "description": "Any applicable publicly visible licenses.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "physical_block_size_bytes": {
          "aliases": [],
          "description": "Physical block size of the persistent disk, in bytes. If not present in a request, a default value is used. Currently supported sizes are 4096 and 16384, other sizes may be added in the future.\nIf an unsupported value is requested, the error message will list the supported values for the caller's project.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "size_gb": {
          "aliases": [],
          "description": "Size of the persistent disk, specified in GB. You can specify this field when creating a persistent disk using the sourceImage or sourceSnapshot parameter, or specify it alone to create an empty persistent disk.\nIf you specify this field along with sourceImage or sourceSnapshot, the value of sizeGb must not be less than the size of the sourceImage or the size of the snapshot.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "source_image": {
          "aliases": [],
          "description": "The source image used to create this disk. If the source image is deleted, this field will not be set.\nTo create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-9 to use the latest Debian 9 image: projects/debian-cloud/global/images/family/debian-9 Alternatively, use a specific version of a public operating system image: projects/debian-cloud/global/images/debian-9-stretch-vYYYYMMDD To create a disk with a private image that you created, specify the image name in the following format: global/images/my-private-image You can also specify a private image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name: global/images/family/my-private-family .",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_image_encryption_key": {
          "aliases": [],
          "description": "The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "kms_key_name": {
              "aliases": [],
              "description": "The name of the encryption key that is stored in Google Cloud KMS.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "kms_key_service_account": {
              "aliases": [],
              "description": "The service account used for the encryption request for the given KMS key.\nIf absent, the Compute Engine Service Agent service account is used.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "raw_key": {
              "aliases": [],
              "description": "Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "source_snapshot": {
          "aliases": [],
          "description": "The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource.\nThis field represents a link to a Snapshot resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_snapshot task and then set this source_snapshot field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "source_snapshot_encryption_key": {
          "aliases": [],
          "description": "The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "kms_key_name": {
              "aliases": [],
              "description": "The name of the encryption key that is stored in Google Cloud KMS.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "kms_key_service_account": {
              "aliases": [],
              "description": "The service account used for the encryption request for the given KMS key. If absent, the Compute Engine Service Agent service account is used.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "raw_key": {
              "aliases": [],
              "description": "Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "URL of the disk type resource describing which disk type to use to create the disk. Provide this when creating the disk.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "A reference to the zone where the disk resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Disk"
    },
    "examples": "\n- name: create a disk\n  google.cloud.gcp_compute_disk:\n    name: test_object\n    size_gb: 50\n    disk_encryption_key:\n      raw_key: SGVsbG8gZnJvbSBHb29nbGUgQ2xvdWQgUGxhdGZvcm0=\n    zone: us-central1-a\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_disk_info": {
    "doc": {
      "description": "Gather info for GCP Disk",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "A reference to the zone where the disk resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Disk"
    },
    "examples": "\n- name: get info on a disk\n  gcp_compute_disk_info:\n    zone: us-central1-a\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_external_vpn_gateway": {
    "doc": {
      "description": "Represents a VPN gateway managed outside of GCP.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/beta/externalVpnGateways)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interfaces": {
          "aliases": [],
          "description": "A list of interfaces on this external VPN gateway.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "id": {
              "aliases": [],
              "description": "The numberic ID for this interface. Allowed values are based on the redundancy type of this external VPN gateway * `0 - SINGLE_IP_INTERNALLY_REDUNDANT` * `0, 1 - TWO_IPS_REDUNDANCY` * `0, 1, 2, 3 - FOUR_IPS_REDUNDANCY` .",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "ip_address": {
              "aliases": [],
              "description": "IP address of the interface in the external VPN gateway.\nOnly IPv4 is supported. This IP address can be either from your on-premise gateway or another Cloud provider's VPN gateway, it cannot be an IP address from Google Compute Engine.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "redundancy_type": {
          "aliases": [],
          "description": "Indicates the redundancy type of this external VPN gateway .\nSome valid choices include: \"FOUR_IPS_REDUNDANCY\", \"SINGLE_IP_INTERNALLY_REDUNDANT\", \"TWO_IPS_REDUNDANCY\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP ExternalVpnGateway"
    },
    "examples": "\n- name: create a external vpn gateway\n  google.cloud.gcp_compute_external_vpn_gateway:\n    name: test_object\n    redundancy_type: SINGLE_IP_INTERNALLY_REDUNDANT\n    descrpition: An externalyl managed VPN gateway\n    interfaces:\n    - id: 0\n      ip_address: 8.8.8.8\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_external_vpn_gateway_info": {
    "doc": {
      "description": "Gather info for GCP ExternalVpnGateway",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP ExternalVpnGateway"
    },
    "examples": "\n- name: get info on an external vpn gateway\n  gcp_compute_external_vpn_gateway_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_firewall": {
    "doc": {
      "description": "Each network has its own firewall controlling access to and from the instances.\nAll traffic to instances, even from other instances, is blocked by the firewall unless firewall rules are created to allow it.\nThe default network has automatically created firewall rules that are shown in default firewall rules. No manually created network has automatically created firewall rules except for a default \"allow\" rule for outgoing traffic and a default \"deny\" for incoming traffic. For all networks except the default network, you must create any firewall rules you need.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/v1/firewalls)\nOfficial Documentation: U(https://cloud.google.com/vpc/docs/firewalls)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "allowed": {
          "aliases": [],
          "description": "The list of ALLOW rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "ip_protocol": {
              "aliases": [],
              "description": "The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, sctp, ipip, all), or the IP protocol number.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "ports": {
              "aliases": [],
              "description": "An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port.\nExample inputs include: [\"22\"], [\"80\",\"443\"], and [\"12345-12349\"].",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            }
          }
        },
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "denied": {
          "aliases": [],
          "description": "The list of DENY rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a denied connection.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "ip_protocol": {
              "aliases": [],
              "description": "The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, sctp, ipip, all), or the IP protocol number.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "ports": {
              "aliases": [],
              "description": "An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port.\nExample inputs include: [\"22\"], [\"80\",\"443\"], and [\"12345-12349\"].",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. Provide this property when you create the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "destination_ranges": {
          "aliases": [],
          "description": "If destination ranges are specified, the firewall will apply only to traffic that has destination IP address in these ranges. These ranges must be expressed in CIDR format. Only IPv4 is supported.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "direction": {
          "aliases": [],
          "description": "Direction of traffic to which this firewall applies; default is INGRESS. Note: For INGRESS traffic, it is NOT supported to specify destinationRanges; For EGRESS traffic, it is NOT supported to specify sourceRanges OR sourceTags.\nSome valid choices include: \"INGRESS\", \"EGRESS\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "disabled": {
          "aliases": [],
          "description": "Denotes whether the firewall rule is disabled, i.e not applied to the network it is associated with. When set to true, the firewall rule is not enforced and the network behaves as if it did not exist. If this is unspecified, the firewall rule will be enabled.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_config": {
          "aliases": [],
          "description": "This field denotes the logging options for a particular firewall rule.\nIf logging is enabled, logs will be exported to Cloud Logging.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enable": {
              "aliases": [],
              "description": "This field denotes whether to enable logging for a particular firewall rule. If logging is enabled, logs will be exported to Stackdriver.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "metadata": {
              "aliases": [],
              "description": "This field denotes whether to include or exclude metadata for firewall logs.\nSome valid choices include: \"EXCLUDE_ALL_METADATA\", \"INCLUDE_ALL_METADATA\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network": {
          "aliases": [],
          "description": "URL of the network resource for this firewall rule. If not specified when creating a firewall rule, the default network is used: global/networks/default If you choose to specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs: U(https://www.googleapis.com/compute/v1/projects/myproject/global/) networks/my-network projects/myproject/global/networks/my-network global/networks/default .\nThis field represents a link to a Network resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_network task and then set this network field to \"{{ name-of-resource }}\"",
          "default": "{'selfLink': 'global/networks/default'}",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "priority": {
          "aliases": [],
          "description": "Priority for this rule. This is an integer between 0 and 65535, both inclusive. When not specified, the value assumed is 1000. Relative priorities determine precedence of conflicting rules. Lower value of priority implies higher precedence (eg, a rule with priority 0 has higher precedence than a rule with priority 1). DENY rules take precedence over ALLOW rules having equal priority.",
          "default": "1000",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "source_ranges": {
          "aliases": [],
          "description": "If source ranges are specified, the firewall will apply only to traffic that has source IP address in these ranges. These ranges must be expressed in CIDR format. One or both of sourceRanges and sourceTags may be set. If both properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to apply. Only IPv4 is supported.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "source_service_accounts": {
          "aliases": [],
          "description": "If source service accounts are specified, the firewall will apply only to traffic originating from an instance with a service account in this list. Source service accounts cannot be used to control traffic to an instance's external IP address because service accounts are associated with an instance, not an IP address. sourceRanges can be set at the same time as sourceServiceAccounts. If both are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP belongs to an instance with service account listed in sourceServiceAccount. The connection does not need to match both properties for the firewall to apply. sourceServiceAccounts cannot be used at the same time as sourceTags or targetTags.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "source_tags": {
          "aliases": [],
          "description": "If source tags are specified, the firewall will apply only to traffic with source IP that belongs to a tag listed in source tags. Source tags cannot be used to control traffic to an instance's external IP address. Because tags are associated with an instance, not an IP address. One or both of sourceRanges and sourceTags may be set. If both properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to apply.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target_service_accounts": {
          "aliases": [],
          "description": "A list of service accounts indicating sets of instances located in the network that may make network connections as specified in allowed[].\ntargetServiceAccounts cannot be used at the same time as targetTags or sourceTags. If neither targetServiceAccounts nor targetTags are specified, the firewall rule applies to all instances on the specified network.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "target_tags": {
          "aliases": [],
          "description": "A list of instance tags indicating sets of instances located in the network that may make network connections as specified in allowed[].\nIf no targetTags are specified, the firewall rule applies to all instances on the specified network.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Firewall"
    },
    "examples": "\n- name: create a firewall\n  google.cloud.gcp_compute_firewall:\n    name: test_object\n    allowed:\n    - ip_protocol: tcp\n      ports:\n      - '22'\n    target_tags:\n    - test-ssh-server\n    - staging-ssh-server\n    source_tags:\n    - test-ssh-clients\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_firewall_info": {
    "doc": {
      "description": "Gather info for GCP Firewall",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Firewall"
    },
    "examples": "\n- name: get info on a firewall\n  gcp_compute_firewall_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_forwarding_rule": {
    "doc": {
      "description": "A ForwardingRule resource. A ForwardingRule resource specifies which pool of target virtual machines to forward a packet to if it matches the given [IPAddress, IPProtocol, portRange] tuple.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/v1/forwardingRules)\nOfficial Documentation: U(https://cloud.google.com/compute/docs/load-balancing/network/forwarding-rules)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "all_ports": {
          "aliases": [],
          "description": "For internal TCP/UDP load balancing (i.e. load balancing scheme is INTERNAL and protocol is TCP/UDP), set this to true to allow packets addressed to any ports to be forwarded to the backends configured with this forwarding rule. Used with backend service. Cannot be set if port or portRange are set.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "allow_global_access": {
          "aliases": [],
          "description": "If true, clients can access ILB from all regions.\nOtherwise only allows from the local region the ILB is located at.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "backend_service": {
          "aliases": [],
          "description": "A BackendService to receive the matched traffic. This is used only for INTERNAL load balancing.\nThis field represents a link to a BackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_backend_service task and then set this backend_service field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. Provide this property when you create the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ip_address": {
          "aliases": [],
          "description": "The IP address that this forwarding rule is serving on behalf of.\nAddresses are restricted based on the forwarding rule's load balancing scheme (EXTERNAL or INTERNAL) and scope (global or regional).\nWhen the load balancing scheme is EXTERNAL, for global forwarding rules, the address must be a global IP, and for regional forwarding rules, the address must live in the same region as the forwarding rule. If this field is empty, an ephemeral IPv4 address from the same scope (global or regional) will be assigned. A regional forwarding rule supports IPv4 only. A global forwarding rule supports either IPv4 or IPv6.\nWhen the load balancing scheme is INTERNAL, this can only be an RFC 1918 IP address belonging to the network/subnet configured for the forwarding rule. By default, if this field is empty, an ephemeral internal IP address will be automatically allocated from the IP range of the subnet or network configured for this forwarding rule.\nAn address can be specified either by a literal IP address or a URL reference to an existing Address resource. The following examples are all valid: * 100.1.2.3 * U(https://www.googleapis.com/compute/v1/projects/project/regions/region/addresses/address) * projects/project/regions/region/addresses/address * regions/region/addresses/address * global/addresses/address * address .",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ip_protocol": {
          "aliases": [],
          "description": "The IP protocol to which this rule applies.\nWhen the load balancing scheme is INTERNAL, only TCP and UDP are valid.\nSome valid choices include: \"TCP\", \"UDP\", \"ESP\", \"AH\", \"SCTP\", \"ICMP\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "is_mirroring_collector": {
          "aliases": [],
          "description": "Indicates whether or not this load balancer can be used as a collector for packet mirroring. To prevent mirroring loops, instances behind this load balancer will not have their traffic mirrored even if a PacketMirroring rule applies to them. This can only be set to true for load balancers that have their loadBalancingScheme set to INTERNAL.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "load_balancing_scheme": {
          "aliases": [],
          "description": "This signifies what the ForwardingRule will be used for and can be EXTERNAL, INTERNAL, or INTERNAL_MANAGED. EXTERNAL is used for Classic Cloud VPN gateways, protocol forwarding to VMs from an external IP address, and HTTP(S), SSL Proxy, TCP Proxy, and Network TCP/UDP load balancers.\nINTERNAL is used for protocol forwarding to VMs from an internal IP address, and internal TCP/UDP load balancers.\nINTERNAL_MANAGED is used for internal HTTP(S) load balancers.\nSome valid choices include: \"EXTERNAL\", \"INTERNAL\", \"INTERNAL_MANAGED\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network": {
          "aliases": [],
          "description": "For internal load balancing, this field identifies the network that the load balanced IP should belong to for this Forwarding Rule. If this field is not specified, the default network will be used.\nThis field is only used for INTERNAL load balancing.\nThis field represents a link to a Network resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_network task and then set this network field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "network_tier": {
          "aliases": [],
          "description": "The networking tier used for configuring this address. If this field is not specified, it is assumed to be PREMIUM.\nSome valid choices include: \"PREMIUM\", \"STANDARD\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "port_range": {
          "aliases": [],
          "description": "This field is used along with the target field for TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway, TargetPool, TargetInstance.\nApplicable only when IPProtocol is TCP, UDP, or SCTP, only packets addressed to ports in the specified range will be forwarded to target.\nForwarding rules with the same [IPAddress, IPProtocol] pair must have disjoint port ranges.\nSome types of forwarding target have constraints on the acceptable ports: * TargetHttpProxy: 80, 8080 * TargetHttpsProxy: 443 * TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1883, 5222 * TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1883, 5222 * TargetVpnGateway: 500, 4500 .",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ports": {
          "aliases": [],
          "description": "This field is used along with the backend_service field for internal load balancing.\nWhen the load balancing scheme is INTERNAL, a single port or a comma separated list of ports can be configured. Only packets addressed to these ports will be forwarded to the backends configured with this forwarding rule.\nYou may specify a maximum of up to 5 ports.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "A reference to the region where the regional forwarding rule resides.\nThis field is not applicable to global forwarding rules.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "service_label": {
          "aliases": [],
          "description": "An optional prefix to the service name for this Forwarding Rule.\nIf specified, will be the first label of the fully qualified service name.\nThe label must be 1-63 characters long, and comply with RFC1035.\nSpecifically, the label must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.\nThis field is only used for INTERNAL load balancing.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnetwork": {
          "aliases": [],
          "description": "The subnetwork that the load balanced IP should belong to for this Forwarding Rule. This field is only used for INTERNAL load balancing.\nIf the network specified is in auto subnet mode, this field is optional. However, if the network is in custom subnet mode, a subnetwork must be specified.\nThis field represents a link to a Subnetwork resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_subnetwork task and then set this subnetwork field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "target": {
          "aliases": [],
          "description": "The URL of the target resource to receive the matched traffic.\nThe target must live in the same region as the forwarding rule.\nThe forwarded traffic must be of a type appropriate to the target object.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP ForwardingRule"
    },
    "examples": "\n- name: create a address\n  google.cloud.gcp_compute_address:\n    name: address-forwardingrule\n    region: us-west1\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: address\n\n- name: create a target pool\n  google.cloud.gcp_compute_target_pool:\n    name: targetpool-forwardingrule\n    region: us-west1\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: targetpool\n\n- name: create a forwarding rule\n  google.cloud.gcp_compute_forwarding_rule:\n    name: test_object\n    region: us-west1\n    target: \"{{ targetpool }}\"\n    ip_protocol: TCP\n    port_range: 80-80\n    ip_address: \"{{ address.address }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_forwarding_rule_info": {
    "doc": {
      "description": "Gather info for GCP ForwardingRule",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "A reference to the region where the regional forwarding rule resides.\nThis field is not applicable to global forwarding rules.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP ForwardingRule"
    },
    "examples": "\n- name: get info on a forwarding rule\n  gcp_compute_forwarding_rule_info:\n    region: us-west1\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_global_address": {
    "doc": {
      "description": "Represents a Global Address resource. Global addresses are used for HTTP(S) load balancing.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/v1/globalAddresses)\nReserving a Static External IP Address: U(https://cloud.google.com/compute/docs/ip-addresses/reserve-static-external-ip-address)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "address": {
          "aliases": [],
          "description": "The static external IP address represented by this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "address_type": {
          "aliases": [],
          "description": "The type of the address to reserve.\n* EXTERNAL indicates public/external single IP address.\n* INTERNAL indicates internal IP ranges belonging to some network.\nSome valid choices include: \"EXTERNAL\", \"INTERNAL\"",
          "default": "EXTERNAL",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ip_version": {
          "aliases": [],
          "description": "The IP Version that will be used by this address. The default value is `IPV4`.\nSome valid choices include: \"IPV4\", \"IPV6\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network": {
          "aliases": [],
          "description": "The URL of the network in which to reserve the IP range. The IP range must be in RFC1918 space. The network cannot be deleted if there are any reserved IP ranges referring to it.\nThis should only be set when using an Internal address.\nThis field represents a link to a Network resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_network task and then set this network field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "prefix_length": {
          "aliases": [],
          "description": "The prefix length of the IP range. If not present, it means the address field is a single IP address.\nThis field is not applicable to addresses with addressType=EXTERNAL.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purpose": {
          "aliases": [],
          "description": "The purpose of the resource. For global internal addresses it can be * VPC_PEERING - for peer networks This should only be set when using an Internal address.\nSome valid choices include: \"VPC_PEERING\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP GlobalAddress"
    },
    "examples": "\n- name: create a global address\n  google.cloud.gcp_compute_global_address:\n    name: test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_global_address_info": {
    "doc": {
      "description": "Gather info for GCP GlobalAddress",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP GlobalAddress"
    },
    "examples": "\n- name: get info on a global address\n  gcp_compute_global_address_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_global_forwarding_rule": {
    "doc": {
      "description": "Represents a GlobalForwardingRule resource. Global forwarding rules are used to forward traffic to the correct load balancer for HTTP load balancing. Global forwarding rules can only be used for HTTP load balancing.\nFor more information, see U(https://cloud.google.com/compute/docs/load-balancing/http/) .",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. Provide this property when you create the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ip_address": {
          "aliases": [],
          "description": "The IP address that this forwarding rule is serving on behalf of.\nAddresses are restricted based on the forwarding rule's load balancing scheme (EXTERNAL or INTERNAL) and scope (global or regional).\nWhen the load balancing scheme is EXTERNAL, for global forwarding rules, the address must be a global IP, and for regional forwarding rules, the address must live in the same region as the forwarding rule. If this field is empty, an ephemeral IPv4 address from the same scope (global or regional) will be assigned. A regional forwarding rule supports IPv4 only. A global forwarding rule supports either IPv4 or IPv6.\nWhen the load balancing scheme is INTERNAL, this can only be an RFC 1918 IP address belonging to the network/subnet configured for the forwarding rule. By default, if this field is empty, an ephemeral internal IP address will be automatically allocated from the IP range of the subnet or network configured for this forwarding rule.\nAn address can be specified either by a literal IP address or a URL reference to an existing Address resource. The following examples are all valid: * 100.1.2.3 * U(https://www.googleapis.com/compute/v1/projects/project/regions/region/addresses/address) * projects/project/regions/region/addresses/address * regions/region/addresses/address * global/addresses/address * address .",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ip_protocol": {
          "aliases": [],
          "description": "The IP protocol to which this rule applies. When the load balancing scheme is INTERNAL_SELF_MANAGED, only TCP is valid.\nSome valid choices include: \"TCP\", \"UDP\", \"ESP\", \"AH\", \"SCTP\", \"ICMP\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ip_version": {
          "aliases": [],
          "description": "The IP Version that will be used by this global forwarding rule.\nSome valid choices include: \"IPV4\", \"IPV6\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "load_balancing_scheme": {
          "aliases": [],
          "description": "This signifies what the GlobalForwardingRule will be used for.\nThe value of INTERNAL_SELF_MANAGED means that this will be used for Internal Global HTTP(S) LB. The value of EXTERNAL means that this will be used for External Global Load Balancing (HTTP(S) LB, External TCP/UDP LB, SSL Proxy) NOTE: Currently global forwarding rules cannot be used for INTERNAL load balancing.\nSome valid choices include: \"EXTERNAL\", \"INTERNAL_SELF_MANAGED\"",
          "default": "EXTERNAL",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "metadata_filters": {
          "aliases": [],
          "description": "Opaque filter criteria used by Loadbalancer to restrict routing configuration to a limited set xDS compliant clients. In their xDS requests to Loadbalancer, xDS clients present node metadata. If a match takes place, the relevant routing configuration is made available to those proxies.\nFor each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels in the provided metadata.\nmetadataFilters specified here can be overridden by those specified in the UrlMap that this ForwardingRule references.\nmetadataFilters only applies to Loadbalancers that have their loadBalancingScheme set to INTERNAL_SELF_MANAGED.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "filter_labels": {
              "aliases": [],
              "description": "The list of label value pairs that must match labels in the provided metadata based on filterMatchCriteria This list must not be empty and can have at the most 64 entries.",
              "type": "list",
              "required": true,
              "elements": "dict",
              "suboptions": {
                "name": {
                  "aliases": [],
                  "description": "Name of the metadata label. The length must be between 1 and 1024 characters, inclusive.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "The value that the label must match. The value has a maximum length of 1024 characters.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "filter_match_criteria": {
              "aliases": [],
              "description": "Specifies how individual filterLabel matches within the list of filterLabels contribute towards the overall metadataFilter match.\nMATCH_ANY - At least one of the filterLabels must have a matching label in the provided metadata.\nMATCH_ALL - All filterLabels must have matching labels in the provided metadata.\nSome valid choices include: \"MATCH_ANY\", \"MATCH_ALL\"",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network": {
          "aliases": [],
          "description": "This field is not used for external load balancing.\nFor INTERNAL_SELF_MANAGED load balancing, this field identifies the network that the load balanced IP should belong to for this global forwarding rule. If this field is not specified, the default network will be used.\nThis field represents a link to a Network resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_network task and then set this network field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "port_range": {
          "aliases": [],
          "description": "This field is used along with the target field for TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway, TargetPool, TargetInstance.\nApplicable only when IPProtocol is TCP, UDP, or SCTP, only packets addressed to ports in the specified range will be forwarded to target.\nForwarding rules with the same [IPAddress, IPProtocol] pair must have disjoint port ranges.\nSome types of forwarding target have constraints on the acceptable ports: * TargetHttpProxy: 80, 8080 * TargetHttpsProxy: 443 * TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1883, 5222 * TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1883, 5222 * TargetVpnGateway: 500, 4500 .",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target": {
          "aliases": [],
          "description": "The URL of the target resource to receive the matched traffic.\nThe forwarded traffic must be of a type appropriate to the target object.\nFor INTERNAL_SELF_MANAGED load balancing, only HTTP and HTTPS targets are valid.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP GlobalForwardingRule"
    },
    "examples": "\n- name: create a global address\n  google.cloud.gcp_compute_global_address:\n    name: globaladdress-globalforwardingrule\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: globaladdress\n\n- name: create a instance group\n  google.cloud.gcp_compute_instance_group:\n    name: instancegroup-globalforwardingrule\n    zone: us-central1-a\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instancegroup\n\n- name: create a HTTP health check\n  google.cloud.gcp_compute_http_health_check:\n    name: httphealthcheck-globalforwardingrule\n    healthy_threshold: 10\n    port: 8080\n    timeout_sec: 2\n    unhealthy_threshold: 5\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: healthcheck\n\n- name: create a backend service\n  google.cloud.gcp_compute_backend_service:\n    name: backendservice-globalforwardingrule\n    backends:\n    - group: \"{{ instancegroup.selfLink }}\"\n    health_checks:\n    - \"{{ healthcheck.selfLink }}\"\n    enable_cdn: 'true'\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: backendservice\n\n- name: create a URL map\n  google.cloud.gcp_compute_url_map:\n    name: urlmap-globalforwardingrule\n    default_service: \"{{ backendservice }}\"\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: urlmap\n\n- name: create a target HTTP proxy\n  google.cloud.gcp_compute_target_http_proxy:\n    name: targethttpproxy-globalforwardingrule\n    url_map: \"{{ urlmap }}\"\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: httpproxy\n\n- name: create a global forwarding rule\n  google.cloud.gcp_compute_global_forwarding_rule:\n    name: test_object\n    ip_address: \"{{ globaladdress.address }}\"\n    ip_protocol: TCP\n    port_range: 80-80\n    target: \"{{ httpproxy.selfLink }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_global_forwarding_rule_info": {
    "doc": {
      "description": "Gather info for GCP GlobalForwardingRule",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP GlobalForwardingRule"
    },
    "examples": "\n- name: get info on a global forwarding rule\n  gcp_compute_global_forwarding_rule_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_health_check": {
    "doc": {
      "description": "Health Checks determine whether instances are responsive and able to do work.\nThey are an important part of a comprehensive load balancing configuration, as they enable monitoring instances behind load balancers.\nHealth Checks poll instances at a specified interval. Instances that do not respond successfully to some number of probes in a row are marked as unhealthy. No new connections are sent to unhealthy instances, though existing connections will continue. The health check will continue to poll unhealthy instances. If an instance later responds successfully to some number of consecutive probes, it is marked healthy again and can receive new connections.\n~>**NOTE**: Legacy HTTP(S) health checks must be used for target pool-based network load balancers. See the [official guide](U(https://cloud.google.com/load-balancing/docs/health-check-concepts#selecting_hc)) for choosing a type of health check.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks)\nOfficial Documentation: U(https://cloud.google.com/load-balancing/docs/health-checks)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "check_interval_sec": {
          "aliases": [],
          "description": "How often (in seconds) to send a health check. The default value is 5 seconds.",
          "default": "5",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. Provide this property when you create the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "grpc_health_check": {
          "aliases": [],
          "description": "A nested object resource.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "grpc_service_name": {
              "aliases": [],
              "description": "The gRPC service name for the health check. The value of grpcServiceName has the following meanings by convention: - Empty serviceName means the overall status of all services at the backend.\n- Non-empty serviceName means the health of that gRPC service, as defined by the owner of the service.\nThe grpcServiceName can only be ASCII.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port number for the health check request. Must be specified if portName and portSpecification are not set or if port_specification is USE_FIXED_PORT. Valid values are 1 through 65535.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "port_name": {
              "aliases": [],
              "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port_specification": {
              "aliases": [],
              "description": "Specifies how port is selected for health checking, can be one of the following values: * `USE_FIXED_PORT`: The port number in `port` is used for health checking.\n* `USE_NAMED_PORT`: The `portName` is used for health checking.\n* `USE_SERVING_PORT`: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.\nIf not specified, gRPC health check follows behavior specified in `port` and `portName` fields.\nSome valid choices include: \"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "healthy_threshold": {
          "aliases": [],
          "description": "A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.",
          "default": "2",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "http2_health_check": {
          "aliases": [],
          "description": "A nested object resource.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "The value of the host header in the HTTP2 health check request.\nIf left empty (default value), the public IP on behalf of which this health check is performed will be used.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The TCP port number for the HTTP2 health check request.\nThe default value is 443.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "port_name": {
              "aliases": [],
              "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port_specification": {
              "aliases": [],
              "description": "Specifies how port is selected for health checking, can be one of the following values: * `USE_FIXED_PORT`: The port number in `port` is used for health checking.\n* `USE_NAMED_PORT`: The `portName` is used for health checking.\n* `USE_SERVING_PORT`: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.\nIf not specified, HTTP2 health check follows behavior specified in `port` and `portName` fields.\nSome valid choices include: \"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "proxy_header": {
              "aliases": [],
              "description": "Specifies the type of proxy header to append before sending data to the backend.\nSome valid choices include: \"NONE\", \"PROXY_V1\"",
              "default": "NONE",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "request_path": {
              "aliases": [],
              "description": "The request path of the HTTP2 health check request.\nThe default value is /.",
              "default": "/",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "response": {
              "aliases": [],
              "description": "The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "http_health_check": {
          "aliases": [],
          "description": "A nested object resource.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "The value of the host header in the HTTP health check request.\nIf left empty (default value), the public IP on behalf of which this health check is performed will be used.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The TCP port number for the HTTP health check request.\nThe default value is 80.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "port_name": {
              "aliases": [],
              "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port_specification": {
              "aliases": [],
              "description": "Specifies how port is selected for health checking, can be one of the following values: * `USE_FIXED_PORT`: The port number in `port` is used for health checking.\n* `USE_NAMED_PORT`: The `portName` is used for health checking.\n* `USE_SERVING_PORT`: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.\nIf not specified, HTTP health check follows behavior specified in `port` and `portName` fields.\nSome valid choices include: \"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "proxy_header": {
              "aliases": [],
              "description": "Specifies the type of proxy header to append before sending data to the backend.\nSome valid choices include: \"NONE\", \"PROXY_V1\"",
              "default": "NONE",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "request_path": {
              "aliases": [],
              "description": "The request path of the HTTP health check request.\nThe default value is /.",
              "default": "/",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "response": {
              "aliases": [],
              "description": "The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "https_health_check": {
          "aliases": [],
          "description": "A nested object resource.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "The value of the host header in the HTTPS health check request.\nIf left empty (default value), the public IP on behalf of which this health check is performed will be used.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The TCP port number for the HTTPS health check request.\nThe default value is 443.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "port_name": {
              "aliases": [],
              "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port_specification": {
              "aliases": [],
              "description": "Specifies how port is selected for health checking, can be one of the following values: * `USE_FIXED_PORT`: The port number in `port` is used for health checking.\n* `USE_NAMED_PORT`: The `portName` is used for health checking.\n* `USE_SERVING_PORT`: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.\nIf not specified, HTTPS health check follows behavior specified in `port` and `portName` fields.\nSome valid choices include: \"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "proxy_header": {
              "aliases": [],
              "description": "Specifies the type of proxy header to append before sending data to the backend.\nSome valid choices include: \"NONE\", \"PROXY_V1\"",
              "default": "NONE",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "request_path": {
              "aliases": [],
              "description": "The request path of the HTTPS health check request.\nThe default value is /.",
              "default": "/",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "response": {
              "aliases": [],
              "description": "The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "ssl_health_check": {
          "aliases": [],
          "description": "A nested object resource.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "port": {
              "aliases": [],
              "description": "The TCP port number for the SSL health check request.\nThe default value is 443.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "port_name": {
              "aliases": [],
              "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port_specification": {
              "aliases": [],
              "description": "Specifies how port is selected for health checking, can be one of the following values: * `USE_FIXED_PORT`: The port number in `port` is used for health checking.\n* `USE_NAMED_PORT`: The `portName` is used for health checking.\n* `USE_SERVING_PORT`: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.\nIf not specified, SSL health check follows behavior specified in `port` and `portName` fields.\nSome valid choices include: \"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "proxy_header": {
              "aliases": [],
              "description": "Specifies the type of proxy header to append before sending data to the backend.\nSome valid choices include: \"NONE\", \"PROXY_V1\"",
              "default": "NONE",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "request": {
              "aliases": [],
              "description": "The application data to send once the SSL connection has been established (default value is empty). If both request and response are empty, the connection establishment alone will indicate health. The request data can only be ASCII.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "response": {
              "aliases": [],
              "description": "The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tcp_health_check": {
          "aliases": [],
          "description": "A nested object resource.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "port": {
              "aliases": [],
              "description": "The TCP port number for the TCP health check request.\nThe default value is 443.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "port_name": {
              "aliases": [],
              "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port_specification": {
              "aliases": [],
              "description": "Specifies how port is selected for health checking, can be one of the following values: * `USE_FIXED_PORT`: The port number in `port` is used for health checking.\n* `USE_NAMED_PORT`: The `portName` is used for health checking.\n* `USE_SERVING_PORT`: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.\nIf not specified, TCP health check follows behavior specified in `port` and `portName` fields.\nSome valid choices include: \"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "proxy_header": {
              "aliases": [],
              "description": "Specifies the type of proxy header to append before sending data to the backend.\nSome valid choices include: \"NONE\", \"PROXY_V1\"",
              "default": "NONE",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "request": {
              "aliases": [],
              "description": "The application data to send once the TCP connection has been established (default value is empty). If both request and response are empty, the connection establishment alone will indicate health. The request data can only be ASCII.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "response": {
              "aliases": [],
              "description": "The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "timeout_sec": {
          "aliases": [
            "timeout_seconds"
          ],
          "description": "How long (in seconds) to wait before claiming failure.\nThe default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.",
          "default": "5",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Specifies the type of the healthCheck, either TCP, SSL, HTTP or HTTPS. If not specified, the default is TCP. Exactly one of the protocol-specific health check field must be specified, which must match type field.\nSome valid choices include: \"TCP\", \"SSL\", \"HTTP\", \"HTTPS\", \"HTTP2\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "unhealthy_threshold": {
          "aliases": [],
          "description": "A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.",
          "default": "2",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP HealthCheck"
    },
    "examples": "\n- name: create a health check\n  google.cloud.gcp_compute_health_check:\n    name: test_object\n    type: TCP\n    tcp_health_check:\n      port_name: service-health\n      request: ping\n      response: pong\n    healthy_threshold: 10\n    timeout_sec: 2\n    unhealthy_threshold: 5\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_health_check_info": {
    "doc": {
      "description": "Gather info for GCP HealthCheck",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP HealthCheck"
    },
    "examples": "\n- name: get info on a health check\n  gcp_compute_health_check_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_http_health_check": {
    "doc": {
      "description": "An HttpHealthCheck resource. This resource defines a template for how individual VMs should be checked for health, via HTTP.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/v1/httpHealthChecks)\nAdding Health Checks: U(https://cloud.google.com/compute/docs/load-balancing/health-checks#legacy_health_checks)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "check_interval_sec": {
          "aliases": [
            "check_interval_seconds"
          ],
          "description": "How often (in seconds) to send a health check. The default value is 5 seconds.",
          "default": "5",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. Provide this property when you create the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "healthy_threshold": {
          "aliases": [],
          "description": "A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "host": {
          "aliases": [],
          "description": "The value of the host header in the HTTP health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "The TCP port number for the HTTP health check request.\nThe default value is 80.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "request_path": {
          "aliases": [],
          "description": "The request path of the HTTP health check request.\nThe default value is /.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "timeout_sec": {
          "aliases": [
            "timeout_seconds"
          ],
          "description": "How long (in seconds) to wait before claiming failure.\nThe default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "unhealthy_threshold": {
          "aliases": [],
          "description": "A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP HttpHealthCheck"
    },
    "examples": "\n- name: create a HTTP health check\n  google.cloud.gcp_compute_http_health_check:\n    name: test_object\n    healthy_threshold: 10\n    port: 8080\n    timeout_sec: 2\n    unhealthy_threshold: 5\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_http_health_check_info": {
    "doc": {
      "description": "Gather info for GCP HttpHealthCheck",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP HttpHealthCheck"
    },
    "examples": "\n- name: get info on a HTTP health check\n  gcp_compute_http_health_check_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_https_health_check": {
    "doc": {
      "description": "An HttpsHealthCheck resource. This resource defines a template for how individual VMs should be checked for health, via HTTPS.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/v1/httpsHealthChecks)\nAdding Health Checks: U(https://cloud.google.com/compute/docs/load-balancing/health-checks#legacy_health_checks)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "check_interval_sec": {
          "aliases": [],
          "description": "How often (in seconds) to send a health check. The default value is 5 seconds.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. Provide this property when you create the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "healthy_threshold": {
          "aliases": [],
          "description": "A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "host": {
          "aliases": [],
          "description": "The value of the host header in the HTTPS health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "The TCP port number for the HTTPS health check request.\nThe default value is 80.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "request_path": {
          "aliases": [],
          "description": "The request path of the HTTPS health check request.\nThe default value is /.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "timeout_sec": {
          "aliases": [
            "timeout_seconds"
          ],
          "description": "How long (in seconds) to wait before claiming failure.\nThe default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "unhealthy_threshold": {
          "aliases": [],
          "description": "A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP HttpsHealthCheck"
    },
    "examples": "\n- name: create a HTTPS health check\n  google.cloud.gcp_compute_https_health_check:\n    name: test_object\n    healthy_threshold: 10\n    port: 8080\n    timeout_sec: 2\n    unhealthy_threshold: 5\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_https_health_check_info": {
    "doc": {
      "description": "Gather info for GCP HttpsHealthCheck",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP HttpsHealthCheck"
    },
    "examples": "\n- name: get info on a HTTPS health check\n  gcp_compute_https_health_check_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_image": {
    "doc": {
      "description": "Represents an Image resource.\nGoogle Compute Engine uses operating system images to create the root persistent disks for your instances. You specify an image when you create an instance. Images contain a boot loader, an operating system, and a root file system. Linux operating system images are also capable of running containers on Compute Engine.\nImages can be either public or custom.\nPublic images are provided and maintained by Google, open-source communities, and third-party vendors. By default, all projects have access to these images and can use them to create instances. Custom images are available only to your project. You can create a custom image from root persistent disks and other images. Then, use the custom image to create an instance.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/v1/images)\nOfficial Documentation: U(https://cloud.google.com/compute/docs/images)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. Provide this property when you create the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "disk_size_gb": {
          "aliases": [],
          "description": "Size of the image when restored onto a persistent disk (in GB).",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "family": {
          "aliases": [],
          "description": "The name of the image family to which this image belongs. You can create disks by specifying an image family instead of a specific image name. The image family always returns its latest image that is not deprecated. The name of the image family must comply with RFC1035.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "guest_os_features": {
          "aliases": [],
          "description": "A list of features to enable on the guest operating system.\nApplicable only for bootable images.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "type": {
              "aliases": [],
              "description": "The type of supported feature.\nSome valid choices include: \"MULTI_IP_SUBNET\", \"SECURE_BOOT\", \"SEV_CAPABLE\", \"UEFI_COMPATIBLE\", \"VIRTIO_SCSI_MULTIQUEUE\", \"WINDOWS\", \"GVNIC\"",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "image_encryption_key": {
          "aliases": [],
          "description": "Encrypts the image using a customer-supplied encryption key.\nAfter you encrypt an image with a customer-supplied key, you must provide the same key if you use the image later (e.g. to create a disk from the image) .",
          "type": "dict",
          "required": false,
          "suboptions": {
            "raw_key": {
              "aliases": [],
              "description": "Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "labels": {
          "aliases": [],
          "description": "Labels to apply to this Image.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "licenses": {
          "aliases": [],
          "description": "Any applicable license URI.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "raw_disk": {
          "aliases": [],
          "description": "The parameters of the raw disk image.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "container_type": {
              "aliases": [],
              "description": "The format used to encode and transmit the block device, which should be TAR. This is just a container and transmission format and not a runtime format. Provided by the client when the disk image is created.\nSome valid choices include: \"TAR\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "sha1_checksum": {
              "aliases": [],
              "description": "An optional SHA1 checksum of the disk image before unpackaging.\nThis is provided by the client when the disk image is created.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "source": {
              "aliases": [],
              "description": "The full Google Cloud Storage URL where disk storage is stored You must provide either this property or the sourceDisk property but not both.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "source_disk": {
          "aliases": [],
          "description": "The source disk to create this image based on.\nYou must provide either this property or the rawDisk.source property but not both to create an image.\nThis field represents a link to a Disk resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_disk task and then set this source_disk field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "source_disk_encryption_key": {
          "aliases": [],
          "description": "The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "raw_key": {
              "aliases": [],
              "description": "Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "source_disk_id": {
          "aliases": [],
          "description": "The ID value of the disk used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given disk name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "source_image": {
          "aliases": [],
          "description": "URL of the source image used to create this image. In order to create an image, you must provide the full or partial URL of one of the following: * The selfLink URL * This property * The rawDisk.source URL * The sourceDisk URL .\nThis field represents a link to a Image resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_image task and then set this source_image field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "source_snapshot": {
          "aliases": [],
          "description": "URL of the source snapshot used to create this image.\nIn order to create an image, you must provide the full or partial URL of one of the following: * The selfLink URL * This property * The sourceImage URL * The rawDisk.source URL * The sourceDisk URL .\nThis field represents a link to a Snapshot resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_snapshot task and then set this source_snapshot field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "source_type": {
          "aliases": [],
          "description": "The type of the image used to create this disk. The default and only value is RAW .\nSome valid choices include: \"RAW\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Image"
    },
    "examples": "\n- name: create a disk\n  google.cloud.gcp_compute_disk:\n    name: disk-image\n    zone: us-central1-a\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: disk\n\n- name: create a image\n  google.cloud.gcp_compute_image:\n    name: test_object\n    source_disk: \"{{ disk }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_image_info": {
    "doc": {
      "description": "Gather info for GCP Image",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Image"
    },
    "examples": "\n- name: get info on an image\n  gcp_compute_image_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_instance": {
    "doc": {
      "description": "An instance is a virtual machine (VM) hosted on Google's infrastructure.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "can_ip_forward": {
          "aliases": [
            "ip_forward"
          ],
          "description": "Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to forward routes.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "deletion_protection": {
          "aliases": [],
          "description": "Whether the resource should be protected against deletion.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "disks": {
          "aliases": [],
          "description": "An array of disks that are associated with the instances that are created from this template.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "auto_delete": {
              "aliases": [],
              "description": "Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).\nTip: Disks should be set to autoDelete=true so that leftover disks are not left behind on machine deletion.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "boot": {
              "aliases": [],
              "description": "Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "device_name": {
              "aliases": [],
              "description": "Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "disk_encryption_key": {
              "aliases": [],
              "description": "Encrypts or decrypts a disk using a customer-supplied encryption key.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "raw_key": {
                  "aliases": [],
                  "description": "Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "rsa_encrypted_key": {
                  "aliases": [],
                  "description": "Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "index": {
              "aliases": [],
              "description": "Assigns a zero-based index to this disk, where 0 is reserved for the boot disk. For example, if you have many disks attached to an instance, each disk would have a unique index number. If not specified, the server will choose an appropriate value.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "initialize_params": {
              "aliases": [],
              "description": "Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "disk_name": {
                  "aliases": [],
                  "description": "Specifies the disk name. If not specified, the default is to use the name of the instance.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "disk_size_gb": {
                  "aliases": [],
                  "description": "Specifies the size of the disk in base-2 GB.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "disk_type": {
                  "aliases": [],
                  "description": "Reference to a disk type.\nSpecifies the disk type to use to create the instance.\nIf not specified, the default is pd-standard.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "source_image": {
                  "aliases": [
                    "image",
                    "image_family"
                  ],
                  "description": "The source image to create this disk. When creating a new instance, one of initializeParams.sourceImage or disks.source is required. To create a disk with one of the public operating system images, specify the image by its family name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "source_image_encryption_key": {
                  "aliases": [],
                  "description": "The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.\nInstance templates do not store customer-supplied encryption keys, so you cannot create disks for instances in a managed instance group if the source images are encrypted with your own keys.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "raw_key": {
                      "aliases": [],
                      "description": "Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "interface": {
              "aliases": [],
              "description": "Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.\nPersistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI.\nSome valid choices include: \"SCSI\", \"NVME\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "mode": {
              "aliases": [],
              "description": "The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.\nSome valid choices include: \"READ_WRITE\", \"READ_ONLY\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "source": {
              "aliases": [],
              "description": "Reference to a disk. When creating a new instance, one of initializeParams.sourceImage or disks.source is required.\nIf desired, you can also attach existing non-root persistent disks using this property. This field is only applicable for persistent disks.\nThis field represents a link to a Disk resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_disk task and then set this source field to \"{{ name-of-resource }}\"",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.\nSome valid choices include: \"SCRATCH\", \"PERSISTENT\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "guest_accelerators": {
          "aliases": [],
          "description": "List of the type and count of accelerator cards attached to the instance .",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "accelerator_count": {
              "aliases": [],
              "description": "The number of the guest accelerator cards exposed to this instance.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "accelerator_type": {
              "aliases": [],
              "description": "Full or partial URL of the accelerator type resource to expose to this instance.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "hostname": {
          "aliases": [],
          "description": "The hostname of the instance to be created. The specified hostname must be RFC1035 compliant. If hostname is not specified, the default hostname is [INSTANCE_NAME].c.[PROJECT_ID].internal when using the global DNS, and [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal when using zonal DNS.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "labels": {
          "aliases": [],
          "description": "Labels to apply to this instance. A list of key->value pairs.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "machine_type": {
          "aliases": [],
          "description": "A reference to a machine type which defines VM kind.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "metadata": {
          "aliases": [],
          "description": "The metadata key/value pairs to assign to instances that are created from this template. These pairs can consist of custom metadata or predefined keys.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "min_cpu_platform": {
          "aliases": [],
          "description": "Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms .",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "network_interfaces": {
          "aliases": [],
          "description": "An array of configurations for this interface. This specifies how this interface is configured to interact with other network services, such as connecting to the internet. Only one network interface is supported per instance.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "access_configs": {
              "aliases": [],
              "description": "An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "name": {
                  "aliases": [],
                  "description": "The name of this access configuration. The default and recommended name is External NAT but you can use any arbitrary string you would like. For example, My external IP or Network Access.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "nat_ip": {
                  "aliases": [],
                  "description": "Reference to an address.\nAn external IP address associated with this instance.\nSpecify an unused static external IP address available to the project or leave this field undefined to use an IP from a shared ephemeral IP address pool. If you specify a static external IP address, it must live in the same region as the zone of the instance.\nThis field represents a link to a Address resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'address' and value of your resource's address Alternatively, you can add `register: name-of-resource` to a gcp_compute_address task and then set this nat_ip field to \"{{ name-of-resource }}\"",
                  "type": "dict",
                  "required": false,
                  "suboptions": {}
                },
                "network_tier": {
                  "aliases": [],
                  "description": "This signifies the networking tier used for configuring this access configuration. If an AccessConfig is specified without a valid external IP address, an ephemeral IP will be created with this networkTier. If an AccessConfig with a valid external IP address is specified, it must match that of the networkTier associated with the Address resource owning that IP.\nSome valid choices include: \"PREMIUM\", \"STANDARD\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "public_ptr_domain_name": {
                  "aliases": [],
                  "description": "The DNS domain name for the public PTR record. You can set this field only if the setPublicPtr field is enabled.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "set_public_ptr": {
                  "aliases": [],
                  "description": "Specifies whether a public DNS PTR record should be created to map the external IP address of the instance to a DNS domain name.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "type": {
                  "aliases": [],
                  "description": "The type of configuration. The default and only option is ONE_TO_ONE_NAT.\nSome valid choices include: \"ONE_TO_ONE_NAT\"",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "alias_ip_ranges": {
              "aliases": [],
              "description": "An array of alias IP ranges for this network interface. Can only be specified for network interfaces on subnet-mode networks.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "ip_cidr_range": {
                  "aliases": [],
                  "description": "The IP CIDR range represented by this alias IP range.\nThis IP CIDR range must belong to the specified subnetwork and cannot contain IP addresses reserved by system or used by other network interfaces. This range may be a single IP address (e.g. 10.2.3.4), a netmask (e.g. /24) or a CIDR format string (e.g. 10.1.2.0/24).",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "subnetwork_range_name": {
                  "aliases": [],
                  "description": "Optional subnetwork secondary range name specifying the secondary range from which to allocate the IP CIDR range for this alias IP range. If left unspecified, the primary range of the subnetwork will be used.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "network": {
              "aliases": [],
              "description": "Specifies the title of an existing network. Not setting the network title will select the default network interface, which could have SSH already configured .\nThis field represents a link to a Network resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_network task and then set this network field to \"{{ name-of-resource }}\"",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "network_ip": {
              "aliases": [],
              "description": "An IPv4 internal network address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "subnetwork": {
              "aliases": [],
              "description": "Reference to a VPC network.\nIf the network resource is in legacy mode, do not provide this property. If the network is in auto subnet mode, providing the subnetwork is optional. If the network is in custom subnet mode, then this field should be specified.\nThis field represents a link to a Subnetwork resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_subnetwork task and then set this subnetwork field to \"{{ name-of-resource }}\"",
              "type": "dict",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scheduling": {
          "aliases": [],
          "description": "Sets the scheduling options for this instance.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "automatic_restart": {
              "aliases": [],
              "description": "Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user).\nYou can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "on_host_maintenance": {
              "aliases": [],
              "description": "Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE.\nFor more information, see Setting Instance Scheduling Options.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "preemptible": {
              "aliases": [],
              "description": "Defines whether the instance is preemptible. This can only be set during instance creation, it cannot be set or changed after the instance has been created.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "service_accounts": {
          "aliases": [],
          "description": "A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "email": {
              "aliases": [],
              "description": "Email address of the service account.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "scopes": {
              "aliases": [],
              "description": "The list of scopes to be made available for this service account.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            }
          }
        },
        "shielded_instance_config": {
          "aliases": [],
          "description": "Configuration for various parameters related to shielded instances.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enable_integrity_monitoring": {
              "aliases": [],
              "description": "Defines whether the instance has integrity monitoring enabled.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "enable_secure_boot": {
              "aliases": [],
              "description": "Defines whether the instance has Secure Boot enabled.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "enable_vtpm": {
              "aliases": [],
              "description": "Defines whether the instance has the vTPM enabled.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "status": {
          "aliases": [],
          "description": "The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, and TERMINATED.\nAs a user, use RUNNING to keep a machine \"on\" and TERMINATED to turn a machine off .\nSome valid choices include: \"PROVISIONING\", \"STAGING\", \"RUNNING\", \"STOPPING\", \"SUSPENDING\", \"SUSPENDED\", \"TERMINATED\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A list of tags to apply to this instance. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "fingerprint": {
              "aliases": [],
              "description": "Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking.\nThe fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "items": {
              "aliases": [],
              "description": "An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            }
          }
        },
        "zone": {
          "aliases": [],
          "description": "A reference to the zone where the machine resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Instance"
    },
    "examples": "\n- name: create a disk\n  google.cloud.gcp_compute_disk:\n    name: disk-instance\n    size_gb: 50\n    source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts\n    zone: us-central1-a\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: disk\n\n- name: create a network\n  google.cloud.gcp_compute_network:\n    name: network-instance\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: network\n\n- name: create a address\n  google.cloud.gcp_compute_address:\n    name: address-instance\n    region: us-central1\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: address\n\n- name: create a instance\n  google.cloud.gcp_compute_instance:\n    name: test_object\n    machine_type: n1-standard-1\n    disks:\n    - auto_delete: 'true'\n      boot: 'true'\n      source: \"{{ disk }}\"\n    - auto_delete: 'true'\n      interface: NVME\n      type: SCRATCH\n      initialize_params:\n        disk_type: local-ssd\n    metadata:\n      startup-script-url: gs:://graphite-playground/bootstrap.sh\n      cost-center: '12345'\n    labels:\n      environment: production\n    network_interfaces:\n    - network: \"{{ network }}\"\n      access_configs:\n      - name: External NAT\n        nat_ip: \"{{ address }}\"\n        type: ONE_TO_ONE_NAT\n    zone: us-central1-a\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_instance_group": {
    "doc": {
      "description": "Represents an Instance Group resource. Instance groups are self-managed and can contain identical or different instances. Instance groups do not use an instance template. Unlike managed instance groups, you must create and add instances to an instance group manually.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. Provide this property when you create the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instances": {
          "aliases": [],
          "description": "The list of instances associated with this InstanceGroup.\nAll instances must be created before being added to an InstanceGroup.\nAll instances not in this list will be removed from the InstanceGroup and will not be deleted.\nOnly the full identifier of the instance will be returned.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the instance group.\nThe name must be 1-63 characters long, and comply with RFC1035.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "named_ports": {
          "aliases": [],
          "description": "Assigns a name to a port number.\nFor example: {name: \"http\", port: 80}.\nThis allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple ports.\nFor example: [{name: \"http\", port: 80},{name: \"http\", port: 8080}] Named ports apply to all instances in this instance group.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "The name for this named port.\nThe name must be 1-63 characters long, and comply with RFC1035.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port number, which can be a value between 1 and 65535.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "network": {
          "aliases": [],
          "description": "The network to which all instances in the instance group belong.\nThis field represents a link to a Network resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_network task and then set this network field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The region where the instance group is located (for regional resources).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnetwork": {
          "aliases": [],
          "description": "The subnetwork to which all instances in the instance group belong.\nThis field represents a link to a Subnetwork resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_subnetwork task and then set this subnetwork field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "A reference to the zone where the instance group resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP InstanceGroup"
    },
    "examples": "\n- name: create a network\n  google.cloud.gcp_compute_network:\n    name: network-instancegroup\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: network\n\n- name: create a instance group\n  google.cloud.gcp_compute_instance_group:\n    name: test_object\n    named_ports:\n    - name: ansible\n      port: 1234\n    network: \"{{ network }}\"\n    zone: us-central1-a\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_instance_group_info": {
    "doc": {
      "description": "Gather info for GCP InstanceGroup",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "A reference to the zone where the instance group resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP InstanceGroup"
    },
    "examples": "\n- name: get info on an instance group\n  gcp_compute_instance_group_info:\n    zone: us-central1-a\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_instance_group_manager": {
    "doc": {
      "description": "Creates a managed instance group using the information that you specify in the request. After the group is created, it schedules an action to create instances in the group using the specified instance template. This operation is marked as DONE when the group is created even if the instances in the group have not yet been created. You must separately verify the status of the individual instances.\nA managed instance group can have up to 1000 VM instances per group.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "base_instance_name": {
          "aliases": [],
          "description": "The base instance name to use for instances in this group. The value must be 1-58 characters long. Instances are named by appending a hyphen and a random four-character string to the base instance name.\nThe base instance name must comply with RFC1035.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. Provide this property when you create the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance_template": {
          "aliases": [],
          "description": "The instance template that is specified for this managed instance group. The group uses this template to create all new instances in the managed instance group.\nThis field represents a link to a InstanceTemplate resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_instance_template task and then set this instance_template field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the managed instance group. The name must be 1-63 characters long, and comply with RFC1035.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "named_ports": {
          "aliases": [],
          "description": "Named ports configured for the Instance Groups complementary to this Instance Group Manager.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port number, which can be a value between 1 and 65535.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target_pools": {
          "aliases": [],
          "description": "TargetPool resources to which instances in the instanceGroup field are added. The target pools automatically apply to all of the instances in the managed instance group.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        },
        "target_size": {
          "aliases": [],
          "description": "The target number of running instances for this managed instance group. Deleting or abandoning instances reduces this number. Resizing the group changes this number.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "The zone the managed instance group resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP InstanceGroupManager"
    },
    "examples": "\n- name: create a network\n  google.cloud.gcp_compute_network:\n    name: network-instancetemplate\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: network\n\n- name: create a address\n  google.cloud.gcp_compute_address:\n    name: address-instancetemplate\n    region: us-west1\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: address\n\n- name: create a instance template\n  google.cloud.gcp_compute_instance_template:\n    name: \"{{ resource_name }}\"\n    properties:\n      disks:\n      - auto_delete: 'true'\n        boot: 'true'\n        initialize_params:\n          source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts\n      machine_type: n1-standard-1\n      network_interfaces:\n      - network: \"{{ network }}\"\n        access_configs:\n        - name: test-config\n          type: ONE_TO_ONE_NAT\n          nat_ip: \"{{ address }}\"\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instancetemplate\n\n- name: create a instance group manager\n  google.cloud.gcp_compute_instance_group_manager:\n    name: test_object\n    base_instance_name: test1-child\n    instance_template: \"{{ instancetemplate }}\"\n    target_size: 3\n    zone: us-west1-a\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_instance_group_manager_info": {
    "doc": {
      "description": "Gather info for GCP InstanceGroupManager",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "The zone the managed instance group resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP InstanceGroupManager"
    },
    "examples": "\n- name: get info on an instance group manager\n  gcp_compute_instance_group_manager_info:\n    zone: us-west1-a\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_instance_info": {
    "doc": {
      "description": "Gather info for GCP Instance",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "A reference to the zone where the machine resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Instance"
    },
    "examples": "\n- name: get info on an instance\n  gcp_compute_instance_info:\n    zone: us-central1-a\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_instance_template": {
    "doc": {
      "description": "Defines an Instance Template resource that provides configuration settings for your virtual machine instances. Instance templates are not tied to the lifetime of an instance and can be used and reused as to deploy virtual machines. You can also use different templates to create different virtual machine configurations. Instance templates are required when you create a managed instance group.\nTip: Disks should be set to autoDelete=true so that leftover disks are not left behind on machine deletion.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. Provide this property when you create the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. The name is 1-63 characters long and complies with RFC1035.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "properties": {
          "aliases": [],
          "description": "The instance properties for this instance template.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "can_ip_forward": {
              "aliases": [],
              "description": "Enables instances created based on this template to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If unsure, leave this set to false.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "An optional text description for the instances that are created from this instance template.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "disks": {
              "aliases": [],
              "description": "An array of disks that are associated with the instances that are created from this template.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "auto_delete": {
                  "aliases": [],
                  "description": "Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).\nTip: Disks should be set to autoDelete=true so that leftover disks are not left behind on machine deletion.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "boot": {
                  "aliases": [],
                  "description": "Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "device_name": {
                  "aliases": [],
                  "description": "Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "disk_encryption_key": {
                  "aliases": [],
                  "description": "Encrypts or decrypts a disk using a customer-supplied encryption key.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "raw_key": {
                      "aliases": [],
                      "description": "Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "rsa_encrypted_key": {
                      "aliases": [],
                      "description": "Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "index": {
                  "aliases": [],
                  "description": "Assigns a zero-based index to this disk, where 0 is reserved for the boot disk. For example, if you have many disks attached to an instance, each disk would have a unique index number. If not specified, the server will choose an appropriate value.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "initialize_params": {
                  "aliases": [],
                  "description": "Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "disk_name": {
                      "aliases": [],
                      "description": "Specifies the disk name. If not specified, the default is to use the name of the instance.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "disk_size_gb": {
                      "aliases": [],
                      "description": "Specifies the size of the disk in base-2 GB.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "disk_type": {
                      "aliases": [],
                      "description": "Reference to a disk type.\nSpecifies the disk type to use to create the instance.\nIf not specified, the default is pd-standard.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "source_image": {
                      "aliases": [],
                      "description": "The source image to create this disk. When creating a new instance, one of initializeParams.sourceImage or disks.source is required. To create a disk with one of the public operating system images, specify the image by its family name.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "source_image_encryption_key": {
                      "aliases": [],
                      "description": "The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.\nInstance templates do not store customer-supplied encryption keys, so you cannot create disks for instances in a managed instance group if the source images are encrypted with your own keys.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "raw_key": {
                          "aliases": [],
                          "description": "Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "interface": {
                  "aliases": [],
                  "description": "Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.\nPersistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI.\nSome valid choices include: \"SCSI\", \"NVME\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "mode": {
                  "aliases": [],
                  "description": "The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.\nSome valid choices include: \"READ_WRITE\", \"READ_ONLY\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "source": {
                  "aliases": [],
                  "description": "Reference to a disk. When creating a new instance, one of initializeParams.sourceImage or disks.source is required.\nIf desired, you can also attach existing non-root persistent disks using this property. This field is only applicable for persistent disks.\nNote that for InstanceTemplate, specify the disk name, not the URL for the disk.\nThis field represents a link to a Disk resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_compute_disk task and then set this source field to \"{{ name-of-resource }}\"",
                  "type": "dict",
                  "required": false,
                  "suboptions": {}
                },
                "type": {
                  "aliases": [],
                  "description": "Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.\nSome valid choices include: \"SCRATCH\", \"PERSISTENT\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "guest_accelerators": {
              "aliases": [],
              "description": "List of the type and count of accelerator cards attached to the instance .",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "accelerator_count": {
                  "aliases": [],
                  "description": "The number of the guest accelerator cards exposed to this instance.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "accelerator_type": {
                  "aliases": [],
                  "description": "Full or partial URL of the accelerator type resource to expose to this instance.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "labels": {
              "aliases": [],
              "description": "Labels to apply to this address. A list of key->value pairs.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "machine_type": {
              "aliases": [],
              "description": "The machine type to use in the VM instance template.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "metadata": {
              "aliases": [],
              "description": "The metadata key/value pairs to assign to instances that are created from this template. These pairs can consist of custom metadata or predefined keys.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "min_cpu_platform": {
              "aliases": [],
              "description": "Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms .",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "network_interfaces": {
              "aliases": [],
              "description": "An array of configurations for this interface. This specifies how this interface is configured to interact with other network services, such as connecting to the internet. Only one network interface is supported per instance.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "access_configs": {
                  "aliases": [],
                  "description": "An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "name": {
                      "aliases": [],
                      "description": "The name of this access configuration. The default and recommended name is External NAT but you can use any arbitrary string you would like. For example, My external IP or Network Access.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "nat_ip": {
                      "aliases": [],
                      "description": "Reference to an address.\nAn external IP address associated with this instance.\nSpecify an unused static external IP address available to the project or leave this field undefined to use an IP from a shared ephemeral IP address pool. If you specify a static external IP address, it must live in the same region as the zone of the instance.\nThis field represents a link to a Address resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'address' and value of your resource's address Alternatively, you can add `register: name-of-resource` to a gcp_compute_address task and then set this nat_ip field to \"{{ name-of-resource }}\"",
                      "type": "dict",
                      "required": false,
                      "suboptions": {}
                    },
                    "network_tier": {
                      "aliases": [],
                      "description": "This signifies the networking tier used for configuring this access configuration. If an AccessConfig is specified without a valid external IP address, an ephemeral IP will be created with this networkTier. If an AccessConfig with a valid external IP address is specified, it must match that of the networkTier associated with the Address resource owning that IP.\nSome valid choices include: \"PREMIUM\", \"STANDARD\"",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "public_ptr_domain_name": {
                      "aliases": [],
                      "description": "The DNS domain name for the public PTR record. You can set this field only if the setPublicPtr field is enabled.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "set_public_ptr": {
                      "aliases": [],
                      "description": "Specifies whether a public DNS PTR record should be created to map the external IP address of the instance to a DNS domain name.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "type": {
                      "aliases": [],
                      "description": "The type of configuration. The default and only option is ONE_TO_ONE_NAT.\nSome valid choices include: \"ONE_TO_ONE_NAT\"",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                },
                "alias_ip_ranges": {
                  "aliases": [],
                  "description": "An array of alias IP ranges for this network interface. Can only be specified for network interfaces on subnet-mode networks.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "ip_cidr_range": {
                      "aliases": [],
                      "description": "The IP CIDR range represented by this alias IP range.\nThis IP CIDR range must belong to the specified subnetwork and cannot contain IP addresses reserved by system or used by other network interfaces. This range may be a single IP address (e.g. 10.2.3.4), a netmask (e.g. /24) or a CIDR format string (e.g. 10.1.2.0/24).",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "subnetwork_range_name": {
                      "aliases": [],
                      "description": "Optional subnetwork secondary range name specifying the secondary range from which to allocate the IP CIDR range for this alias IP range. If left unspecified, the primary range of the subnetwork will be used.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "network": {
                  "aliases": [],
                  "description": "Specifies the title of an existing network. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used; if the network is not specified but the subnetwork is specified, the network is inferred.\nThis field represents a link to a Network resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_network task and then set this network field to \"{{ name-of-resource }}\"",
                  "type": "dict",
                  "required": false,
                  "suboptions": {}
                },
                "network_ip": {
                  "aliases": [],
                  "description": "An IPv4 internal network address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "subnetwork": {
                  "aliases": [],
                  "description": "Reference to a VPC network.\nIf the network resource is in legacy mode, do not provide this property. If the network is in auto subnet mode, providing the subnetwork is optional. If the network is in custom subnet mode, then this field should be specified.\nThis field represents a link to a Subnetwork resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_subnetwork task and then set this subnetwork field to \"{{ name-of-resource }}\"",
                  "type": "dict",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "scheduling": {
              "aliases": [],
              "description": "Sets the scheduling options for this instance.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "automatic_restart": {
                  "aliases": [],
                  "description": "Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user).\nYou can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "on_host_maintenance": {
                  "aliases": [],
                  "description": "Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE.\nFor more information, see Setting Instance Scheduling Options.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "preemptible": {
                  "aliases": [],
                  "description": "Defines whether the instance is preemptible. This can only be set during instance creation, it cannot be set or changed after the instance has been created.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "service_accounts": {
              "aliases": [],
              "description": "A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "email": {
                  "aliases": [],
                  "description": "Email address of the service account.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "scopes": {
                  "aliases": [],
                  "description": "The list of scopes to be made available for this service account.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                }
              }
            },
            "tags": {
              "aliases": [],
              "description": "A list of tags to apply to this instance. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "fingerprint": {
                  "aliases": [],
                  "description": "Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking.\nThe fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "items": {
                  "aliases": [],
                  "description": "An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                }
              }
            }
          }
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP InstanceTemplate"
    },
    "examples": "\n- name: create a network\n  google.cloud.gcp_compute_network:\n    name: network-instancetemplate\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: network\n\n- name: create a address\n  google.cloud.gcp_compute_address:\n    name: address-instancetemplate\n    region: us-west1\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: address\n\n- name: create a instance template\n  google.cloud.gcp_compute_instance_template:\n    name: test_object\n    properties:\n      disks:\n      - auto_delete: 'true'\n        boot: 'true'\n        initialize_params:\n          source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts\n      machine_type: n1-standard-1\n      network_interfaces:\n      - network: \"{{ network }}\"\n        access_configs:\n        - name: test-config\n          type: ONE_TO_ONE_NAT\n          nat_ip: \"{{ address }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_instance_template_info": {
    "doc": {
      "description": "Gather info for GCP InstanceTemplate",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP InstanceTemplate"
    },
    "examples": "\n- name: get info on an instance template\n  gcp_compute_instance_template_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_interconnect_attachment": {
    "doc": {
      "description": "Represents an InterconnectAttachment (VLAN attachment) resource. For more information, see Creating VLAN Attachments.",
      "has_action": false,
      "options": {
        "admin_enabled": {
          "aliases": [],
          "description": "Whether the VLAN attachment is enabled or disabled. When using PARTNER type this will Pre-Activate the interconnect attachment .",
          "default": "true",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "bandwidth": {
          "aliases": [],
          "description": "Provisioned bandwidth capacity for the interconnect attachment.\nFor attachments of type DEDICATED, the user can set the bandwidth.\nFor attachments of type PARTNER, the Google Partner that is operating the interconnect must set the bandwidth.\nOutput only for PARTNER type, mutable for PARTNER_PROVIDER and DEDICATED, Defaults to BPS_10G .\nSome valid choices include: \"BPS_50M\", \"BPS_100M\", \"BPS_200M\", \"BPS_300M\", \"BPS_400M\", \"BPS_500M\", \"BPS_1G\", \"BPS_2G\", \"BPS_5G\", \"BPS_10G\", \"BPS_20G\", \"BPS_50G\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "candidate_subnets": {
          "aliases": [],
          "description": "Up to 16 candidate prefixes that can be used to restrict the allocation of cloudRouterIpAddress and customerRouterIpAddress for this attachment.\nAll prefixes must be within link-local address space (169.254.0.0/16) and must be /29 or shorter (/28, /27, etc). Google will attempt to select an unused /29 from the supplied candidate prefix(es). The request will fail if all possible /29s are in use on Google's edge. If not supplied, Google will randomly select an unused /29 from all of link-local space.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "edge_availability_domain": {
          "aliases": [],
          "description": "Desired availability domain for the attachment. Only available for type PARTNER, at creation time. For improved reliability, customers should configure a pair of attachments with one per availability domain. The selected availability domain will be provided to the Partner via the pairing key so that the provisioned circuit will lie in the specified domain. If not specified, the value will default to AVAILABILITY_DOMAIN_ANY.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interconnect": {
          "aliases": [],
          "description": "URL of the underlying Interconnect object that this attachment's traffic will traverse through. Required if type is DEDICATED, must not be set if type is PARTNER.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "Region where the regional interconnect attachment resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "router": {
          "aliases": [],
          "description": "URL of the cloud router to be used for dynamic routing. This router must be in the same region as this InterconnectAttachment. The InterconnectAttachment will automatically connect the Interconnect to the network & region within which the Cloud Router is configured.\nThis field represents a link to a Router resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_router task and then set this router field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "The type of InterconnectAttachment you wish to create. Defaults to DEDICATED.\nSome valid choices include: \"DEDICATED\", \"PARTNER\", \"PARTNER_PROVIDER\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "vlan_tag8021q": {
          "aliases": [],
          "description": "The IEEE 802.1Q VLAN tag for this attachment, in the range 2-4094. When using PARTNER type this will be managed upstream.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP InterconnectAttachment"
    },
    "examples": "\n- name: create a interconnect attachment\n  google.cloud.gcp_compute_interconnect_attachment:\n    name: test_object\n    region: us-central1\n    project: test_project\n    auth_kind: serviceaccount\n    interconnect: https://googleapis.com/compute/v1/projects/test_project/global/interconnects/...\n    router: https://googleapis.com/compute/v1/projects/test_project/regions/us-central1/routers/...\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n  register: disk\n"
  },
  "google.cloud.gcp_compute_interconnect_attachment_info": {
    "doc": {
      "description": "Gather info for GCP InterconnectAttachment",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "Region where the regional interconnect attachment resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP InterconnectAttachment"
    },
    "examples": "\n- name: get info on an interconnect attachment\n  gcp_compute_interconnect_attachment_info:\n    region: us-central1\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_network": {
    "doc": {
      "description": "Manages a VPC network or legacy network resource on GCP.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/networks)\nOfficial Documentation: U(https://cloud.google.com/vpc/docs/vpc)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "auto_create_subnetworks": {
          "aliases": [],
          "description": "When set to `true`, the network is created in \"auto subnet mode\" and it will create a subnet for each region automatically across the `10.128.0.0/9` address range.\nWhen set to `false`, the network is created in \"custom subnet mode\" so the user can explicitly connect subnetwork resources.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. The resource must be recreated to modify this field.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mtu": {
          "aliases": [],
          "description": "Maximum Transmission Unit in bytes. The minimum value for this field is 1460 and the maximum value is 1500 bytes.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "routing_config": {
          "aliases": [],
          "description": "The network-level routing configuration for this network. Used by Cloud Router to determine what type of network-wide routing behavior to enforce.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "routing_mode": {
              "aliases": [],
              "description": "The network-wide routing mode to use. If set to `REGIONAL`, this network's cloud routers will only advertise routes with subnetworks of this network in the same region as the router. If set to `GLOBAL`, this network's cloud routers will advertise routes with all subnetworks of this network, across regions.\nSome valid choices include: \"REGIONAL\", \"GLOBAL\"",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Network"
    },
    "examples": "\n- name: create a network\n  google.cloud.gcp_compute_network:\n    name: test_object\n    auto_create_subnetworks: 'true'\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_network_endpoint_group": {
    "doc": {
      "description": "Network endpoint groups (NEGs) are zonal resources that represent collections of IP address and port combinations for GCP resources within a single subnet. Each IP address and port combination is called a network endpoint.\nNetwork endpoint groups can be used as backends in backend services for HTTP(S), TCP proxy, and SSL proxy load balancers. You cannot use NEGs as a backend with internal load balancers. Because NEG backends allow you to specify IP addresses and ports, you can distribute traffic in a granular fashion among applications or containers running within VM instances.\nRecreating a network endpoint group that's in use by another resource will give a `resourceInUseByAnotherResource` error. Use `lifecycle.create_before_destroy` to avoid this type of error.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/beta/networkEndpointGroups)\nOfficial Documentation: U(https://cloud.google.com/load-balancing/docs/negs/)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "default_port": {
          "aliases": [],
          "description": "The default port used if the port number is not specified in the network endpoint.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. Provide this property when you create the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network": {
          "aliases": [],
          "description": "The network to which all network endpoints in the NEG belong.\nUses \"default\" project network if unspecified.\nThis field represents a link to a Network resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_network task and then set this network field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "network_endpoint_type": {
          "aliases": [],
          "description": "Type of network endpoints in this network endpoint group.\nSome valid choices include: \"GCE_VM_IP_PORT\"",
          "default": "GCE_VM_IP_PORT",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnetwork": {
          "aliases": [],
          "description": "Optional subnetwork to which all network endpoints in the NEG belong.\nThis field represents a link to a Subnetwork resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_subnetwork task and then set this subnetwork field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "Zone where the network endpoint group is located.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP NetworkEndpointGroup"
    },
    "examples": "\n- name: create a network\n  google.cloud.gcp_compute_network:\n    name: \"{{ resource_name }}\"\n    auto_create_subnetworks: 'false'\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: network\n\n- name: create a subnetwork\n  google.cloud.gcp_compute_subnetwork:\n    name: \"{{ resource_name }}\"\n    ip_cidr_range: 10.0.0.0/16\n    region: us-central1\n    network: \"{{ network }}\"\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: subnetwork\n\n- name: create a network endpoint group\n  google.cloud.gcp_compute_network_endpoint_group:\n    name: test_object\n    network: \"{{ network }}\"\n    subnetwork: \"{{ subnetwork }}\"\n    default_port: 90\n    zone: us-central1-a\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_network_endpoint_group_info": {
    "doc": {
      "description": "Gather info for GCP NetworkEndpointGroup",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "Zone where the network endpoint group is located.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP NetworkEndpointGroup"
    },
    "examples": "\n- name: get info on a network endpoint group\n  gcp_compute_network_endpoint_group_info:\n    zone: us-central1-a\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_network_info": {
    "doc": {
      "description": "Gather info for GCP Network",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Network"
    },
    "examples": "\n- name: get info on a network\n  gcp_compute_network_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_node_group": {
    "doc": {
      "description": "Represents a NodeGroup resource to manage a group of sole-tenant nodes.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups)\nSole-Tenant Nodes: U(https://cloud.google.com/compute/docs/nodes/)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "autoscaling_policy": {
          "aliases": [],
          "description": "If you use sole-tenant nodes for your workloads, you can use the node group autoscaler to automatically manage the sizes of your node groups.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "max_nodes": {
              "aliases": [],
              "description": "Maximum size of the node group. Set to a value less than or equal to 100 and greater than or equal to min-nodes.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "min_nodes": {
              "aliases": [],
              "description": "Minimum size of the node group. Must be less than or equal to max-nodes. The default value is 0.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "mode": {
              "aliases": [],
              "description": "The autoscaling mode. Set to one of the following: - OFF: Disables the autoscaler.\n- ON: Enables scaling in and scaling out.\n- ONLY_SCALE_OUT: Enables only scaling out.\nYou must use this mode if your node groups are configured to restart their hosted VMs on minimal servers.\nSome valid choices include: \"OFF\", \"ON\", \"ONLY_SCALE_OUT\"",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "An optional textual description of the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "maintenance_policy": {
          "aliases": [],
          "description": "Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT.",
          "default": "DEFAULT",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "node_template": {
          "aliases": [],
          "description": "The URL of the node template to which this node group belongs.\nThis field represents a link to a NodeTemplate resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_node_template task and then set this node_template field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "size": {
          "aliases": [],
          "description": "The total number of nodes in the node group.",
          "type": "int",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "Zone where this node group is located .",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP NodeGroup"
    },
    "examples": "\n- name: create a node template\n  google.cloud.gcp_compute_node_template:\n    name: \"{{ resource_name }}\"\n    region: us-central1\n    node_type: n1-node-96-624\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: node_template\n\n- name: create a node group\n  google.cloud.gcp_compute_node_group:\n    name: test_object\n    zone: us-central1-a\n    description: example group for ansible\n    size: 1\n    node_template: \"{{ node_template }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_node_group_info": {
    "doc": {
      "description": "Gather info for GCP NodeGroup",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "Zone where this node group is located .",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP NodeGroup"
    },
    "examples": "\n- name: get info on a node group\n  gcp_compute_node_group_info:\n    zone: us-central1-a\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_node_template": {
    "doc": {
      "description": "Represents a NodeTemplate resource. Node templates specify properties for creating sole-tenant nodes, such as node type, vCPU and memory requirements, node affinity labels, and region.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/nodeTemplates)\nSole-Tenant Nodes: U(https://cloud.google.com/compute/docs/nodes/)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional textual description of the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "node_affinity_labels": {
          "aliases": [],
          "description": "Labels to use for node affinity, which will be used in instance scheduling.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "node_type": {
          "aliases": [],
          "description": "Node type to use for nodes group that are created from this template.\nOnly one of nodeTypeFlexibility and nodeType can be specified.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "node_type_flexibility": {
          "aliases": [],
          "description": "Flexible properties for the desired node type. Node groups that use this node template will create nodes of a type that matches these properties. Only one of nodeTypeFlexibility and nodeType can be specified.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "cpus": {
              "aliases": [],
              "description": "Number of virtual CPUs to use.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "memory": {
              "aliases": [],
              "description": "Physical memory available to the node, defined in MB.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "Region where nodes using the node template will be created .",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP NodeTemplate"
    },
    "examples": "\n- name: create a node template\n  google.cloud.gcp_compute_node_template:\n    name: test_object\n    region: us-central1\n    node_type: n1-node-96-624\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_node_template_info": {
    "doc": {
      "description": "Gather info for GCP NodeTemplate",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "Region where nodes using the node template will be created .",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP NodeTemplate"
    },
    "examples": "\n- name: get info on a node template\n  gcp_compute_node_template_info:\n    region: us-central1\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_region_autoscaler": {
    "doc": {
      "description": "Represents an Autoscaler resource.\nAutoscalers allow you to automatically scale virtual machine instances in managed instance groups according to an autoscaling policy that you define.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/regionAutoscalers)\nAutoscaling Groups of Instances: U(https://cloud.google.com/compute/docs/autoscaler/)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "autoscaling_policy": {
          "aliases": [],
          "description": "The configuration parameters for the autoscaling algorithm. You can define one or more of the policies for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization.\nIf none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.",
          "type": "dict",
          "required": true,
          "suboptions": {
            "cool_down_period_sec": {
              "aliases": [],
              "description": "The number of seconds that the autoscaler should wait before it starts collecting information from a new instance. This prevents the autoscaler from collecting information when the instance is initializing, during which the collected usage would not be reliable. The default time autoscaler waits is 60 seconds.\nVirtual machine initialization times might vary because of numerous factors. We recommend that you test how long an instance may take to initialize. To do this, create an instance and time the startup process.",
              "default": "60",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "cpu_utilization": {
              "aliases": [],
              "description": "Defines the CPU utilization policy that allows the autoscaler to scale based on the average CPU utilization of a managed instance group.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "utilization_target": {
                  "aliases": [],
                  "description": "The target CPU utilization that the autoscaler should maintain.\nMust be a float value in the range (0, 1]. If not specified, the default is 0.6.\nIf the CPU level is below the target utilization, the autoscaler scales down the number of instances until it reaches the minimum number of instances you specified or until the average CPU of your instances reaches the target utilization.\nIf the average CPU is above the target utilization, the autoscaler scales up until it reaches the maximum number of instances you specified or until the average utilization reaches the target utilization.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "custom_metric_utilizations": {
              "aliases": [],
              "description": "Configuration parameters of autoscaling based on a custom metric.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "metric": {
                  "aliases": [],
                  "description": "The identifier (type) of the Stackdriver Monitoring metric.\nThe metric cannot have negative values.\nThe metric must have a value type of INT64 or DOUBLE.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "utilization_target": {
                  "aliases": [],
                  "description": "The target value of the metric that autoscaler should maintain. This must be a positive value. A utilization metric scales number of virtual machines handling requests to increase or decrease proportionally to the metric.\nFor example, a good metric to use as a utilizationTarget is U(www.googleapis.com/compute/instance/network/received_bytes_count).\nThe autoscaler will work to keep this value constant for each of the instances.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "utilization_target_type": {
                  "aliases": [],
                  "description": "Defines how target utilization value is expressed for a Stackdriver Monitoring metric.\nSome valid choices include: \"GAUGE\", \"DELTA_PER_SECOND\", \"DELTA_PER_MINUTE\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "load_balancing_utilization": {
              "aliases": [],
              "description": "Configuration parameters of autoscaling based on a load balancer.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "utilization_target": {
                  "aliases": [],
                  "description": "Fraction of backend capacity utilization (set in HTTP(s) load balancing configuration) that autoscaler should maintain. Must be a positive float value. If not defined, the default is 0.8.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "max_num_replicas": {
              "aliases": [],
              "description": "The maximum number of instances that the autoscaler can scale up to. This is required when creating or updating an autoscaler. The maximum number of replicas should not be lower than minimal number of replicas.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "min_num_replicas": {
              "aliases": [],
              "description": "The minimum number of replicas that the autoscaler can scale down to. This cannot be less than 0. If not provided, autoscaler will choose a default value depending on maximum number of instances allowed.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "mode": {
              "aliases": [],
              "description": "Defines operating mode for this policy.\nSome valid choices include: \"OFF\", \"ONLY_UP\", \"ON\"",
              "default": "ON",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "scale_in_control": {
              "aliases": [],
              "description": "Defines scale in controls to reduce the risk of response latency and outages due to abrupt scale-in events .",
              "type": "dict",
              "required": false,
              "suboptions": {
                "max_scaled_in_replicas": {
                  "aliases": [],
                  "description": "A nested object resource.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "fixed": {
                      "aliases": [],
                      "description": "Specifies a fixed number of VM instances. This must be a positive integer.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "percent": {
                      "aliases": [],
                      "description": "Specifies a percentage of instances between 0 to 100%, inclusive.\nFor example, specify 80 for 80%.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "time_window_sec": {
                  "aliases": [],
                  "description": "How long back autoscaling should look when computing recommendations to include directives regarding slower scale down, as described above.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. The name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "URL of the region where the instance group resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target": {
          "aliases": [],
          "description": "URL of the managed instance group that this autoscaler will scale.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP RegionAutoscaler"
    },
    "examples": "\n- name: create a network\n  google.cloud.gcp_compute_network:\n    name: network-instancetemplate\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: network\n\n- name: create a address\n  google.cloud.gcp_compute_address:\n    name: address-instancetemplate\n    region: us-central1\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: address\n\n- name: create a instance template\n  google.cloud.gcp_compute_instance_template:\n    name: \"{{ resource_name }}\"\n    properties:\n      disks:\n      - auto_delete: 'true'\n        boot: 'true'\n        initialize_params:\n          source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts\n      machine_type: n1-standard-1\n      network_interfaces:\n      - network: \"{{ network }}\"\n        access_configs:\n        - name: test-config\n          type: ONE_TO_ONE_NAT\n          nat_ip: \"{{ address }}\"\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instancetemplate\n\n- name: create a region instance group manager\n  google.cloud.gcp_compute_region_instance_group_manager:\n    name: \"{{ resource_name }}\"\n    base_instance_name: test1-child\n    region: us-central1\n    instance_template: \"{{ instancetemplate }}\"\n    target_size: 3\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: igrm\n\n- name: create a region autoscaler\n  google.cloud.gcp_compute_region_autoscaler:\n    name: my-region-autoscaler\n    region: us-central1\n    autoscaling_policy:\n      min_num_replicas: 1\n      max_num_replicas: 5\n      cool_down_period_sec: 60\n      cpu_utilization:\n        utilization_target: 0.5\n    target: \"{{igrm.selfLink}}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_region_autoscaler_info": {
    "doc": {
      "description": "Gather info for GCP RegionAutoscaler",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "URL of the region where the instance group resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP RegionAutoscaler"
    },
    "examples": "\n- name: get info on a region autoscaler\n  gcp_compute_region_autoscaler_info:\n    region: us-central1\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_region_backend_service": {
    "doc": {
      "description": "A Region Backend Service defines a regionally-scoped group of virtual machines that will serve traffic for load balancing.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/latest/regionBackendServices)\nInternal TCP/UDP Load Balancing: U(https://cloud.google.com/compute/docs/load-balancing/internal/)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "affinity_cookie_ttl_sec": {
          "aliases": [],
          "description": "Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day.\nWhen the load balancing scheme is INTERNAL, this field is not used.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "backends": {
          "aliases": [],
          "description": "The set of backends that serve this RegionBackendService.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "balancing_mode": {
              "aliases": [],
              "description": "Specifies the balancing mode for this backend.\nSome valid choices include: \"UTILIZATION\", \"RATE\", \"CONNECTION\"",
              "default": "CONNECTION",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "capacity_scaler": {
              "aliases": [],
              "description": "A multiplier applied to the group's maximum servicing capacity (based on UTILIZATION, RATE or CONNECTION).\n~>**NOTE**: This field cannot be set for INTERNAL region backend services (default loadBalancingScheme), but is required for non-INTERNAL backend service. The total capacity_scaler for all backends must be non-zero.\nA setting of 0 means the group is completely drained, offering 0% of its available Capacity. Valid range is [0.0,1.0].",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "An optional description of this resource.\nProvide this property when you create the resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "failover": {
              "aliases": [],
              "description": "This field designates whether this is a failover backend. More than one failover backend can be configured for a given RegionBackendService.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "group": {
              "aliases": [],
              "description": "The fully-qualified URL of an Instance Group or Network Endpoint Group resource. In case of instance group this defines the list of instances that serve traffic. Member virtual machine instances from each instance group must live in the same zone as the instance group itself. No two backends in a backend service are allowed to use same Instance Group resource.\nFor Network Endpoint Groups this defines list of endpoints. All endpoints of Network Endpoint Group must be hosted on instances located in the same zone as the Network Endpoint Group.\nBackend services cannot mix Instance Group and Network Endpoint Group backends.\nWhen the `load_balancing_scheme` is INTERNAL, only instance groups are supported.\nNote that you must specify an Instance Group or Network Endpoint Group resource using the fully-qualified URL, rather than a partial URL.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "max_connections": {
              "aliases": [],
              "description": "The max number of simultaneous connections for the group. Can be used with either CONNECTION or UTILIZATION balancing modes.\nCannot be set for INTERNAL backend services.\nFor CONNECTION mode, either maxConnections or one of maxConnectionsPerInstance or maxConnectionsPerEndpoint, as appropriate for group type, must be set.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_connections_per_endpoint": {
              "aliases": [],
              "description": "The max number of simultaneous connections that a single backend network endpoint can handle. Cannot be set for INTERNAL backend services.\nThis is used to calculate the capacity of the group. Can be used in either CONNECTION or UTILIZATION balancing modes. For CONNECTION mode, either maxConnections or maxConnectionsPerEndpoint must be set.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_connections_per_instance": {
              "aliases": [],
              "description": "The max number of simultaneous connections that a single backend instance can handle. Cannot be set for INTERNAL backend services.\nThis is used to calculate the capacity of the group.\nCan be used in either CONNECTION or UTILIZATION balancing modes.\nFor CONNECTION mode, either maxConnections or maxConnectionsPerInstance must be set.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_rate": {
              "aliases": [],
              "description": "The max requests per second (RPS) of the group. Cannot be set for INTERNAL backend services.\nCan be used with either RATE or UTILIZATION balancing modes, but required if RATE mode. Either maxRate or one of maxRatePerInstance or maxRatePerEndpoint, as appropriate for group type, must be set.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_rate_per_endpoint": {
              "aliases": [],
              "description": "The max requests per second (RPS) that a single backend network endpoint can handle. This is used to calculate the capacity of the group. Can be used in either balancing mode. For RATE mode, either maxRate or maxRatePerEndpoint must be set. Cannot be set for INTERNAL backend services.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "max_rate_per_instance": {
              "aliases": [],
              "description": "The max requests per second (RPS) that a single backend instance can handle. This is used to calculate the capacity of the group. Can be used in either balancing mode. For RATE mode, either maxRate or maxRatePerInstance must be set. Cannot be set for INTERNAL backend services.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "max_utilization": {
              "aliases": [],
              "description": "Used when balancingMode is UTILIZATION. This ratio defines the CPU utilization target for the group. Valid range is [0.0, 1.0].\nCannot be set for INTERNAL backend services.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "cdn_policy": {
          "aliases": [],
          "description": "Cloud CDN configuration for this BackendService.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "cache_key_policy": {
              "aliases": [],
              "description": "The CacheKeyPolicy for this CdnPolicy.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "include_host": {
                  "aliases": [],
                  "description": "If true requests to different hosts will be cached separately.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "include_protocol": {
                  "aliases": [],
                  "description": "If true, http and https requests will be cached separately.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "include_query_string": {
                  "aliases": [],
                  "description": "If true, include query string parameters in the cache key according to query_string_whitelist and query_string_blacklist. If neither is set, the entire query string will be included.\nIf false, the query string will be excluded from the cache key entirely.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "query_string_blacklist": {
                  "aliases": [],
                  "description": "Names of query string parameters to exclude in cache keys.\nAll other parameters will be included. Either specify query_string_whitelist or query_string_blacklist, not both.\n'&' and '=' will be percent encoded and not treated as delimiters.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "query_string_whitelist": {
                  "aliases": [],
                  "description": "Names of query string parameters to include in cache keys.\nAll other parameters will be excluded. Either specify query_string_whitelist or query_string_blacklist, not both.\n'&' and '=' will be percent encoded and not treated as delimiters.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                }
              }
            },
            "signed_url_cache_max_age_sec": {
              "aliases": [],
              "description": "Maximum number of seconds the response to a signed URL request will be considered fresh, defaults to 1hr (3600s). After this time period, the response will be revalidated before being served.\nWhen serving responses to signed URL requests, Cloud CDN will internally behave as though all responses from this backend had a \"Cache-Control: public, max-age=[TTL]\" header, regardless of any existing Cache-Control header. The actual headers served in responses will not be altered.",
              "default": "3600",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "circuit_breakers": {
          "aliases": [],
          "description": "Settings controlling the volume of connections to a backend service. This field is applicable only when the `load_balancing_scheme` is set to INTERNAL_MANAGED and the `protocol` is set to HTTP, HTTPS, or HTTP2.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "max_connections": {
              "aliases": [],
              "description": "The maximum number of connections to the backend cluster.\nDefaults to 1024.",
              "default": "1024",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_pending_requests": {
              "aliases": [],
              "description": "The maximum number of pending requests to the backend cluster.\nDefaults to 1024.",
              "default": "1024",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_requests": {
              "aliases": [],
              "description": "The maximum number of parallel requests to the backend cluster.\nDefaults to 1024.",
              "default": "1024",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_requests_per_connection": {
              "aliases": [],
              "description": "Maximum requests for a single backend connection. This parameter is respected by both the HTTP/1.1 and HTTP/2 implementations. If not specified, there is no limit. Setting this parameter to 1 will effectively disable keep alive.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "max_retries": {
              "aliases": [],
              "description": "The maximum number of parallel retries to the backend cluster.\nDefaults to 3.",
              "default": "3",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "connection_draining": {
          "aliases": [],
          "description": "Settings for connection draining .",
          "type": "dict",
          "required": false,
          "suboptions": {
            "draining_timeout_sec": {
              "aliases": [],
              "description": "Time for which instance will be drained (not accept new connections, but still work to finish started).",
              "default": "300",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "consistent_hash": {
          "aliases": [],
          "description": "Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or other properties. This load balancing policy is applicable only for HTTP connections. The affinity to a particular destination host will be lost when one or more hosts are added/removed from the destination service. This field specifies parameters that control consistent hashing.\nThis field only applies when all of the following are true - * `load_balancing_scheme` is set to INTERNAL_MANAGED * `protocol` is set to HTTP, HTTPS, or HTTP2 * `locality_lb_policy` is set to MAGLEV or RING_HASH .",
          "type": "dict",
          "required": false,
          "suboptions": {
            "http_cookie": {
              "aliases": [],
              "description": "Hash is based on HTTP Cookie. This field describes a HTTP cookie that will be used as the hash key for the consistent hash load balancer. If the cookie is not present, it will be generated.\nThis field is applicable if the sessionAffinity is set to HTTP_COOKIE.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "name": {
                  "aliases": [],
                  "description": "Name of the cookie.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "path": {
                  "aliases": [],
                  "description": "Path to set for the cookie.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "ttl": {
                  "aliases": [],
                  "description": "Lifetime of the cookie.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "nanos": {
                      "aliases": [],
                      "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 seconds field and a positive nanos field. Must be from 0 to 999,999,999 inclusive.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "seconds": {
                      "aliases": [],
                      "description": "Span of time at a resolution of a second.\nMust be from 0 to 315,576,000,000 inclusive.",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "http_header_name": {
              "aliases": [],
              "description": "The hash based on the value of the specified header field.\nThis field is applicable if the sessionAffinity is set to HEADER_FIELD.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "minimum_ring_size": {
              "aliases": [],
              "description": "The minimum number of virtual nodes to use for the hash ring.\nLarger ring sizes result in more granular load distributions. If the number of hosts in the load balancing pool is larger than the ring size, each host will be assigned a single virtual node.\nDefaults to 1024.",
              "default": "1024",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enable_cdn": {
          "aliases": [],
          "description": "If true, enable Cloud CDN for this RegionBackendService.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "failover_policy": {
          "aliases": [],
          "description": "Policy for failovers.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "disable_connection_drain_on_failover": {
              "aliases": [],
              "description": "On failover or failback, this field indicates whether connection drain will be honored. Setting this to true has the following effect: connections to the old active pool are not drained. Connections to the new active pool use the timeout of 10 min (currently fixed). Setting to false has the following effect: both old and new connections will have a drain timeout of 10 min.\nThis can be set to true only if the protocol is TCP.\nThe default is false.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "drop_traffic_if_unhealthy": {
              "aliases": [],
              "description": "This option is used only when no healthy VMs are detected in the primary and backup instance groups. When set to true, traffic is dropped. When set to false, new connections are sent across all VMs in the primary group.\nThe default is false.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "failover_ratio": {
              "aliases": [],
              "description": "The value of the field must be in [0, 1]. If the ratio of the healthy VMs in the primary backend is at or below this number, traffic arriving at the load-balanced IP will be directed to the failover backend.\nIn case where 'failoverRatio' is not set or all the VMs in the backup backend are unhealthy, the traffic will be directed back to the primary backend in the \"force\" mode, where traffic will be spread to the healthy VMs with the best effort, or to all VMs when no VM is healthy.\nThis field is only used with l4 load balancing.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "health_checks": {
          "aliases": [],
          "description": "The set of URLs to HealthCheck resources for health checking this RegionBackendService. Currently at most one health check can be specified. A health check must be specified unless the backend service uses an internet or serverless NEG as a backend.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "load_balancing_scheme": {
          "aliases": [],
          "description": "Indicates what kind of load balancing this regional backend service will be used for. A backend service created for one type of load balancing cannot be used with the other(s).\nSome valid choices include: \"EXTERNAL\", \"INTERNAL\", \"INTERNAL_MANAGED\"",
          "default": "INTERNAL",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "locality_lb_policy": {
          "aliases": [],
          "description": "The load balancing algorithm used within the scope of the locality.\nThe possible values are - * ROUND_ROBIN - This is a simple policy in which each healthy backend is selected in round robin order.\n* LEAST_REQUEST - An O(1) algorithm which selects two random healthy hosts and picks the host which has fewer active requests.\n* RING_HASH - The ring/modulo hash load balancer implements consistent hashing to backends. The algorithm has the property that the addition/removal of a host from a set of N hosts only affects 1/N of the requests.\n* RANDOM - The load balancer selects a random healthy host.\n* ORIGINAL_DESTINATION - Backend host is selected based on the client connection metadata, i.e., connections are opened to the same address as the destination address of the incoming connection before the connection was redirected to the load balancer.\n* MAGLEV - used as a drop in replacement for the ring hash load balancer.\nMaglev is not as stable as ring hash but has faster table lookup build times and host selection times. For more information about Maglev, refer to https://ai.google/research/pubs/pub44824 This field is applicable only when the `load_balancing_scheme` is set to INTERNAL_MANAGED and the `protocol` is set to HTTP, HTTPS, or HTTP2.\nSome valid choices include: \"ROUND_ROBIN\", \"LEAST_REQUEST\", \"RING_HASH\", \"RANDOM\", \"ORIGINAL_DESTINATION\", \"MAGLEV\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "log_config": {
          "aliases": [],
          "description": "This field denotes the logging options for the load balancer traffic served by this backend service.\nIf logging is enabled, logs will be exported to Stackdriver.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enable": {
              "aliases": [],
              "description": "Whether to enable logging for the load balancer traffic served by this backend service.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "sample_rate": {
              "aliases": [],
              "description": "This field can only be specified if logging is enabled for this backend service. The value of the field must be in [0, 1]. This configures the sampling rate of requests to the load balancer where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported.\nThe default value is 1.0.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network": {
          "aliases": [],
          "description": "The URL of the network to which this backend service belongs.\nThis field can only be specified when the load balancing scheme is set to INTERNAL.\nThis field represents a link to a Network resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_network task and then set this network field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "outlier_detection": {
          "aliases": [],
          "description": "Settings controlling eviction of unhealthy hosts from the load balancing pool.\nThis field is applicable only when the `load_balancing_scheme` is set to INTERNAL_MANAGED and the `protocol` is set to HTTP, HTTPS, or HTTP2.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "base_ejection_time": {
              "aliases": [],
              "description": "The base time that a host is ejected for. The real time is equal to the base time multiplied by the number of times the host has been ejected. Defaults to 30000ms or 30s.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "nanos": {
                  "aliases": [],
                  "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "seconds": {
                  "aliases": [],
                  "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.",
                  "type": "int",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "consecutive_errors": {
              "aliases": [],
              "description": "Number of errors before a host is ejected from the connection pool. When the backend host is accessed over HTTP, a 5xx return code qualifies as an error.\nDefaults to 5.",
              "default": "5",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "consecutive_gateway_failure": {
              "aliases": [],
              "description": "The number of consecutive gateway failures (502, 503, 504 status or connection errors that are mapped to one of those status codes) before a consecutive gateway failure ejection occurs. Defaults to 5.",
              "default": "5",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "enforcing_consecutive_errors": {
              "aliases": [],
              "description": "The percentage chance that a host will be actually ejected when an outlier status is detected through consecutive 5xx. This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.",
              "default": "100",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "enforcing_consecutive_gateway_failure": {
              "aliases": [],
              "description": "The percentage chance that a host will be actually ejected when an outlier status is detected through consecutive gateway failures. This setting can be used to disable ejection or to ramp it up slowly. Defaults to 0.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "enforcing_success_rate": {
              "aliases": [],
              "description": "The percentage chance that a host will be actually ejected when an outlier status is detected through success rate statistics. This setting can be used to disable ejection or to ramp it up slowly. Defaults to 100.",
              "default": "100",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "interval": {
              "aliases": [],
              "description": "Time interval between ejection sweep analysis. This can result in both new ejections as well as hosts being returned to service. Defaults to 10 seconds.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "nanos": {
                  "aliases": [],
                  "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "seconds": {
                  "aliases": [],
                  "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.",
                  "type": "int",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "max_ejection_percent": {
              "aliases": [],
              "description": "Maximum percentage of hosts in the load balancing pool for the backend service that can be ejected. Defaults to 10%.",
              "default": "10",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "success_rate_minimum_hosts": {
              "aliases": [],
              "description": "The number of hosts in a cluster that must have enough request volume to detect success rate outliers. If the number of hosts is less than this setting, outlier detection via success rate statistics is not performed for any host in the cluster. Defaults to 5.",
              "default": "5",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "success_rate_request_volume": {
              "aliases": [],
              "description": "The minimum number of total requests that must be collected in one interval (as defined by the interval duration above) to include this host in success rate based outlier detection. If the volume is lower than this setting, outlier detection via success rate statistics is not performed for that host. Defaults to 100.",
              "default": "100",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "success_rate_stdev_factor": {
              "aliases": [],
              "description": "This factor is used to determine the ejection threshold for success rate outlier ejection. The ejection threshold is the difference between the mean success rate, and the product of this factor and the standard deviation of the mean success rate: mean - (stdev * success_rate_stdev_factor). This factor is divided by a thousand to get a double. That is, if the desired factor is 1.9, the runtime value should be 1900. Defaults to 1900.",
              "default": "1900",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "port_name": {
          "aliases": [],
          "description": "A named port on a backend instance group representing the port for communication to the backend VMs in that group. Required when the loadBalancingScheme is EXTERNAL, INTERNAL_MANAGED, or INTERNAL_SELF_MANAGED and the backends are instance groups. The named port must be defined on each backend instance group. This parameter has no meaning if the backends are NEGs. API sets a default of \"http\" if not given.\nMust be omitted when the loadBalancingScheme is INTERNAL (Internal TCP/UDP Load Balancing).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "protocol": {
          "aliases": [],
          "description": "The protocol this RegionBackendService uses to communicate with backends.\nThe default is HTTP. **NOTE**: HTTP2 is only valid for beta HTTP/2 load balancer types and may result in errors if used with the GA API.\nSome valid choices include: \"HTTP\", \"HTTPS\", \"HTTP2\", \"SSL\", \"TCP\", \"UDP\", \"GRPC\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "A reference to the region where the regional backend service resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "session_affinity": {
          "aliases": [],
          "description": "Type of session affinity to use. The default is NONE. Session affinity is not applicable if the protocol is UDP.\nSome valid choices include: \"NONE\", \"CLIENT_IP\", \"CLIENT_IP_PORT_PROTO\", \"CLIENT_IP_PROTO\", \"GENERATED_COOKIE\", \"HEADER_FIELD\", \"HTTP_COOKIE\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "timeout_sec": {
          "aliases": [],
          "description": "How many seconds to wait for the backend before considering it a failed request. Default is 30 seconds. Valid range is [1, 86400].",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP RegionBackendService"
    },
    "examples": "\n- name: create a health check\n  google.cloud.gcp_compute_health_check:\n    name: \"{{ resource_name }}\"\n    type: TCP\n    tcp_health_check:\n      port: 80\n    check_interval_sec: 1\n    timeout_sec: 1\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: healthcheck\n\n- name: create a region backend service\n  google.cloud.gcp_compute_region_backend_service:\n    name: test_object\n    region: us-central1\n    health_checks:\n    - \"{{ healthcheck.selfLink }}\"\n    connection_draining:\n      draining_timeout_sec: 10\n    session_affinity: CLIENT_IP\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_region_backend_service_info": {
    "doc": {
      "description": "Gather info for GCP RegionBackendService",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "A reference to the region where the regional backend service resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP RegionBackendService"
    },
    "examples": "\n- name: get info on a region backend service\n  gcp_compute_region_backend_service_info:\n    region: us-central1\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_region_disk": {
    "doc": {
      "description": "Persistent disks are durable storage devices that function similarly to the physical disks in a desktop or a server. Compute Engine manages the hardware behind these devices to ensure data redundancy and optimize performance for you. Persistent disks are available as either standard hard disk drives (HDD) or solid-state drives (SSD).\nPersistent disks are located independently from your virtual machine instances, so you can detach or move persistent disks to keep your data even after you delete your instances. Persistent disk performance scales automatically with size, so you can resize your existing persistent disks or add more persistent disks to an instance to meet your performance and storage space requirements.\nAdd a persistent disk to your instance when you need reliable and affordable storage with consistent performance characteristics.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/regionDisks)\nAdding or Resizing Regional Persistent Disks: U(https://cloud.google.com/compute/docs/disks/regional-persistent-disk)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. Provide this property when you create the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "disk_encryption_key": {
          "aliases": [],
          "description": "Encrypts the disk using a customer-supplied encryption key.\nAfter you encrypt a disk with a customer-supplied key, you must provide the same key if you use the disk later (e.g. to create a disk snapshot or an image, or to attach the disk to a virtual machine).\nCustomer-supplied encryption keys do not protect access to metadata of the disk.\nIf you do not provide an encryption key when creating the disk, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the disk later.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "raw_key": {
              "aliases": [],
              "description": "Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "labels": {
          "aliases": [],
          "description": "Labels to apply to this disk. A list of key->value pairs.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "licenses": {
          "aliases": [],
          "description": "Any applicable publicly visible licenses.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "physical_block_size_bytes": {
          "aliases": [],
          "description": "Physical block size of the persistent disk, in bytes. If not present in a request, a default value is used. Currently supported sizes are 4096 and 16384, other sizes may be added in the future.\nIf an unsupported value is requested, the error message will list the supported values for the caller's project.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "A reference to the region where the disk resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "replica_zones": {
          "aliases": [],
          "description": "URLs of the zones where the disk should be replicated to.",
          "type": "list",
          "required": true,
          "elements": "str",
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "size_gb": {
          "aliases": [],
          "description": "Size of the persistent disk, specified in GB. You can specify this field when creating a persistent disk using the sourceImage or sourceSnapshot parameter, or specify it alone to create an empty persistent disk.\nIf you specify this field along with sourceImage or sourceSnapshot, the value of sizeGb must not be less than the size of the sourceImage or the size of the snapshot.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "source_snapshot": {
          "aliases": [],
          "description": "The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource.\nThis field represents a link to a Snapshot resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_snapshot task and then set this source_snapshot field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "source_snapshot_encryption_key": {
          "aliases": [],
          "description": "The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "raw_key": {
              "aliases": [],
              "description": "Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "URL of the disk type resource describing which disk type to use to create the disk. Provide this when creating the disk.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP RegionDisk"
    },
    "examples": "\n- name: create a region disk\n  google.cloud.gcp_compute_region_disk:\n    name: test_object\n    size_gb: 500\n    disk_encryption_key:\n      raw_key: SGVsbG8gZnJvbSBHb29nbGUgQ2xvdWQgUGxhdGZvcm0=\n    region: us-central1\n    replica_zones:\n    - https://www.googleapis.com/compute/v1/projects/google.com:graphite-playground/zones/us-central1-a\n    - https://www.googleapis.com/compute/v1/projects/google.com:graphite-playground/zones/us-central1-b\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_region_disk_info": {
    "doc": {
      "description": "Gather info for GCP RegionDisk",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "A reference to the region where the disk resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP RegionDisk"
    },
    "examples": "\n- name: get info on a region disk\n  gcp_compute_region_disk_info:\n    region: us-central1\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_region_health_check": {
    "doc": {
      "description": "Health Checks determine whether instances are responsive and able to do work.\nThey are an important part of a comprehensive load balancing configuration, as they enable monitoring instances behind load balancers.\nHealth Checks poll instances at a specified interval. Instances that do not respond successfully to some number of probes in a row are marked as unhealthy. No new connections are sent to unhealthy instances, though existing connections will continue. The health check will continue to poll unhealthy instances. If an instance later responds successfully to some number of consecutive probes, it is marked healthy again and can receive new connections.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/regionHealthChecks)\nOfficial Documentation: U(https://cloud.google.com/load-balancing/docs/health-checks)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "check_interval_sec": {
          "aliases": [],
          "description": "How often (in seconds) to send a health check. The default value is 5 seconds.",
          "default": "5",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. Provide this property when you create the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "grpc_health_check": {
          "aliases": [],
          "description": "A nested object resource.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "grpc_service_name": {
              "aliases": [],
              "description": "The gRPC service name for the health check. The value of grpcServiceName has the following meanings by convention: * Empty serviceName means the overall status of all services at the backend.\n* Non-empty serviceName means the health of that gRPC service, as defined by the owner of the service.\nThe grpcServiceName can only be ASCII.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port number for the health check request. Must be specified if portName and portSpecification are not set or if port_specification is USE_FIXED_PORT. Valid values are 1 through 65535.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "port_name": {
              "aliases": [],
              "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port_specification": {
              "aliases": [],
              "description": "Specifies how port is selected for health checking, can be one of the following values: * `USE_FIXED_PORT`: The port number in `port` is used for health checking.\n* `USE_NAMED_PORT`: The `portName` is used for health checking.\n* `USE_SERVING_PORT`: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.\nIf not specified, gRPC health check follows behavior specified in `port` and `portName` fields.\nSome valid choices include: \"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "healthy_threshold": {
          "aliases": [],
          "description": "A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.",
          "default": "2",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "http2_health_check": {
          "aliases": [],
          "description": "A nested object resource.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "The value of the host header in the HTTP2 health check request.\nIf left empty (default value), the public IP on behalf of which this health check is performed will be used.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The TCP port number for the HTTP2 health check request.\nThe default value is 443.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "port_name": {
              "aliases": [],
              "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port_specification": {
              "aliases": [],
              "description": "Specifies how port is selected for health checking, can be one of the following values: * `USE_FIXED_PORT`: The port number in `port` is used for health checking.\n* `USE_NAMED_PORT`: The `portName` is used for health checking.\n* `USE_SERVING_PORT`: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.\nIf not specified, HTTP2 health check follows behavior specified in `port` and `portName` fields.\nSome valid choices include: \"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "proxy_header": {
              "aliases": [],
              "description": "Specifies the type of proxy header to append before sending data to the backend.\nSome valid choices include: \"NONE\", \"PROXY_V1\"",
              "default": "NONE",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "request_path": {
              "aliases": [],
              "description": "The request path of the HTTP2 health check request.\nThe default value is /.",
              "default": "/",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "response": {
              "aliases": [],
              "description": "The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "http_health_check": {
          "aliases": [],
          "description": "A nested object resource.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "The value of the host header in the HTTP health check request.\nIf left empty (default value), the public IP on behalf of which this health check is performed will be used.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The TCP port number for the HTTP health check request.\nThe default value is 80.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "port_name": {
              "aliases": [],
              "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port_specification": {
              "aliases": [],
              "description": "Specifies how port is selected for health checking, can be one of the following values: * `USE_FIXED_PORT`: The port number in `port` is used for health checking.\n* `USE_NAMED_PORT`: The `portName` is used for health checking.\n* `USE_SERVING_PORT`: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.\nIf not specified, HTTP health check follows behavior specified in `port` and `portName` fields.\nSome valid choices include: \"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "proxy_header": {
              "aliases": [],
              "description": "Specifies the type of proxy header to append before sending data to the backend.\nSome valid choices include: \"NONE\", \"PROXY_V1\"",
              "default": "NONE",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "request_path": {
              "aliases": [],
              "description": "The request path of the HTTP health check request.\nThe default value is /.",
              "default": "/",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "response": {
              "aliases": [],
              "description": "The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "https_health_check": {
          "aliases": [],
          "description": "A nested object resource.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host": {
              "aliases": [],
              "description": "The value of the host header in the HTTPS health check request.\nIf left empty (default value), the public IP on behalf of which this health check is performed will be used.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The TCP port number for the HTTPS health check request.\nThe default value is 443.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "port_name": {
              "aliases": [],
              "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port_specification": {
              "aliases": [],
              "description": "Specifies how port is selected for health checking, can be one of the following values: * `USE_FIXED_PORT`: The port number in `port` is used for health checking.\n* `USE_NAMED_PORT`: The `portName` is used for health checking.\n* `USE_SERVING_PORT`: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.\nIf not specified, HTTPS health check follows behavior specified in `port` and `portName` fields.\nSome valid choices include: \"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "proxy_header": {
              "aliases": [],
              "description": "Specifies the type of proxy header to append before sending data to the backend.\nSome valid choices include: \"NONE\", \"PROXY_V1\"",
              "default": "NONE",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "request_path": {
              "aliases": [],
              "description": "The request path of the HTTPS health check request.\nThe default value is /.",
              "default": "/",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "response": {
              "aliases": [],
              "description": "The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The region where the regional health check resides.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "ssl_health_check": {
          "aliases": [],
          "description": "A nested object resource.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "port": {
              "aliases": [],
              "description": "The TCP port number for the SSL health check request.\nThe default value is 443.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "port_name": {
              "aliases": [],
              "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port_specification": {
              "aliases": [],
              "description": "Specifies how port is selected for health checking, can be one of the following values: * `USE_FIXED_PORT`: The port number in `port` is used for health checking.\n* `USE_NAMED_PORT`: The `portName` is used for health checking.\n* `USE_SERVING_PORT`: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.\nIf not specified, SSL health check follows behavior specified in `port` and `portName` fields.\nSome valid choices include: \"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "proxy_header": {
              "aliases": [],
              "description": "Specifies the type of proxy header to append before sending data to the backend.\nSome valid choices include: \"NONE\", \"PROXY_V1\"",
              "default": "NONE",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "request": {
              "aliases": [],
              "description": "The application data to send once the SSL connection has been established (default value is empty). If both request and response are empty, the connection establishment alone will indicate health. The request data can only be ASCII.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "response": {
              "aliases": [],
              "description": "The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tcp_health_check": {
          "aliases": [],
          "description": "A nested object resource.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "port": {
              "aliases": [],
              "description": "The TCP port number for the TCP health check request.\nThe default value is 80.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "port_name": {
              "aliases": [],
              "description": "Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port_specification": {
              "aliases": [],
              "description": "Specifies how port is selected for health checking, can be one of the following values: * `USE_FIXED_PORT`: The port number in `port` is used for health checking.\n* `USE_NAMED_PORT`: The `portName` is used for health checking.\n* `USE_SERVING_PORT`: For NetworkEndpointGroup, the port specified for each network endpoint is used for health checking. For other backends, the port or named port specified in the Backend Service is used for health checking.\nIf not specified, TCP health check follows behavior specified in `port` and `portName` fields.\nSome valid choices include: \"USE_FIXED_PORT\", \"USE_NAMED_PORT\", \"USE_SERVING_PORT\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "proxy_header": {
              "aliases": [],
              "description": "Specifies the type of proxy header to append before sending data to the backend.\nSome valid choices include: \"NONE\", \"PROXY_V1\"",
              "default": "NONE",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "request": {
              "aliases": [],
              "description": "The application data to send once the TCP connection has been established (default value is empty). If both request and response are empty, the connection establishment alone will indicate health. The request data can only be ASCII.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "response": {
              "aliases": [],
              "description": "The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "timeout_sec": {
          "aliases": [],
          "description": "How long (in seconds) to wait before claiming failure.\nThe default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.",
          "default": "5",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "Specifies the type of the healthCheck, either TCP, SSL, HTTP or HTTPS. If not specified, the default is TCP. Exactly one of the protocol-specific health check field must be specified, which must match type field.\nSome valid choices include: \"TCP\", \"SSL\", \"HTTP\", \"HTTPS\", \"HTTP2\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "unhealthy_threshold": {
          "aliases": [],
          "description": "A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.",
          "default": "2",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP RegionHealthCheck"
    },
    "examples": "\n- name: create a region health check\n  google.cloud.gcp_compute_region_health_check:\n    name: test_object\n    type: TCP\n    tcp_health_check:\n      port_name: service-health\n      request: ping\n      response: pong\n    healthy_threshold: 10\n    timeout_sec: 2\n    unhealthy_threshold: 5\n    region: us-central1\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_region_health_check_info": {
    "doc": {
      "description": "Gather info for GCP RegionHealthCheck",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The region where the regional health check resides.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP RegionHealthCheck"
    },
    "examples": "\n- name: get info on a region health check\n  gcp_compute_region_health_check_info:\n    region: us-central1\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_region_instance_group_manager": {
    "doc": {
      "description": "Creates a managed instance group using the information that you specify in the request. After the group is created, it schedules an action to create instances in the group using the specified instance template. This operation is marked as DONE when the group is created even if the instances in the group have not yet been created. You must separately verify the status of the individual instances.\nA managed instance group can have up to 1000 VM instances per group.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "auto_healing_policies": {
          "aliases": [],
          "description": "The autohealing policy for this managed instance group .",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "health_check": {
              "aliases": [],
              "description": "The URL for the health check that signals autohealing.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "initial_delay_sec": {
              "aliases": [],
              "description": "The number of seconds that the managed instance group waits before it applies autohealing policies to new instances or recently recreated instances .",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "base_instance_name": {
          "aliases": [],
          "description": "The base instance name to use for instances in this group. The value must be 1-58 characters long. Instances are named by appending a hyphen and a random four-character string to the base instance name.\nThe base instance name must comply with RFC1035.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. Provide this property when you create the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance_template": {
          "aliases": [],
          "description": "The instance template that is specified for this managed instance group. The group uses this template to create all new instances in the managed instance group.\nThis field represents a link to a InstanceTemplate resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_instance_template task and then set this instance_template field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the managed instance group. The name must be 1-63 characters long, and comply with RFC1035.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "named_ports": {
          "aliases": [],
          "description": "Named ports configured for the Instance Groups complementary to this Instance Group Manager.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "port": {
              "aliases": [],
              "description": "The port number, which can be a value between 1 and 65535.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The region the managed instance group resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target_pools": {
          "aliases": [],
          "description": "TargetPool resources to which instances in the instanceGroup field are added. The target pools automatically apply to all of the instances in the managed instance group.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        },
        "target_size": {
          "aliases": [],
          "description": "The target number of running instances for this managed instance group. Deleting or abandoning instances reduces this number. Resizing the group changes this number.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP RegionInstanceGroupManager"
    },
    "examples": "\n- name: create a network\n  google.cloud.gcp_compute_network:\n    name: network-instancetemplate\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: network\n\n- name: create a address\n  google.cloud.gcp_compute_address:\n    name: address-instancetemplate\n    region: us-central1\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: address\n\n- name: create a instance template\n  google.cloud.gcp_compute_instance_template:\n    name: \"{{ resource_name }}\"\n    properties:\n      disks:\n      - auto_delete: 'true'\n        boot: 'true'\n        initialize_params:\n          source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts\n      machine_type: n1-standard-1\n      network_interfaces:\n      - network: \"{{ network }}\"\n        access_configs:\n        - name: test-config\n          type: ONE_TO_ONE_NAT\n          nat_ip: \"{{ address }}\"\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instancetemplate\n\n- name: create a region instance group manager\n  google.cloud.gcp_compute_region_instance_group_manager:\n    name: test_object\n    base_instance_name: test1-child\n    region: us-central1\n    instance_template: \"{{ instancetemplate }}\"\n    target_size: 3\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_region_instance_group_manager_info": {
    "doc": {
      "description": "Gather info for GCP RegionInstanceGroupManager",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The region the managed instance group resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP RegionInstanceGroupManager"
    },
    "examples": "\n- name: get info on a region instance group manager\n  gcp_compute_region_instance_group_manager_info:\n    region: us-central1\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_region_target_http_proxy": {
    "doc": {
      "description": "Represents a RegionTargetHttpProxy resource, which is used by one or more forwarding rules to route incoming HTTP requests to a URL map.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/regionTargetHttpProxies)\nOfficial Documentation: U(https://cloud.google.com/compute/docs/load-balancing/http/target-proxies)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The region where the regional proxy resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url_map": {
          "aliases": [],
          "description": "A reference to the RegionUrlMap resource that defines the mapping from URL to the BackendService.\nThis field represents a link to a RegionUrlMap resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_region_url_map task and then set this url_map field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP RegionTargetHttpProxy"
    },
    "examples": "\n- name: create a instance group\n  google.cloud.gcp_compute_instance_group:\n    name: instancegroup-targethttpproxy\n    zone: us-central1-a\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instancegroup\n\n- name: create a HTTP health check\n  google.cloud.gcp_compute_http_health_check:\n    name: httphealthcheck-targethttpproxy\n    healthy_threshold: 10\n    port: 8080\n    timeout_sec: 2\n    unhealthy_threshold: 5\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: healthcheck\n\n- name: create a backend service\n  google.cloud.gcp_compute_backend_service:\n    name: backendservice-targethttpproxy\n    backends:\n    - group: \"{{ instancegroup.selfLink }}\"\n    health_checks:\n    - \"{{ healthcheck.selfLink }}\"\n    enable_cdn: 'true'\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: backendservice\n\n- name: create a URL map\n  google.cloud.gcp_compute_url_map:\n    name: urlmap-targethttpproxy\n    default_service: \"{{ backendservice }}\"\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: urlmap\n\n- name: create a region target HTTP proxy\n  google.cloud.gcp_compute_region_target_http_proxy:\n    name: test_object\n    region: us-central1\n    url_map: \"{{ urlmap }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_region_target_http_proxy_info": {
    "doc": {
      "description": "Gather info for GCP RegionTargetHttpProxy",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The region where the regional proxy resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP RegionTargetHttpProxy"
    },
    "examples": "\n- name: get info on a region target HTTP proxy\n  gcp_compute_region_target_http_proxy_info:\n    region: us-central1\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_region_target_https_proxy": {
    "doc": {
      "description": "Represents a RegionTargetHttpsProxy resource, which is used by one or more forwarding rules to route incoming HTTPS requests to a URL map.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/regionTargetHttpsProxies)\nOfficial Documentation: U(https://cloud.google.com/compute/docs/load-balancing/http/target-proxies)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The region where the regional proxy resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "ssl_certificates": {
          "aliases": [],
          "description": "A list of RegionSslCertificate resources that are used to authenticate connections between users and the load balancer. Currently, exactly one SSL certificate must be specified.",
          "type": "list",
          "required": true,
          "elements": "dict",
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url_map": {
          "aliases": [],
          "description": "A reference to the RegionUrlMap resource that defines the mapping from URL to the RegionBackendService.\nThis field represents a link to a RegionUrlMap resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_region_url_map task and then set this url_map field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP RegionTargetHttpsProxy"
    },
    "examples": "\n- name: create a instance group\n  google.cloud.gcp_compute_instance_group:\n    name: instancegroup-targethttpsproxy\n    zone: us-central1-a\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instancegroup\n\n- name: create a region health check\n  google.cloud.gcp_compute_region_health_check:\n    name: \"{{ resource_name }}\"\n    type: HTTPS\n    healthy_threshold: 10\n    timeout_sec: 2\n    unhealthy_threshold: 5\n    region: us-central1\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: healthcheck\n\n- name: create a region backend service\n  google.cloud.gcp_compute_region_backend_service:\n    name: backendservice-targethttpsproxy\n    region: us-central1\n    backends:\n    - group: \"{{ instancegroup.selfLink }}\"\n    healthchecks:\n    - \"{{ healthcheck.selfLink }}\"\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: backendservice\n\n- name: create a region URL map\n  google.cloud.gcp_compute_region_url_map:\n    name: urlmap-targethttpsproxy\n    region: us-central1\n    default_service: \"{{ backendservice }}\"\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: urlmap\n\n- name: create a SSL certificate\n  google.cloud.gcp_compute_ssl_certificate:\n    name: sslcert-targethttpsproxy\n    description: A certificate for testing. Do not use this certificate in production\n    certificate: |-\n      -----BEGIN CERTIFICATE-----\n      MIICqjCCAk+gAwIBAgIJAIuJ+0352Kq4MAoGCCqGSM49BAMCMIGwMQswCQYDVQQG\n      EwJVUzETMBEGA1UECAwKV2FzaGluZ3RvbjERMA8GA1UEBwwIS2lya2xhbmQxFTAT\n      BgNVBAoMDEdvb2dsZSwgSW5jLjEeMBwGA1UECwwVR29vZ2xlIENsb3VkIFBsYXRm\n      b3JtMR8wHQYDVQQDDBZ3d3cubXktc2VjdXJlLXNpdGUuY29tMSEwHwYJKoZIhvcN\n      AQkBFhJuZWxzb25hQGdvb2dsZS5jb20wHhcNMTcwNjI4MDQ1NjI2WhcNMjcwNjI2\n      MDQ1NjI2WjCBsDELMAkGA1UEBhMCVVMxEzARBgNVBAgMCldhc2hpbmd0b24xETAP\n      BgNVBAcMCEtpcmtsYW5kMRUwEwYDVQQKDAxHb29nbGUsIEluYy4xHjAcBgNVBAsM\n      FUdvb2dsZSBDbG91ZCBQbGF0Zm9ybTEfMB0GA1UEAwwWd3d3Lm15LXNlY3VyZS1z\n      aXRlLmNvbTEhMB8GCSqGSIb3DQEJARYSbmVsc29uYUBnb29nbGUuY29tMFkwEwYH\n      KoZIzj0CAQYIKoZIzj0DAQcDQgAEHGzpcRJ4XzfBJCCPMQeXQpTXwlblimODQCuQ\n      4mzkzTv0dXyB750fOGN02HtkpBOZzzvUARTR10JQoSe2/5PIwaNQME4wHQYDVR0O\n      BBYEFKIQC3A2SDpxcdfn0YLKineDNq/BMB8GA1UdIwQYMBaAFKIQC3A2SDpxcdfn\n      0YLKineDNq/BMAwGA1UdEwQFMAMBAf8wCgYIKoZIzj0EAwIDSQAwRgIhALs4vy+O\n      M3jcqgA4fSW/oKw6UJxp+M6a+nGMX+UJR3YgAiEAvvl39QRVAiv84hdoCuyON0lJ\n      zqGNhIPGq2ULqXKK8BY=\n      -----END CERTIFICATE-----\n    private_key: |-\n      -----BEGIN EC PRIVATE KEY-----\n      MHcCAQEEIObtRo8tkUqoMjeHhsOh2ouPpXCgBcP+EDxZCB/tws15oAoGCCqGSM49\n      AwEHoUQDQgAEHGzpcRJ4XzfBJCCPMQeXQpTXwlblimODQCuQ4mzkzTv0dXyB750f\n      OGN02HtkpBOZzzvUARTR10JQoSe2/5PIwQ==\n      -----END EC PRIVATE KEY-----\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: sslcert\n\n- name: create a region target HTTPS proxy\n  google.cloud.gcp_compute_region_target_https_proxy:\n    name: test_object\n    region: us-central1\n    ssl_certificates:\n    - \"{{ sslcert }}\"\n    url_map: \"{{ urlmap }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_region_target_https_proxy_info": {
    "doc": {
      "description": "Gather info for GCP RegionTargetHttpsProxy",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The region where the regional proxy resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP RegionTargetHttpsProxy"
    },
    "examples": "\n- name: get info on a region target HTTPS proxy\n  gcp_compute_region_target_https_proxy_info:\n    region: us-central1\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_region_url_map": {
    "doc": {
      "description": "UrlMaps are used to route requests to a backend service based on rules that you define for the host and path of an incoming URL.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "default_service": {
          "aliases": [],
          "description": "The full or partial URL of the defaultService resource to which traffic is directed if none of the hostRules match. If defaultRouteAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if defaultService is specified, defaultRouteAction cannot contain any weightedBackendServices. Conversely, if routeAction specifies any weightedBackendServices, service must not be specified. Only one of defaultService, defaultUrlRedirect or defaultRouteAction.weightedBackendService must be set.\nThis field represents a link to a RegionBackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_region_backend_service task and then set this default_service field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "default_url_redirect": {
          "aliases": [],
          "description": "When none of the specified hostRules match, the request is redirected to a URL specified by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or defaultRouteAction must not be set.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host_redirect": {
              "aliases": [],
              "description": "The host that will be used in the redirect response instead of the one that was supplied in the request. The value must be between 1 and 255 characters.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "https_redirect": {
              "aliases": [],
              "description": "If set to true, the URL scheme in the redirected request is set to https. If set to false, the URL scheme of the redirected request will remain the same as that of the request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this true for TargetHttpsProxy is not permitted. The default is set to false.",
              "default": "false",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "path_redirect": {
              "aliases": [],
              "description": "The path that will be used in the redirect response instead of the one that was supplied in the request. pathRedirect cannot be supplied together with prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect. The value must be between 1 and 1024 characters.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "prefix_redirect": {
              "aliases": [],
              "description": "The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch, retaining the remaining portion of the URL before redirecting the request.\nprefixRedirect cannot be supplied together with pathRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect. The value must be between 1 and 1024 characters.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "redirect_response_code": {
              "aliases": [],
              "description": "The HTTP Status code to use for this RedirectAction. Supported values are: * MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301.\n* FOUND, which corresponds to 302.\n* SEE_OTHER which corresponds to 303.\n* TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method will be retained.\n* PERMANENT_REDIRECT, which corresponds to 308. In this case, the request method will be retained.\nSome valid choices include: \"FOUND\", \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\", \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "strip_query": {
              "aliases": [],
              "description": "If set to true, any accompanying query portion of the original URL is removed prior to redirecting the request. If set to false, the query portion of the original URL is retained.",
              "default": "false",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. Provide this property when you create the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "host_rules": {
          "aliases": [],
          "description": "The list of HostRules to use against the URL.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "description": {
              "aliases": [],
              "description": "An optional description of this HostRule. Provide this property when you create the resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "hosts": {
              "aliases": [],
              "description": "The list of host patterns to match. They must be valid hostnames, except * will match any string of ([a-z0-9-.]*). In that case, * must be the first character and must be followed in the pattern by either - or .",
              "type": "list",
              "required": true,
              "elements": "str",
              "suboptions": {}
            },
            "path_matcher": {
              "aliases": [],
              "description": "The name of the PathMatcher to use to match the path portion of the URL if the hostRule matches the URL's host portion.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "path_matchers": {
          "aliases": [],
          "description": "The list of named PathMatchers to use against the URL.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "default_service": {
              "aliases": [],
              "description": "A reference to a RegionBackendService resource. This will be used if none of the pathRules defined by this PathMatcher is matched by the URL's path portion.\nThis field represents a link to a RegionBackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_region_backend_service task and then set this default_service field to \"{{ name-of-resource }}\"",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "default_url_redirect": {
              "aliases": [],
              "description": "When none of the specified hostRules match, the request is redirected to a URL specified by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or defaultRouteAction must not be set.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "host_redirect": {
                  "aliases": [],
                  "description": "The host that will be used in the redirect response instead of the one that was supplied in the request. The value must be between 1 and 255 characters.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "https_redirect": {
                  "aliases": [],
                  "description": "If set to true, the URL scheme in the redirected request is set to https. If set to false, the URL scheme of the redirected request will remain the same as that of the request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this true for TargetHttpsProxy is not permitted. The default is set to false.",
                  "default": "false",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "path_redirect": {
                  "aliases": [],
                  "description": "The path that will be used in the redirect response instead of the one that was supplied in the request. pathRedirect cannot be supplied together with prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect. The value must be between 1 and 1024 characters.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "prefix_redirect": {
                  "aliases": [],
                  "description": "The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch, retaining the remaining portion of the URL before redirecting the request.\nprefixRedirect cannot be supplied together with pathRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect. The value must be between 1 and 1024 characters.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "redirect_response_code": {
                  "aliases": [],
                  "description": "The HTTP Status code to use for this RedirectAction. Supported values are: * MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301.\n* FOUND, which corresponds to 302.\n* SEE_OTHER which corresponds to 303.\n* TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method will be retained.\n* PERMANENT_REDIRECT, which corresponds to 308. In this case, the request method will be retained.\nSome valid choices include: \"FOUND\", \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\", \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "strip_query": {
                  "aliases": [],
                  "description": "If set to true, any accompanying query portion of the original URL is removed prior to redirecting the request. If set to false, the query portion of the original URL is retained.",
                  "default": "false",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "description": {
              "aliases": [],
              "description": "An optional description of this resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The name to which this PathMatcher is referred by the HostRule.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "path_rules": {
              "aliases": [],
              "description": "The list of path rules. Use this list instead of routeRules when routing based on simple path matching is all that's required. The order by which path rules are specified does not matter. Matches are always done on the longest-path-first basis. For example: a pathRule with a path /a/b/c/* will match before /a/b/* irrespective of the order in which those paths appear in this list. Within a given pathMatcher, only one of pathRules or routeRules must be set.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "paths": {
                  "aliases": [],
                  "description": "The list of path patterns to match. Each must start with / and the only place a * is allowed is at the end following a /. The string fed to the path matcher does not include any text after the first ? or #, and those chars are not allowed here.",
                  "type": "list",
                  "required": true,
                  "elements": "str",
                  "suboptions": {}
                },
                "route_action": {
                  "aliases": [],
                  "description": "In response to a matching path, the load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If routeAction specifies any weightedBackendServices, service must not be set. Conversely if service is set, routeAction cannot contain any weightedBackendServices. Only one of routeAction or urlRedirect must be set.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "cors_policy": {
                      "aliases": [],
                      "description": "The specification for allowing client side cross-origin requests. Please see W3C Recommendation for Cross Origin Resource Sharing .",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "allow_credentials": {
                          "aliases": [],
                          "description": "In response to a preflight request, setting this to true indicates that the actual request can include user credentials. This translates to the Access- Control-Allow-Credentials header. Defaults to false.",
                          "default": "false",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "allow_headers": {
                          "aliases": [],
                          "description": "Specifies the content for the Access-Control-Allow-Headers header.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "allow_methods": {
                          "aliases": [],
                          "description": "Specifies the content for the Access-Control-Allow-Methods header.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "allow_origin_regexes": {
                          "aliases": [],
                          "description": "Specifies the regular expression patterns that match allowed origins. For regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript An origin is allowed if it matches either allow_origins or allow_origin_regex.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "allow_origins": {
                          "aliases": [],
                          "description": "Specifies the list of origins that will be allowed to do CORS requests. An origin is allowed if it matches either allow_origins or allow_origin_regex.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "disabled": {
                          "aliases": [],
                          "description": "If true, specifies the CORS policy is disabled.",
                          "type": "bool",
                          "required": true,
                          "suboptions": {}
                        },
                        "expose_headers": {
                          "aliases": [],
                          "description": "Specifies the content for the Access-Control-Expose-Headers header.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "max_age": {
                          "aliases": [],
                          "description": "Specifies how long the results of a preflight request can be cached. This translates to the content for the Access-Control-Max-Age header.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "fault_injection_policy": {
                      "aliases": [],
                      "description": "The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure. As part of fault injection, when clients send requests to a backend service, delays can be introduced by Loadbalancer on a percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted by the Loadbalancer for a percentage of requests. timeout and retry_policy will be ignored by clients that are configured with a fault_injection_policy.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "abort": {
                          "aliases": [],
                          "description": "The specification for how client requests are aborted as part of fault injection.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "http_status": {
                              "aliases": [],
                              "description": "The HTTP status code used to abort the request. The value must be between 200 and 599 inclusive.",
                              "type": "int",
                              "required": true,
                              "suboptions": {}
                            },
                            "percentage": {
                              "aliases": [],
                              "description": "The percentage of traffic (connections/operations/requests) which will be aborted as part of fault injection. The value must be between 0.0 and 100.0 inclusive.",
                              "type": "str",
                              "required": true,
                              "suboptions": {}
                            }
                          }
                        },
                        "delay": {
                          "aliases": [],
                          "description": "The specification for how client requests are delayed as part of fault injection, before being sent to a backend service.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "fixed_delay": {
                              "aliases": [],
                              "description": "Specifies the value of the fixed delay interval.",
                              "type": "dict",
                              "required": true,
                              "suboptions": {
                                "nanos": {
                                  "aliases": [],
                                  "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "seconds": {
                                  "aliases": [],
                                  "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                }
                              }
                            },
                            "percentage": {
                              "aliases": [],
                              "description": "The percentage of traffic (connections/operations/requests) on which delay will be introduced as part of fault injection. The value must be between 0.0 and 100.0 inclusive.",
                              "type": "str",
                              "required": true,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "request_mirror_policy": {
                      "aliases": [],
                      "description": "Specifies the policy on how requests intended for the route's backends are shadowed to a separate mirrored backend service. Loadbalancer does not wait for responses from the shadow service. Prior to sending traffic to the shadow service, the host / authority header is suffixed with -shadow.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "backend_service": {
                          "aliases": [],
                          "description": "The RegionBackendService resource being mirrored to.\nThis field represents a link to a RegionBackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_region_backend_service task and then set this backend_service field to \"{{ name-of-resource }}\"",
                          "type": "dict",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    },
                    "retry_policy": {
                      "aliases": [],
                      "description": "Specifies the retry policy associated with this route.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "num_retries": {
                          "aliases": [],
                          "description": "Specifies the allowed number retries. This number must be > 0.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "per_try_timeout": {
                          "aliases": [],
                          "description": "Specifies a non-zero timeout per retry attempt.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "nanos": {
                              "aliases": [],
                              "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "seconds": {
                              "aliases": [],
                              "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.",
                              "type": "str",
                              "required": true,
                              "suboptions": {}
                            }
                          }
                        },
                        "retry_conditions": {
                          "aliases": [],
                          "description": "Specifies one or more conditions when this retry rule applies. Valid values are: - 5xx: Loadbalancer will attempt a retry if the backend service responds with any 5xx response code, or if the backend service does not respond at all, example: disconnects, reset, read timeout, connection failure, and refused streams.\n- gateway-error: Similar to 5xx, but only applies to response codes 502, 503 or 504.\n- connect-failure: Loadbalancer will retry on failures connecting to backend services, for example due to connection timeouts.\n- retriable-4xx: Loadbalancer will retry for retriable 4xx response codes.\nCurrently the only retriable error supported is 409.\n- refused-stream: Loadbalancer will retry if the backend service resets the stream with a REFUSED_STREAM error code. This reset type indicates that it is safe to retry.\n- cancelled: Loadbalancer will retry if the gRPC status code in the response header is set to cancelled - deadline-exceeded: Loadbalancer will retry if the gRPC status code in the response header is set to deadline-exceeded - resource-exhausted: Loadbalancer will retry if the gRPC status code in the response header is set to resource-exhausted - unavailable: Loadbalancer will retry if the gRPC status code in the response header is set to unavailable .",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        }
                      }
                    },
                    "timeout": {
                      "aliases": [],
                      "description": "Specifies the timeout for the selected route. Timeout is computed from the time the request is has been fully processed (i.e. end-of-stream) up until the response has been completely processed. Timeout includes all retries. If not specified, the default value is 15 seconds.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "nanos": {
                          "aliases": [],
                          "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "seconds": {
                          "aliases": [],
                          "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    },
                    "url_rewrite": {
                      "aliases": [],
                      "description": "The spec to modify the URL of the request, prior to forwarding the request to the matched service .",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "host_rewrite": {
                          "aliases": [],
                          "description": "Prior to forwarding the request to the selected service, the request's host header is replaced with contents of hostRewrite. The value must be between 1 and 255 characters.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "path_prefix_rewrite": {
                          "aliases": [],
                          "description": "Prior to forwarding the request to the selected backend service, the matching portion of the request's path is replaced by pathPrefixRewrite. The value must be between 1 and 1024 characters.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "weighted_backend_services": {
                      "aliases": [],
                      "description": "A list of weighted backend services to send traffic to when a route match occurs. The weights determine the fraction of traffic that flows to their corresponding backend service. If all traffic needs to go to a single backend service, there must be one weightedBackendService with weight set to a non 0 number. Once a backendService is identified and before forwarding the request to the backend service, advanced routing actions like Url rewrites and header transformations are applied depending on additional settings specified in this HttpRouteAction.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "backend_service": {
                          "aliases": [],
                          "description": "The default RegionBackendService resource. Before forwarding the request to backendService, the loadbalancer applies any relevant headerActions specified as part of this backendServiceWeight.\nThis field represents a link to a RegionBackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_region_backend_service task and then set this backend_service field to \"{{ name-of-resource }}\"",
                          "type": "dict",
                          "required": true,
                          "suboptions": {}
                        },
                        "header_action": {
                          "aliases": [],
                          "description": "Specifies changes to request and response headers that need to take effect for the selected backendService. headerAction specified here take effect before headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "request_headers_to_add": {
                              "aliases": [],
                              "description": "Headers to add to a matching request prior to forwarding the request to the backendService.",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "header_name": {
                                  "aliases": [],
                                  "description": "The name of the header.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                },
                                "header_value": {
                                  "aliases": [],
                                  "description": "The value of the header to add.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                },
                                "replace": {
                                  "aliases": [],
                                  "description": "If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.",
                                  "type": "bool",
                                  "required": true,
                                  "suboptions": {}
                                }
                              }
                            },
                            "request_headers_to_remove": {
                              "aliases": [],
                              "description": "A list of header names for headers that need to be removed from the request prior to forwarding the request to the backendService.",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "response_headers_to_add": {
                              "aliases": [],
                              "description": "Headers to add the response prior to sending the response back to the client.",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "header_name": {
                                  "aliases": [],
                                  "description": "The name of the header.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                },
                                "header_value": {
                                  "aliases": [],
                                  "description": "The value of the header to add.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                },
                                "replace": {
                                  "aliases": [],
                                  "description": "If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.",
                                  "type": "bool",
                                  "required": true,
                                  "suboptions": {}
                                }
                              }
                            },
                            "response_headers_to_remove": {
                              "aliases": [],
                              "description": "A list of header names for headers that need to be removed from the response prior to sending the response back to the client.",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            }
                          }
                        },
                        "weight": {
                          "aliases": [],
                          "description": "Specifies the fraction of traffic sent to backendService, computed as weight / (sum of all weightedBackendService weights in routeAction) . The selection of a backend service is determined only for new traffic. Once a user's request has been directed to a backendService, subsequent requests will be sent to the same backendService as determined by the BackendService's session affinity policy.\nThe value must be between 0 and 1000 .",
                          "type": "int",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "service": {
                  "aliases": [],
                  "description": "The region backend service resource to which traffic is directed if this rule is matched. If routeAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if service is specified, routeAction cannot contain any weightedBackendService s. Conversely, if routeAction specifies any weightedBackendServices, service must not be specified. Only one of urlRedirect, service or routeAction.weightedBackendService must be set.\nThis field represents a link to a RegionBackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_region_backend_service task and then set this service field to \"{{ name-of-resource }}\"",
                  "type": "dict",
                  "required": false,
                  "suboptions": {}
                },
                "url_redirect": {
                  "aliases": [],
                  "description": "When a path pattern is matched, the request is redirected to a URL specified by urlRedirect. If urlRedirect is specified, service or routeAction must not be set.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "host_redirect": {
                      "aliases": [],
                      "description": "The host that will be used in the redirect response instead of the one that was supplied in the request. The value must be between 1 and 255 characters.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "https_redirect": {
                      "aliases": [],
                      "description": "If set to true, the URL scheme in the redirected request is set to https.\nIf set to false, the URL scheme of the redirected request will remain the same as that of the request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this true for TargetHttpsProxy is not permitted. The default is set to false.",
                      "default": "false",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "path_redirect": {
                      "aliases": [],
                      "description": "The path that will be used in the redirect response instead of the one that was supplied in the request. pathRedirect cannot be supplied together with prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect.\nThe value must be between 1 and 1024 characters.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix_redirect": {
                      "aliases": [],
                      "description": "The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch, retaining the remaining portion of the URL before redirecting the request. prefixRedirect cannot be supplied together with pathRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect. The value must be between 1 and 1024 characters.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "redirect_response_code": {
                      "aliases": [],
                      "description": "The HTTP Status code to use for this RedirectAction. Supported values are: * MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301.\n* FOUND, which corresponds to 302.\n* SEE_OTHER which corresponds to 303.\n* TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method will be retained.\n* PERMANENT_REDIRECT, which corresponds to 308. In this case, the request method will be retained.\nSome valid choices include: \"FOUND\", \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\", \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "strip_query": {
                      "aliases": [],
                      "description": "If set to true, any accompanying query portion of the original URL is removed prior to redirecting the request. If set to false, the query portion of the original URL is retained.",
                      "default": "false",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "route_rules": {
              "aliases": [],
              "description": "The list of ordered HTTP route rules. Use this list instead of pathRules when advanced route matching and routing actions are desired. The order of specifying routeRules matters: the first rule that matches will cause its specified routing action to take effect. Within a given pathMatcher, only one of pathRules or routeRules must be set. routeRules are not supported in UrlMaps intended for External load balancers.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "header_action": {
                  "aliases": [],
                  "description": "Specifies changes to request and response headers that need to take effect for the selected backendService. The headerAction specified here are applied before the matching pathMatchers[].headerAction and after pathMatchers[].routeRules[].r outeAction.weightedBackendService.backendServiceWeightAction[].headerAction .",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "request_headers_to_add": {
                      "aliases": [],
                      "description": "Headers to add to a matching request prior to forwarding the request to the backendService.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "header_name": {
                          "aliases": [],
                          "description": "The name of the header.",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "header_value": {
                          "aliases": [],
                          "description": "The value of the header to add.",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "replace": {
                          "aliases": [],
                          "description": "If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.",
                          "type": "bool",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    },
                    "request_headers_to_remove": {
                      "aliases": [],
                      "description": "A list of header names for headers that need to be removed from the request prior to forwarding the request to the backendService.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "response_headers_to_add": {
                      "aliases": [],
                      "description": "Headers to add the response prior to sending the response back to the client.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "header_name": {
                          "aliases": [],
                          "description": "The name of the header.",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "header_value": {
                          "aliases": [],
                          "description": "The value of the header to add.",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "replace": {
                          "aliases": [],
                          "description": "If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.",
                          "type": "bool",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    },
                    "response_headers_to_remove": {
                      "aliases": [],
                      "description": "A list of header names for headers that need to be removed from the response prior to sending the response back to the client.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    }
                  }
                },
                "match_rules": {
                  "aliases": [],
                  "description": "The rules for determining a match.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "full_path_match": {
                      "aliases": [],
                      "description": "For satisfying the matchRule condition, the path of the request must exactly match the value specified in fullPathMatch after removing any query parameters and anchor that may be part of the original URL. FullPathMatch must be between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or regexMatch must be specified.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "header_matches": {
                      "aliases": [],
                      "description": "Specifies a list of header match criteria, all of which must match corresponding headers in the request.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "exact_match": {
                          "aliases": [],
                          "description": "The value should exactly match contents of exactMatch. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "header_name": {
                          "aliases": [],
                          "description": "The name of the HTTP header to match. For matching against the HTTP request's authority, use a headerMatch with the header name \":authority\". For matching a request's method, use the headerName \":method\".",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "invert_match": {
                          "aliases": [],
                          "description": "If set to false, the headerMatch is considered a match if the match criteria above are met. If set to true, the headerMatch is considered a match if the match criteria above are NOT met. Defaults to false.",
                          "default": "false",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "prefix_match": {
                          "aliases": [],
                          "description": "The value of the header must start with the contents of prefixMatch. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "present_match": {
                          "aliases": [],
                          "description": "A header with the contents of headerName must exist. The match takes place whether or not the request's header has a value or not. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "range_match": {
                          "aliases": [],
                          "description": "The header value must be an integer and its value must be in the range specified in rangeMatch. If the header does not contain an integer, number or is empty, the match fails. For example for a range [-5, 0] * -3 will match * 0 will not match * 0.25 will not match * -3someString will not match.\nOnly one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "range_end": {
                              "aliases": [],
                              "description": "The end of the range (exclusive).",
                              "type": "int",
                              "required": true,
                              "suboptions": {}
                            },
                            "range_start": {
                              "aliases": [],
                              "description": "The start of the range (inclusive).",
                              "type": "int",
                              "required": true,
                              "suboptions": {}
                            }
                          }
                        },
                        "regex_match": {
                          "aliases": [],
                          "description": "The value of the header must match the regular expression specified in regexMatch. For regular expression grammar, please see: en.cppreference.com/w/cpp/regex/ecmascript For matching against a port specified in the HTTP request, use a headerMatch with headerName set to PORT and a regular expression that satisfies the RFC2616 Host header's port specifier.\nOnly one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "suffix_match": {
                          "aliases": [],
                          "description": "The value of the header must end with the contents of suffixMatch. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ignore_case": {
                      "aliases": [],
                      "description": "Specifies that prefixMatch and fullPathMatch matches are case sensitive.\nDefaults to false.",
                      "default": "false",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "metadata_filters": {
                      "aliases": [],
                      "description": "Opaque filter criteria used by Loadbalancer to restrict routing configuration to a limited set xDS compliant clients. In their xDS requests to Loadbalancer, xDS clients present node metadata. If a match takes place, the relevant routing configuration is made available to those proxies. For each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels in the provided metadata. metadataFilters specified here can be overrides those specified in ForwardingRule that refers to this UrlMap. metadataFilters only applies to Loadbalancers that have their loadBalancingScheme set to INTERNAL_SELF_MANAGED.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "filter_labels": {
                          "aliases": [],
                          "description": "The list of label value pairs that must match labels in the provided metadata based on filterMatchCriteria This list must not be empty and can have at the most 64 entries.",
                          "type": "list",
                          "required": true,
                          "elements": "dict",
                          "suboptions": {
                            "name": {
                              "aliases": [],
                              "description": "Name of metadata label. The name can have a maximum length of 1024 characters and must be at least 1 character long.",
                              "type": "str",
                              "required": true,
                              "suboptions": {}
                            },
                            "value": {
                              "aliases": [],
                              "description": "The value of the label must match the specified value. value can have a maximum length of 1024 characters.",
                              "type": "str",
                              "required": true,
                              "suboptions": {}
                            }
                          }
                        },
                        "filter_match_criteria": {
                          "aliases": [],
                          "description": "Specifies how individual filterLabel matches within the list of filterLabels contribute towards the overall metadataFilter match. Supported values are: * MATCH_ANY: At least one of the filterLabels must have a matching label in the provided metadata.\n* MATCH_ALL: All filterLabels must have matching labels in the provided metadata.\nSome valid choices include: \"MATCH_ALL\", \"MATCH_ANY\"",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    },
                    "prefix_match": {
                      "aliases": [],
                      "description": "For satisfying the matchRule condition, the request's path must begin with the specified prefixMatch. prefixMatch must begin with a /. The value must be between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or regexMatch must be specified.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "query_parameter_matches": {
                      "aliases": [],
                      "description": "Specifies a list of query parameter match criteria, all of which must match corresponding query parameters in the request.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "exact_match": {
                          "aliases": [],
                          "description": "The queryParameterMatch matches if the value of the parameter exactly matches the contents of exactMatch. Only one of presentMatch, exactMatch and regexMatch must be set.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "The name of the query parameter to match. The query parameter must exist in the request, in the absence of which the request match fails.",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "present_match": {
                          "aliases": [],
                          "description": "Specifies that the queryParameterMatch matches if the request contains the query parameter, irrespective of whether the parameter has a value or not. Only one of presentMatch, exactMatch and regexMatch must be set.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "regex_match": {
                          "aliases": [],
                          "description": "The queryParameterMatch matches if the value of the parameter matches the regular expression specified by regexMatch. For the regular expression grammar, please see en.cppreference.com/w/cpp/regex/ecmascript Only one of presentMatch, exactMatch and regexMatch must be set.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "regex_match": {
                      "aliases": [],
                      "description": "For satisfying the matchRule condition, the path of the request must satisfy the regular expression specified in regexMatch after removing any query parameters and anchor supplied with the original URL. For regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript Only one of prefixMatch, fullPathMatch or regexMatch must be specified.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "priority": {
                  "aliases": [],
                  "description": "For routeRules within a given pathMatcher, priority determines the order in which load balancer will interpret routeRules. RouteRules are evaluated in order of priority, from the lowest to highest number. The priority of a rule decreases as its number increases (1, 2, 3, N+1). The first rule that matches the request is applied.\nYou cannot configure two or more routeRules with the same priority.\nPriority for each rule must be set to a number between 0 and 2147483647 inclusive.\nPriority numbers can have gaps, which enable you to add or remove rules in the future without affecting the rest of the rules. For example, 1, 2, 3, 4, 5, 9, 12, 16 is a valid series of priority numbers to which you could add rules numbered from 6 to 8, 10 to 11, and 13 to 15 in the future without any impact on existing rules.",
                  "type": "int",
                  "required": true,
                  "suboptions": {}
                },
                "route_action": {
                  "aliases": [],
                  "description": "In response to a matching matchRule, the load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If routeAction specifies any weightedBackendServices, service must not be set. Conversely if service is set, routeAction cannot contain any weightedBackendServices. Only one of routeAction or urlRedirect must be set.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "cors_policy": {
                      "aliases": [],
                      "description": "The specification for allowing client side cross-origin requests. Please see W3C Recommendation for Cross Origin Resource Sharing .",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "allow_credentials": {
                          "aliases": [],
                          "description": "In response to a preflight request, setting this to true indicates that the actual request can include user credentials. This translates to the Access- Control-Allow-Credentials header. Defaults to false.",
                          "default": "false",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "allow_headers": {
                          "aliases": [],
                          "description": "Specifies the content for the Access-Control-Allow-Headers header.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "allow_methods": {
                          "aliases": [],
                          "description": "Specifies the content for the Access-Control-Allow-Methods header.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "allow_origin_regexes": {
                          "aliases": [],
                          "description": "Specifies the regular expression patterns that match allowed origins. For regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript An origin is allowed if it matches either allow_origins or allow_origin_regex.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "allow_origins": {
                          "aliases": [],
                          "description": "Specifies the list of origins that will be allowed to do CORS requests. An origin is allowed if it matches either allow_origins or allow_origin_regex.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "disabled": {
                          "aliases": [],
                          "description": "If true, specifies the CORS policy is disabled.\nwhich indicates that the CORS policy is in effect. Defaults to false.",
                          "default": "false",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "expose_headers": {
                          "aliases": [],
                          "description": "Specifies the content for the Access-Control-Expose-Headers header.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "max_age": {
                          "aliases": [],
                          "description": "Specifies how long the results of a preflight request can be cached. This translates to the content for the Access-Control-Max-Age header.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "fault_injection_policy": {
                      "aliases": [],
                      "description": "The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure. As part of fault injection, when clients send requests to a backend service, delays can be introduced by Loadbalancer on a percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted by the Loadbalancer for a percentage of requests. timeout and retry_policy will be ignored by clients that are configured with a fault_injection_policy.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "abort": {
                          "aliases": [],
                          "description": "The specification for how client requests are aborted as part of fault injection.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "http_status": {
                              "aliases": [],
                              "description": "The HTTP status code used to abort the request. The value must be between 200 and 599 inclusive.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "percentage": {
                              "aliases": [],
                              "description": "The percentage of traffic (connections/operations/requests) which will be aborted as part of fault injection. The value must be between 0.0 and 100.0 inclusive.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "delay": {
                          "aliases": [],
                          "description": "The specification for how client requests are delayed as part of fault injection, before being sent to a backend service.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "fixed_delay": {
                              "aliases": [],
                              "description": "Specifies the value of the fixed delay interval.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "nanos": {
                                  "aliases": [],
                                  "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "seconds": {
                                  "aliases": [],
                                  "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                }
                              }
                            },
                            "percentage": {
                              "aliases": [],
                              "description": "The percentage of traffic (connections/operations/requests) on which delay will be introduced as part of fault injection. The value must be between 0.0 and 100.0 inclusive.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "request_mirror_policy": {
                      "aliases": [],
                      "description": "Specifies the policy on how requests intended for the route's backends are shadowed to a separate mirrored backend service. Loadbalancer does not wait for responses from the shadow service. Prior to sending traffic to the shadow service, the host / authority header is suffixed with -shadow.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "backend_service": {
                          "aliases": [],
                          "description": "The RegionBackendService resource being mirrored to.\nThis field represents a link to a RegionBackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_region_backend_service task and then set this backend_service field to \"{{ name-of-resource }}\"",
                          "type": "dict",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    },
                    "retry_policy": {
                      "aliases": [],
                      "description": "Specifies the retry policy associated with this route.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "num_retries": {
                          "aliases": [],
                          "description": "Specifies the allowed number retries. This number must be > 0.",
                          "type": "int",
                          "required": true,
                          "suboptions": {}
                        },
                        "per_try_timeout": {
                          "aliases": [],
                          "description": "Specifies a non-zero timeout per retry attempt.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "nanos": {
                              "aliases": [],
                              "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "seconds": {
                              "aliases": [],
                              "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.",
                              "type": "str",
                              "required": true,
                              "suboptions": {}
                            }
                          }
                        },
                        "retry_conditions": {
                          "aliases": [],
                          "description": "Specifies one or more conditions when this retry rule applies. Valid values are: * 5xx: Loadbalancer will attempt a retry if the backend service responds with any 5xx response code, or if the backend service does not respond at all, example: disconnects, reset, read timeout, connection failure, and refused streams.\n* gateway-error: Similar to 5xx, but only applies to response codes 502, 503 or 504.\n* connect-failure: Loadbalancer will retry on failures connecting to backend services, for example due to connection timeouts.\n* retriable-4xx: Loadbalancer will retry for retriable 4xx response codes.\nCurrently the only retriable error supported is 409.\n* refused-stream: Loadbalancer will retry if the backend service resets the stream with a REFUSED_STREAM error code. This reset type indicates that it is safe to retry.\n* cancelled: Loadbalancer will retry if the gRPC status code in the response header is set to cancelled * deadline-exceeded: Loadbalancer will retry if the gRPC status code in the response header is set to deadline-exceeded * resource-exhausted: Loadbalancer will retry if the gRPC status code in the response header is set to resource-exhausted * unavailable: Loadbalancer will retry if the gRPC status code in the response header is set to unavailable .",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        }
                      }
                    },
                    "timeout": {
                      "aliases": [],
                      "description": "Specifies the timeout for the selected route. Timeout is computed from the time the request is has been fully processed (i.e. end-of-stream) up until the response has been completely processed. Timeout includes all retries. If not specified, the default value is 15 seconds.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "nanos": {
                          "aliases": [],
                          "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "seconds": {
                          "aliases": [],
                          "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    },
                    "url_rewrite": {
                      "aliases": [],
                      "description": "The spec to modify the URL of the request, prior to forwarding the request to the matched service .",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "host_rewrite": {
                          "aliases": [],
                          "description": "Prior to forwarding the request to the selected service, the request's host header is replaced with contents of hostRewrite. The value must be between 1 and 255 characters.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "path_prefix_rewrite": {
                          "aliases": [],
                          "description": "Prior to forwarding the request to the selected backend service, the matching portion of the request's path is replaced by pathPrefixRewrite. The value must be between 1 and 1024 characters.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "weighted_backend_services": {
                      "aliases": [],
                      "description": "A list of weighted backend services to send traffic to when a route match occurs. The weights determine the fraction of traffic that flows to their corresponding backend service. If all traffic needs to go to a single backend service, there must be one weightedBackendService with weight set to a non 0 number. Once a backendService is identified and before forwarding the request to the backend service, advanced routing actions like Url rewrites and header transformations are applied depending on additional settings specified in this HttpRouteAction.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "backend_service": {
                          "aliases": [],
                          "description": "The default RegionBackendService resource. Before forwarding the request to backendService, the loadbalancer applies any relevant headerActions specified as part of this backendServiceWeight.\nThis field represents a link to a RegionBackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_region_backend_service task and then set this backend_service field to \"{{ name-of-resource }}\"",
                          "type": "dict",
                          "required": true,
                          "suboptions": {}
                        },
                        "header_action": {
                          "aliases": [],
                          "description": "Specifies changes to request and response headers that need to take effect for the selected backendService. headerAction specified here take effect before headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "request_headers_to_add": {
                              "aliases": [],
                              "description": "Headers to add to a matching request prior to forwarding the request to the backendService.",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "header_name": {
                                  "aliases": [],
                                  "description": "The name of the header.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                },
                                "header_value": {
                                  "aliases": [],
                                  "description": "The value of the header to add.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                },
                                "replace": {
                                  "aliases": [],
                                  "description": "If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.",
                                  "type": "bool",
                                  "required": true,
                                  "suboptions": {}
                                }
                              }
                            },
                            "request_headers_to_remove": {
                              "aliases": [],
                              "description": "A list of header names for headers that need to be removed from the request prior to forwarding the request to the backendService.",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "response_headers_to_add": {
                              "aliases": [],
                              "description": "Headers to add the response prior to sending the response back to the client.",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "header_name": {
                                  "aliases": [],
                                  "description": "The name of the header.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                },
                                "header_value": {
                                  "aliases": [],
                                  "description": "The value of the header to add.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                },
                                "replace": {
                                  "aliases": [],
                                  "description": "If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.",
                                  "type": "bool",
                                  "required": true,
                                  "suboptions": {}
                                }
                              }
                            },
                            "response_headers_to_remove": {
                              "aliases": [],
                              "description": "A list of header names for headers that need to be removed from the response prior to sending the response back to the client.",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            }
                          }
                        },
                        "weight": {
                          "aliases": [],
                          "description": "Specifies the fraction of traffic sent to backendService, computed as weight / (sum of all weightedBackendService weights in routeAction) . The selection of a backend service is determined only for new traffic. Once a user's request has been directed to a backendService, subsequent requests will be sent to the same backendService as determined by the BackendService's session affinity policy.\nThe value must be between 0 and 1000 .",
                          "type": "int",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "service": {
                  "aliases": [],
                  "description": "The region backend service resource to which traffic is directed if this rule is matched. If routeAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if service is specified, routeAction cannot contain any weightedBackendService s. Conversely, if routeAction specifies any weightedBackendServices, service must not be specified. Only one of urlRedirect, service or routeAction.weightedBackendService must be set.\nThis field represents a link to a RegionBackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_region_backend_service task and then set this service field to \"{{ name-of-resource }}\"",
                  "type": "dict",
                  "required": false,
                  "suboptions": {}
                },
                "url_redirect": {
                  "aliases": [],
                  "description": "When this rule is matched, the request is redirected to a URL specified by urlRedirect. If urlRedirect is specified, service or routeAction must not be set.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "host_redirect": {
                      "aliases": [],
                      "description": "The host that will be used in the redirect response instead of the one that was supplied in the request. The value must be between 1 and 255 characters.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "https_redirect": {
                      "aliases": [],
                      "description": "If set to true, the URL scheme in the redirected request is set to https.\nIf set to false, the URL scheme of the redirected request will remain the same as that of the request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this true for TargetHttpsProxy is not permitted. The default is set to false.",
                      "default": "false",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "path_redirect": {
                      "aliases": [],
                      "description": "The path that will be used in the redirect response instead of the one that was supplied in the request. pathRedirect cannot be supplied together with prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect.\nThe value must be between 1 and 1024 characters.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix_redirect": {
                      "aliases": [],
                      "description": "The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch, retaining the remaining portion of the URL before redirecting the request. prefixRedirect cannot be supplied together with pathRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect. The value must be between 1 and 1024 characters.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "redirect_response_code": {
                      "aliases": [],
                      "description": "The HTTP Status code to use for this RedirectAction. Supported values are: * MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301.\n* FOUND, which corresponds to 302.\n* SEE_OTHER which corresponds to 303.\n* TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method will be retained.\n* PERMANENT_REDIRECT, which corresponds to 308. In this case, the request method will be retained.\nSome valid choices include: \"FOUND\", \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\", \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "strip_query": {
                      "aliases": [],
                      "description": "If set to true, any accompanying query portion of the original URL is removed prior to redirecting the request. If set to false, the query portion of the original URL is retained. The default value is false.",
                      "default": "false",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            }
          }
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "A reference to the region where the url map resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tests": {
          "aliases": [],
          "description": "The list of expected URL mappings. Requests to update this UrlMap will succeed only if all of the test cases pass.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "description": {
              "aliases": [],
              "description": "Description of this test case.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Host portion of the URL.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "path": {
              "aliases": [],
              "description": "Path portion of the URL.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "service": {
              "aliases": [],
              "description": "A reference to expected RegionBackendService resource the given URL should be mapped to.\nThis field represents a link to a RegionBackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_region_backend_service task and then set this service field to \"{{ name-of-resource }}\"",
              "type": "dict",
              "required": true,
              "suboptions": {}
            }
          }
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP RegionUrlMap"
    },
    "examples": "\n- name: create a health check\n  google.cloud.gcp_compute_health_check:\n    name: \"{{ resource_name }}\"\n    type: HTTP\n    http_health_check:\n      port: 80\n    check_interval_sec: 1\n    timeout_sec: 1\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: healthcheck\n\n- name: create a region backend service\n  google.cloud.gcp_compute_region_backend_service:\n    name: \"{{ resource_name }}\"\n    region: us-central1\n    health_checks:\n    - \"{{ healthcheck.selfLink }}\"\n    protocol: HTTP\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: backendservice\n\n- name: create a region URL map\n  google.cloud.gcp_compute_region_url_map:\n    name: test_object\n    region: us-central1\n    default_service: \"{{ backendservice }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_region_url_map_info": {
    "doc": {
      "description": "Gather info for GCP RegionUrlMap",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "A reference to the region where the url map resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP RegionUrlMap"
    },
    "examples": "\n- name: get info on a region URL map\n  gcp_compute_region_url_map_info:\n    region: us-central1\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_reservation": {
    "doc": {
      "description": "Represents a reservation resource. A reservation ensures that capacity is held in a specific zone even if the reserved VMs are not running.\nReservations apply only to Compute Engine, Cloud Dataproc, and Google Kubernetes Engine VM usage.Reservations do not apply to `f1-micro` or `g1-small` machine types, preemptible VMs, sole tenant nodes, or other services not listed above like Cloud SQL and Dataflow.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/reservations)\nReserving zonal resources: U(https://cloud.google.com/compute/docs/instances/reserving-zonal-resources)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "specific_reservation": {
          "aliases": [],
          "description": "Reservation for instances with specific machine shapes.",
          "type": "dict",
          "required": true,
          "suboptions": {
            "count": {
              "aliases": [],
              "description": "The number of resources that are allocated.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "instance_properties": {
              "aliases": [],
              "description": "The instance properties for the reservation.",
              "type": "dict",
              "required": true,
              "suboptions": {
                "guest_accelerators": {
                  "aliases": [],
                  "description": "Guest accelerator type and count.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "accelerator_count": {
                      "aliases": [],
                      "description": "The number of the guest accelerator cards exposed to this instance.",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    },
                    "accelerator_type": {
                      "aliases": [],
                      "description": "The full or partial URL of the accelerator type to attach to this instance. For example: `projects/my-project/zones/us-central1-c/acceleratorTypes/nvidia-tesla-p100` If you are creating an instance template, specify only the accelerator name.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                },
                "local_ssds": {
                  "aliases": [],
                  "description": "The amount of local ssd to reserve with each instance. This reserves disks of type `local-ssd`.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "disk_size_gb": {
                      "aliases": [],
                      "description": "The size of the disk in base-2 GB.",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    },
                    "interface": {
                      "aliases": [],
                      "description": "The disk interface to use for attaching this disk.\nSome valid choices include: \"SCSI\", \"NVME\"",
                      "default": "SCSI",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "machine_type": {
                  "aliases": [],
                  "description": "The name of the machine type to reserve.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "min_cpu_platform": {
                  "aliases": [],
                  "description": "The minimum CPU platform for the reservation. For example, `\"Intel Skylake\"`. See U(https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform#availablezones) for information on available CPU platforms.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "specific_reservation_required": {
          "aliases": [],
          "description": "When set to true, only VMs that target this reservation by name can consume this reservation. Otherwise, it can be consumed by VMs with affinity for any reservation. Defaults to false.",
          "default": "false",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "The zone where the reservation is made.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Reservation"
    },
    "examples": "\n- name: create a reservation\n  google.cloud.gcp_compute_reservation:\n    name: test_object\n    zone: us-central1-a\n    specific_reservation:\n      count: 1\n      instance_properties:\n        min_cpu_platform: Intel Cascade Lake\n        machine_type: n2-standard-2\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_reservation_info": {
    "doc": {
      "description": "Gather info for GCP Reservation",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "The zone where the reservation is made.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Reservation"
    },
    "examples": "\n- name: get info on a reservation\n  gcp_compute_reservation_info:\n    zone: us-central1-a\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_resource_policy": {
    "doc": {
      "description": "A policy that can be attached to a resource to specify or schedule actions on that resource.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "group_placement_policy": {
          "aliases": [],
          "description": "Policy for creating snapshots of persistent disks.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "availability_domain_count": {
              "aliases": [],
              "description": "The number of availability domains instances will be spread across. If two instances are in different availability domain, they will not be put in the same low latency network .",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "collocation": {
              "aliases": [],
              "description": "Collocation specifies whether to place VMs inside the same availability domain on the same low-latency network.\nSpecify `COLLOCATED` to enable collocation. Can only be specified with `vm_count`. If compute instances are created with a COLLOCATED policy, then exactly `vm_count` instances must be created at the same time with the resource policy attached.\nSome valid choices include: \"COLLOCATED\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "vm_count": {
              "aliases": [],
              "description": "Number of vms in this placement group.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])`? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "Region where resource policy resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "snapshot_schedule_policy": {
          "aliases": [],
          "description": "Policy for creating snapshots of persistent disks.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "retention_policy": {
              "aliases": [],
              "description": "Retention policy applied to snapshots created by this resource policy.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "max_retention_days": {
                  "aliases": [],
                  "description": "Maximum age of the snapshot that is allowed to be kept.",
                  "type": "int",
                  "required": true,
                  "suboptions": {}
                },
                "on_source_disk_delete": {
                  "aliases": [],
                  "description": "Specifies the behavior to apply to scheduled snapshots when the source disk is deleted.\nSome valid choices include: \"KEEP_AUTO_SNAPSHOTS\", \"APPLY_RETENTION_POLICY\"",
                  "default": "KEEP_AUTO_SNAPSHOTS",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "schedule": {
              "aliases": [],
              "description": "Contains one of an `hourlySchedule`, `dailySchedule`, or `weeklySchedule`.",
              "type": "dict",
              "required": true,
              "suboptions": {
                "daily_schedule": {
                  "aliases": [],
                  "description": "The policy will execute every nth day at the specified time.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "days_in_cycle": {
                      "aliases": [],
                      "description": "The number of days between snapshots.",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    },
                    "start_time": {
                      "aliases": [],
                      "description": "This must be in UTC format that resolves to one of 00:00, 04:00, 08:00, 12:00, 16:00, or 20:00. For example, both 13:00-5 and 08:00 are valid.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                },
                "hourly_schedule": {
                  "aliases": [],
                  "description": "The policy will execute every nth hour starting at the specified time.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "hours_in_cycle": {
                      "aliases": [],
                      "description": "The number of hours between snapshots.",
                      "type": "int",
                      "required": true,
                      "suboptions": {}
                    },
                    "start_time": {
                      "aliases": [],
                      "description": "Time within the window to start the operations.\nIt must be in an hourly format \"HH:MM\", where HH : [00-23] and MM : [00] GMT.\neg: 21:00 .",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                },
                "weekly_schedule": {
                  "aliases": [],
                  "description": "Allows specifying a snapshot time for each day of the week.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "day_of_weeks": {
                      "aliases": [],
                      "description": "May contain up to seven (one for each day of the week) snapshot times.",
                      "type": "list",
                      "required": true,
                      "elements": "dict",
                      "suboptions": {
                        "day": {
                          "aliases": [],
                          "description": "The day of the week to create the snapshot. e.g. MONDAY .\nSome valid choices include: \"MONDAY\", \"TUESDAY\", \"WEDNESDAY\", \"THURSDAY\", \"FRIDAY\", \"SATURDAY\", \"SUNDAY\"",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "start_time": {
                          "aliases": [],
                          "description": "Time within the window to start the operations.\nIt must be in format \"HH:MM\", where HH : [00-23] and MM : [00-00] GMT.",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                }
              }
            },
            "snapshot_properties": {
              "aliases": [],
              "description": "Properties with which the snapshots are created, such as labels.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "guest_flush": {
                  "aliases": [],
                  "description": "Whether to perform a 'guest aware' snapshot.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "labels": {
                  "aliases": [],
                  "description": "A set of key-value pairs.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {}
                },
                "storage_locations": {
                  "aliases": [],
                  "description": "Cloud Storage bucket location to store the auto snapshot (regional or multi-regional) .",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                }
              }
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP ResourcePolicy"
    },
    "examples": "\n- name: create a resource policy\n  google.cloud.gcp_compute_resource_policy:\n    name: test_object\n    region: us-central1\n    snapshot_schedule_policy:\n      schedule:\n        daily_schedule:\n          days_in_cycle: 1\n          start_time: '04:00'\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_resource_policy_info": {
    "doc": {
      "description": "Gather info for GCP ResourcePolicy",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "Region where resource policy resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP ResourcePolicy"
    },
    "examples": "\n- name: get info on a resource policy\n  gcp_compute_resource_policy_info:\n    region: us-central1\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_route": {
    "doc": {
      "description": "Represents a Route resource.\nA route is a rule that specifies how certain packets should be handled by the virtual network. Routes are associated with virtual machines by tag, and the set of routes for a particular virtual machine is called its routing table. For each packet leaving a virtual machine, the system searches that virtual machine's routing table for a single best matching route.\nRoutes match packets by destination IP address, preferring smaller or more specific ranges over larger ones. If there is a tie, the system selects the route with the smallest priority value. If there is still a tie, it uses the layer three and four packet headers to select just one of the remaining matching routes. The packet is then forwarded as specified by the next_hop field of the winning route -- either to another virtual machine destination, a virtual machine gateway or a Compute Engine-operated gateway. Packets that do not match any route in the sending virtual machine's routing table will be dropped.\nA Route resource must have exactly one specification of either nextHopGateway, nextHopInstance, nextHopIp, nextHopVpnTunnel, or nextHopIlb.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/routes)\nUsing Routes: U(https://cloud.google.com/vpc/docs/using-routes)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. Provide this property when you create the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dest_range": {
          "aliases": [],
          "description": "The destination range of outgoing packets that this route applies to.\nOnly IPv4 is supported.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network": {
          "aliases": [],
          "description": "The network that this route applies to.\nThis field represents a link to a Network resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_network task and then set this network field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "next_hop_gateway": {
          "aliases": [],
          "description": "URL to a gateway that should handle matching packets.\nCurrently, you can only specify the internet gateway, using a full or partial valid URL: * U(https://www.googleapis.com/compute/v1/projects/project/global/gateways/default-internet-gateway) * projects/project/global/gateways/default-internet-gateway * global/gateways/default-internet-gateway .",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "next_hop_ilb": {
          "aliases": [],
          "description": "The URL to a forwarding rule of type loadBalancingScheme=INTERNAL that should handle matching packets.\nYou can only specify the forwarding rule as a partial or full URL. For example, the following are all valid URLs: U(https://www.googleapis.com/compute/v1/projects/project/regions/region/forwardingRules/forwardingRule) regions/region/forwardingRules/forwardingRule Note that this can only be used when the destinationRange is a public (non-RFC 1918) IP CIDR range.\nThis field represents a link to a ForwardingRule resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_forwarding_rule task and then set this next_hop_ilb field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "next_hop_instance": {
          "aliases": [],
          "description": "URL to an instance that should handle matching packets.\nYou can specify this as a full or partial URL. For example: * U(https://www.googleapis.com/compute/v1/projects/project/zones/zone/) instances/instance * projects/project/zones/zone/instances/instance * zones/zone/instances/instance .\nThis field represents a link to a Instance resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_instance task and then set this next_hop_instance field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "next_hop_ip": {
          "aliases": [],
          "description": "Network IP address of an instance that should handle matching packets.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "next_hop_vpn_tunnel": {
          "aliases": [],
          "description": "URL to a VpnTunnel that should handle matching packets.\nThis field represents a link to a VpnTunnel resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_vpn_tunnel task and then set this next_hop_vpn_tunnel field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "priority": {
          "aliases": [],
          "description": "The priority of this route. Priority is used to break ties in cases where there is more than one matching route of equal prefix length.\nIn the case of two routes with equal prefix length, the one with the lowest-numbered priority value wins.\nDefault value is 1000. Valid range is 0 through 65535.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tags": {
          "aliases": [],
          "description": "A list of instance tags to which this route applies.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Route"
    },
    "examples": "\n- name: create a network\n  google.cloud.gcp_compute_network:\n    name: network-route\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: network\n\n- name: create a route\n  google.cloud.gcp_compute_route:\n    name: test_object\n    dest_range: 192.168.6.0/24\n    next_hop_gateway: global/gateways/default-internet-gateway\n    network: \"{{ network }}\"\n    tags:\n    - backends\n    - databases\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_route_info": {
    "doc": {
      "description": "Gather info for GCP Route",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Route"
    },
    "examples": "\n- name: get info on a route\n  gcp_compute_route_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_router": {
    "doc": {
      "description": "Represents a Router resource.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/routers)\nGoogle Cloud Router: U(https://cloud.google.com/router/docs/)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "bgp": {
          "aliases": [],
          "description": "BGP information specific to this router.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "advertise_mode": {
              "aliases": [],
              "description": "User-specified flag to indicate which mode to use for advertisement.\nSome valid choices include: \"DEFAULT\", \"CUSTOM\"",
              "default": "DEFAULT",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "advertised_groups": {
              "aliases": [],
              "description": "User-specified list of prefix groups to advertise in custom mode.\nThis field can only be populated if advertiseMode is CUSTOM and is advertised to all peers of the router. These groups will be advertised in addition to any specified prefixes. Leave this field blank to advertise no custom groups.\nThis enum field has the one valid value: ALL_SUBNETS .",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "advertised_ip_ranges": {
              "aliases": [],
              "description": "User-specified list of individual IP ranges to advertise in custom mode. This field can only be populated if advertiseMode is CUSTOM and is advertised to all peers of the router. These IP ranges will be advertised in addition to any specified groups.\nLeave this field blank to advertise no custom IP ranges.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "description": {
                  "aliases": [],
                  "description": "User-specified description for the IP range.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "range": {
                  "aliases": [],
                  "description": "The IP range to advertise. The value must be a CIDR-formatted string.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "asn": {
              "aliases": [],
              "description": "Local BGP Autonomous System Number (ASN). Must be an RFC6996 private ASN, either 16-bit or 32-bit. The value will be fixed for this router resource. All VPN tunnels that link to this router will have the same local ASN.",
              "type": "int",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network": {
          "aliases": [],
          "description": "A reference to the network to which this router belongs.\nThis field represents a link to a Network resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_network task and then set this network field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "Region where the router resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Router"
    },
    "examples": "\n- name: create a network\n  google.cloud.gcp_compute_network:\n    name: network-router\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: network\n\n- name: create a router\n  google.cloud.gcp_compute_router:\n    name: test_object\n    network: \"{{ network }}\"\n    bgp:\n      asn: 64514\n      advertise_mode: CUSTOM\n      advertised_groups:\n      - ALL_SUBNETS\n      advertised_ip_ranges:\n      - range: 1.2.3.4\n      - range: 6.7.0.0/16\n    region: us-central1\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_router_info": {
    "doc": {
      "description": "Gather info for GCP Router",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "Region where the router resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Router"
    },
    "examples": "\n- name: get info on a router\n  gcp_compute_router_info:\n    region: us-central1\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_snapshot": {
    "doc": {
      "description": "Represents a Persistent Disk Snapshot resource.\nUse snapshots to back up data from your persistent disks. Snapshots are different from public images and custom images, which are used primarily to create instances or configure instance templates. Snapshots are useful for periodic backup of the data on your persistent disks. You can create snapshots from persistent disks even while they are attached to running instances.\nSnapshots are incremental, so you can create regular snapshots on a persistent disk faster and at a much lower cost than if you regularly created a full image of the disk.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/snapshots)\nOfficial Documentation: U(https://cloud.google.com/compute/docs/disks/create-snapshots)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "labels": {
          "aliases": [],
          "description": "Labels to apply to this Snapshot.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "snapshot_encryption_key": {
          "aliases": [],
          "description": "The customer-supplied encryption key of the snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "kms_key_name": {
              "aliases": [],
              "description": "The name of the encryption key that is stored in Google Cloud KMS.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "kms_key_service_account": {
              "aliases": [],
              "description": "The service account used for the encryption request for the given KMS key.\nIf absent, the Compute Engine Service Agent service account is used.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "raw_key": {
              "aliases": [],
              "description": "Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "source_disk": {
          "aliases": [],
          "description": "A reference to the disk used to create this snapshot.\nThis field represents a link to a Disk resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_compute_disk task and then set this source_disk field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "source_disk_encryption_key": {
          "aliases": [],
          "description": "The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "kms_key_name": {
              "aliases": [],
              "description": "The name of the encryption key that is stored in Google Cloud KMS.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "kms_key_service_account": {
              "aliases": [],
              "description": "The service account used for the encryption request for the given KMS key.\nIf absent, the Compute Engine Service Agent service account is used.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "raw_key": {
              "aliases": [],
              "description": "Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "storage_locations": {
          "aliases": [],
          "description": "Cloud Storage bucket storage location of the snapshot (regional or multi-regional).",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "A reference to the zone where the disk is hosted.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Snapshot"
    },
    "examples": "\n- name: create a disk\n  google.cloud.gcp_compute_disk:\n    name: disk-snapshot\n    zone: us-central1-a\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: disk\n\n- name: create a snapshot\n  google.cloud.gcp_compute_snapshot:\n    name: test_object\n    source_disk: \"{{ disk }}\"\n    zone: us-central1-a\n    labels:\n      my_label: value\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_snapshot_info": {
    "doc": {
      "description": "Gather info for GCP Snapshot",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Snapshot"
    },
    "examples": "\n- name: get info on a snapshot\n  gcp_compute_snapshot_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_ssl_certificate": {
    "doc": {
      "description": "An SslCertificate resource, used for HTTPS load balancing. This resource provides a mechanism to upload an SSL key and certificate to the load balancer to serve secure connections from the user.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/sslCertificates)\nOfficial Documentation: U(https://cloud.google.com/load-balancing/docs/ssl-certificates)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "certificate": {
          "aliases": [],
          "description": "The certificate in PEM format.\nThe certificate chain must be no greater than 5 certs long.\nThe chain must include at least one intermediate cert.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "private_key": {
          "aliases": [],
          "description": "The write-only private key in PEM format.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP SslCertificate"
    },
    "examples": "\n- name: create a SSL certificate\n  google.cloud.gcp_compute_ssl_certificate:\n    name: test_object\n    region: us-central1\n    description: A certificate for testing. Do not use this certificate in production\n    certificate: |-\n      -----BEGIN CERTIFICATE-----\n      MIICqjCCAk+gAwIBAgIJAIuJ+0352Kq4MAoGCCqGSM49BAMCMIGwMQswCQYDVQQG\n      EwJVUzETMBEGA1UECAwKV2FzaGluZ3RvbjERMA8GA1UEBwwIS2lya2xhbmQxFTAT\n      BgNVBAoMDEdvb2dsZSwgSW5jLjEeMBwGA1UECwwVR29vZ2xlIENsb3VkIFBsYXRm\n      b3JtMR8wHQYDVQQDDBZ3d3cubXktc2VjdXJlLXNpdGUuY29tMSEwHwYJKoZIhvcN\n      AQkBFhJuZWxzb25hQGdvb2dsZS5jb20wHhcNMTcwNjI4MDQ1NjI2WhcNMjcwNjI2\n      MDQ1NjI2WjCBsDELMAkGA1UEBhMCVVMxEzARBgNVBAgMCldhc2hpbmd0b24xETAP\n      BgNVBAcMCEtpcmtsYW5kMRUwEwYDVQQKDAxHb29nbGUsIEluYy4xHjAcBgNVBAsM\n      FUdvb2dsZSBDbG91ZCBQbGF0Zm9ybTEfMB0GA1UEAwwWd3d3Lm15LXNlY3VyZS1z\n      aXRlLmNvbTEhMB8GCSqGSIb3DQEJARYSbmVsc29uYUBnb29nbGUuY29tMFkwEwYH\n      KoZIzj0CAQYIKoZIzj0DAQcDQgAEHGzpcRJ4XzfBJCCPMQeXQpTXwlblimODQCuQ\n      4mzkzTv0dXyB750fOGN02HtkpBOZzzvUARTR10JQoSe2/5PIwaNQME4wHQYDVR0O\n      BBYEFKIQC3A2SDpxcdfn0YLKineDNq/BMB8GA1UdIwQYMBaAFKIQC3A2SDpxcdfn\n      0YLKineDNq/BMAwGA1UdEwQFMAMBAf8wCgYIKoZIzj0EAwIDSQAwRgIhALs4vy+O\n      M3jcqgA4fSW/oKw6UJxp+M6a+nGMX+UJR3YgAiEAvvl39QRVAiv84hdoCuyON0lJ\n      zqGNhIPGq2ULqXKK8BY=\n      -----END CERTIFICATE-----\n    private_key: |-\n      -----BEGIN EC PRIVATE KEY-----\n      MHcCAQEEIObtRo8tkUqoMjeHhsOh2ouPpXCgBcP+EDxZCB/tws15oAoGCCqGSM49\n      AwEHoUQDQgAEHGzpcRJ4XzfBJCCPMQeXQpTXwlblimODQCuQ4mzkzTv0dXyB750f\n      OGN02HtkpBOZzzvUARTR10JQoSe2/5PIwQ==\n      -----END EC PRIVATE KEY-----\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_ssl_certificate_info": {
    "doc": {
      "description": "Gather info for GCP SslCertificate",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP SslCertificate"
    },
    "examples": "\n- name: get info on a SSL certificate\n  gcp_compute_ssl_certificate_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_ssl_policy": {
    "doc": {
      "description": "Represents a SSL policy. SSL policies give you the ability to control the features of SSL that your SSL proxy or HTTPS load balancer negotiates.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/sslPolicies)\nUsing SSL Policies: U(https://cloud.google.com/compute/docs/load-balancing/ssl-policies)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "custom_features": {
          "aliases": [],
          "description": "A list of features enabled when the selected profile is CUSTOM. The method returns the set of features that can be specified in this list. This field must be empty if the profile is not CUSTOM.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "min_tls_version": {
          "aliases": [],
          "description": "The minimum version of SSL protocol that can be used by the clients to establish a connection with the load balancer.\nSome valid choices include: \"TLS_1_0\", \"TLS_1_1\", \"TLS_1_2\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "profile": {
          "aliases": [],
          "description": "Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. If using `CUSTOM`, the set of SSL features to enable must be specified in the `customFeatures` field.\nSome valid choices include: \"COMPATIBLE\", \"MODERN\", \"RESTRICTED\", \"CUSTOM\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP SslPolicy"
    },
    "examples": "\n- name: create a SSL policy\n  google.cloud.gcp_compute_ssl_policy:\n    name: test_object\n    profile: CUSTOM\n    min_tls_version: TLS_1_2\n    custom_features:\n    - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n    - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_ssl_policy_info": {
    "doc": {
      "description": "Gather info for GCP SslPolicy",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP SslPolicy"
    },
    "examples": "\n- name: get info on a SSL policy\n  gcp_compute_ssl_policy_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_subnetwork": {
    "doc": {
      "description": "A VPC network is a virtual version of the traditional physical networks that exist within and between physical data centers. A VPC network provides connectivity for your Compute Engine virtual machine (VM) instances, Container Engine containers, App Engine Flex services, and other network-related resources.\nEach GCP project contains one or more VPC networks. Each VPC network is a global entity spanning all GCP regions. This global VPC network allows VM instances and other resources to communicate with each other via internal, private IP addresses.\nEach VPC network is subdivided into subnets, and each subnet is contained within a single region. You can have more than one subnet in a region for a given VPC network. Each subnet has a contiguous private RFC1918 IP space. You create instances, containers, and the like in these subnets.\nWhen you create an instance, you must create it in a subnet, and the instance draws its internal IP address from that subnet.\nVirtual machine (VM) instances in a VPC network can communicate with instances in all other subnets of the same VPC network, regardless of region, using their RFC1918 private IP addresses. You can isolate portions of the network, even entire subnets, using firewall rules.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/subnetworks)\nPrivate Google Access: U(https://cloud.google.com/vpc/docs/configure-private-google-access)\nCloud Networking: U(https://cloud.google.com/vpc/docs/using-vpc)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. Provide this property when you create the resource. This field can be set only at resource creation time.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ip_cidr_range": {
          "aliases": [],
          "description": "The range of internal addresses that are owned by this subnetwork.\nProvide this property when you create the subnetwork. For example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and non-overlapping within a network. Only IPv4 is supported.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the resource, provided by the client when initially creating the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network": {
          "aliases": [],
          "description": "The network this subnet belongs to.\nOnly networks that are in the distributed mode can have subnetworks.\nThis field represents a link to a Network resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_network task and then set this network field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "private_ip_google_access": {
          "aliases": [],
          "description": "When enabled, VMs in this subnetwork without external IP addresses can access Google APIs and services by using Private Google Access.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "private_ipv6_google_access": {
          "aliases": [],
          "description": "The private IPv6 google access type for the VMs in this subnet.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The GCP region for this subnetwork.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "secondary_ip_ranges": {
          "aliases": [],
          "description": "An array of configurations for secondary IP ranges for VM instances contained in this subnetwork. The primary IP of such VM must belong to the primary ipCidrRange of the subnetwork. The alias IPs may belong to either primary or secondary ranges.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "ip_cidr_range": {
              "aliases": [],
              "description": "The range of IP addresses belonging to this subnetwork secondary range. Provide this property when you create the subnetwork.\nRanges must be unique and non-overlapping with all primary and secondary IP ranges within a network. Only IPv4 is supported.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "range_name": {
              "aliases": [],
              "description": "The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the subnetwork.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Subnetwork"
    },
    "examples": "\n- name: create a network\n  google.cloud.gcp_compute_network:\n    name: network-subnetwork\n    auto_create_subnetworks: 'true'\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: network\n\n- name: create a subnetwork\n  google.cloud.gcp_compute_subnetwork:\n    name: ansiblenet\n    region: us-west1\n    network: \"{{ network }}\"\n    ip_cidr_range: 172.16.0.0/16\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_subnetwork_info": {
    "doc": {
      "description": "Gather info for GCP Subnetwork",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The GCP region for this subnetwork.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Subnetwork"
    },
    "examples": "\n- name: get info on a subnetwork\n  gcp_compute_subnetwork_info:\n    region: us-west1\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_target_http_proxy": {
    "doc": {
      "description": "Represents a TargetHttpProxy resource, which is used by one or more global forwarding rule to route incoming HTTP requests to a URL map.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/v1/targetHttpProxies)\nOfficial Documentation: U(https://cloud.google.com/compute/docs/load-balancing/http/target-proxies)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url_map": {
          "aliases": [],
          "description": "A reference to the UrlMap resource that defines the mapping from URL to the BackendService.\nThis field represents a link to a UrlMap resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_url_map task and then set this url_map field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP TargetHttpProxy"
    },
    "examples": "\n- name: create a instance group\n  google.cloud.gcp_compute_instance_group:\n    name: instancegroup-targethttpproxy\n    zone: us-central1-a\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instancegroup\n\n- name: create a HTTP health check\n  google.cloud.gcp_compute_http_health_check:\n    name: httphealthcheck-targethttpproxy\n    healthy_threshold: 10\n    port: 8080\n    timeout_sec: 2\n    unhealthy_threshold: 5\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: healthcheck\n\n- name: create a backend service\n  google.cloud.gcp_compute_backend_service:\n    name: backendservice-targethttpproxy\n    backends:\n    - group: \"{{ instancegroup.selfLink }}\"\n    health_checks:\n    - \"{{ healthcheck.selfLink }}\"\n    enable_cdn: 'true'\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: backendservice\n\n- name: create a URL map\n  google.cloud.gcp_compute_url_map:\n    name: urlmap-targethttpproxy\n    default_service: \"{{ backendservice }}\"\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: urlmap\n\n- name: create a target HTTP proxy\n  google.cloud.gcp_compute_target_http_proxy:\n    name: test_object\n    url_map: \"{{ urlmap }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_target_http_proxy_info": {
    "doc": {
      "description": "Gather info for GCP TargetHttpProxy",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP TargetHttpProxy"
    },
    "examples": "\n- name: get info on a target HTTP proxy\n  gcp_compute_target_http_proxy_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_target_https_proxy": {
    "doc": {
      "description": "Represents a TargetHttpsProxy resource, which is used by one or more global forwarding rule to route incoming HTTPS requests to a URL map.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/v1/targetHttpsProxies)\nOfficial Documentation: U(https://cloud.google.com/compute/docs/load-balancing/http/target-proxies)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "quic_override": {
          "aliases": [],
          "description": "Specifies the QUIC override policy for this resource. This determines whether the load balancer will attempt to negotiate QUIC with clients or not. Can specify one of NONE, ENABLE, or DISABLE. If NONE is specified, uses the QUIC policy with no user overrides, which is equivalent to DISABLE.\nSome valid choices include: \"NONE\", \"ENABLE\", \"DISABLE\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "ssl_certificates": {
          "aliases": [],
          "description": "A list of SslCertificate resources that are used to authenticate connections between users and the load balancer. At least one SSL certificate must be specified.",
          "type": "list",
          "required": true,
          "elements": "dict",
          "suboptions": {}
        },
        "ssl_policy": {
          "aliases": [],
          "description": "A reference to the SslPolicy resource that will be associated with the TargetHttpsProxy resource. If not set, the TargetHttpsProxy resource will not have any SSL policy configured.\nThis field represents a link to a SslPolicy resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_ssl_policy task and then set this ssl_policy field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url_map": {
          "aliases": [],
          "description": "A reference to the UrlMap resource that defines the mapping from URL to the BackendService.\nThis field represents a link to a UrlMap resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_url_map task and then set this url_map field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP TargetHttpsProxy"
    },
    "examples": "\n- name: create a instance group\n  google.cloud.gcp_compute_instance_group:\n    name: instancegroup-targethttpsproxy\n    zone: us-central1-a\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instancegroup\n\n- name: create a HTTP health check\n  google.cloud.gcp_compute_http_health_check:\n    name: httphealthcheck-targethttpsproxy\n    healthy_threshold: 10\n    port: 8080\n    timeout_sec: 2\n    unhealthy_threshold: 5\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: healthcheck\n\n- name: create a backend service\n  google.cloud.gcp_compute_backend_service:\n    name: backendservice-targethttpsproxy\n    backends:\n    - group: \"{{ instancegroup.selfLink }}\"\n    health_checks:\n    - \"{{ healthcheck.selfLink }}\"\n    enable_cdn: 'true'\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: backendservice\n\n- name: create a URL map\n  google.cloud.gcp_compute_url_map:\n    name: urlmap-targethttpsproxy\n    default_service: \"{{ backendservice }}\"\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: urlmap\n\n- name: create a SSL certificate\n  google.cloud.gcp_compute_ssl_certificate:\n    name: sslcert-targethttpsproxy\n    description: A certificate for testing. Do not use this certificate in production\n    certificate: |-\n      -----BEGIN CERTIFICATE-----\n      MIICqjCCAk+gAwIBAgIJAIuJ+0352Kq4MAoGCCqGSM49BAMCMIGwMQswCQYDVQQG\n      EwJVUzETMBEGA1UECAwKV2FzaGluZ3RvbjERMA8GA1UEBwwIS2lya2xhbmQxFTAT\n      BgNVBAoMDEdvb2dsZSwgSW5jLjEeMBwGA1UECwwVR29vZ2xlIENsb3VkIFBsYXRm\n      b3JtMR8wHQYDVQQDDBZ3d3cubXktc2VjdXJlLXNpdGUuY29tMSEwHwYJKoZIhvcN\n      AQkBFhJuZWxzb25hQGdvb2dsZS5jb20wHhcNMTcwNjI4MDQ1NjI2WhcNMjcwNjI2\n      MDQ1NjI2WjCBsDELMAkGA1UEBhMCVVMxEzARBgNVBAgMCldhc2hpbmd0b24xETAP\n      BgNVBAcMCEtpcmtsYW5kMRUwEwYDVQQKDAxHb29nbGUsIEluYy4xHjAcBgNVBAsM\n      FUdvb2dsZSBDbG91ZCBQbGF0Zm9ybTEfMB0GA1UEAwwWd3d3Lm15LXNlY3VyZS1z\n      aXRlLmNvbTEhMB8GCSqGSIb3DQEJARYSbmVsc29uYUBnb29nbGUuY29tMFkwEwYH\n      KoZIzj0CAQYIKoZIzj0DAQcDQgAEHGzpcRJ4XzfBJCCPMQeXQpTXwlblimODQCuQ\n      4mzkzTv0dXyB750fOGN02HtkpBOZzzvUARTR10JQoSe2/5PIwaNQME4wHQYDVR0O\n      BBYEFKIQC3A2SDpxcdfn0YLKineDNq/BMB8GA1UdIwQYMBaAFKIQC3A2SDpxcdfn\n      0YLKineDNq/BMAwGA1UdEwQFMAMBAf8wCgYIKoZIzj0EAwIDSQAwRgIhALs4vy+O\n      M3jcqgA4fSW/oKw6UJxp+M6a+nGMX+UJR3YgAiEAvvl39QRVAiv84hdoCuyON0lJ\n      zqGNhIPGq2ULqXKK8BY=\n      -----END CERTIFICATE-----\n    private_key: |-\n      -----BEGIN EC PRIVATE KEY-----\n      MHcCAQEEIObtRo8tkUqoMjeHhsOh2ouPpXCgBcP+EDxZCB/tws15oAoGCCqGSM49\n      AwEHoUQDQgAEHGzpcRJ4XzfBJCCPMQeXQpTXwlblimODQCuQ4mzkzTv0dXyB750f\n      OGN02HtkpBOZzzvUARTR10JQoSe2/5PIwQ==\n      -----END EC PRIVATE KEY-----\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: sslcert\n\n- name: create a target HTTPS proxy\n  google.cloud.gcp_compute_target_https_proxy:\n    name: test_object\n    ssl_certificates:\n    - \"{{ sslcert }}\"\n    url_map: \"{{ urlmap }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_target_https_proxy_info": {
    "doc": {
      "description": "Gather info for GCP TargetHttpsProxy",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP TargetHttpsProxy"
    },
    "examples": "\n- name: get info on a target HTTPS proxy\n  gcp_compute_target_https_proxy_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_target_instance": {
    "doc": {
      "description": "Represents a TargetInstance resource which defines an endpoint instance that terminates traffic of certain protocols. In particular, they are used in Protocol Forwarding, where forwarding rules can send packets to a non-NAT'ed target instance. Each target instance contains a single virtual machine instance that receives and handles traffic from the corresponding forwarding rules.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/v1/targetInstances)\nUsing Protocol Forwarding: U(https://cloud.google.com/compute/docs/protocol-forwarding)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance": {
          "aliases": [],
          "description": "A URL to the virtual machine instance that handles traffic for this target instance. Accepts self-links or the partial paths with format `projects/project/zones/zone/instances/instance' or `zones/zone/instances/instance` .\nThis field represents a link to a Instance resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_instance task and then set this instance field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "nat_policy": {
          "aliases": [],
          "description": "NAT option controlling how IPs are NAT'ed to the instance.\nCurrently only NO_NAT (default value) is supported.\nSome valid choices include: \"NO_NAT\"",
          "default": "NO_NAT",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "URL of the zone where the target instance resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP TargetInstance"
    },
    "examples": "\n- name: create a network\n  google.cloud.gcp_compute_network:\n    name: network-instance\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: network\n\n- name: create a instance\n  google.cloud.gcp_compute_instance:\n    name: \"{{ resource_name }}\"\n    machine_type: n1-standard-1\n    disks:\n    - auto_delete: 'true'\n      boot: 'true'\n      initialize_params:\n        source_image: projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts\n    labels:\n      environment: production\n    network_interfaces:\n    - network: \"{{ network }}\"\n    zone: us-central1-a\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instance\n\n- name: create a target instance\n  google.cloud.gcp_compute_target_instance:\n    name: target\n    instance: \"{{ instance }}\"\n    zone: us-central1-a\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_target_instance_info": {
    "doc": {
      "description": "Gather info for GCP TargetInstance",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "URL of the zone where the target instance resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP TargetInstance"
    },
    "examples": "\n- name: get info on a target instance\n  gcp_compute_target_instance_info:\n    zone: us-central1-a\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_target_pool": {
    "doc": {
      "description": "Represents a TargetPool resource, used for Load Balancing.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/targetPools)\nOfficial Documentation: U(https://cloud.google.com/compute/docs/load-balancing/network/target-pools)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "backup_pool": {
          "aliases": [],
          "description": "This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool, and its failoverRatio field is properly set to a value between [0, 1].\nbackupPool and failoverRatio together define the fallback behavior of the primary target pool: if the ratio of the healthy instances in the primary pool is at or below failoverRatio, traffic arriving at the load-balanced IP will be directed to the backup pool.\nIn case where failoverRatio and backupPool are not set, or all the instances in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the \"force\" mode, where traffic will be spread to the healthy instances with the best effort, or to all instances when no instance is healthy.\nThis field represents a link to a TargetPool resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_target_pool task and then set this backup_pool field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "failover_ratio": {
          "aliases": [],
          "description": "This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool (i.e., not as a backup pool to some other target pool). The value of the field must be in [0, 1].\nIf set, backupPool must also be set. They together define the fallback behavior of the primary target pool: if the ratio of the healthy instances in the primary pool is at or below this number, traffic arriving at the load-balanced IP will be directed to the backup pool.\nIn case where failoverRatio is not set or all the instances in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the \"force\" mode, where traffic will be spread to the healthy instances with the best effort, or to all instances when no instance is healthy.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "health_check": {
          "aliases": [],
          "description": "A reference to a HttpHealthCheck resource.\nA member instance in this pool is considered healthy if and only if the health checks pass. If not specified it means all member instances will be considered healthy at all times.\nThis field represents a link to a HttpHealthCheck resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_http_health_check task and then set this health_check field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "instances": {
          "aliases": [],
          "description": "A list of virtual machine instances serving this pool.\nThey must live in zones contained in the same region as this pool.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The region where the target pool resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "session_affinity": {
          "aliases": [],
          "description": "Session affinity option. Must be one of these values: * NONE: Connections from the same client IP may go to any instance in the pool.\n* CLIENT_IP: Connections from the same client IP will go to the same instance in the pool while that instance remains healthy.\n* CLIENT_IP_PROTO: Connections from the same client IP with the same IP protocol will go to the same instance in the pool while that instance remains healthy.\nSome valid choices include: \"NONE\", \"CLIENT_IP\", \"CLIENT_IP_PROTO\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP TargetPool"
    },
    "examples": "\n- name: create a target pool\n  google.cloud.gcp_compute_target_pool:\n    name: test_object\n    region: us-west1\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_target_pool_info": {
    "doc": {
      "description": "Gather info for GCP TargetPool",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The region where the target pool resides.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP TargetPool"
    },
    "examples": "\n- name: get info on a target pool\n  gcp_compute_target_pool_info:\n    region: us-west1\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_target_ssl_proxy": {
    "doc": {
      "description": "Represents a TargetSslProxy resource, which is used by one or more global forwarding rule to route incoming SSL requests to a backend service.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/v1/targetSslProxies)\nSetting Up SSL proxy for Google Cloud Load Balancing: U(https://cloud.google.com/compute/docs/load-balancing/tcp-ssl/)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "proxy_header": {
          "aliases": [],
          "description": "Specifies the type of proxy header to append before sending data to the backend.\nSome valid choices include: \"NONE\", \"PROXY_V1\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service": {
          "aliases": [],
          "description": "A reference to the BackendService resource.\nThis field represents a link to a BackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_backend_service task and then set this service field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "ssl_certificates": {
          "aliases": [],
          "description": "A list of SslCertificate resources that are used to authenticate connections between users and the load balancer. Currently, exactly one SSL certificate must be specified.",
          "type": "list",
          "required": true,
          "elements": "dict",
          "suboptions": {}
        },
        "ssl_policy": {
          "aliases": [],
          "description": "A reference to the SslPolicy resource that will be associated with the TargetSslProxy resource. If not set, the TargetSslProxy resource will not have any SSL policy configured.\nThis field represents a link to a SslPolicy resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_ssl_policy task and then set this ssl_policy field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP TargetSslProxy"
    },
    "examples": "\n- name: create a instance group\n  google.cloud.gcp_compute_instance_group:\n    name: instancegroup-targetsslproxy\n    zone: us-central1-a\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instancegroup\n\n- name: create a health check\n  google.cloud.gcp_compute_health_check:\n    name: healthcheck-targetsslproxy\n    type: TCP\n    tcp_health_check:\n      port_name: service-health\n      request: ping\n      response: pong\n    healthy_threshold: 10\n    timeout_sec: 2\n    unhealthy_threshold: 5\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: healthcheck\n\n- name: create a backend service\n  google.cloud.gcp_compute_backend_service:\n    name: backendservice-targetsslproxy\n    backends:\n    - group: \"{{ instancegroup.selfLink }}\"\n    health_checks:\n    - \"{{ healthcheck.selfLink }}\"\n    protocol: SSL\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: backendservice\n\n- name: create a SSL certificate\n  google.cloud.gcp_compute_ssl_certificate:\n    name: sslcert-targetsslproxy\n    description: A certificate for testing. Do not use this certificate in production\n    certificate: |-\n      -----BEGIN CERTIFICATE-----\n      MIICqjCCAk+gAwIBAgIJAIuJ+0352Kq4MAoGCCqGSM49BAMCMIGwMQswCQYDVQQG\n      EwJVUzETMBEGA1UECAwKV2FzaGluZ3RvbjERMA8GA1UEBwwIS2lya2xhbmQxFTAT\n      BgNVBAoMDEdvb2dsZSwgSW5jLjEeMBwGA1UECwwVR29vZ2xlIENsb3VkIFBsYXRm\n      b3JtMR8wHQYDVQQDDBZ3d3cubXktc2VjdXJlLXNpdGUuY29tMSEwHwYJKoZIhvcN\n      AQkBFhJuZWxzb25hQGdvb2dsZS5jb20wHhcNMTcwNjI4MDQ1NjI2WhcNMjcwNjI2\n      MDQ1NjI2WjCBsDELMAkGA1UEBhMCVVMxEzARBgNVBAgMCldhc2hpbmd0b24xETAP\n      BgNVBAcMCEtpcmtsYW5kMRUwEwYDVQQKDAxHb29nbGUsIEluYy4xHjAcBgNVBAsM\n      FUdvb2dsZSBDbG91ZCBQbGF0Zm9ybTEfMB0GA1UEAwwWd3d3Lm15LXNlY3VyZS1z\n      aXRlLmNvbTEhMB8GCSqGSIb3DQEJARYSbmVsc29uYUBnb29nbGUuY29tMFkwEwYH\n      KoZIzj0CAQYIKoZIzj0DAQcDQgAEHGzpcRJ4XzfBJCCPMQeXQpTXwlblimODQCuQ\n      4mzkzTv0dXyB750fOGN02HtkpBOZzzvUARTR10JQoSe2/5PIwaNQME4wHQYDVR0O\n      BBYEFKIQC3A2SDpxcdfn0YLKineDNq/BMB8GA1UdIwQYMBaAFKIQC3A2SDpxcdfn\n      0YLKineDNq/BMAwGA1UdEwQFMAMBAf8wCgYIKoZIzj0EAwIDSQAwRgIhALs4vy+O\n      M3jcqgA4fSW/oKw6UJxp+M6a+nGMX+UJR3YgAiEAvvl39QRVAiv84hdoCuyON0lJ\n      zqGNhIPGq2ULqXKK8BY=\n      -----END CERTIFICATE-----\n    private_key: |-\n      -----BEGIN EC PRIVATE KEY-----\n      MHcCAQEEIObtRo8tkUqoMjeHhsOh2ouPpXCgBcP+EDxZCB/tws15oAoGCCqGSM49\n      AwEHoUQDQgAEHGzpcRJ4XzfBJCCPMQeXQpTXwlblimODQCuQ4mzkzTv0dXyB750f\n      OGN02HtkpBOZzzvUARTR10JQoSe2/5PIwQ==\n      -----END EC PRIVATE KEY-----\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: sslcert\n\n- name: create a target SSL proxy\n  google.cloud.gcp_compute_target_ssl_proxy:\n    name: test_object\n    ssl_certificates:\n    - \"{{ sslcert }}\"\n    service: \"{{ backendservice }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_target_ssl_proxy_info": {
    "doc": {
      "description": "Gather info for GCP TargetSslProxy",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP TargetSslProxy"
    },
    "examples": "\n- name: get info on a target SSL proxy\n  gcp_compute_target_ssl_proxy_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_target_tcp_proxy": {
    "doc": {
      "description": "Represents a TargetTcpProxy resource, which is used by one or more global forwarding rule to route incoming TCP requests to a Backend service.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/v1/targetTcpProxies)\nSetting Up TCP proxy for Google Cloud Load Balancing: U(https://cloud.google.com/compute/docs/load-balancing/tcp-ssl/tcp-proxy)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "proxy_header": {
          "aliases": [],
          "description": "Specifies the type of proxy header to append before sending data to the backend.\nSome valid choices include: \"NONE\", \"PROXY_V1\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service": {
          "aliases": [],
          "description": "A reference to the BackendService resource.\nThis field represents a link to a BackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_backend_service task and then set this service field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP TargetTcpProxy"
    },
    "examples": "\n- name: create a instance group\n  google.cloud.gcp_compute_instance_group:\n    name: instancegroup-targettcpproxy\n    zone: us-central1-a\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instancegroup\n\n- name: create a health check\n  google.cloud.gcp_compute_health_check:\n    name: healthcheck-targettcpproxy\n    type: TCP\n    tcp_health_check:\n      port_name: service-health\n      request: ping\n      response: pong\n    healthy_threshold: 10\n    timeout_sec: 2\n    unhealthy_threshold: 5\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: healthcheck\n\n- name: create a backend service\n  google.cloud.gcp_compute_backend_service:\n    name: backendservice-targettcpproxy\n    backends:\n    - group: \"{{ instancegroup.selfLink }}\"\n    health_checks:\n    - \"{{ healthcheck.selfLink }}\"\n    protocol: TCP\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: backendservice\n\n- name: create a target TCP proxy\n  google.cloud.gcp_compute_target_tcp_proxy:\n    name: test_object\n    proxy_header: PROXY_V1\n    service: \"{{ backendservice }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_target_tcp_proxy_info": {
    "doc": {
      "description": "Gather info for GCP TargetTcpProxy",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP TargetTcpProxy"
    },
    "examples": "\n- name: get info on a target TCP proxy\n  gcp_compute_target_tcp_proxy_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_target_vpn_gateway": {
    "doc": {
      "description": "Represents a VPN gateway running in GCP. This virtual device is managed by Google, but used only by you.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/targetVpnGateways)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network": {
          "aliases": [],
          "description": "The network this VPN gateway is accepting traffic for.\nThis field represents a link to a Network resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_network task and then set this network field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The region this gateway should sit in.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP TargetVpnGateway"
    },
    "examples": "\n- name: create a address\n  google.cloud.gcp_compute_address:\n    name: address-vpngateway\n    region: us-west1\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: address\n\n- name: create a network\n  google.cloud.gcp_compute_network:\n    name: network-vpngateway\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: network\n\n- name: create a target vpn gateway\n  google.cloud.gcp_compute_target_vpn_gateway:\n    name: test_object\n    region: us-west1\n    network: \"{{ network }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_target_vpn_gateway_info": {
    "doc": {
      "description": "Gather info for GCP TargetVpnGateway",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The region this gateway should sit in.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP TargetVpnGateway"
    },
    "examples": "\n- name: get info on a target vpn gateway\n  gcp_compute_target_vpn_gateway_info:\n    region: us-west1\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_url_map": {
    "doc": {
      "description": "UrlMaps are used to route requests to a backend service based on rules that you define for the host and path of an incoming URL.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/urlMaps)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "default_route_action": {
          "aliases": [],
          "description": "defaultRouteAction takes effect when none of the hostRules match. The load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend.\nIf defaultRouteAction specifies any weightedBackendServices, defaultService must not be set. Conversely if defaultService is set, defaultRouteAction cannot contain any weightedBackendServices.\nOnly one of defaultRouteAction or defaultUrlRedirect must be set.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "cors_policy": {
              "aliases": [],
              "description": "The specification for allowing client side cross-origin requests. Please see [W3C Recommendation for Cross Origin Resource Sharing](https://www.w3.org/TR/cors/) .",
              "type": "dict",
              "required": false,
              "suboptions": {
                "allow_credentials": {
                  "aliases": [],
                  "description": "In response to a preflight request, setting this to true indicates that the actual request can include user credentials.\nThis translates to the Access-Control-Allow-Credentials header.",
                  "default": "false",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "allow_headers": {
                  "aliases": [],
                  "description": "Specifies the content for the Access-Control-Allow-Headers header.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "allow_methods": {
                  "aliases": [],
                  "description": "Specifies the content for the Access-Control-Allow-Methods header.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "allow_origin_regexes": {
                  "aliases": [],
                  "description": "Specifies the regular expression patterns that match allowed origins. For regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript An origin is allowed if it matches either an item in allowOrigins or an item in allowOriginRegexes.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "allow_origins": {
                  "aliases": [],
                  "description": "Specifies the list of origins that will be allowed to do CORS requests.\nAn origin is allowed if it matches either an item in allowOrigins or an item in allowOriginRegexes.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "disabled": {
                  "aliases": [],
                  "description": "If true, specifies the CORS policy is disabled. The default value is false, which indicates that the CORS policy is in effect.",
                  "default": "false",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "expose_headers": {
                  "aliases": [],
                  "description": "Specifies the content for the Access-Control-Expose-Headers header.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "max_age": {
                  "aliases": [],
                  "description": "Specifies how long results of a preflight request can be cached in seconds.\nThis translates to the Access-Control-Max-Age header.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "fault_injection_policy": {
              "aliases": [],
              "description": "The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure.\nAs part of fault injection, when clients send requests to a backend service, delays can be introduced by Loadbalancer on a percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted by the Loadbalancer for a percentage of requests.\ntimeout and retryPolicy will be ignored by clients that are configured with a faultInjectionPolicy.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "abort": {
                  "aliases": [],
                  "description": "The specification for how client requests are aborted as part of fault injection.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "http_status": {
                      "aliases": [],
                      "description": "The HTTP status code used to abort the request.\nThe value must be between 200 and 599 inclusive.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "percentage": {
                      "aliases": [],
                      "description": "The percentage of traffic (connections/operations/requests) which will be aborted as part of fault injection.\nThe value must be between 0.0 and 100.0 inclusive.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "delay": {
                  "aliases": [],
                  "description": "The specification for how client requests are delayed as part of fault injection, before being sent to a backend service.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "fixed_delay": {
                      "aliases": [],
                      "description": "Specifies the value of the fixed delay interval.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "nanos": {
                          "aliases": [],
                          "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 seconds field and a positive nanos field. Must be from 0 to 999,999,999 inclusive.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "seconds": {
                          "aliases": [],
                          "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.\nNote: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years .",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "percentage": {
                      "aliases": [],
                      "description": "The percentage of traffic (connections/operations/requests) on which delay will be introduced as part of fault injection.\nThe value must be between 0.0 and 100.0 inclusive.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "request_mirror_policy": {
              "aliases": [],
              "description": "Specifies the policy on how requests intended for the route's backends are shadowed to a separate mirrored backend service.\nLoadbalancer does not wait for responses from the shadow service. Prior to sending traffic to the shadow service, the host / authority header is suffixed with -shadow.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "backend_service": {
                  "aliases": [],
                  "description": "The full or partial URL to the BackendService resource being mirrored to.\nThis field represents a link to a BackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_backend_service task and then set this backend_service field to \"{{ name-of-resource }}\"",
                  "type": "dict",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "retry_policy": {
              "aliases": [],
              "description": "Specifies the retry policy associated with this route.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "num_retries": {
                  "aliases": [],
                  "description": "Specifies the allowed number retries. This number must be > 0. If not specified, defaults to 1.",
                  "default": "1",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "per_try_timeout": {
                  "aliases": [],
                  "description": "Specifies a non-zero timeout per retry attempt.\nIf not specified, will use the timeout set in HttpRouteAction. If timeout in HttpRouteAction is not set, will use the largest timeout among all backend services associated with the route.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "nanos": {
                      "aliases": [],
                      "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 seconds field and a positive nanos field. Must be from 0 to 999,999,999 inclusive.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "seconds": {
                      "aliases": [],
                      "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.\nNote: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years .",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "retry_conditions": {
                  "aliases": [],
                  "description": "Specfies one or more conditions when this retry rule applies. Valid values are: * 5xx: Loadbalancer will attempt a retry if the backend service responds with any 5xx response code, or if the backend service does not respond at all, example: disconnects, reset, read timeout, * connection failure, and refused streams.\n* gateway-error: Similar to 5xx, but only applies to response codes 502, 503 or 504.\n* connect-failure: Loadbalancer will retry on failures connecting to backend services, for example due to connection timeouts.\n* retriable-4xx: Loadbalancer will retry for retriable 4xx response codes.\nCurrently the only retriable error supported is 409.\n* refused-stream:Loadbalancer will retry if the backend service resets the stream with a REFUSED_STREAM error code.\nThis reset type indicates that it is safe to retry.\n* cancelled: Loadbalancer will retry if the gRPC status code in the response header is set to cancelled * deadline-exceeded: Loadbalancer will retry if the gRPC status code in the response header is set to deadline-exceeded * resource-exhausted: Loadbalancer will retry if the gRPC status code in the response header is set to resource-exhausted * unavailable: Loadbalancer will retry if the gRPC status code in the response header is set to unavailable .",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                }
              }
            },
            "timeout": {
              "aliases": [],
              "description": "Specifies the timeout for the selected route. Timeout is computed from the time the request has been fully processed (i.e. end-of-stream) up until the response has been completely processed. Timeout includes all retries.\nIf not specified, will use the largest timeout among all backend services associated with the route.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "nanos": {
                  "aliases": [],
                  "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 seconds field and a positive nanos field. Must be from 0 to 999,999,999 inclusive.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "seconds": {
                  "aliases": [],
                  "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.\nNote: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years .",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "url_rewrite": {
              "aliases": [],
              "description": "The spec to modify the URL of the request, prior to forwarding the request to the matched service.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "host_rewrite": {
                  "aliases": [],
                  "description": "Prior to forwarding the request to the selected service, the request's host header is replaced with contents of hostRewrite.\nThe value must be between 1 and 255 characters.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "path_prefix_rewrite": {
                  "aliases": [],
                  "description": "Prior to forwarding the request to the selected backend service, the matching portion of the request's path is replaced by pathPrefixRewrite.\nThe value must be between 1 and 1024 characters.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "weighted_backend_services": {
              "aliases": [],
              "description": "A list of weighted backend services to send traffic to when a route match occurs.\nThe weights determine the fraction of traffic that flows to their corresponding backend service.\nIf all traffic needs to go to a single backend service, there must be one weightedBackendService with weight set to a non 0 number.\nOnce a backendService is identified and before forwarding the request to the backend service, advanced routing actions like Url rewrites and header transformations are applied depending on additional settings specified in this HttpRouteAction.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "backend_service": {
                  "aliases": [],
                  "description": "The full or partial URL to the default BackendService resource. Before forwarding the request to backendService, the loadbalancer applies any relevant headerActions specified as part of this backendServiceWeight.\nThis field represents a link to a BackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_backend_service task and then set this backend_service field to \"{{ name-of-resource }}\"",
                  "type": "dict",
                  "required": false,
                  "suboptions": {}
                },
                "header_action": {
                  "aliases": [],
                  "description": "Specifies changes to request and response headers that need to take effect for the selected backendService.\nheaderAction specified here take effect before headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "request_headers_to_add": {
                      "aliases": [],
                      "description": "Headers to add to a matching request prior to forwarding the request to the backendService.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "header_name": {
                          "aliases": [],
                          "description": "The name of the header to add.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "header_value": {
                          "aliases": [],
                          "description": "The value of the header to add.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "replace": {
                          "aliases": [],
                          "description": "If false, headerValue is appended to any values that already exist for the header.\nIf true, headerValue is set for the header, discarding any values that were set for that header.",
                          "default": "false",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "request_headers_to_remove": {
                      "aliases": [],
                      "description": "A list of header names for headers that need to be removed from the request prior to forwarding the request to the backendService.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "response_headers_to_add": {
                      "aliases": [],
                      "description": "Headers to add the response prior to sending the response back to the client.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "header_name": {
                          "aliases": [],
                          "description": "The name of the header to add.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "header_value": {
                          "aliases": [],
                          "description": "The value of the header to add.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "replace": {
                          "aliases": [],
                          "description": "If false, headerValue is appended to any values that already exist for the header.\nIf true, headerValue is set for the header, discarding any values that were set for that header.",
                          "default": "false",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "response_headers_to_remove": {
                      "aliases": [],
                      "description": "A list of header names for headers that need to be removed from the response prior to sending the response back to the client.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    }
                  }
                },
                "weight": {
                  "aliases": [],
                  "description": "Specifies the fraction of traffic sent to backendService, computed as weight / (sum of all weightedBackendService weights in routeAction) .\nThe selection of a backend service is determined only for new traffic. Once a user's request has been directed to a backendService, subsequent requests will be sent to the same backendService as determined by the BackendService's session affinity policy.\nThe value must be between 0 and 1000 .",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "default_service": {
          "aliases": [],
          "description": "The full or partial URL of the defaultService resource to which traffic is directed if none of the hostRules match. If defaultRouteAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if defaultService is specified, defaultRouteAction cannot contain any weightedBackendServices. Conversely, if routeAction specifies any weightedBackendServices, service must not be specified. Only one of defaultService, defaultUrlRedirect or defaultRouteAction.weightedBackendService must be set.\nThis field represents a link to a BackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_backend_service task and then set this default_service field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "default_url_redirect": {
          "aliases": [],
          "description": "When none of the specified hostRules match, the request is redirected to a URL specified by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or defaultRouteAction must not be set.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "host_redirect": {
              "aliases": [],
              "description": "The host that will be used in the redirect response instead of the one that was supplied in the request. The value must be between 1 and 255 characters.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "https_redirect": {
              "aliases": [],
              "description": "If set to true, the URL scheme in the redirected request is set to https. If set to false, the URL scheme of the redirected request will remain the same as that of the request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this true for TargetHttpsProxy is not permitted. The default is set to false.",
              "default": "false",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "path_redirect": {
              "aliases": [],
              "description": "The path that will be used in the redirect response instead of the one that was supplied in the request. pathRedirect cannot be supplied together with prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect. The value must be between 1 and 1024 characters.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "prefix_redirect": {
              "aliases": [],
              "description": "The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch, retaining the remaining portion of the URL before redirecting the request.\nprefixRedirect cannot be supplied together with pathRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect. The value must be between 1 and 1024 characters.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "redirect_response_code": {
              "aliases": [],
              "description": "The HTTP Status code to use for this RedirectAction. Supported values are: * MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301.\n* FOUND, which corresponds to 302.\n* SEE_OTHER which corresponds to 303.\n* TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method will be retained.\n* PERMANENT_REDIRECT, which corresponds to 308. In this case, the request method will be retained.\nSome valid choices include: \"FOUND\", \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\", \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "strip_query": {
              "aliases": [],
              "description": "If set to true, any accompanying query portion of the original URL is removed prior to redirecting the request. If set to false, the query portion of the original URL is retained. The default is set to false.",
              "default": "false",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource. Provide this property when you create the resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "header_action": {
          "aliases": [],
          "description": "Specifies changes to request and response headers that need to take effect for the selected backendService. The headerAction specified here take effect after headerAction specified under pathMatcher.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "request_headers_to_add": {
              "aliases": [],
              "description": "Headers to add to a matching request prior to forwarding the request to the backendService.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "header_name": {
                  "aliases": [],
                  "description": "The name of the header.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "header_value": {
                  "aliases": [],
                  "description": "The value of the header to add.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "replace": {
                  "aliases": [],
                  "description": "If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.",
                  "type": "bool",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "request_headers_to_remove": {
              "aliases": [],
              "description": "A list of header names for headers that need to be removed from the request prior to forwarding the request to the backendService.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "response_headers_to_add": {
              "aliases": [],
              "description": "Headers to add the response prior to sending the response back to the client.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "header_name": {
                  "aliases": [],
                  "description": "The name of the header.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "header_value": {
                  "aliases": [],
                  "description": "The value of the header to add.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "replace": {
                  "aliases": [],
                  "description": "If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.",
                  "type": "bool",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "response_headers_to_remove": {
              "aliases": [],
              "description": "A list of header names for headers that need to be removed from the response prior to sending the response back to the client.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            }
          }
        },
        "host_rules": {
          "aliases": [],
          "description": "The list of HostRules to use against the URL.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "description": {
              "aliases": [],
              "description": "An optional description of this resource. Provide this property when you create the resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "hosts": {
              "aliases": [],
              "description": "The list of host patterns to match. They must be valid hostnames, except * will match any string of ([a-z0-9-.]*). In that case, * must be the first character and must be followed in the pattern by either - or .",
              "type": "list",
              "required": true,
              "elements": "str",
              "suboptions": {}
            },
            "path_matcher": {
              "aliases": [],
              "description": "The name of the PathMatcher to use to match the path portion of the URL if the hostRule matches the URL's host portion.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "path_matchers": {
          "aliases": [],
          "description": "The list of named PathMatchers to use against the URL.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "default_route_action": {
              "aliases": [],
              "description": "defaultRouteAction takes effect when none of the pathRules or routeRules match. The load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If defaultRouteAction specifies any weightedBackendServices, defaultService must not be set.\nConversely if defaultService is set, defaultRouteAction cannot contain any weightedBackendServices.\nOnly one of defaultRouteAction or defaultUrlRedirect must be set.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "cors_policy": {
                  "aliases": [],
                  "description": "The specification for allowing client side cross-origin requests. Please see [W3C Recommendation for Cross Origin Resource Sharing](https://www.w3.org/TR/cors/) .",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "allow_credentials": {
                      "aliases": [],
                      "description": "In response to a preflight request, setting this to true indicates that the actual request can include user credentials.\nThis translates to the Access-Control-Allow-Credentials header.",
                      "default": "false",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "allow_headers": {
                      "aliases": [],
                      "description": "Specifies the content for the Access-Control-Allow-Headers header.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "allow_methods": {
                      "aliases": [],
                      "description": "Specifies the content for the Access-Control-Allow-Methods header.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "allow_origin_regexes": {
                      "aliases": [],
                      "description": "Specifies the regular expression patterns that match allowed origins. For regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript An origin is allowed if it matches either an item in allowOrigins or an item in allowOriginRegexes.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "allow_origins": {
                      "aliases": [],
                      "description": "Specifies the list of origins that will be allowed to do CORS requests.\nAn origin is allowed if it matches either an item in allowOrigins or an item in allowOriginRegexes.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "disabled": {
                      "aliases": [],
                      "description": "If true, specifies the CORS policy is disabled. The default value is false, which indicates that the CORS policy is in effect.",
                      "default": "false",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "expose_headers": {
                      "aliases": [],
                      "description": "Specifies the content for the Access-Control-Expose-Headers header.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "max_age": {
                      "aliases": [],
                      "description": "Specifies how long results of a preflight request can be cached in seconds.\nThis translates to the Access-Control-Max-Age header.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "fault_injection_policy": {
                  "aliases": [],
                  "description": "The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure.\nAs part of fault injection, when clients send requests to a backend service, delays can be introduced by Loadbalancer on a percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted by the Loadbalancer for a percentage of requests.\ntimeout and retryPolicy will be ignored by clients that are configured with a faultInjectionPolicy.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "abort": {
                      "aliases": [],
                      "description": "The specification for how client requests are aborted as part of fault injection.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "http_status": {
                          "aliases": [],
                          "description": "The HTTP status code used to abort the request.\nThe value must be between 200 and 599 inclusive.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "percentage": {
                          "aliases": [],
                          "description": "The percentage of traffic (connections/operations/requests) which will be aborted as part of fault injection.\nThe value must be between 0.0 and 100.0 inclusive.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "delay": {
                      "aliases": [],
                      "description": "The specification for how client requests are delayed as part of fault injection, before being sent to a backend service.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "fixed_delay": {
                          "aliases": [],
                          "description": "Specifies the value of the fixed delay interval.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "nanos": {
                              "aliases": [],
                              "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 seconds field and a positive nanos field. Must be from 0 to 999,999,999 inclusive.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "seconds": {
                              "aliases": [],
                              "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.\nNote: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years .",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "percentage": {
                          "aliases": [],
                          "description": "The percentage of traffic (connections/operations/requests) on which delay will be introduced as part of fault injection.\nThe value must be between 0.0 and 100.0 inclusive.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "request_mirror_policy": {
                  "aliases": [],
                  "description": "Specifies the policy on how requests intended for the route's backends are shadowed to a separate mirrored backend service.\nLoadbalancer does not wait for responses from the shadow service. Prior to sending traffic to the shadow service, the host / authority header is suffixed with -shadow.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "backend_service": {
                      "aliases": [],
                      "description": "The full or partial URL to the BackendService resource being mirrored to.\nThis field represents a link to a BackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_backend_service task and then set this backend_service field to \"{{ name-of-resource }}\"",
                      "type": "dict",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                },
                "retry_policy": {
                  "aliases": [],
                  "description": "Specifies the retry policy associated with this route.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "num_retries": {
                      "aliases": [],
                      "description": "Specifies the allowed number retries. This number must be > 0. If not specified, defaults to 1.",
                      "default": "1",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "per_try_timeout": {
                      "aliases": [],
                      "description": "Specifies a non-zero timeout per retry attempt.\nIf not specified, will use the timeout set in HttpRouteAction. If timeout in HttpRouteAction is not set, will use the largest timeout among all backend services associated with the route.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "nanos": {
                          "aliases": [],
                          "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 seconds field and a positive nanos field. Must be from 0 to 999,999,999 inclusive.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "seconds": {
                          "aliases": [],
                          "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.\nNote: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years .",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "retry_conditions": {
                      "aliases": [],
                      "description": "Specfies one or more conditions when this retry rule applies. Valid values are: * 5xx: Loadbalancer will attempt a retry if the backend service responds with any 5xx response code, or if the backend service does not respond at all, example: disconnects, reset, read timeout, * connection failure, and refused streams.\n* gateway-error: Similar to 5xx, but only applies to response codes 502, 503 or 504.\n* connect-failure: Loadbalancer will retry on failures connecting to backend services, for example due to connection timeouts.\n* retriable-4xx: Loadbalancer will retry for retriable 4xx response codes.\nCurrently the only retriable error supported is 409.\n* refused-stream:Loadbalancer will retry if the backend service resets the stream with a REFUSED_STREAM error code.\nThis reset type indicates that it is safe to retry.\n* cancelled: Loadbalancer will retry if the gRPC status code in the response header is set to cancelled * deadline-exceeded: Loadbalancer will retry if the gRPC status code in the response header is set to deadline-exceeded * resource-exhausted: Loadbalancer will retry if the gRPC status code in the response header is set to resource-exhausted * unavailable: Loadbalancer will retry if the gRPC status code in the response header is set to unavailable .",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    }
                  }
                },
                "timeout": {
                  "aliases": [],
                  "description": "Specifies the timeout for the selected route. Timeout is computed from the time the request has been fully processed (i.e. end-of-stream) up until the response has been completely processed. Timeout includes all retries.\nIf not specified, will use the largest timeout among all backend services associated with the route.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "nanos": {
                      "aliases": [],
                      "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 seconds field and a positive nanos field. Must be from 0 to 999,999,999 inclusive.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "seconds": {
                      "aliases": [],
                      "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.\nNote: these bounds are computed from: 60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years .",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "url_rewrite": {
                  "aliases": [],
                  "description": "The spec to modify the URL of the request, prior to forwarding the request to the matched service.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "host_rewrite": {
                      "aliases": [],
                      "description": "Prior to forwarding the request to the selected service, the request's host header is replaced with contents of hostRewrite.\nThe value must be between 1 and 255 characters.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "path_prefix_rewrite": {
                      "aliases": [],
                      "description": "Prior to forwarding the request to the selected backend service, the matching portion of the request's path is replaced by pathPrefixRewrite.\nThe value must be between 1 and 1024 characters.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "weighted_backend_services": {
                  "aliases": [],
                  "description": "A list of weighted backend services to send traffic to when a route match occurs.\nThe weights determine the fraction of traffic that flows to their corresponding backend service.\nIf all traffic needs to go to a single backend service, there must be one weightedBackendService with weight set to a non 0 number.\nOnce a backendService is identified and before forwarding the request to the backend service, advanced routing actions like Url rewrites and header transformations are applied depending on additional settings specified in this HttpRouteAction.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "backend_service": {
                      "aliases": [],
                      "description": "The full or partial URL to the default BackendService resource. Before forwarding the request to backendService, the loadbalancer applies any relevant headerActions specified as part of this backendServiceWeight.\nThis field represents a link to a BackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_backend_service task and then set this backend_service field to \"{{ name-of-resource }}\"",
                      "type": "dict",
                      "required": false,
                      "suboptions": {}
                    },
                    "header_action": {
                      "aliases": [],
                      "description": "Specifies changes to request and response headers that need to take effect for the selected backendService.\nheaderAction specified here take effect before headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "request_headers_to_add": {
                          "aliases": [],
                          "description": "Headers to add to a matching request prior to forwarding the request to the backendService.",
                          "type": "list",
                          "required": false,
                          "elements": "dict",
                          "suboptions": {
                            "header_name": {
                              "aliases": [],
                              "description": "The name of the header to add.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "header_value": {
                              "aliases": [],
                              "description": "The value of the header to add.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "replace": {
                              "aliases": [],
                              "description": "If false, headerValue is appended to any values that already exist for the header.\nIf true, headerValue is set for the header, discarding any values that were set for that header.",
                              "default": "false",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "request_headers_to_remove": {
                          "aliases": [],
                          "description": "A list of header names for headers that need to be removed from the request prior to forwarding the request to the backendService.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "response_headers_to_add": {
                          "aliases": [],
                          "description": "Headers to add the response prior to sending the response back to the client.",
                          "type": "list",
                          "required": false,
                          "elements": "dict",
                          "suboptions": {
                            "header_name": {
                              "aliases": [],
                              "description": "The name of the header to add.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "header_value": {
                              "aliases": [],
                              "description": "The value of the header to add.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            },
                            "replace": {
                              "aliases": [],
                              "description": "If false, headerValue is appended to any values that already exist for the header.\nIf true, headerValue is set for the header, discarding any values that were set for that header.",
                              "default": "false",
                              "type": "bool",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "response_headers_to_remove": {
                          "aliases": [],
                          "description": "A list of header names for headers that need to be removed from the response prior to sending the response back to the client.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        }
                      }
                    },
                    "weight": {
                      "aliases": [],
                      "description": "Specifies the fraction of traffic sent to backendService, computed as weight / (sum of all weightedBackendService weights in routeAction) .\nThe selection of a backend service is determined only for new traffic. Once a user's request has been directed to a backendService, subsequent requests will be sent to the same backendService as determined by the BackendService's session affinity policy.\nThe value must be between 0 and 1000 .",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "default_service": {
              "aliases": [],
              "description": "The full or partial URL to the BackendService resource. This will be used if none of the pathRules or routeRules defined by this PathMatcher are matched. For example, the following are all valid URLs to a BackendService resource: - U(https://www.googleapis.com/compute/v1/projects/project/global/backendServices/backendService) - compute/v1/projects/project/global/backendServices/backendService - global/backendServices/backendService If defaultRouteAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if defaultService is specified, defaultRouteAction cannot contain any weightedBackendServices. Conversely, if defaultRouteAction specifies any weightedBackendServices, defaultService must not be specified.\nOnly one of defaultService, defaultUrlRedirect or defaultRouteAction.weightedBackendService must be set. Authorization requires one or more of the following Google IAM permissions on the specified resource defaultService: - compute.backendBuckets.use - compute.backendServices.use .\nThis field represents a link to a BackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_backend_service task and then set this default_service field to \"{{ name-of-resource }}\"",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "default_url_redirect": {
              "aliases": [],
              "description": "When none of the specified hostRules match, the request is redirected to a URL specified by defaultUrlRedirect. If defaultUrlRedirect is specified, defaultService or defaultRouteAction must not be set.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "host_redirect": {
                  "aliases": [],
                  "description": "The host that will be used in the redirect response instead of the one that was supplied in the request. The value must be between 1 and 255 characters.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "https_redirect": {
                  "aliases": [],
                  "description": "If set to true, the URL scheme in the redirected request is set to https. If set to false, the URL scheme of the redirected request will remain the same as that of the request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this true for TargetHttpsProxy is not permitted. The default is set to false.",
                  "default": "false",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "path_redirect": {
                  "aliases": [],
                  "description": "The path that will be used in the redirect response instead of the one that was supplied in the request. pathRedirect cannot be supplied together with prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect. The value must be between 1 and 1024 characters.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "prefix_redirect": {
                  "aliases": [],
                  "description": "The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch, retaining the remaining portion of the URL before redirecting the request.\nprefixRedirect cannot be supplied together with pathRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect. The value must be between 1 and 1024 characters.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "redirect_response_code": {
                  "aliases": [],
                  "description": "The HTTP Status code to use for this RedirectAction. Supported values are: * MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301.\n* FOUND, which corresponds to 302.\n* SEE_OTHER which corresponds to 303.\n* TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method will be retained.\n* PERMANENT_REDIRECT, which corresponds to 308. In this case, the request method will be retained.\nSome valid choices include: \"FOUND\", \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\", \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "strip_query": {
                  "aliases": [],
                  "description": "If set to true, any accompanying query portion of the original URL is removed prior to redirecting the request. If set to false, the query portion of the original URL is retained.",
                  "default": "false",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "description": {
              "aliases": [],
              "description": "An optional description of this resource. Provide this property when you create the resource.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "header_action": {
              "aliases": [],
              "description": "Specifies changes to request and response headers that need to take effect for the selected backendService. HeaderAction specified here are applied after the matching HttpRouteRule HeaderAction and before the HeaderAction in the UrlMap .",
              "type": "dict",
              "required": false,
              "suboptions": {
                "request_headers_to_add": {
                  "aliases": [],
                  "description": "Headers to add to a matching request prior to forwarding the request to the backendService.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "header_name": {
                      "aliases": [],
                      "description": "The name of the header.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "header_value": {
                      "aliases": [],
                      "description": "The value of the header to add.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "replace": {
                      "aliases": [],
                      "description": "If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.",
                      "type": "bool",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                },
                "request_headers_to_remove": {
                  "aliases": [],
                  "description": "A list of header names for headers that need to be removed from the request prior to forwarding the request to the backendService.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                },
                "response_headers_to_add": {
                  "aliases": [],
                  "description": "Headers to add the response prior to sending the response back to the client.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "header_name": {
                      "aliases": [],
                      "description": "The name of the header.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "header_value": {
                      "aliases": [],
                      "description": "The value of the header to add.",
                      "type": "str",
                      "required": true,
                      "suboptions": {}
                    },
                    "replace": {
                      "aliases": [],
                      "description": "If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.",
                      "type": "bool",
                      "required": true,
                      "suboptions": {}
                    }
                  }
                },
                "response_headers_to_remove": {
                  "aliases": [],
                  "description": "A list of header names for headers that need to be removed from the response prior to sending the response back to the client.",
                  "type": "list",
                  "required": false,
                  "elements": "str",
                  "suboptions": {}
                }
              }
            },
            "name": {
              "aliases": [],
              "description": "The name to which this PathMatcher is referred by the HostRule.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "path_rules": {
              "aliases": [],
              "description": "The list of path rules. Use this list instead of routeRules when routing based on simple path matching is all that's required. The order by which path rules are specified does not matter. Matches are always done on the longest-path-first basis. For example: a pathRule with a path /a/b/c/* will match before /a/b/* irrespective of the order in which those paths appear in this list. Within a given pathMatcher, only one of pathRules or routeRules must be set.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "paths": {
                  "aliases": [],
                  "description": "The list of path patterns to match. Each must start with / and the only place a * is allowed is at the end following a /. The string fed to the path matcher does not include any text after the first ? or #, and those chars are not allowed here.",
                  "type": "list",
                  "required": true,
                  "elements": "str",
                  "suboptions": {}
                },
                "route_action": {
                  "aliases": [],
                  "description": "In response to a matching path, the load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If routeAction specifies any weightedBackendServices, service must not be set. Conversely if service is set, routeAction cannot contain any weightedBackendServices. Only one of routeAction or urlRedirect must be set.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "cors_policy": {
                      "aliases": [],
                      "description": "The specification for allowing client side cross-origin requests. Please see W3C Recommendation for Cross Origin Resource Sharing .",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "allow_credentials": {
                          "aliases": [],
                          "description": "In response to a preflight request, setting this to true indicates that the actual request can include user credentials. This translates to the Access- Control-Allow-Credentials header. Defaults to false.",
                          "default": "false",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "allow_headers": {
                          "aliases": [],
                          "description": "Specifies the content for the Access-Control-Allow-Headers header.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "allow_methods": {
                          "aliases": [],
                          "description": "Specifies the content for the Access-Control-Allow-Methods header.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "allow_origin_regexes": {
                          "aliases": [],
                          "description": "Specifies the regular expression patterns that match allowed origins. For regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript An origin is allowed if it matches either allow_origins or allow_origin_regex.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "allow_origins": {
                          "aliases": [],
                          "description": "Specifies the list of origins that will be allowed to do CORS requests. An origin is allowed if it matches either allow_origins or allow_origin_regex.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "disabled": {
                          "aliases": [],
                          "description": "If true, specifies the CORS policy is disabled.",
                          "type": "bool",
                          "required": true,
                          "suboptions": {}
                        },
                        "expose_headers": {
                          "aliases": [],
                          "description": "Specifies the content for the Access-Control-Expose-Headers header.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "max_age": {
                          "aliases": [],
                          "description": "Specifies how long the results of a preflight request can be cached. This translates to the content for the Access-Control-Max-Age header.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "fault_injection_policy": {
                      "aliases": [],
                      "description": "The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure. As part of fault injection, when clients send requests to a backend service, delays can be introduced by Loadbalancer on a percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted by the Loadbalancer for a percentage of requests. timeout and retry_policy will be ignored by clients that are configured with a fault_injection_policy.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "abort": {
                          "aliases": [],
                          "description": "The specification for how client requests are aborted as part of fault injection.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "http_status": {
                              "aliases": [],
                              "description": "The HTTP status code used to abort the request. The value must be between 200 and 599 inclusive.",
                              "type": "int",
                              "required": true,
                              "suboptions": {}
                            },
                            "percentage": {
                              "aliases": [],
                              "description": "The percentage of traffic (connections/operations/requests) which will be aborted as part of fault injection. The value must be between 0.0 and 100.0 inclusive.",
                              "type": "str",
                              "required": true,
                              "suboptions": {}
                            }
                          }
                        },
                        "delay": {
                          "aliases": [],
                          "description": "The specification for how client requests are delayed as part of fault injection, before being sent to a backend service.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "fixed_delay": {
                              "aliases": [],
                              "description": "Specifies the value of the fixed delay interval.",
                              "type": "dict",
                              "required": true,
                              "suboptions": {
                                "nanos": {
                                  "aliases": [],
                                  "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "seconds": {
                                  "aliases": [],
                                  "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                }
                              }
                            },
                            "percentage": {
                              "aliases": [],
                              "description": "The percentage of traffic (connections/operations/requests) on which delay will be introduced as part of fault injection. The value must be between 0.0 and 100.0 inclusive.",
                              "type": "str",
                              "required": true,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "request_mirror_policy": {
                      "aliases": [],
                      "description": "Specifies the policy on how requests intended for the route's backends are shadowed to a separate mirrored backend service. Loadbalancer does not wait for responses from the shadow service. Prior to sending traffic to the shadow service, the host / authority header is suffixed with -shadow.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "backend_service": {
                          "aliases": [],
                          "description": "The BackendService resource being mirrored to.\nThis field represents a link to a BackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_backend_service task and then set this backend_service field to \"{{ name-of-resource }}\"",
                          "type": "dict",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    },
                    "retry_policy": {
                      "aliases": [],
                      "description": "Specifies the retry policy associated with this route.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "num_retries": {
                          "aliases": [],
                          "description": "Specifies the allowed number retries. This number must be > 0.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "per_try_timeout": {
                          "aliases": [],
                          "description": "Specifies a non-zero timeout per retry attempt.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "nanos": {
                              "aliases": [],
                              "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "seconds": {
                              "aliases": [],
                              "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.",
                              "type": "str",
                              "required": true,
                              "suboptions": {}
                            }
                          }
                        },
                        "retry_conditions": {
                          "aliases": [],
                          "description": "Specifies one or more conditions when this retry rule applies. Valid values are: * 5xx: Loadbalancer will attempt a retry if the backend service responds with any 5xx response code, or if the backend service does not respond at all, example: disconnects, reset, read timeout, connection failure, and refused streams.\n* gateway-error: Similar to 5xx, but only applies to response codes 502, 503 or 504.\n* connect-failure: Loadbalancer will retry on failures connecting to backend services, for example due to connection timeouts.\n* retriable-4xx: Loadbalancer will retry for retriable 4xx response codes.\nCurrently the only retriable error supported is 409.\n* refused-stream: Loadbalancer will retry if the backend service resets the stream with a REFUSED_STREAM error code. This reset type indicates that it is safe to retry.\n* cancelled: Loadbalancer will retry if the gRPC status code in the response header is set to cancelled * deadline-exceeded: Loadbalancer will retry if the gRPC status code in the response header is set to deadline-exceeded * resource-exhausted: Loadbalancer will retry if the gRPC status code in the response header is set to resource-exhausted * unavailable: Loadbalancer will retry if the gRPC status code in the response header is set to unavailable .",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        }
                      }
                    },
                    "timeout": {
                      "aliases": [],
                      "description": "Specifies the timeout for the selected route. Timeout is computed from the time the request is has been fully processed (i.e. end-of-stream) up until the response has been completely processed. Timeout includes all retries. If not specified, the default value is 15 seconds.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "nanos": {
                          "aliases": [],
                          "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "seconds": {
                          "aliases": [],
                          "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    },
                    "url_rewrite": {
                      "aliases": [],
                      "description": "The spec to modify the URL of the request, prior to forwarding the request to the matched service .",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "host_rewrite": {
                          "aliases": [],
                          "description": "Prior to forwarding the request to the selected service, the request's host header is replaced with contents of hostRewrite. The value must be between 1 and 255 characters.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "path_prefix_rewrite": {
                          "aliases": [],
                          "description": "Prior to forwarding the request to the selected backend service, the matching portion of the request's path is replaced by pathPrefixRewrite. The value must be between 1 and 1024 characters.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "weighted_backend_services": {
                      "aliases": [],
                      "description": "A list of weighted backend services to send traffic to when a route match occurs. The weights determine the fraction of traffic that flows to their corresponding backend service. If all traffic needs to go to a single backend service, there must be one weightedBackendService with weight set to a non 0 number. Once a backendService is identified and before forwarding the request to the backend service, advanced routing actions like Url rewrites and header transformations are applied depending on additional settings specified in this HttpRouteAction.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "backend_service": {
                          "aliases": [],
                          "description": "The default BackendService resource. Before forwarding the request to backendService, the loadbalancer applies any relevant headerActions specified as part of this backendServiceWeight.\nThis field represents a link to a BackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_backend_service task and then set this backend_service field to \"{{ name-of-resource }}\"",
                          "type": "dict",
                          "required": true,
                          "suboptions": {}
                        },
                        "header_action": {
                          "aliases": [],
                          "description": "Specifies changes to request and response headers that need to take effect for the selected backendService. headerAction specified here take effect before headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "request_headers_to_add": {
                              "aliases": [],
                              "description": "Headers to add to a matching request prior to forwarding the request to the backendService.",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "header_name": {
                                  "aliases": [],
                                  "description": "The name of the header.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                },
                                "header_value": {
                                  "aliases": [],
                                  "description": "The value of the header to add.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                },
                                "replace": {
                                  "aliases": [],
                                  "description": "If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.",
                                  "type": "bool",
                                  "required": true,
                                  "suboptions": {}
                                }
                              }
                            },
                            "request_headers_to_remove": {
                              "aliases": [],
                              "description": "A list of header names for headers that need to be removed from the request prior to forwarding the request to the backendService.",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "response_headers_to_add": {
                              "aliases": [],
                              "description": "Headers to add the response prior to sending the response back to the client.",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "header_name": {
                                  "aliases": [],
                                  "description": "The name of the header.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                },
                                "header_value": {
                                  "aliases": [],
                                  "description": "The value of the header to add.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                },
                                "replace": {
                                  "aliases": [],
                                  "description": "If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.",
                                  "type": "bool",
                                  "required": true,
                                  "suboptions": {}
                                }
                              }
                            },
                            "response_headers_to_remove": {
                              "aliases": [],
                              "description": "A list of header names for headers that need to be removed from the response prior to sending the response back to the client.",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            }
                          }
                        },
                        "weight": {
                          "aliases": [],
                          "description": "Specifies the fraction of traffic sent to backendService, computed as weight / (sum of all weightedBackendService weights in routeAction) . The selection of a backend service is determined only for new traffic. Once a user's request has been directed to a backendService, subsequent requests will be sent to the same backendService as determined by the BackendService's session affinity policy.\nThe value must be between 0 and 1000 .",
                          "type": "int",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "service": {
                  "aliases": [],
                  "description": "The backend service resource to which traffic is directed if this rule is matched. If routeAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if service is specified, routeAction cannot contain any weightedBackendService s. Conversely, if routeAction specifies any weightedBackendServices, service must not be specified. Only one of urlRedirect, service or routeAction.weightedBackendService must be set.\nThis field represents a link to a BackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_backend_service task and then set this service field to \"{{ name-of-resource }}\"",
                  "type": "dict",
                  "required": false,
                  "suboptions": {}
                },
                "url_redirect": {
                  "aliases": [],
                  "description": "When a path pattern is matched, the request is redirected to a URL specified by urlRedirect. If urlRedirect is specified, service or routeAction must not be set.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "host_redirect": {
                      "aliases": [],
                      "description": "The host that will be used in the redirect response instead of the one that was supplied in the request. The value must be between 1 and 255 characters.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "https_redirect": {
                      "aliases": [],
                      "description": "If set to true, the URL scheme in the redirected request is set to https.\nIf set to false, the URL scheme of the redirected request will remain the same as that of the request. This must only be set for UrlMaps used in TargetHttpProxys. Setting this true for TargetHttpsProxy is not permitted. The default is set to false.",
                      "default": "false",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "path_redirect": {
                      "aliases": [],
                      "description": "The path that will be used in the redirect response instead of the one that was supplied in the request. pathRedirect cannot be supplied together with prefixRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect.\nThe value must be between 1 and 1024 characters.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix_redirect": {
                      "aliases": [],
                      "description": "The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch, retaining the remaining portion of the URL before redirecting the request. prefixRedirect cannot be supplied together with pathRedirect. Supply one alone or neither. If neither is supplied, the path of the original request will be used for the redirect. The value must be between 1 and 1024 characters.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "redirect_response_code": {
                      "aliases": [],
                      "description": "The HTTP Status code to use for this RedirectAction. Supported values are: * MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301.\n* FOUND, which corresponds to 302.\n* SEE_OTHER which corresponds to 303.\n* TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method will be retained.\n* PERMANENT_REDIRECT, which corresponds to 308. In this case, the request method will be retained.\nSome valid choices include: \"FOUND\", \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\", \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "strip_query": {
                      "aliases": [],
                      "description": "If set to true, any accompanying query portion of the original URL is removed prior to redirecting the request. If set to false, the query portion of the original URL is retained.",
                      "default": "false",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            },
            "route_rules": {
              "aliases": [],
              "description": "The list of ordered HTTP route rules. Use this list instead of pathRules when advanced route matching and routing actions are desired. The order of specifying routeRules matters: the first rule that matches will cause its specified routing action to take effect. Within a given pathMatcher, only one of pathRules or routeRules must be set. routeRules are not supported in UrlMaps intended for External load balancers.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "header_action": {
                  "aliases": [],
                  "description": "Specifies changes to request and response headers that need to take effect for the selected backendService. The headerAction specified here are applied before the matching pathMatchers[].headerAction and after pathMatchers[].routeRules[].r outeAction.weightedBackendService.backendServiceWeightAction[].headerAction .",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "request_headers_to_add": {
                      "aliases": [],
                      "description": "Headers to add to a matching request prior to forwarding the request to the backendService.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "header_name": {
                          "aliases": [],
                          "description": "The name of the header.",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "header_value": {
                          "aliases": [],
                          "description": "The value of the header to add.",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "replace": {
                          "aliases": [],
                          "description": "If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.",
                          "type": "bool",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    },
                    "request_headers_to_remove": {
                      "aliases": [],
                      "description": "A list of header names for headers that need to be removed from the request prior to forwarding the request to the backendService.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "response_headers_to_add": {
                      "aliases": [],
                      "description": "Headers to add the response prior to sending the response back to the client.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "header_name": {
                          "aliases": [],
                          "description": "The name of the header.",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "header_value": {
                          "aliases": [],
                          "description": "The value of the header to add.",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "replace": {
                          "aliases": [],
                          "description": "If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.",
                          "type": "bool",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    },
                    "response_headers_to_remove": {
                      "aliases": [],
                      "description": "A list of header names for headers that need to be removed from the response prior to sending the response back to the client.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    }
                  }
                },
                "match_rules": {
                  "aliases": [],
                  "description": "The rules for determining a match.",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "full_path_match": {
                      "aliases": [],
                      "description": "For satisfying the matchRule condition, the path of the request must exactly match the value specified in fullPathMatch after removing any query parameters and anchor that may be part of the original URL. FullPathMatch must be between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or regexMatch must be specified.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "header_matches": {
                      "aliases": [],
                      "description": "Specifies a list of header match criteria, all of which must match corresponding headers in the request.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "exact_match": {
                          "aliases": [],
                          "description": "The value should exactly match contents of exactMatch. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "header_name": {
                          "aliases": [],
                          "description": "The name of the HTTP header to match. For matching against the HTTP request's authority, use a headerMatch with the header name \":authority\". For matching a request's method, use the headerName \":method\".",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "invert_match": {
                          "aliases": [],
                          "description": "If set to false, the headerMatch is considered a match if the match criteria above are met. If set to true, the headerMatch is considered a match if the match criteria above are NOT met. Defaults to false.",
                          "default": "false",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "prefix_match": {
                          "aliases": [],
                          "description": "The value of the header must start with the contents of prefixMatch. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "present_match": {
                          "aliases": [],
                          "description": "A header with the contents of headerName must exist. The match takes place whether or not the request's header has a value or not. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "range_match": {
                          "aliases": [],
                          "description": "The header value must be an integer and its value must be in the range specified in rangeMatch. If the header does not contain an integer, number or is empty, the match fails. For example for a range [-5, 0] - -3 will match. - 0 will not match. - 0.25 will not match. - -3someString will not match. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "range_end": {
                              "aliases": [],
                              "description": "The end of the range (exclusive).",
                              "type": "int",
                              "required": true,
                              "suboptions": {}
                            },
                            "range_start": {
                              "aliases": [],
                              "description": "The start of the range (inclusive).",
                              "type": "int",
                              "required": true,
                              "suboptions": {}
                            }
                          }
                        },
                        "regex_match": {
                          "aliases": [],
                          "description": "The value of the header must match the regular expression specified in regexMatch. For regular expression grammar, please see: en.cppreference.com/w/cpp/regex/ecmascript For matching against a port specified in the HTTP request, use a headerMatch with headerName set to PORT and a regular expression that satisfies the RFC2616 Host header's port specifier.\nOnly one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "suffix_match": {
                          "aliases": [],
                          "description": "The value of the header must end with the contents of suffixMatch. Only one of exactMatch, prefixMatch, suffixMatch, regexMatch, presentMatch or rangeMatch must be set.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "ignore_case": {
                      "aliases": [],
                      "description": "Specifies that prefixMatch and fullPathMatch matches are case sensitive.\nDefaults to false.",
                      "default": "false",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "metadata_filters": {
                      "aliases": [],
                      "description": "Opaque filter criteria used by Loadbalancer to restrict routing configuration to a limited set xDS compliant clients. In their xDS requests to Loadbalancer, xDS clients present node metadata. If a match takes place, the relevant routing configuration is made available to those proxies. For each metadataFilter in this list, if its filterMatchCriteria is set to MATCH_ANY, at least one of the filterLabels must match the corresponding label provided in the metadata. If its filterMatchCriteria is set to MATCH_ALL, then all of its filterLabels must match with corresponding labels in the provided metadata. metadataFilters specified here can be overrides those specified in ForwardingRule that refers to this UrlMap. metadataFilters only applies to Loadbalancers that have their loadBalancingScheme set to INTERNAL_SELF_MANAGED.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "filter_labels": {
                          "aliases": [],
                          "description": "The list of label value pairs that must match labels in the provided metadata based on filterMatchCriteria This list must not be empty and can have at the most 64 entries.",
                          "type": "list",
                          "required": true,
                          "elements": "dict",
                          "suboptions": {
                            "name": {
                              "aliases": [],
                              "description": "Name of metadata label. The name can have a maximum length of 1024 characters and must be at least 1 character long.",
                              "type": "str",
                              "required": true,
                              "suboptions": {}
                            },
                            "value": {
                              "aliases": [],
                              "description": "The value of the label must match the specified value. value can have a maximum length of 1024 characters.",
                              "type": "str",
                              "required": true,
                              "suboptions": {}
                            }
                          }
                        },
                        "filter_match_criteria": {
                          "aliases": [],
                          "description": "Specifies how individual filterLabel matches within the list of filterLabels contribute towards the overall metadataFilter match. Supported values are: - MATCH_ANY: At least one of the filterLabels must have a matching label in the provided metadata.\n- MATCH_ALL: All filterLabels must have matching labels in the provided metadata.\nSome valid choices include: \"MATCH_ALL\", \"MATCH_ANY\"",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    },
                    "prefix_match": {
                      "aliases": [],
                      "description": "For satisfying the matchRule condition, the request's path must begin with the specified prefixMatch. prefixMatch must begin with a /. The value must be between 1 and 1024 characters. Only one of prefixMatch, fullPathMatch or regexMatch must be specified.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "query_parameter_matches": {
                      "aliases": [],
                      "description": "Specifies a list of query parameter match criteria, all of which must match corresponding query parameters in the request.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "exact_match": {
                          "aliases": [],
                          "description": "The queryParameterMatch matches if the value of the parameter exactly matches the contents of exactMatch. Only one of presentMatch, exactMatch and regexMatch must be set.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "name": {
                          "aliases": [],
                          "description": "The name of the query parameter to match. The query parameter must exist in the request, in the absence of which the request match fails.",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        },
                        "present_match": {
                          "aliases": [],
                          "description": "Specifies that the queryParameterMatch matches if the request contains the query parameter, irrespective of whether the parameter has a value or not. Only one of presentMatch, exactMatch and regexMatch must be set.",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "regex_match": {
                          "aliases": [],
                          "description": "The queryParameterMatch matches if the value of the parameter matches the regular expression specified by regexMatch. For the regular expression grammar, please see en.cppreference.com/w/cpp/regex/ecmascript Only one of presentMatch, exactMatch and regexMatch must be set.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "regex_match": {
                      "aliases": [],
                      "description": "For satisfying the matchRule condition, the path of the request must satisfy the regular expression specified in regexMatch after removing any query parameters and anchor supplied with the original URL. For regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript Only one of prefixMatch, fullPathMatch or regexMatch must be specified.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "priority": {
                  "aliases": [],
                  "description": "For routeRules within a given pathMatcher, priority determines the order in which load balancer will interpret routeRules. RouteRules are evaluated in order of priority, from the lowest to highest number. The priority of a rule decreases as its number increases (1, 2, 3, N+1). The first rule that matches the request is applied.\nYou cannot configure two or more routeRules with the same priority.\nPriority for each rule must be set to a number between 0 and 2147483647 inclusive.\nPriority numbers can have gaps, which enable you to add or remove rules in the future without affecting the rest of the rules. For example, 1, 2, 3, 4, 5, 9, 12, 16 is a valid series of priority numbers to which you could add rules numbered from 6 to 8, 10 to 11, and 13 to 15 in the future without any impact on existing rules.",
                  "type": "int",
                  "required": true,
                  "suboptions": {}
                },
                "route_action": {
                  "aliases": [],
                  "description": "In response to a matching matchRule, the load balancer performs advanced routing actions like URL rewrites, header transformations, etc. prior to forwarding the request to the selected backend. If routeAction specifies any weightedBackendServices, service must not be set. Conversely if service is set, routeAction cannot contain any weightedBackendServices. Only one of routeAction or urlRedirect must be set.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "cors_policy": {
                      "aliases": [],
                      "description": "The specification for allowing client side cross-origin requests. Please see W3C Recommendation for Cross Origin Resource Sharing .",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "allow_credentials": {
                          "aliases": [],
                          "description": "In response to a preflight request, setting this to true indicates that the actual request can include user credentials. This translates to the Access- Control-Allow-Credentials header. Defaults to false.",
                          "default": "false",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "allow_headers": {
                          "aliases": [],
                          "description": "Specifies the content for the Access-Control-Allow-Headers header.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "allow_methods": {
                          "aliases": [],
                          "description": "Specifies the content for the Access-Control-Allow-Methods header.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "allow_origin_regexes": {
                          "aliases": [],
                          "description": "Specifies the regular expression patterns that match allowed origins. For regular expression grammar please see en.cppreference.com/w/cpp/regex/ecmascript An origin is allowed if it matches either allow_origins or allow_origin_regex.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "allow_origins": {
                          "aliases": [],
                          "description": "Specifies the list of origins that will be allowed to do CORS requests. An origin is allowed if it matches either allow_origins or allow_origin_regex.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "disabled": {
                          "aliases": [],
                          "description": "If true, specifies the CORS policy is disabled.\nwhich indicates that the CORS policy is in effect. Defaults to false.",
                          "default": "false",
                          "type": "bool",
                          "required": false,
                          "suboptions": {}
                        },
                        "expose_headers": {
                          "aliases": [],
                          "description": "Specifies the content for the Access-Control-Expose-Headers header.",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        },
                        "max_age": {
                          "aliases": [],
                          "description": "Specifies how long the results of a preflight request can be cached. This translates to the content for the Access-Control-Max-Age header.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "fault_injection_policy": {
                      "aliases": [],
                      "description": "The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure. As part of fault injection, when clients send requests to a backend service, delays can be introduced by Loadbalancer on a percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted by the Loadbalancer for a percentage of requests. timeout and retry_policy will be ignored by clients that are configured with a fault_injection_policy.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "abort": {
                          "aliases": [],
                          "description": "The specification for how client requests are aborted as part of fault injection.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "http_status": {
                              "aliases": [],
                              "description": "The HTTP status code used to abort the request. The value must be between 200 and 599 inclusive.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "percentage": {
                              "aliases": [],
                              "description": "The percentage of traffic (connections/operations/requests) which will be aborted as part of fault injection. The value must be between 0.0 and 100.0 inclusive.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        },
                        "delay": {
                          "aliases": [],
                          "description": "The specification for how client requests are delayed as part of fault injection, before being sent to a backend service.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "fixed_delay": {
                              "aliases": [],
                              "description": "Specifies the value of the fixed delay interval.",
                              "type": "dict",
                              "required": false,
                              "suboptions": {
                                "nanos": {
                                  "aliases": [],
                                  "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                                  "type": "int",
                                  "required": false,
                                  "suboptions": {}
                                },
                                "seconds": {
                                  "aliases": [],
                                  "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                }
                              }
                            },
                            "percentage": {
                              "aliases": [],
                              "description": "The percentage of traffic (connections/operations/requests) on which delay will be introduced as part of fault injection. The value must be between 0.0 and 100.0 inclusive.",
                              "type": "str",
                              "required": false,
                              "suboptions": {}
                            }
                          }
                        }
                      }
                    },
                    "request_mirror_policy": {
                      "aliases": [],
                      "description": "Specifies the policy on how requests intended for the route's backends are shadowed to a separate mirrored backend service. Loadbalancer does not wait for responses from the shadow service. Prior to sending traffic to the shadow service, the host / authority header is suffixed with -shadow.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "backend_service": {
                          "aliases": [],
                          "description": "The BackendService resource being mirrored to.\nThis field represents a link to a BackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_backend_service task and then set this backend_service field to \"{{ name-of-resource }}\"",
                          "type": "dict",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    },
                    "retry_policy": {
                      "aliases": [],
                      "description": "Specifies the retry policy associated with this route.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "num_retries": {
                          "aliases": [],
                          "description": "Specifies the allowed number retries. This number must be > 0.",
                          "type": "int",
                          "required": true,
                          "suboptions": {}
                        },
                        "per_try_timeout": {
                          "aliases": [],
                          "description": "Specifies a non-zero timeout per retry attempt.\nIf not specified, will use the timeout set in HttpRouteAction. If timeout in HttpRouteAction is not set, will use the largest timeout among all backend services associated with the route.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "nanos": {
                              "aliases": [],
                              "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                              "type": "int",
                              "required": false,
                              "suboptions": {}
                            },
                            "seconds": {
                              "aliases": [],
                              "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.",
                              "type": "str",
                              "required": true,
                              "suboptions": {}
                            }
                          }
                        },
                        "retry_conditions": {
                          "aliases": [],
                          "description": "Specfies one or more conditions when this retry rule applies. Valid values are: * 5xx: Loadbalancer will attempt a retry if the backend service responds with any 5xx response code, or if the backend service does not respond at all, example: disconnects, reset, read timeout, connection failure, and refused streams.\n* gateway-error: Similar to 5xx, but only applies to response codes 502, 503 or 504.\n* connect-failure: Loadbalancer will retry on failures connecting to backend services, for example due to connection timeouts.\n* retriable-4xx: Loadbalancer will retry for retriable 4xx response codes.\nCurrently the only retriable error supported is 409.\n* refused-stream: Loadbalancer will retry if the backend service resets the stream with a REFUSED_STREAM error code. This reset type indicates that it is safe to retry.\n* cancelled: Loadbalancer will retry if the gRPC status code in the response header is set to cancelled * deadline-exceeded: Loadbalancer will retry if the gRPC status code in the response header is set to deadline-exceeded * resource-exhausted: Loadbalancer will retry if the gRPC status code in the response header is set to resource-exhausted * unavailable: Loadbalancer will retry if the gRPC status code in the response header is set to unavailable .",
                          "type": "list",
                          "required": false,
                          "elements": "str",
                          "suboptions": {}
                        }
                      }
                    },
                    "timeout": {
                      "aliases": [],
                      "description": "Specifies the timeout for the selected route. Timeout is computed from the time the request is has been fully processed (i.e. end-of-stream) up until the response has been completely processed. Timeout includes all retries. If not specified, the default value is 15 seconds.",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "nanos": {
                          "aliases": [],
                          "description": "Span of time that's a fraction of a second at nanosecond resolution. Durations less than one second are represented with a 0 `seconds` field and a positive `nanos` field. Must be from 0 to 999,999,999 inclusive.",
                          "type": "int",
                          "required": false,
                          "suboptions": {}
                        },
                        "seconds": {
                          "aliases": [],
                          "description": "Span of time at a resolution of a second. Must be from 0 to 315,576,000,000 inclusive.",
                          "type": "str",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    },
                    "url_rewrite": {
                      "aliases": [],
                      "description": "The spec to modify the URL of the request, prior to forwarding the request to the matched service .",
                      "type": "dict",
                      "required": false,
                      "suboptions": {
                        "host_rewrite": {
                          "aliases": [],
                          "description": "Prior to forwarding the request to the selected service, the request's host header is replaced with contents of hostRewrite. The value must be between 1 and 255 characters.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        },
                        "path_prefix_rewrite": {
                          "aliases": [],
                          "description": "Prior to forwarding the request to the selected backend service, the matching portion of the request's path is replaced by pathPrefixRewrite. The value must be between 1 and 1024 characters.",
                          "type": "str",
                          "required": false,
                          "suboptions": {}
                        }
                      }
                    },
                    "weighted_backend_services": {
                      "aliases": [],
                      "description": "A list of weighted backend services to send traffic to when a route match occurs. The weights determine the fraction of traffic that flows to their corresponding backend service. If all traffic needs to go to a single backend service, there must be one weightedBackendService with weight set to a non 0 number. Once a backendService is identified and before forwarding the request to the backend service, advanced routing actions like Url rewrites and header transformations are applied depending on additional settings specified in this HttpRouteAction.",
                      "type": "list",
                      "required": false,
                      "elements": "dict",
                      "suboptions": {
                        "backend_service": {
                          "aliases": [],
                          "description": "The default BackendService resource. Before forwarding the request to backendService, the loadbalancer applies any relevant headerActions specified as part of this backendServiceWeight.\nThis field represents a link to a BackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_backend_service task and then set this backend_service field to \"{{ name-of-resource }}\"",
                          "type": "dict",
                          "required": true,
                          "suboptions": {}
                        },
                        "header_action": {
                          "aliases": [],
                          "description": "Specifies changes to request and response headers that need to take effect for the selected backendService. headerAction specified here take effect before headerAction in the enclosing HttpRouteRule, PathMatcher and UrlMap.",
                          "type": "dict",
                          "required": false,
                          "suboptions": {
                            "request_headers_to_add": {
                              "aliases": [],
                              "description": "Headers to add to a matching request prior to forwarding the request to the backendService.",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "header_name": {
                                  "aliases": [],
                                  "description": "The name of the header.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                },
                                "header_value": {
                                  "aliases": [],
                                  "description": "The value of the header to add.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                },
                                "replace": {
                                  "aliases": [],
                                  "description": "If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.",
                                  "type": "bool",
                                  "required": true,
                                  "suboptions": {}
                                }
                              }
                            },
                            "request_headers_to_remove": {
                              "aliases": [],
                              "description": "A list of header names for headers that need to be removed from the request prior to forwarding the request to the backendService.",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            },
                            "response_headers_to_add": {
                              "aliases": [],
                              "description": "Headers to add the response prior to sending the response back to the client.",
                              "type": "list",
                              "required": false,
                              "elements": "dict",
                              "suboptions": {
                                "header_name": {
                                  "aliases": [],
                                  "description": "The name of the header.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                },
                                "header_value": {
                                  "aliases": [],
                                  "description": "The value of the header to add.",
                                  "type": "str",
                                  "required": true,
                                  "suboptions": {}
                                },
                                "replace": {
                                  "aliases": [],
                                  "description": "If false, headerValue is appended to any values that already exist for the header. If true, headerValue is set for the header, discarding any values that were set for that header.",
                                  "type": "bool",
                                  "required": true,
                                  "suboptions": {}
                                }
                              }
                            },
                            "response_headers_to_remove": {
                              "aliases": [],
                              "description": "A list of header names for headers that need to be removed from the response prior to sending the response back to the client.",
                              "type": "list",
                              "required": false,
                              "elements": "str",
                              "suboptions": {}
                            }
                          }
                        },
                        "weight": {
                          "aliases": [],
                          "description": "Specifies the fraction of traffic sent to backendService, computed as weight / (sum of all weightedBackendService weights in routeAction) . The selection of a backend service is determined only for new traffic. Once a user's request has been directed to a backendService, subsequent requests will be sent to the same backendService as determined by the BackendService's session affinity policy.\nThe value must be between 0 and 1000 .",
                          "type": "int",
                          "required": true,
                          "suboptions": {}
                        }
                      }
                    }
                  }
                },
                "service": {
                  "aliases": [],
                  "description": "The backend service resource to which traffic is directed if this rule is matched. If routeAction is additionally specified, advanced routing actions like URL Rewrites, etc. take effect prior to sending the request to the backend. However, if service is specified, routeAction cannot contain any weightedBackendService s. Conversely, if routeAction specifies any weightedBackendServices, service must not be specified. Only one of urlRedirect, service or routeAction.weightedBackendService must be set.\nThis field represents a link to a BackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_backend_service task and then set this service field to \"{{ name-of-resource }}\"",
                  "type": "dict",
                  "required": false,
                  "suboptions": {}
                },
                "url_redirect": {
                  "aliases": [],
                  "description": "When this rule is matched, the request is redirected to a URL specified by urlRedirect. If urlRedirect is specified, service or routeAction must not be set.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "host_redirect": {
                      "aliases": [],
                      "description": "The host that will be used in the redirect response instead of the one that was supplied in the request. The value must be between 1 and 255 characters.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "https_redirect": {
                      "aliases": [],
                      "description": "If set to true, the URL scheme in the redirected request is set to https. If set to false, the URL scheme of the redirected request will remain the same as that of the request. This must only be set for UrlMaps used in TargetHttpProxys.\nSetting this true for TargetHttpsProxy is not permitted. Defaults to false.",
                      "default": "false",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "path_redirect": {
                      "aliases": [],
                      "description": "The path that will be used in the redirect response instead of the one that was supplied in the request. Only one of pathRedirect or prefixRedirect must be specified. The value must be between 1 and 1024 characters.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "prefix_redirect": {
                      "aliases": [],
                      "description": "The prefix that replaces the prefixMatch specified in the HttpRouteRuleMatch, retaining the remaining portion of the URL before redirecting the request.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "redirect_response_code": {
                      "aliases": [],
                      "description": "The HTTP Status code to use for this RedirectAction. Supported values are: * MOVED_PERMANENTLY_DEFAULT, which is the default value and corresponds to 301.\n* FOUND, which corresponds to 302.\n* SEE_OTHER which corresponds to 303.\n* TEMPORARY_REDIRECT, which corresponds to 307. In this case, the request method will be retained.\n* PERMANENT_REDIRECT, which corresponds to 308. In this case, the request method will be retained.\nSome valid choices include: \"FOUND\", \"MOVED_PERMANENTLY_DEFAULT\", \"PERMANENT_REDIRECT\", \"SEE_OTHER\", \"TEMPORARY_REDIRECT\"",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "strip_query": {
                      "aliases": [],
                      "description": "If set to true, any accompanying query portion of the original URL is removed prior to redirecting the request. If set to false, the query portion of the original URL is retained. Defaults to false.",
                      "default": "false",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            }
          }
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tests": {
          "aliases": [],
          "description": "The list of expected URL mapping tests. Request to update this UrlMap will succeed only if all of the test cases pass. You can specify a maximum of 100 tests per UrlMap.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "description": {
              "aliases": [],
              "description": "Description of this test case.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "host": {
              "aliases": [],
              "description": "Host portion of the URL.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "path": {
              "aliases": [],
              "description": "Path portion of the URL.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "service": {
              "aliases": [],
              "description": "Expected BackendService resource the given URL should be mapped to.\nThis field represents a link to a BackendService resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_backend_service task and then set this service field to \"{{ name-of-resource }}\"",
              "type": "dict",
              "required": true,
              "suboptions": {}
            }
          }
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP UrlMap"
    },
    "examples": "\n- name: create a instance group\n  google.cloud.gcp_compute_instance_group:\n    name: instancegroup-urlmap\n    zone: us-central1-a\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instancegroup\n\n- name: create a HTTP health check\n  google.cloud.gcp_compute_http_health_check:\n    name: httphealthcheck-urlmap\n    healthy_threshold: 10\n    port: 8080\n    timeout_sec: 2\n    unhealthy_threshold: 5\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: healthcheck\n\n- name: create a backend service\n  google.cloud.gcp_compute_backend_service:\n    name: backendservice-urlmap\n    backends:\n    - group: \"{{ instancegroup.selfLink }}\"\n    health_checks:\n    - \"{{ healthcheck.selfLink }}\"\n    enable_cdn: 'true'\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: backendservice\n\n- name: create a URL map\n  google.cloud.gcp_compute_url_map:\n    name: test_object\n    default_service: \"{{ backendservice }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_url_map_info": {
    "doc": {
      "description": "Gather info for GCP UrlMap",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP UrlMap"
    },
    "examples": "\n- name: get info on an URL map\n  gcp_compute_url_map_info:\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_compute_vpn_tunnel": {
    "doc": {
      "description": "VPN tunnel resource.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/compute/docs/reference/rest/v1/vpnTunnels)\nCloud VPN Overview: U(https://cloud.google.com/vpn/docs/concepts/overview)\nNetworks and Tunnel Routing: U(https://cloud.google.com/vpn/docs/concepts/choosing-networks-routing)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this resource.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ike_version": {
          "aliases": [],
          "description": "IKE protocol version to use when establishing the VPN tunnel with peer VPN gateway.\nAcceptable IKE versions are 1 or 2. Default version is 2.",
          "default": "2",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "local_traffic_selector": {
          "aliases": [],
          "description": "Local traffic selector to use when establishing the VPN tunnel with peer VPN gateway. The value should be a CIDR formatted string, for example `192.168.0.0/16`. The ranges should be disjoint.\nOnly IPv4 is supported.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "peer_external_gateway": {
          "aliases": [],
          "description": "URL of the peer side external VPN gateway to which this VPN tunnel is connected.\nThis field represents a link to a ExternalVpnGateway resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_external_vpn_gateway task and then set this peer_external_gateway field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "peer_external_gateway_interface": {
          "aliases": [],
          "description": "The interface ID of the external VPN gateway to which this VPN tunnel is connected.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "peer_gcp_gateway": {
          "aliases": [],
          "description": "URL of the peer side HA GCP VPN gateway to which this VPN tunnel is connected.\nIf provided, the VPN tunnel will automatically use the same vpn_gateway_interface ID in the peer GCP VPN gateway.\nThis field represents a link to a VpnGateway resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_vpn_gateway task and then set this peer_gcp_gateway field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "peer_ip": {
          "aliases": [],
          "description": "IP address of the peer VPN gateway. Only IPv4 is supported.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The region where the tunnel is located.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "remote_traffic_selector": {
          "aliases": [],
          "description": "Remote traffic selector to use when establishing the VPN tunnel with peer VPN gateway. The value should be a CIDR formatted string, for example `192.168.0.0/16`. The ranges should be disjoint.\nOnly IPv4 is supported.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "router": {
          "aliases": [],
          "description": "URL of router resource to be used for dynamic routing.\nThis field represents a link to a Router resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_router task and then set this router field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "shared_secret": {
          "aliases": [],
          "description": "Shared secret used to set the secure session between the Cloud VPN gateway and the peer VPN gateway.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target_vpn_gateway": {
          "aliases": [],
          "description": "URL of the Target VPN gateway with which this VPN tunnel is associated.\nThis field represents a link to a TargetVpnGateway resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_target_vpn_gateway task and then set this target_vpn_gateway field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "vpn_gateway": {
          "aliases": [],
          "description": "URL of the VPN gateway with which this VPN tunnel is associated.\nThis must be used if a High Availability VPN gateway resource is created.\nThis field represents a link to a VpnGateway resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'selfLink' and value of your resource's selfLink Alternatively, you can add `register: name-of-resource` to a gcp_compute_vpn_gateway task and then set this vpn_gateway field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "vpn_gateway_interface": {
          "aliases": [],
          "description": "The interface ID of the VPN gateway with which this VPN tunnel is associated.",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP VpnTunnel"
    },
    "examples": "\n- name: create a network\n  google.cloud.gcp_compute_network:\n    name: network-vpn-tunnel\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: network\n\n- name: create a router\n  google.cloud.gcp_compute_router:\n    name: router-vpn-tunnel\n    network: \"{{ network }}\"\n    bgp:\n      asn: 64514\n      advertise_mode: CUSTOM\n      advertised_groups:\n      - ALL_SUBNETS\n      advertised_ip_ranges:\n      - range: 1.2.3.4\n      - range: 6.7.0.0/16\n    region: us-central1\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: router\n\n- name: create a target vpn gateway\n  google.cloud.gcp_compute_target_vpn_gateway:\n    name: gateway-vpn-tunnel\n    region: us-west1\n    network: \"{{ network }}\"\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: gateway\n\n- name: create a vpn tunnel\n  google.cloud.gcp_compute_vpn_tunnel:\n    name: test_object\n    region: us-west1\n    target_vpn_gateway: \"{{ gateway }}\"\n    router: \"{{ router }}\"\n    shared_secret: super secret\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_compute_vpn_tunnel_info": {
    "doc": {
      "description": "Gather info for GCP VpnTunnel",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "A list of filter value pairs. Available filters are listed here U(https://cloud.google.com/sdk/gcloud/reference/topic/filters).\nEach additional filter in the list will act be added as an AND condition (filter1 and filter2) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The region where the tunnel is located.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP VpnTunnel"
    },
    "examples": "\n- name: get info on a vpn tunnel\n  gcp_compute_vpn_tunnel_info:\n    region: us-west1\n    filters:\n    - name = test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_container_cluster": {
    "doc": {
      "description": "A Google Container Engine cluster.",
      "has_action": false,
      "options": {
        "addons_config": {
          "aliases": [],
          "description": "Configurations for the various addons available to run in the cluster.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "horizontal_pod_autoscaling": {
              "aliases": [],
              "description": "Configuration for the horizontal pod autoscaling feature, which increases or decreases the number of replica pods a replication controller has based on the resource usage of the existing pods.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "disabled": {
                  "aliases": [],
                  "description": "Whether the Horizontal Pod Autoscaling feature is enabled in the cluster. When enabled, it ensures that a Heapster pod is running in the cluster, which is also used by the Cloud Monitoring service.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "http_load_balancing": {
              "aliases": [],
              "description": "Configuration for the HTTP (L7) load balancing controller addon, which makes it easy to set up HTTP load balancers for services in a cluster.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "disabled": {
                  "aliases": [],
                  "description": "Whether the HTTP Load Balancing controller is enabled in the cluster. When enabled, it runs a small pod in the cluster that manages the load balancers.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "network_policy_config": {
              "aliases": [],
              "description": "Configuration for NetworkPolicy. This only tracks whether the addon is enabled or not on the Master, it does not track whether network policy is enabled for the nodes.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "disabled": {
                  "aliases": [],
                  "description": "Whether NetworkPolicy is enabled for this cluster.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "binary_authorization": {
          "aliases": [],
          "description": "Configuration for the BinaryAuthorization feature.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enabled": {
              "aliases": [],
              "description": "If enabled, all container images will be validated by Binary Authorization.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "cluster_ipv4_cidr": {
          "aliases": [],
          "description": "The IP address range of the container pods in this cluster, in CIDR notation (e.g. 10.96.0.0/14). Leave blank to have one automatically chosen or specify a /14 block in 10.0.0.0/8.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "database_encryption": {
          "aliases": [],
          "description": "Configuration of etcd encryption.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "key_name": {
              "aliases": [],
              "description": "Name of CloudKMS key to use for the encryption of secrets in etcd. Ex.\n`projects/my-project/locations/global/keyRings/my-ring/cryptoKeys/my-key` .",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "Denotes the state of etcd encryption.\nSome valid choices include: \"ENCRYPTED\", \"DECRYPTED\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "default_max_pods_constraint": {
          "aliases": [],
          "description": "The default constraint on the maximum number of pods that can be run simultaneously on a node in the node pool of this cluster.\nOnly honored if cluster created with IP Alias support.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "max_pods_per_node": {
              "aliases": [],
              "description": "Constraint enforced on the max num of pods per node.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "An optional description of this cluster.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enable_kubernetes_alpha": {
          "aliases": [],
          "description": "Kubernetes alpha features are enabled on this cluster. This includes alpha API groups (e.g. v1alpha1) and features that may not be production ready in the kubernetes version of the master and nodes.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "enable_tpu": {
          "aliases": [],
          "description": "(Optional) Whether to enable Cloud TPU resources in this cluster.\nSee the official documentation - U(https://cloud.google.com/tpu/docs/kubernetes-engine-setup) .",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "initial_cluster_version": {
          "aliases": [],
          "description": "The software version of the master endpoint and kubelets used in the cluster when it was first created. The version can be upgraded over time.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "initial_node_count": {
          "aliases": [],
          "description": "The number of nodes to create in this cluster. You must ensure that your Compute Engine resource quota is sufficient for this number of instances. You must also have available firewall and routes quota. For requests, this field should only be used in lieu of a \"nodePool\" object, since this configuration (along with the \"nodeConfig\") will be used to create a \"NodePool\" object with an auto-generated name. Do not use this and a nodePool at the same time.\nThis field has been deprecated. Please use nodePool.initial_node_count instead.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "ip_allocation_policy": {
          "aliases": [],
          "description": "Configuration for controlling how IPs are allocated in the cluster.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "cluster_ipv4_cidr_block": {
              "aliases": [],
              "description": "The IP address range for the cluster pod IPs. If this field is set, then cluster.cluster_ipv4_cidr must be left blank.\nThis field is only applicable when useIpAliases is true.\nSet to blank to have a range chosen with the default size.\nSet to /netmask (e.g. /14) to have a range chosen with a specific netmask.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "cluster_secondary_range_name": {
              "aliases": [],
              "description": "The name of the secondary range to be used for the cluster CIDR block. The secondary range will be used for pod IP addresses.\nThis must be an existing secondary range associated with the cluster subnetwork .",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "create_subnetwork": {
              "aliases": [],
              "description": "Whether a new subnetwork will be created automatically for the cluster.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "node_ipv4_cidr_block": {
              "aliases": [],
              "description": "The IP address range of the instance IPs in this cluster.\nThis is applicable only if createSubnetwork is true.\nSet to blank to have a range chosen with the default size.\nSet to /netmask (e.g. /14) to have a range chosen with a specific netmask.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "services_ipv4_cidr_block": {
              "aliases": [],
              "description": "The IP address range of the services IPs in this cluster. If blank, a range will be automatically chosen with the default size.\nThis field is only applicable when useIpAliases is true.\nSet to blank to have a range chosen with the default size.\nSet to /netmask (e.g. /14) to have a range chosen with a specific netmask.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "services_secondary_range_name": {
              "aliases": [],
              "description": "The name of the secondary range to be used as for the services CIDR block. The secondary range will be used for service ClusterIPs. This must be an existing secondary range associated with the cluster subnetwork.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "subnetwork_name": {
              "aliases": [],
              "description": "A custom subnetwork name to be used if createSubnetwork is true.\nIf this field is empty, then an automatic name will be chosen for the new subnetwork.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "tpu_ipv4_cidr_block": {
              "aliases": [],
              "description": "The IP address range of the Cloud TPUs in this cluster. If unspecified, a range will be automatically chosen with the default size.\nThis field is only applicable when useIpAliases is true.\nIf unspecified, the range will use the default size.\nSet to /netmask (e.g. /14) to have a range chosen with a specific netmask.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "use_ip_aliases": {
              "aliases": [],
              "description": "Whether alias IPs will be used for pod IPs in the cluster.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "kubectl_context": {
          "aliases": [],
          "description": "The name of the context for the kubectl config file. Will default to the cluster name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "kubectl_path": {
          "aliases": [],
          "description": "The path that the kubectl config file will be written to.\nThe file will not be created if this path is unset.\nAny existing file at this path will be completely overwritten.\nThis requires the PyYaml library.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "legacy_abac": {
          "aliases": [],
          "description": "Configuration for the legacy ABAC authorization mode.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enabled": {
              "aliases": [],
              "description": "Whether the ABAC authorizer is enabled for this cluster. When enabled, identities in the system, including service accounts, nodes, and controllers, will have statically granted permissions beyond those provided by the RBAC configuration or IAM.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "location": {
          "aliases": [
            "zone"
          ],
          "description": "The location where the cluster is deployed.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "locations": {
          "aliases": [
            "nodeLocations"
          ],
          "description": "The list of Google Compute Engine zones in which the cluster's nodes should be located.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "logging_service": {
          "aliases": [],
          "description": "The logging service the cluster should use to write logs. Currently available options: logging.googleapis.com - the Google Cloud Logging service.\nnone - no logs will be exported from the cluster.\nif left as an empty string,logging.googleapis.com will be used.\nSome valid choices include: \"logging.googleapis.com\", \"none\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "master_auth": {
          "aliases": [],
          "description": "The authentication information for accessing the master endpoint.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "client_certificate_config": {
              "aliases": [],
              "description": "Configuration for client certificate authentication on the cluster. For clusters before v1.12, if no configuration is specified, a client certificate is issued.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "issue_client_certificate": {
                  "aliases": [],
                  "description": "Issue a client certificate.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "password": {
              "aliases": [],
              "description": "The password to use for HTTP basic authentication to the master endpoint. Because the master endpoint is open to the Internet, you should create a strong password with a minimum of 16 characters.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "The username to use for HTTP basic authentication to the master endpoint.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "master_authorized_networks_config": {
          "aliases": [],
          "description": "Configuration for controlling how IPs are allocated in the cluster.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "cidr_blocks": {
              "aliases": [],
              "description": "Define up to 50 external networks that could access Kubernetes master through HTTPS.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "cidr_block": {
                  "aliases": [],
                  "description": "Block specified in CIDR notation.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "display_name": {
                  "aliases": [],
                  "description": "Optional field used to identify cidr blocks.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "enabled": {
              "aliases": [],
              "description": "Whether or not master authorized networks is enabled.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "monitoring_service": {
          "aliases": [],
          "description": "The monitoring service the cluster should use to write metrics.\nCurrently available options: monitoring.googleapis.com - the Google Cloud Monitoring service.\nnone - no metrics will be exported from the cluster.\nif left as an empty string, monitoring.googleapis.com will be used.\nSome valid choices include: \"monitoring.googleapis.com\", \"none\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of this cluster. The name must be unique within this project and location, and can be up to 40 characters. Must be Lowercase letters, numbers, and hyphens only. Must start with a letter. Must end with a number or a letter.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "network": {
          "aliases": [],
          "description": "The name of the Google Compute Engine network to which the cluster is connected. If left unspecified, the default network will be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "network_config": {
          "aliases": [],
          "description": "Network configurations .",
          "type": "dict",
          "required": false,
          "suboptions": {
            "default_snat_status": {
              "aliases": [],
              "description": "Whether the cluster disables default in-node sNAT rules. In-node sNAT rules will be disabled when defaultSnatStatus is disabled.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "enable_intra_node_visibility": {
              "aliases": [],
              "description": "Whether Intra-node visibility is enabled for this cluster. This makes same node pod to pod traffic visible for VPC network.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "network_policy": {
          "aliases": [],
          "description": "Configuration options for the NetworkPolicy feature.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enabled": {
              "aliases": [],
              "description": "Whether network policy is enabled on the cluster.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "provider": {
              "aliases": [],
              "description": "The selected network policy provider.\nSome valid choices include: \"PROVIDER_UNSPECIFIED\", \"CALICO\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "node_config": {
          "aliases": [],
          "description": "Parameters used in creating the cluster's nodes.\nFor requests, this field should only be used in lieu of a \"nodePool\" object, since this configuration (along with the \"initialNodeCount\") will be used to create a \"NodePool\" object with an auto-generated name. Do not use this and a nodePool at the same time. For responses, this field will be populated with the node configuration of the first node pool. If unspecified, the defaults are used.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "accelerators": {
              "aliases": [],
              "description": "A list of hardware accelerators to be attached to each node. See U(https://cloud.google.com/compute/docs/gpus) for more information about support for GPUs.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "accelerator_count": {
                  "aliases": [],
                  "description": "The number of accelerator cards exposed to an instance.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "accelerator_type": {
                  "aliases": [],
                  "description": "The accelerator type resource name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "disk_size_gb": {
              "aliases": [],
              "description": "Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "disk_type": {
              "aliases": [],
              "description": "Type of the disk attached to each node (e.g. 'pd-standard' or 'pd-ssd') If unspecified, the default disk type is 'pd-standard' .",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "image_type": {
              "aliases": [],
              "description": "The image type to use for this node. Note that for a given image type, the latest version of it will be used.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "labels": {
              "aliases": [],
              "description": "The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it's best to assume the behavior is undefined and conflicts should be avoided. For more information, including usage and the valid values, see: U(http://kubernetes.io/v1.1/docs/user-guide/labels.html) An object containing a list of \"key\": value pairs.\nExample: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "local_ssd_count": {
              "aliases": [],
              "description": "The number of local SSD disks to be attached to the node.\nThe limit for this value is dependant upon the maximum number of disks available on a machine per zone. See: U(https://cloud.google.com/compute/docs/disks/local-ssd#local_ssd_limits) for more information.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "machine_type": {
              "aliases": [],
              "description": "The name of a Google Compute Engine machine type (e.g.\nn1-standard-1). If unspecified, the default machine type is n1-standard-1.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "metadata": {
              "aliases": [],
              "description": "The metadata key/value pairs assigned to instances in the cluster.\nKeys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes in length. These are reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project or be one of the four reserved keys: \"instance-template\", \"kube-env\", \"startup-script\", and \"user-data\" Values are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on them is that each value's size must be less than or equal to 32 KB.\nThe total size of all keys and values must be less than 512 KB.\nAn object containing a list of \"key\": value pairs.\nExample: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "min_cpu_platform": {
              "aliases": [],
              "description": "Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "oauth_scopes": {
              "aliases": [],
              "description": "The set of Google API scopes to be made available on all of the node VMs under the \"default\" service account.\nThe following scopes are recommended, but not required, and by default are not included: U(https://www.googleapis.com/auth/compute) is required for mounting persistent storage on your nodes.\nU(https://www.googleapis.com/auth/devstorage.read_only) is required for communicating with gcr.io (the Google Container Registry).\nIf unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "preemptible": {
              "aliases": [],
              "description": "Whether the nodes are created as preemptible VM instances. See: U(https://cloud.google.com/compute/docs/instances/preemptible) for more information about preemptible VM instances.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "service_account": {
              "aliases": [],
              "description": "The Google Cloud Platform Service Account to be used by the node VMs. If no Service Account is specified, the \"default\" service account is used.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "shielded_instance_config": {
              "aliases": [],
              "description": "Shielded Instance options.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "enable_integrity_monitoring": {
                  "aliases": [],
                  "description": "Defines whether the instance has integrity monitoring enabled.\nEnables monitoring and attestation of the boot integrity of the instance.\nThe attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "enable_secure_boot": {
                  "aliases": [],
                  "description": "Defines whether the instance has Secure Boot enabled.\nSecure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "tags": {
              "aliases": [],
              "description": "The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during cluster or node pool creation. Each tag within the list must comply with RFC1035.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "taints": {
              "aliases": [],
              "description": "List of kubernetes taints to be applied to each node.\nFor more information, including usage and the valid values, see: U(https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/) .",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "effect": {
                  "aliases": [],
                  "description": "Effect for taint.\nSome valid choices include: \"EFFECT_UNSPECIFIED\", \"NO_SCHEDULE\", \"PREFER_NO_SCHEDULE\", \"NO_EXECUTE\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "key": {
                  "aliases": [],
                  "description": "Key for taint.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "Value for taint.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "private_cluster_config": {
          "aliases": [],
          "description": "Configuration for a private cluster.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enable_private_endpoint": {
              "aliases": [],
              "description": "Whether the master's internal IP address is used as the cluster endpoint.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "enable_private_nodes": {
              "aliases": [],
              "description": "Whether nodes have internal IP addresses only. If enabled, all nodes are given only RFC 1918 private addresses and communicate with the master via private networking.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "master_ipv4_cidr_block": {
              "aliases": [],
              "description": "The IP range in CIDR notation to use for the hosted master network. This range will be used for assigning internal IP addresses to the master or set of masters, as well as the ILB VIP. This range must not overlap with any other ranges in use within the cluster's network.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "release_channel": {
          "aliases": [],
          "description": "ReleaseChannel indicates which release channel a cluster is subscribed to.\nRelease channels are arranged in order of risk and frequency of updates.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "channel": {
              "aliases": [],
              "description": "Which release channel the cluster is subscribed to.\nSome valid choices include: \"UNSPECIFIED\", \"RAPID\", \"REGULAR\", \"STABLE\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "resource_labels": {
          "aliases": [],
          "description": "The resource labels for the cluster to use to annotate any related Google Compute Engine resources.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "shielded_nodes": {
          "aliases": [],
          "description": "Shielded Nodes configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enabled": {
              "aliases": [],
              "description": "Whether Shielded Nodes features are enabled on all nodes in this cluster.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnetwork": {
          "aliases": [],
          "description": "The name of the Google Compute Engine subnetwork to which the cluster is connected.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Cluster"
    },
    "examples": "\n- name: create a cluster\n  google.cloud.gcp_container_cluster:\n    name: my-cluster\n    initial_node_count: 2\n    master_auth:\n      username: cluster_admin\n      password: my-secret-password\n    node_config:\n      machine_type: n1-standard-4\n      disk_size_gb: 500\n    location: us-central1-a\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_container_cluster_info": {
    "doc": {
      "description": "Gather info for GCP Cluster",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [
            "region",
            "zone"
          ],
          "description": "The location where the cluster is deployed.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Cluster"
    },
    "examples": "\n- name: get info on a cluster\n  gcp_container_cluster_info:\n    location: us-central1-a\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_container_node_pool": {
    "doc": {
      "description": "NodePool contains the name and configuration for a cluster's node pool.\nNode pools are a set of nodes (i.e. VM's), with a common configuration and specification, under the control of the cluster master. They may have a set of Kubernetes labels applied to them, which may be used to reference them during pod scheduling. They may also be resized up or down, to accommodate the workload.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "autoscaling": {
          "aliases": [],
          "description": "Autoscaler configuration for this NodePool. Autoscaler is enabled only if a valid configuration is present.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enabled": {
              "aliases": [],
              "description": "Is autoscaling enabled for this node pool.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "max_node_count": {
              "aliases": [],
              "description": "Maximum number of nodes in the NodePool. Must be >= minNodeCount.\nThere has to enough quota to scale up the cluster.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "min_node_count": {
              "aliases": [],
              "description": "Minimum number of nodes in the NodePool. Must be >= 1 and <= maxNodeCount.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "cluster": {
          "aliases": [],
          "description": "The cluster this node pool belongs to.\nThis field represents a link to a Cluster resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_container_cluster task and then set this cluster field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "conditions": {
          "aliases": [],
          "description": "Which conditions caused the current node pool state.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "code": {
              "aliases": [],
              "description": "Machine-friendly representation of the condition.\nSome valid choices include: \"UNKNOWN\", \"GCE_STOCKOUT\", \"GKE_SERVICE_ACCOUNT_DELETED\", \"GCE_QUOTA_EXCEEDED\", \"SET_BY_OPERATOR\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "config": {
          "aliases": [],
          "description": "The node configuration of the pool.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "accelerators": {
              "aliases": [],
              "description": "A list of hardware accelerators to be attached to each node.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "accelerator_count": {
                  "aliases": [],
                  "description": "The number of the accelerator cards exposed to an instance.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "accelerator_type": {
                  "aliases": [],
                  "description": "The accelerator type resource name.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "disk_size_gb": {
              "aliases": [],
              "description": "Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "disk_type": {
              "aliases": [],
              "description": "Type of the disk attached to each node (e.g. 'pd-standard' or 'pd-ssd') If unspecified, the default disk type is 'pd-standard' .",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "image_type": {
              "aliases": [],
              "description": "The image type to use for this node. Note that for a given image type, the latest version of it will be used.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "labels": {
              "aliases": [],
              "description": "The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it's best to assume the behavior is undefined and conflicts should be avoided. For more information, including usage and the valid values, see: U(http://kubernetes.io/v1.1/docs/user-guide/labels.html) An object containing a list of \"key\": value pairs.\nExample: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "local_ssd_count": {
              "aliases": [],
              "description": "The number of local SSD disks to be attached to the node.\nThe limit for this value is dependant upon the maximum number of disks available on a machine per zone. See: U(https://cloud.google.com/compute/docs/disks/local-ssd#local_ssd_limits) for more information.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "machine_type": {
              "aliases": [],
              "description": "The name of a Google Compute Engine machine type (e.g.\nn1-standard-1). If unspecified, the default machine type is n1-standard-1.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "metadata": {
              "aliases": [],
              "description": "The metadata key/value pairs assigned to instances in the cluster.\nKeys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes in length. These are reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project or be one of the four reserved keys: \"instance-template\", \"kube-env\", \"startup-script\", and \"user-data\" Values are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on them is that each value's size must be less than or equal to 32 KB.\nThe total size of all keys and values must be less than 512 KB.\nAn object containing a list of \"key\": value pairs.\nExample: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "min_cpu_platform": {
              "aliases": [],
              "description": "Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform .",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "oauth_scopes": {
              "aliases": [],
              "description": "The set of Google API scopes to be made available on all of the node VMs under the \"default\" service account.\nThe following scopes are recommended, but not required, and by default are not included: U(https://www.googleapis.com/auth/compute) is required for mounting persistent storage on your nodes.\nU(https://www.googleapis.com/auth/devstorage.read_only) is required for communicating with gcr.io (the Google Container Registry).\nIf unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "preemptible": {
              "aliases": [],
              "description": "Whether the nodes are created as preemptible VM instances. See: U(https://cloud.google.com/compute/docs/instances/preemptible) for more information about preemptible VM instances.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "service_account": {
              "aliases": [],
              "description": "The Google Cloud Platform Service Account to be used by the node VMs. If no Service Account is specified, the \"default\" service account is used.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "shielded_instance_config": {
              "aliases": [],
              "description": "Shielded Instance options.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "enable_integrity_monitoring": {
                  "aliases": [],
                  "description": "Defines whether the instance has integrity monitoring enabled.\nEnables monitoring and attestation of the boot integrity of the instance.\nThe attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "enable_secure_boot": {
                  "aliases": [],
                  "description": "Defines whether the instance has Secure Boot enabled.\nSecure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "tags": {
              "aliases": [],
              "description": "The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during cluster or node pool creation. Each tag within the list must comply with RFC1035.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "taints": {
              "aliases": [],
              "description": "List of kubernetes taints to be applied to each node.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "effect": {
                  "aliases": [],
                  "description": "Effect for taint.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "key": {
                  "aliases": [],
                  "description": "Key for taint.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "Value for taint.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "workload_meta_config": {
              "aliases": [],
              "description": "WorkloadMetadataConfig defines the metadata configuration to expose to workloads on the node pool.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "mode": {
                  "aliases": [],
                  "description": "Mode is the configuration for how to expose metadata to workloads running on the node pool.\nSome valid choices include: \"GCE_METADATA\", \"GKE_METADATA\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "initial_node_count": {
          "aliases": [],
          "description": "The initial node count for the pool. You must ensure that your Compute Engine resource quota is sufficient for this number of instances. You must also have available firewall and routes quota.",
          "type": "int",
          "required": true,
          "suboptions": {}
        },
        "location": {
          "aliases": [
            "region",
            "zone"
          ],
          "description": "The location where the node pool is deployed.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "management": {
          "aliases": [],
          "description": "Management configuration for this NodePool.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "auto_repair": {
              "aliases": [],
              "description": "A flag that specifies whether the node auto-repair is enabled for the node pool. If enabled, the nodes in this node pool will be monitored and, if they fail health checks too many times, an automatic repair action will be triggered.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "auto_upgrade": {
              "aliases": [],
              "description": "A flag that specifies whether node auto-upgrade is enabled for the node pool. If enabled, node auto-upgrade helps keep the nodes in your node pool up to date with the latest release version of Kubernetes.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "upgrade_options": {
              "aliases": [],
              "description": "Specifies the Auto Upgrade knobs for the node pool.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "max_pods_constraint": {
          "aliases": [],
          "description": "The constraint on the maximum number of pods that can be run simultaneously on a node in the node pool.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "max_pods_per_node": {
              "aliases": [],
              "description": "Constraint enforced on the max num of pods per node.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "The name of the node pool.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "The version of the Kubernetes of this node.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP NodePool"
    },
    "examples": "\n- name: create a cluster\n  google.cloud.gcp_container_cluster:\n    name: cluster-nodepool\n    initial_node_count: 4\n    location: us-central1-a\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: cluster\n\n- name: create a node pool\n  google.cloud.gcp_container_node_pool:\n    name: my-pool\n    initial_node_count: 4\n    cluster: \"{{ cluster }}\"\n    location: us-central1-a\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_container_node_pool_info": {
    "doc": {
      "description": "Gather info for GCP NodePool",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "cluster": {
          "aliases": [],
          "description": "The cluster this node pool belongs to.\nThis field represents a link to a Cluster resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_container_cluster task and then set this cluster field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [
            "region",
            "zone"
          ],
          "description": "The location where the node pool is deployed.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP NodePool"
    },
    "examples": "\n- name: get info on a node pool\n  gcp_container_node_pool_info:\n    cluster: \"{{ cluster }}\"\n    location: us-central1-a\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_dns_managed_zone": {
    "doc": {
      "description": "A zone is a subtree of the DNS namespace under one administrative responsibility. A ManagedZone is a resource that represents a DNS zone hosted by the Cloud DNS service.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/dns/api/v1/managedZones)\nManaging Zones: U(https://cloud.google.com/dns/zones/)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "dns_name": {
          "aliases": [],
          "description": "The DNS name of this managed zone, for instance \"example.com.\".",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "dnssec_config": {
          "aliases": [],
          "description": "DNSSEC configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "default_key_specs": {
              "aliases": [],
              "description": "Specifies parameters that will be used for generating initial DnsKeys for this ManagedZone. If you provide a spec for keySigning or zoneSigning, you must also provide one for the other.\ndefault_key_specs can only be updated when the state is `off`.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "algorithm": {
                  "aliases": [],
                  "description": "String mnemonic specifying the DNSSEC algorithm of this key.\nSome valid choices include: \"ecdsap256sha256\", \"ecdsap384sha384\", \"rsasha1\", \"rsasha256\", \"rsasha512\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "key_length": {
                  "aliases": [],
                  "description": "Length of the keys in bits.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "key_type": {
                  "aliases": [],
                  "description": "Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, will only be used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and will be used to sign all other types of resource record sets.\nSome valid choices include: \"keySigning\", \"zoneSigning\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "kind": {
                  "aliases": [],
                  "description": "Identifies what kind of resource this is.",
                  "default": "dns#dnsKeySpec",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "kind": {
              "aliases": [],
              "description": "Identifies what kind of resource this is.",
              "default": "dns#managedZoneDnsSecConfig",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "non_existence": {
              "aliases": [],
              "description": "Specifies the mechanism used to provide authenticated denial-of-existence responses.\nnon_existence can only be updated when the state is `off`.\nSome valid choices include: \"nsec\", \"nsec3\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "state": {
              "aliases": [],
              "description": "Specifies whether DNSSEC is enabled, and what mode it is in.\nSome valid choices include: \"off\", \"on\", \"transfer\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "forwarding_config": {
          "aliases": [],
          "description": "The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "target_name_servers": {
              "aliases": [],
              "description": "List of target name servers to forward to. Cloud DNS will select the best available name server if more than one target is given.",
              "type": "list",
              "required": true,
              "elements": "dict",
              "suboptions": {
                "forwarding_path": {
                  "aliases": [],
                  "description": "Forwarding path for this TargetNameServer. If unset or `default` Cloud DNS will make forwarding decision based on address ranges, i.e. RFC1918 addresses go to the VPC, Non-RFC1918 addresses go to the Internet. When set to `private`, Cloud DNS will always send queries through VPC for this target .\nSome valid choices include: \"default\", \"private\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "ipv4_address": {
                  "aliases": [],
                  "description": "IPv4 address of a target name server.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "labels": {
          "aliases": [],
          "description": "A set of key/value label pairs to assign to this ManagedZone.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "User assigned name for this resource.\nMust be unique within the project.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "name_server_set": {
          "aliases": [],
          "description": "Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users will leave this field unset.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "peering_config": {
          "aliases": [],
          "description": "The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "target_network": {
              "aliases": [],
              "description": "The network with which to peer.",
              "type": "dict",
              "required": true,
              "suboptions": {
                "network_url": {
                  "aliases": [],
                  "description": "The fully qualified URL of the VPC network to forward queries to.\nThis should be formatted like `U(https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}`) .",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "private_visibility_config": {
          "aliases": [],
          "description": "For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "networks": {
              "aliases": [],
              "description": "The list of VPC networks that can see this zone.",
              "type": "list",
              "required": true,
              "elements": "dict",
              "suboptions": {
                "network_url": {
                  "aliases": [],
                  "description": "The fully qualified URL of the VPC network to bind to.\nThis should be formatted like `U(https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}`) .",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "visibility": {
          "aliases": [],
          "description": "The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.\nSome valid choices include: \"private\", \"public\"",
          "default": "public",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP ManagedZone"
    },
    "examples": "\n- name: create a managed zone\n  google.cloud.gcp_dns_managed_zone:\n    name: test_object\n    dns_name: test.somewild2.example.com.\n    description: test zone\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_dns_managed_zone_info": {
    "doc": {
      "description": "Gather info for GCP ManagedZone",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "dns_name": {
          "aliases": [],
          "description": "Restricts the list to return only zones with this domain name.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP ManagedZone"
    },
    "examples": "\n- name: get info on a managed zone\n  gcp_dns_managed_zone_info:\n    dns_name: test.somewild2.example.com.\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_dns_resource_record_set": {
    "doc": {
      "description": "A single DNS record that exists on a domain name (i.e. in a managed zone).\nThis record defines the information about the domain and where the domain / subdomains direct to.\nThe record will include the domain/subdomain name, a type (i.e. A, AAA, CAA, MX, CNAME, NS, etc) .",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "managed_zone": {
          "aliases": [],
          "description": "Identifies the managed zone addressed by this request. This must be a dictionary that contains both a 'name' key and a 'dnsName' key. You can pass in the results of the gcp_dns_managed_zone module, which will contain both.",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "For example, U(www.example.com).",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "target": {
          "aliases": [],
          "description": "As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "ttl": {
          "aliases": [],
          "description": "Number of seconds that this ResourceRecordSet can be cached by resolvers.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "type": {
          "aliases": [],
          "description": "One of valid DNS resource types.\nSome valid choices include: \"A\", \"AAAA\", \"CAA\", \"CNAME\", \"MX\", \"NAPTR\", \"NS\", \"PTR\", \"SOA\", \"SPF\", \"SRV\", \"TLSA\", \"TXT\"",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP ResourceRecordSet"
    },
    "examples": "\n- name: create a managed zone\n  google.cloud.gcp_dns_managed_zone:\n    name: managedzone-rrs\n    dns_name: testzone-4.com.\n    description: test zone\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: managed_zone\n\n- name: create a resource record set\n  google.cloud.gcp_dns_resource_record_set:\n    name: www.testzone-4.com.\n    managed_zone: \"{{ managed_zone }}\"\n    type: A\n    ttl: 600\n    target:\n    - 10.1.2.3\n    - 40.5.6.7\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_dns_resource_record_set_info": {
    "doc": {
      "description": "Gather info for GCP ResourceRecordSet",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "managed_zone": {
          "aliases": [],
          "description": "Identifies the managed zone addressed by this request. This must be a dictionary that contains both a 'name' key and a 'dnsName' key. You can pass in the results of the gcp_dns_managed_zone module, which will contain both.",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP ResourceRecordSet"
    },
    "examples": "\n- name: get info on a resource record set\n  gcp_dns_resource_record_set_info:\n    managed_zone: \"{{ managed_zone }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_filestore_instance": {
    "doc": {
      "description": "A Google Cloud Filestore instance.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/filestore/docs/reference/rest/v1beta1/projects.locations.instances/create)\nOfficial Documentation: U(https://cloud.google.com/filestore/docs/creating-instances)\nUse with Kubernetes: U(https://cloud.google.com/filestore/docs/accessing-fileshares)\nCopying Data In/Out: U(https://cloud.google.com/filestore/docs/copying-data)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "A description of the instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "file_shares": {
          "aliases": [],
          "description": "File system shares on the instance. For this version, only a single file share is supported.",
          "type": "list",
          "required": true,
          "elements": "dict",
          "suboptions": {
            "capacity_gb": {
              "aliases": [],
              "description": "File share capacity in GiB. This must be at least 1024 GiB for the standard tier, or 2560 GiB for the premium tier.",
              "type": "int",
              "required": true,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "The name of the fileshare (16 characters or less) .",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "labels": {
          "aliases": [],
          "description": "Resource labels to represent user-provided metadata.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The resource name of the instance.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "networks": {
          "aliases": [],
          "description": "VPC networks to which the instance is connected. For this version, only a single network is supported.",
          "type": "list",
          "required": true,
          "elements": "dict",
          "suboptions": {
            "modes": {
              "aliases": [],
              "description": "IP versions for which the instance has IP addresses assigned.",
              "type": "list",
              "required": true,
              "elements": "str",
              "suboptions": {}
            },
            "network": {
              "aliases": [],
              "description": "The name of the GCE VPC network to which the instance is connected.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "reserved_ip_range": {
              "aliases": [],
              "description": "A /29 CIDR block that identifies the range of IP addresses reserved for this instance.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tier": {
          "aliases": [],
          "description": "The service tier of the instance.\nSome valid choices include: \"TIER_UNSPECIFIED\", \"STANDARD\", \"PREMIUM\", \"BASIC_HDD\", \"BASIC_SSD\", \"HIGH_SCALE_SSD\"",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "The name of the Filestore zone of the instance.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Instance"
    },
    "examples": "\n- name: create a instance\n  google.cloud.gcp_filestore_instance:\n    name: test_object\n    zone: us-central1-b\n    tier: PREMIUM\n    file_shares:\n    - capacity_gb: 2660\n      name: share1\n    networks:\n    - network: default\n      modes:\n      - MODE_IPV4\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_filestore_instance_info": {
    "doc": {
      "description": "Gather info for GCP Instance",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "The name of the Filestore zone of the instance.",
          "type": "str",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Instance"
    },
    "examples": "\n- name: get info on an instance\n  gcp_filestore_instance_info:\n    zone: us-central1-b\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_iam_role": {
    "doc": {
      "description": "A role in the Identity and Access Management API .",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Human-readable description for the role.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "included_permissions": {
          "aliases": [],
          "description": "Names of permissions this role grants when bound in an IAM policy.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the role.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "stage": {
          "aliases": [],
          "description": "The current launch stage of the role.\nSome valid choices include: \"ALPHA\", \"BETA\", \"GA\", \"DEPRECATED\", \"DISABLED\", \"EAP\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "title": {
          "aliases": [],
          "description": "A human-readable title for the role. Typically this is limited to 100 UTF-8 bytes.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Role"
    },
    "examples": "\n- name: create a role\n  google.cloud.gcp_iam_role:\n    name: myCustomRole2\n    title: My Custom Role\n    description: My custom role description\n    included_permissions:\n    - iam.roles.list\n    - iam.roles.create\n    - iam.roles.delete\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_iam_role_info": {
    "doc": {
      "description": "Gather info for GCP Role",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Role"
    },
    "examples": "\n- name: get info on a role\n  gcp_iam_role_info:\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_iam_service_account": {
    "doc": {
      "description": "A service account in the Identity and Access Management API.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "display_name": {
          "aliases": [],
          "description": "User specified description of service account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the service account.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP ServiceAccount"
    },
    "examples": "\n- name: create a service account\n  google.cloud.gcp_iam_service_account:\n    name: sa-{{ resource_name.split(\"-\")[-1] }}@graphite-playground.google.com.iam.gserviceaccount.com\n    display_name: My Ansible test key\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_iam_service_account_info": {
    "doc": {
      "description": "Gather info for GCP ServiceAccount",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP ServiceAccount"
    },
    "examples": "\n- name: get info on a service account\n  gcp_iam_service_account_info:\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_iam_service_account_key": {
    "doc": {
      "description": "A service account in the Identity and Access Management API.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key_algorithm": {
          "aliases": [],
          "description": "Specifies the algorithm for the key.\nSome valid choices include: \"KEY_ALG_UNSPECIFIED\", \"KEY_ALG_RSA_1024\", \"KEY_ALG_RSA_2048\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "path": {
          "aliases": [],
          "description": "The full name of the file that will hold the service account private key. The management of this file will depend on the value of sync_file parameter.\nFile path must be absolute.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "private_key_type": {
          "aliases": [],
          "description": "Output format for the service account key.\nSome valid choices include: \"TYPE_UNSPECIFIED\", \"TYPE_PKCS12_FILE\", \"TYPE_GOOGLE_CREDENTIALS_FILE\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account": {
          "aliases": [],
          "description": "The name of the serviceAccount.\nThis field represents a link to a ServiceAccount resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_iam_service_account task and then set this service_account field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP ServiceAccountKey"
    },
    "examples": "\n- name: create a service account\n  google.cloud.gcp_iam_service_account:\n    name: test-ansible@graphite-playground.google.com.iam.gserviceaccount.com\n    display_name: My Ansible test key\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: serviceaccount\n\n- name: create a service account key\n  google.cloud.gcp_iam_service_account_key:\n    service_account: \"{{ serviceaccount }}\"\n    private_key_type: TYPE_GOOGLE_CREDENTIALS_FILE\n    path: \"~/test_account.json\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_kms_crypto_key": {
    "doc": {
      "description": "A `CryptoKey` represents a logical key that can be used for cryptographic operations.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys)\nCreating a key: U(https://cloud.google.com/kms/docs/creating-keys#create_a_key)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key_ring": {
          "aliases": [],
          "description": "The KeyRing that this key belongs to.\nFormat: `'projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}'`.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "labels": {
          "aliases": [],
          "description": "Labels with user-defined metadata to apply to this resource.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The resource name for the CryptoKey.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purpose": {
          "aliases": [],
          "description": "Immutable purpose of CryptoKey. See U(https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings.cryptoKeys#CryptoKeyPurpose) for inputs.\nSome valid choices include: \"ENCRYPT_DECRYPT\", \"ASYMMETRIC_SIGN\", \"ASYMMETRIC_DECRYPT\"",
          "default": "ENCRYPT_DECRYPT",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "rotation_period": {
          "aliases": [],
          "description": "Every time this period passes, generate a new CryptoKeyVersion and set it as the primary.\nThe first rotation will take place after the specified period. The rotation period has the format of a decimal number with up to 9 fractional digits, followed by the letter `s` (seconds). It must be greater than a day (ie, 86400).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "skip_initial_version_creation": {
          "aliases": [],
          "description": "If set to true, the request will create a CryptoKey without any CryptoKeyVersions. You must use the `google_kms_key_ring_import_job` resource to import the CryptoKeyVersion.",
          "default": "false",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "version_template": {
          "aliases": [],
          "description": "A template describing settings for new crypto key versions.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "algorithm": {
              "aliases": [],
              "description": "The algorithm to use when creating a version based on this template.\nSee the [algorithm reference](U(https://cloud.google.com/kms/docs/reference/rest/v1/CryptoKeyVersionAlgorithm)) for possible inputs.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "protection_level": {
              "aliases": [],
              "description": "The protection level to use when creating a version based on this template.\nSome valid choices include: \"SOFTWARE\", \"HSM\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP CryptoKey"
    },
    "examples": "\n- name: create a key ring\n  google.cloud.gcp_kms_key_ring:\n    name: key-key-ring\n    location: us-central1\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: keyring\n\n- name: create a crypto key\n  google.cloud.gcp_kms_crypto_key:\n    name: test_object\n    key_ring: projects/{{ gcp_project }}/locations/us-central1/keyRings/key-key-ring\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_kms_crypto_key_info": {
    "doc": {
      "description": "Gather info for GCP CryptoKey",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "key_ring": {
          "aliases": [],
          "description": "The KeyRing that this key belongs to.\nFormat: `'projects/{{project}}/locations/{{location}}/keyRings/{{keyRing}}'`.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP CryptoKey"
    },
    "examples": "\n- name: get info on a crypto key\n  gcp_kms_crypto_key_info:\n    key_ring: projects/{{ gcp_project }}/locations/us-central1/keyRings/key-key-ring\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_kms_key_ring": {
    "doc": {
      "description": "A `KeyRing` is a toplevel logical grouping of `CryptoKeys`.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/kms/docs/reference/rest/v1/projects.locations.keyRings)\nCreating a key ring: U(https://cloud.google.com/kms/docs/creating-keys#create_a_key_ring)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "The location for the KeyRing.\nA full list of valid locations can be found by running `gcloud kms locations list`.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The resource name for the KeyRing.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP KeyRing"
    },
    "examples": "\n- name: create a key ring\n  google.cloud.gcp_kms_key_ring:\n    name: test_object\n    location: us-central1\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_kms_key_ring_info": {
    "doc": {
      "description": "Gather info for GCP KeyRing",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "The location for the KeyRing.\nA full list of valid locations can be found by running `gcloud kms locations list`.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP KeyRing"
    },
    "examples": "\n- name: get info on a key ring\n  gcp_kms_key_ring_info:\n    location: us-central1\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_logging_metric": {
    "doc": {
      "description": "Logs-based metric can also be used to extract values from logs and create a a distribution of the values. The distribution records the statistics of the extracted values along with an optional histogram of the values as specified by the bucket options.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/logging/docs/reference/v2/rest/v2/projects.metrics/create)\nOfficial Documentation: U(https://cloud.google.com/logging/docs/apis)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "bucket_options": {
          "aliases": [],
          "description": "The bucketOptions are required when the logs-based metric is using a DISTRIBUTION value type and it describes the bucket boundaries used to create a histogram of the extracted values.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "explicit_buckets": {
              "aliases": [],
              "description": "Specifies a set of buckets with arbitrary widths.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "bounds": {
                  "aliases": [],
                  "description": "The values must be monotonically increasing.",
                  "type": "list",
                  "required": true,
                  "elements": "str",
                  "suboptions": {}
                }
              }
            },
            "exponential_buckets": {
              "aliases": [],
              "description": "Specifies an exponential sequence of buckets that have a width that is proportional to the value of the lower bound. Each bucket represents a constant relative uncertainty on a specific value in the bucket.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "growth_factor": {
                  "aliases": [],
                  "description": "Must be greater than 1.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "num_finite_buckets": {
                  "aliases": [],
                  "description": "Must be greater than 0.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "scale": {
                  "aliases": [],
                  "description": "Must be greater than 0.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "linear_buckets": {
              "aliases": [],
              "description": "Specifies a linear sequence of buckets that all have the same width (except overflow and underflow).\nEach bucket represents a constant absolute uncertainty on the specific value in the bucket.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "num_finite_buckets": {
                  "aliases": [],
                  "description": "Must be greater than 0.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "offset": {
                  "aliases": [],
                  "description": "Lower bound of the first bucket.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "width": {
                  "aliases": [],
                  "description": "Must be greater than 0.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                }
              }
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "A description of this metric, which is used in documentation. The maximum length of the description is 8000 characters.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filter": {
          "aliases": [],
          "description": "An advanced logs filter (U(https://cloud.google.com/logging/docs/view/advanced-filters)) which is used to match log entries.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "label_extractors": {
          "aliases": [],
          "description": "A map from a label key string to an extractor expression which is used to extract data from a log entry field and assign as the label value. Each label key specified in the LabelDescriptor must have an associated extractor expression in this map. The syntax of the extractor expression is the same as for the valueExtractor field.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "metric_descriptor": {
          "aliases": [],
          "description": "The metric descriptor associated with the logs-based metric.",
          "type": "dict",
          "required": true,
          "suboptions": {
            "display_name": {
              "aliases": [],
              "description": "A concise name for the metric, which can be displayed in user interfaces. Use sentence case without an ending period, for example \"Request count\". This field is optional but it is recommended to be set for any metrics associated with user-visible concepts, such as Quota.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "labels": {
              "aliases": [],
              "description": "The set of labels that can be used to describe a specific instance of this metric type. For example, the appengine.googleapis.com/http/server/response_latencies metric type has a label for the HTTP response code, response_code, so you can look at latencies for successful responses or just for responses that failed.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "description": {
                  "aliases": [],
                  "description": "A human-readable description for the label.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "key": {
                  "aliases": [],
                  "description": "The label key.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                },
                "value_type": {
                  "aliases": [],
                  "description": "The type of data that can be assigned to the label.\nSome valid choices include: \"BOOL\", \"INT64\", \"STRING\"",
                  "default": "STRING",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "metric_kind": {
              "aliases": [],
              "description": "Whether the metric records instantaneous values, changes to a value, etc.\nSome combinations of metricKind and valueType might not be supported.\nFor counter metrics, set this to DELTA.\nSome valid choices include: \"DELTA\", \"GAUGE\", \"CUMULATIVE\"",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "unit": {
              "aliases": [],
              "description": "The unit in which the metric value is reported. It is only applicable if the valueType is `INT64`, `DOUBLE`, or `DISTRIBUTION`. The supported units are a subset of [The Unified Code for Units of Measure](U(http://unitsofmeasure.org/ucum.html)) standard .",
              "default": "1",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "value_type": {
              "aliases": [],
              "description": "Whether the measurement is an integer, a floating-point number, etc.\nSome combinations of metricKind and valueType might not be supported.\nFor counter metrics, set this to INT64.\nSome valid choices include: \"BOOL\", \"INT64\", \"DOUBLE\", \"STRING\", \"DISTRIBUTION\", \"MONEY\"",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "The client-assigned metric identifier. Examples - \"error_count\", \"nginx/requests\".\nMetric identifiers are limited to 100 characters and can include only the following characters A-Z, a-z, 0-9, and the special characters _-.,+!*',()%/. The forward-slash character (/) denotes a hierarchy of name pieces, and it cannot be the first character of the name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "value_extractor": {
          "aliases": [],
          "description": "A valueExtractor is required when using a distribution logs-based metric to extract the values to record from a log entry. Two functions are supported for value extraction - EXTRACT(field) or REGEXP_EXTRACT(field, regex). The argument are 1. field - The name of the log entry field from which the value is to be extracted. 2. regex - A regular expression using the Google RE2 syntax (U(https://github.com/google/re2/wiki/Syntax)) with a single capture group to extract data from the specified log entry field. The value of the field is converted to a string before applying the regex. It is an error to specify a regex that does not include exactly one capture group.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Metric"
    },
    "examples": "\n- name: create a metric\n  google.cloud.gcp_logging_metric:\n    name: test_object\n    filter: resource.type=gae_app AND severity>=ERROR\n    metric_descriptor:\n      metric_kind: DELTA\n      value_type: DISTRIBUTION\n      unit: '1'\n      labels:\n      - key: mass\n        value_type: STRING\n        description: amount of matter\n    value_extractor: EXTRACT(jsonPayload.request)\n    label_extractors:\n      mass: EXTRACT(jsonPayload.request)\n    bucket_options:\n      linear_buckets:\n        num_finite_buckets: 3\n        width: 1\n        offset: 1\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_logging_metric_info": {
    "doc": {
      "description": "Gather info for GCP Metric",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Metric"
    },
    "examples": "\n- name: get info on a metric\n  gcp_logging_metric_info:\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_mlengine_model": {
    "doc": {
      "description": "Represents a machine learning solution.\nA model can have multiple versions, each of which is a deployed, trained model ready to receive prediction requests. The model itself is just a container.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "default_version": {
          "aliases": [],
          "description": "The default version of the model. This version will be used to handle prediction requests that do not specify a version.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "The name specified for the version when it was created.",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "description": {
          "aliases": [],
          "description": "The description specified for the model when it was created.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "labels": {
          "aliases": [],
          "description": "One or more labels that you can add, to organize your models.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name specified for the model.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "online_prediction_console_logging": {
          "aliases": [],
          "description": "If true, online prediction nodes send stderr and stdout streams to Stackdriver Logging.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "online_prediction_logging": {
          "aliases": [],
          "description": "If true, online prediction access logs are sent to StackDriver Logging.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "regions": {
          "aliases": [],
          "description": "The list of regions where the model is going to be deployed.\nCurrently only one region per model is supported .",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Model"
    },
    "examples": "\n- name: create a model\n  google.cloud.gcp_mlengine_model:\n    name: \"{{ resource_name | replace('-', '_') }}\"\n    description: My model\n    regions:\n    - us-central1\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_mlengine_model_info": {
    "doc": {
      "description": "Gather info for GCP Model",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Model"
    },
    "examples": "\n- name: get info on a model\n  gcp_mlengine_model_info:\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_mlengine_version": {
    "doc": {
      "description": "Each version is a trained model deployed in the cloud, ready to handle prediction requests. A model can have multiple versions .",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "auto_scaling": {
          "aliases": [],
          "description": "Automatically scale the number of nodes used to serve the model in response to increases and decreases in traffic. Care should be taken to ramp up traffic according to the model's ability to scale or you will start seeing increases in latency and 429 response codes.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "min_nodes": {
              "aliases": [],
              "description": "The minimum number of nodes to allocate for this mode.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "deployment_uri": {
          "aliases": [],
          "description": "The Cloud Storage location of the trained model used to create the version.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description specified for the version when it was created.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "framework": {
          "aliases": [],
          "description": "The machine learning framework AI Platform uses to train this version of the model.\nSome valid choices include: \"FRAMEWORK_UNSPECIFIED\", \"TENSORFLOW\", \"SCIKIT_LEARN\", \"XGBOOST\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "is_default": {
          "aliases": [
            "default"
          ],
          "description": "If true, this version will be used to handle prediction requests that do not specify a version.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "labels": {
          "aliases": [],
          "description": "One or more labels that you can add, to organize your model versions.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "machine_type": {
          "aliases": [],
          "description": "The type of machine on which to serve the model. Currently only applies to online prediction service.\nSome valid choices include: \"mls1-c1-m2\", \"mls1-c4-m2\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "manual_scaling": {
          "aliases": [],
          "description": "Manually select the number of nodes to use for serving the model. You should generally use autoScaling with an appropriate minNodes instead, but this option is available if you want more predictable billing. Beware that latency and error rates will increase if the traffic exceeds that capability of the system to serve it based on the selected number of nodes.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "nodes": {
              "aliases": [],
              "description": "The number of nodes to allocate for this model. These nodes are always up, starting from the time the model is deployed.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "model": {
          "aliases": [],
          "description": "The model that this version belongs to.\nThis field represents a link to a Model resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_mlengine_model task and then set this model field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name specified for the version when it was created.\nThe version name must be unique within the model it is created in.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "prediction_class": {
          "aliases": [],
          "description": "The fully qualified name (module_name.class_name) of a class that implements the Predictor interface described in this reference field. The module containing this class should be included in a package provided to the packageUris field.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "python_version": {
          "aliases": [],
          "description": "The version of Python used in prediction. If not set, the default version is '2.7'. Python '3.5' is available when runtimeVersion is set to '1.4' and above. Python '2.7' works with all supported runtime versions.\nSome valid choices include: \"2.7\", \"3.5\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "runtime_version": {
          "aliases": [],
          "description": "The AI Platform runtime version to use for this deployment.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account": {
          "aliases": [],
          "description": "Specifies the service account for resource access control.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Version"
    },
    "examples": "\n- name: create a model\n  google.cloud.gcp_mlengine_model:\n    name: model_version\n    description: My model\n    regions:\n    - us-central1\n    online_prediction_logging: 'true'\n    online_prediction_console_logging: 'true'\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: model\n\n- name: create a version\n  google.cloud.gcp_mlengine_version:\n    name: \"{{ resource_name | replace('-', '_') }}\"\n    model: \"{{ model }}\"\n    runtime_version: 1.13\n    python_version: 3.5\n    is_default: 'true'\n    deployment_uri: gs://ansible-cloudml-bucket/\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_mlengine_version_info": {
    "doc": {
      "description": "Gather info for GCP Version",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "model": {
          "aliases": [],
          "description": "The model that this version belongs to.\nThis field represents a link to a Model resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_mlengine_model task and then set this model field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Version"
    },
    "examples": "\n- name: get info on a version\n  gcp_mlengine_version_info:\n    model: \"{{ model }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_pubsub_subscription": {
    "doc": {
      "description": "A named resource representing the stream of messages from a single, specific topic, to be delivered to the subscribing application.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.subscriptions)\nManaging Subscriptions: U(https://cloud.google.com/pubsub/docs/admin#managing_subscriptions)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "ack_deadline_seconds": {
          "aliases": [],
          "description": "This value is the maximum time after a subscriber receives a message before the subscriber should acknowledge the message. After message delivery but before the ack deadline expires and before the message is acknowledged, it is an outstanding message and will not be delivered again during that time (on a best-effort basis).\nFor pull subscriptions, this value is used as the initial value for the ack deadline. To override this value for a given message, call subscriptions.modifyAckDeadline with the corresponding ackId if using pull. The minimum custom deadline you can specify is 10 seconds. The maximum custom deadline you can specify is 600 seconds (10 minutes).\nIf this parameter is 0, a default value of 10 seconds is used.\nFor push delivery, this value is also used to set the request timeout for the call to the push endpoint.\nIf the subscriber never acknowledges the message, the Pub/Sub system will eventually redeliver the message.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "dead_letter_policy": {
          "aliases": [],
          "description": "A policy that specifies the conditions for dead lettering messages in this subscription. If dead_letter_policy is not set, dead lettering is disabled.\nThe Cloud Pub/Sub service account associated with this subscription's parent project (i.e., service-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com) must have permission to Acknowledge() messages on this subscription.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "dead_letter_topic": {
              "aliases": [],
              "description": "The name of the topic to which dead letter messages should be published.\nFormat is `projects/{project}/topics/{topic}`.\nThe Cloud Pub/Sub service account associated with the enclosing subscription's parent project (i.e., service-{project_number}@gcp-sa-pubsub.iam.gserviceaccount.com) must have permission to Publish() to this topic.\nThe operation will fail if the topic does not exist.\nUsers should ensure that there is a subscription attached to this topic since messages published to a topic with no subscriptions are lost.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "max_delivery_attempts": {
              "aliases": [],
              "description": "The maximum number of delivery attempts for any message. The value must be between 5 and 100.\nThe number of delivery attempts is defined as 1 + (the sum of number of NACKs and number of times the acknowledgement deadline has been exceeded for the message).\nA NACK is any call to ModifyAckDeadline with a 0 deadline. Note that client libraries may automatically extend ack_deadlines.\nThis field will be honored on a best effort basis.\nIf this parameter is 0, a default value of 5 is used.",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "enable_message_ordering": {
          "aliases": [],
          "description": "If `true`, messages published with the same orderingKey in PubsubMessage will be delivered to the subscribers in the order in which they are received by the Pub/Sub system. Otherwise, they may be delivered in any order.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "expiration_policy": {
          "aliases": [],
          "description": "A policy that specifies the conditions for this subscription's expiration.\nA subscription is considered active as long as any connected subscriber is successfully consuming messages from the subscription or is issuing operations on the subscription. If expirationPolicy is not set, a default policy with ttl of 31 days will be used. If it is set but ttl is \"\", the resource never expires. The minimum allowed value for expirationPolicy.ttl is 1 day.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "ttl": {
              "aliases": [],
              "description": "Specifies the \"time-to-live\" duration for an associated resource. The resource expires if it is not active for a period of ttl.\nIf ttl is not set, the associated resource never expires.\nA duration in seconds with up to nine fractional digits, terminated by 's'.\nExample - \"3.5s\".",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "filter": {
          "aliases": [],
          "description": "The subscription only delivers the messages that match the filter. Pub/Sub automatically acknowledges the messages that don't match the filter. You can filter messages by their attributes. The maximum length of a filter is 256 bytes. After creating the subscription, you can't modify the filter.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "labels": {
          "aliases": [],
          "description": "A set of key/value label pairs to assign to this Subscription.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "message_retention_duration": {
          "aliases": [],
          "description": "How long to retain unacknowledged messages in the subscription's backlog, from the moment a message is published. If retainAckedMessages is true, then this also configures the retention of acknowledged messages, and thus configures how far back in time a subscriptions.seek can be done. Defaults to 7 days. Cannot be more than 7 days (`\"604800s\"`) or less than 10 minutes (`\"600s\"`).\nA duration in seconds with up to nine fractional digits, terminated by 's'. Example: `\"600.5s\"`.",
          "default": "604800s",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the subscription.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "push_config": {
          "aliases": [],
          "description": "If push delivery is used with this subscription, this field is used to configure it. An empty pushConfig signifies that the subscriber will pull and ack messages using API methods.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "attributes": {
              "aliases": [],
              "description": "Endpoint configuration attributes.\nEvery endpoint has a set of API supported attributes that can be used to control different aspects of the message delivery.\nThe currently supported attribute is x-goog-version, which you can use to change the format of the pushed message. This attribute indicates the version of the data expected by the endpoint. This controls the shape of the pushed message (i.e., its fields and metadata). The endpoint version is based on the version of the Pub/Sub API.\nIf not present during the subscriptions.create call, it will default to the version of the API used to make such call. If not present during a subscriptions.modifyPushConfig call, its value will not be changed. subscriptions.get calls will always return a valid version, even if the subscription was created without this attribute.\nThe possible values for this attribute are: - v1beta1: uses the push format defined in the v1beta1 Pub/Sub API.\n- v1 or v1beta2: uses the push format defined in the v1 Pub/Sub API.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "oidc_token": {
              "aliases": [],
              "description": "If specified, Pub/Sub will generate and attach an OIDC JWT token as an Authorization header in the HTTP request for every pushed message.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "audience": {
                  "aliases": [],
                  "description": "Audience to be used when generating OIDC token. The audience claim identifies the recipients that the JWT is intended for. The audience value is a single case-sensitive string. Having multiple values (array) for the audience field is not supported. More info about the OIDC JWT token audience here: U(https://tools.ietf.org/html/rfc7519#section-4.1.3) Note: if not specified, the Push endpoint URL will be used.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "service_account_email": {
                  "aliases": [],
                  "description": "Service account email to be used for generating the OIDC token.\nThe caller (for subscriptions.create, subscriptions.patch, and subscriptions.modifyPushConfig RPCs) must have the iam.serviceAccounts.actAs permission for the service account.",
                  "type": "str",
                  "required": true,
                  "suboptions": {}
                }
              }
            },
            "push_endpoint": {
              "aliases": [],
              "description": "A URL locating the endpoint to which messages should be pushed.\nFor example, a Webhook endpoint might use \"U(https://example.com/push\").",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "retain_acked_messages": {
          "aliases": [],
          "description": "Indicates whether to retain acknowledged messages. If `true`, then messages are not expunged from the subscription's backlog, even if they are acknowledged, until they fall out of the messageRetentionDuration window.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "retry_policy": {
          "aliases": [],
          "description": "A policy that specifies how Pub/Sub retries message delivery for this subscription.\nIf not set, the default retry policy is applied. This generally implies that messages will be retried as soon as possible for healthy subscribers. RetryPolicy will be triggered on NACKs or acknowledgement deadline exceeded events for a given message .",
          "type": "dict",
          "required": false,
          "suboptions": {
            "maximum_backoff": {
              "aliases": [],
              "description": "The maximum delay between consecutive deliveries of a given message. Value should be between 0 and 600 seconds. Defaults to 600 seconds. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "minimum_backoff": {
              "aliases": [],
              "description": "The minimum delay between consecutive deliveries of a given message. Value should be between 0 and 600 seconds. Defaults to 10 seconds.\nA duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "topic": {
          "aliases": [],
          "description": "A reference to a Topic resource.\nThis field represents a link to a Topic resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_pubsub_topic task and then set this topic field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Subscription"
    },
    "examples": "\n- name: create a topic\n  google.cloud.gcp_pubsub_topic:\n    name: topic-subscription\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: topic\n\n- name: create a subscription\n  google.cloud.gcp_pubsub_subscription:\n    name: test_object\n    topic: \"{{ topic }}\"\n    ack_deadline_seconds: 300\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_pubsub_subscription_info": {
    "doc": {
      "description": "Gather info for GCP Subscription",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Subscription"
    },
    "examples": "\n- name: get info on a subscription\n  gcp_pubsub_subscription_info:\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_pubsub_topic": {
    "doc": {
      "description": "A named resource to which messages are sent by publishers.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics)\nManaging Topics: U(https://cloud.google.com/pubsub/docs/admin#managing_topics)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "kms_key_name": {
          "aliases": [],
          "description": "The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. Your project's PubSub service account (`service-{{PROJECT_NUMBER}}@gcp-sa-pubsub.iam.gserviceaccount.com`) must have `roles/cloudkms.cryptoKeyEncrypterDecrypter` to use this feature.\nThe expected format is `projects/*/locations/*/keyRings/*/cryptoKeys/*` .",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "labels": {
          "aliases": [],
          "description": "A set of key/value label pairs to assign to this Topic.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "message_storage_policy": {
          "aliases": [],
          "description": "Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not present, then no constraints are in effect.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "allowed_persistence_regions": {
              "aliases": [],
              "description": "A list of IDs of GCP regions where messages that are published to the topic may be persisted in storage. Messages published by publishers running in non-allowed GCP regions (or running outside of GCP altogether) will be routed for storage in one of the allowed regions. An empty list means that no regions are allowed, and is not a valid configuration.",
              "type": "list",
              "required": true,
              "elements": "str",
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "Name of the topic.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Topic"
    },
    "examples": "\n- name: create a topic\n  google.cloud.gcp_pubsub_topic:\n    name: test-topic1\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_pubsub_topic_info": {
    "doc": {
      "description": "Gather info for GCP Topic",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Topic"
    },
    "examples": "\n- name: get info on a topic\n  gcp_pubsub_topic_info:\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_redis_instance": {
    "doc": {
      "description": "A Google Cloud Redis instance.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/memorystore/docs/redis/reference/rest/)\nOfficial Documentation: U(https://cloud.google.com/memorystore/docs/redis/)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "alternative_location_id": {
          "aliases": [],
          "description": "Only applicable to STANDARD_HA tier which protects the instance against zonal failures by provisioning it across two zones.\nIf provided, it must be a different zone from the one provided in [locationId].",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "auth_enabled": {
          "aliases": [],
          "description": "Optional. Indicates whether OSS Redis AUTH is enabled for the instance. If set to \"true\" AUTH is enabled on the instance.\nDefault value is \"false\" meaning AUTH is disabled.",
          "default": "false",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "authorized_network": {
          "aliases": [],
          "description": "The full name of the Google Compute Engine network to which the instance is connected. If left unspecified, the default network will be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "connect_mode": {
          "aliases": [],
          "description": "The connection mode of the Redis instance.\nSome valid choices include: \"DIRECT_PEERING\", \"PRIVATE_SERVICE_ACCESS\"",
          "default": "DIRECT_PEERING",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "display_name": {
          "aliases": [],
          "description": "An arbitrary and optional user-provided name for the instance.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "labels": {
          "aliases": [],
          "description": "Resource labels to represent user provided metadata.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "location_id": {
          "aliases": [],
          "description": "The zone where the instance will be provisioned. If not provided, the service will choose a zone for the instance. For STANDARD_HA tier, instances will be created across two zones for protection against zonal failures. If [alternativeLocationId] is also provided, it must be different from [locationId].",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "memory_size_gb": {
          "aliases": [],
          "description": "Redis memory size in GiB.",
          "type": "int",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The ID of the instance or a fully qualified identifier for the instance.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "redis_configs": {
          "aliases": [],
          "description": "Redis configuration parameters, according to U(http://redis.io/topics/config).\nPlease check Memorystore documentation for the list of supported parameters: U(https://cloud.google.com/memorystore/docs/redis/reference/rest/v1/projects.locations.instances#Instance.FIELDS.redis_configs) .",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "redis_version": {
          "aliases": [],
          "description": "The version of Redis software. If not provided, latest supported version will be used. Currently, the supported values are: - REDIS_5_0 for Redis 5.0 compatibility - REDIS_4_0 for Redis 4.0 compatibility - REDIS_3_2 for Redis 3.2 compatibility .",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The name of the Redis region of the instance.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "reserved_ip_range": {
          "aliases": [],
          "description": "The CIDR range of internal addresses that are reserved for this instance. If not provided, the service will choose an unused /29 block, for example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be unique and non-overlapping with existing subnets in an authorized network.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tier": {
          "aliases": [],
          "description": "The service tier of the instance. Must be one of these values: - BASIC: standalone instance - STANDARD_HA: highly available primary/replica instances .\nSome valid choices include: \"BASIC\", \"STANDARD_HA\"",
          "default": "BASIC",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Instance"
    },
    "examples": "\n- name: create a network\n  google.cloud.gcp_compute_network:\n    name: network-instance\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: network\n\n- name: create a instance\n  google.cloud.gcp_redis_instance:\n    name: instance37\n    tier: STANDARD_HA\n    memory_size_gb: 1\n    region: us-central1\n    location_id: us-central1-a\n    redis_version: REDIS_3_2\n    display_name: Ansible Test Instance\n    reserved_ip_range: 192.168.0.0/29\n    labels:\n      my_key: my_val\n      other_key: other_val\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_redis_instance_info": {
    "doc": {
      "description": "Gather info for GCP Instance",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The name of the Redis region of the instance.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Instance"
    },
    "examples": "\n- name: get info on an instance\n  gcp_redis_instance_info:\n    region: us-central1\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_resourcemanager_project": {
    "doc": {
      "description": "Represents a GCP Project. A project is a container for ACLs, APIs, App Engine Apps, VMs, and other Google Cloud Platform resources.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "id": {
          "aliases": [],
          "description": "The unique, user-assigned ID of the Project. It must be 6 to 30 lowercase letters, digits, or hyphens. It must start with a letter.\nTrailing hyphens are prohibited.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "labels": {
          "aliases": [],
          "description": "The labels associated with this Project.\nLabel keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`.\nLabel values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.\nNo more than 256 labels can be associated with a given resource.\nClients should store labels in a representation such as JSON that does not depend on specific characters being disallowed .",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The user-assigned display name of the Project. It must be 4 to 30 characters. Allowed characters are: lowercase and uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "parent": {
          "aliases": [],
          "description": "A parent organization.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "id": {
              "aliases": [],
              "description": "Id of the organization.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "Must be organization.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Project"
    },
    "examples": "\n- name: create a project\n  google.cloud.gcp_resourcemanager_project:\n    name: My Sample Project\n    id: alextest-{{ 10000000000 | random }}\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    parent:\n      type: organization\n      id: 636173955921\n    state: present\n"
  },
  "google.cloud.gcp_resourcemanager_project_info": {
    "doc": {
      "description": "Gather info for GCP Project",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Project"
    },
    "examples": "\n- name: get info on a project\n  gcp_resourcemanager_project_info:\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_runtimeconfig_config": {
    "doc": {
      "description": "A RuntimeConfig resource is the primary resource in the Cloud RuntimeConfig service.\nA RuntimeConfig resource consists of metadata and a hierarchy of variables.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The description to associate with the runtime config.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the runtime config.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Config"
    },
    "examples": "\n- name: create a config\n  google.cloud.gcp_runtimeconfig_config:\n    name: test_object\n    description: My config\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_runtimeconfig_config_info": {
    "doc": {
      "description": "Gather info for GCP Config",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Config"
    },
    "examples": "\n- name: get info on a config\n  gcp_runtimeconfig_config_info:\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_runtimeconfig_variable": {
    "doc": {
      "description": "Describes a single variable within a runtime config resource.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "config": {
          "aliases": [],
          "description": "The name of the runtime config that this variable belongs to.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the variable resource.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "text": {
          "aliases": [],
          "description": "The string value of the variable. Either this or `value` can be set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "value": {
          "aliases": [],
          "description": "The binary value of the variable. Either this or `text` can be set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Variable"
    },
    "examples": "\n- name: create a config\n  google.cloud.gcp_runtimeconfig_config:\n    name: my-config\n    description: My config\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: config\n\n- name: create a variable\n  google.cloud.gcp_runtimeconfig_variable:\n    name: prod-variables/hostname\n    config: my-config\n    text: example.com\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_runtimeconfig_variable_info": {
    "doc": {
      "description": "Gather info for GCP Variable",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "config": {
          "aliases": [],
          "description": "The name of the runtime config that this variable belongs to.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Variable"
    },
    "examples": "\n- name: get info on a variable\n  gcp_runtimeconfig_variable_info:\n    config: my-config\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_serviceusage_service": {
    "doc": {
      "description": "A service that is available for use .",
      "has_action": false,
      "notes": "Getting Started: U(https://cloud.google.com/service-usage/docs/getting-started)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "disable_dependent_services": {
          "aliases": [],
          "description": "Indicates if dependent services should also be disabled. Can only be turned on if service is disabled.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The resource name of the service .",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Service"
    },
    "examples": "\n- name: create a service\n  google.cloud.gcp_serviceusage_service:\n    name: spanner.googleapis.com\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_serviceusage_service_info": {
    "doc": {
      "description": "Gather info for GCP Service",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Service"
    },
    "examples": "\n- name: get info on a service\n  gcp_serviceusage_service_info:\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_sourcerepo_repository": {
    "doc": {
      "description": "A repository (or repo) is a Git repository storing versioned source content.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/source-repositories/docs/reference/rest/v1/projects.repos)\nOfficial Documentation: U(https://cloud.google.com/source-repositories/)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Resource name of the repository, of the form projects/{{project}}/repos/{{repo}}.\nThe repo name may contain slashes. eg, projects/myproject/repos/name/with/slash .",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Repository"
    },
    "examples": "\n- name: create a repository\n  google.cloud.gcp_sourcerepo_repository:\n    name: test_object\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_sourcerepo_repository_info": {
    "doc": {
      "description": "Gather info for GCP Repository",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Repository"
    },
    "examples": "\n- name: get info on a repository\n  gcp_sourcerepo_repository_info:\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_spanner_database": {
    "doc": {
      "description": "A Cloud Spanner Database which is hosted on a Spanner instance.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/spanner/docs/reference/rest/v1/projects.instances.databases)\nOfficial Documentation: U(https://cloud.google.com/spanner/)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "extra_statements": {
          "aliases": [],
          "description": "An optional list of DDL statements to run inside the newly created database. Statements can create tables, indexes, etc. These statements execute atomically with the creation of the database: if there is an error in any statement, the database is not created.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "instance": {
          "aliases": [],
          "description": "The instance to create the database on.\nThis field represents a link to a Instance resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_spanner_instance task and then set this instance field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "A unique identifier for the database, which cannot be changed after the instance is created. Values are of the form [a-z][-a-z0-9]*[a-z0-9].",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Database"
    },
    "examples": "\n- name: create a instance\n  google.cloud.gcp_spanner_instance:\n    name: instance-database\n    display_name: My Spanner Instance\n    node_count: 2\n    labels:\n      cost_center: ti-1700004\n    config: regional-us-central1\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instance\n\n- name: create a database\n  google.cloud.gcp_spanner_database:\n    name: webstore\n    instance: \"{{ instance }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_spanner_database_info": {
    "doc": {
      "description": "Gather info for GCP Database",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance": {
          "aliases": [],
          "description": "The instance to create the database on.\nThis field represents a link to a Instance resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_spanner_instance task and then set this instance field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Database"
    },
    "examples": "\n- name: get info on a database\n  gcp_spanner_database_info:\n    instance: \"{{ instance }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_spanner_instance": {
    "doc": {
      "description": "An isolated set of Cloud Spanner resources on which databases can be hosted.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/spanner/docs/reference/rest/v1/projects.instances)\nOfficial Documentation: U(https://cloud.google.com/spanner/)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "config": {
          "aliases": [],
          "description": "The name of the instance's configuration (similar but not quite the same as a region) which defines defines the geographic placement and replication of your databases in this instance. It determines where your data is stored. Values are typically of the form `regional-europe-west1` , `us-central` etc.\nIn order to obtain a valid list please consult the [Configuration section of the docs](U(https://cloud.google.com/spanner/docs/instances)).",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "display_name": {
          "aliases": [],
          "description": "The descriptive name for this instance as it appears in UIs. Must be unique per project and between 4 and 30 characters in length.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "labels": {
          "aliases": [],
          "description": "An object containing a list of \"key\": value pairs.\nExample: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "A unique identifier for the instance, which cannot be changed after the instance is created. The name must be between 6 and 30 characters in length.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "node_count": {
          "aliases": [],
          "description": "The number of nodes allocated to this instance.",
          "default": "1",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Instance"
    },
    "examples": "\n- name: create a instance\n  google.cloud.gcp_spanner_instance:\n    name: testinstance\n    display_name: My Spanner Instance\n    node_count: 2\n    labels:\n      cost_center: ti-1700004\n    config: regional-us-central1\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_spanner_instance_info": {
    "doc": {
      "description": "Gather info for GCP Instance",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Instance"
    },
    "examples": "\n- name: get info on an instance\n  gcp_spanner_instance_info:\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_sql_database": {
    "doc": {
      "description": "Represents a SQL database inside the Cloud SQL instance, hosted in Google's cloud.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "charset": {
          "aliases": [],
          "description": "The charset value. See MySQL's [Supported Character Sets and Collations](U(https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html)) and Postgres' [Character Set Support](U(https://www.postgresql.org/docs/9.6/static/multibyte.html)) for more details and supported values. Postgres databases only support a value of `UTF8` at creation time.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "collation": {
          "aliases": [],
          "description": "The collation value. See MySQL's [Supported Character Sets and Collations](U(https://dev.mysql.com/doc/refman/5.7/en/charset-charsets.html)) and Postgres' [Collation Support](U(https://www.postgresql.org/docs/9.6/static/collation.html)) for more details and supported values. Postgres databases only support a value of `en_US.UTF8` at creation time.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance": {
          "aliases": [],
          "description": "The name of the Cloud SQL instance. This does not include the project ID.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the database in the Cloud SQL instance.\nThis does not include the project ID or instance name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Database"
    },
    "examples": "\n- name: create a instance\n  google.cloud.gcp_sql_instance:\n    name: \"{{resource_name}}-3\"\n    settings:\n      ip_configuration:\n        authorized_networks:\n        - name: google dns server\n          value: 8.8.8.8/32\n      tier: db-n1-standard-1\n    region: us-central1\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instance\n\n- name: create a database\n  google.cloud.gcp_sql_database:\n    name: test_object\n    charset: utf8\n    instance: \"{{ instance.name }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_sql_database_info": {
    "doc": {
      "description": "Gather info for GCP Database",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance": {
          "aliases": [],
          "description": "The name of the Cloud SQL instance. This does not include the project ID.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Database"
    },
    "examples": "\n- name: get info on a database\n  gcp_sql_database_info:\n    instance: \"{{ instance.name }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_sql_instance": {
    "doc": {
      "description": "Represents a Cloud SQL instance. Cloud SQL instances are SQL databases hosted in Google's cloud. The Instances resource provides methods for common configuration and management tasks.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "backend_type": {
          "aliases": [],
          "description": "* FIRST_GEN: First Generation instance. MySQL only.\n* SECOND_GEN: Second Generation instance or PostgreSQL instance.\n* EXTERNAL: A database server that is not managed by Google.\nSome valid choices include: \"FIRST_GEN\", \"SECOND_GEN\", \"EXTERNAL\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "connection_name": {
          "aliases": [],
          "description": "Connection name of the Cloud SQL instance used in connection strings.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "database_version": {
          "aliases": [],
          "description": "The database engine type and version. For First Generation instances, can be MYSQL_5_5, or MYSQL_5_6. For Second Generation instances, can be MYSQL_5_6 or MYSQL_5_7. Defaults to MYSQL_5_6.\nPostgreSQL instances: POSTGRES_9_6 The databaseVersion property can not be changed after instance creation.\nSome valid choices include: \"MYSQL_5_5\", \"MYSQL_5_6\", \"MYSQL_5_7\", \"POSTGRES_9_6\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "disk_encryption_configuration": {
          "aliases": [],
          "description": "Disk encryption settings.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "kms_key_name": {
              "aliases": [],
              "description": "The KMS key used to encrypt the Cloud SQL instance .",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "disk_encryption_status": {
          "aliases": [],
          "description": "Disk encryption status.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "kms_key_version_name": {
              "aliases": [],
              "description": "The KMS key version used to encrypt the Cloud SQL instance .",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "failover_replica": {
          "aliases": [],
          "description": "The name and status of the failover replica. This property is applicable only to Second Generation instances.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "The name of the failover replica. If specified at instance creation, a failover replica is created for the instance. The name doesn't include the project ID. This property is applicable only to Second Generation instances.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "instance_type": {
          "aliases": [],
          "description": "The instance type. This can be one of the following.\n* CLOUD_SQL_INSTANCE: A Cloud SQL instance that is not replicating from a master.\n* ON_PREMISES_INSTANCE: An instance running on the customer's premises.\n* READ_REPLICA_INSTANCE: A Cloud SQL instance configured as a read-replica.\nSome valid choices include: \"CLOUD_SQL_INSTANCE\", \"ON_PREMISES_INSTANCE\", \"READ_REPLICA_INSTANCE\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ipv6_address": {
          "aliases": [],
          "description": "The IPv6 address assigned to the instance. This property is applicable only to First Generation instances.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "master_instance_name": {
          "aliases": [],
          "description": "The name of the instance which will act as master in the replication setup.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "max_disk_size": {
          "aliases": [],
          "description": "The maximum disk size of the instance in bytes.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the Cloud SQL instance. This does not include the project ID.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "region": {
          "aliases": [],
          "description": "The geographical region. Defaults to us-central or us-central1 depending on the instance type (First Generation or Second Generation/PostgreSQL).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "replica_configuration": {
          "aliases": [],
          "description": "Configuration specific to failover replicas and read replicas.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "failover_target": {
              "aliases": [],
              "description": "Specifies if the replica is the failover target. If the field is set to true the replica will be designated as a failover replica.\nIn case the master instance fails, the replica instance will be promoted as the new master instance.\nOnly one replica can be specified as failover target, and the replica has to be in different zone with the master instance.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "mysql_replica_configuration": {
              "aliases": [],
              "description": "MySQL specific configuration when replicating from a MySQL on-premises master. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named master.info in the data directory.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "ca_certificate": {
                  "aliases": [],
                  "description": "PEM representation of the trusted CA's x509 certificate.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "client_certificate": {
                  "aliases": [],
                  "description": "PEM representation of the replica's x509 certificate .",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "client_key": {
                  "aliases": [],
                  "description": "PEM representation of the replica's private key. The corresponding public key is encoded in the client's certificate.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "connect_retry_interval": {
                  "aliases": [],
                  "description": "Seconds to wait between connect retries. MySQL's default is 60 seconds.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "dump_file_path": {
                  "aliases": [],
                  "description": "Path to a SQL dump file in Google Cloud Storage from which the replica instance is to be created. The URI is in the form gs://bucketName/fileName. Compressed gzip files (.gz) are also supported. Dumps should have the binlog coordinates from which replication should begin. This can be accomplished by setting --master-data to 1 when using mysqldump.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "master_heartbeat_period": {
                  "aliases": [],
                  "description": "Interval in milliseconds between replication heartbeats.",
                  "type": "int",
                  "required": false,
                  "suboptions": {}
                },
                "password": {
                  "aliases": [],
                  "description": "The password for the replication connection.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "ssl_cipher": {
                  "aliases": [],
                  "description": "A list of permissible ciphers to use for SSL encryption.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "username": {
                  "aliases": [],
                  "description": "The username for the replication connection.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "verify_server_certificate": {
                  "aliases": [],
                  "description": "Whether or not to check the master's Common Name value in the certificate that it sends during the SSL handshake.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "replica_names": {
              "aliases": [],
              "description": "The replicas of the instance.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "service_account_email_address": {
              "aliases": [],
              "description": "The service account email address assigned to the instance. This property is applicable only to Second Generation instances.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "settings": {
          "aliases": [],
          "description": "The user settings.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "availability_type": {
              "aliases": [],
              "description": "The availabilityType define if your postgres instance is run zonal or regional.\nSome valid choices include: \"ZONAL\", \"REGIONAL\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "backup_configuration": {
              "aliases": [],
              "description": "The daily backup configuration for the instance.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "binary_log_enabled": {
                  "aliases": [],
                  "description": "Whether binary log is enabled. If backup configuration is disabled, binary log must be disabled as well. MySQL only.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "enabled": {
                  "aliases": [],
                  "description": "Enable Autobackup for your instance.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "start_time": {
                  "aliases": [],
                  "description": "Define the backup start time in UTC (HH:MM) .",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "database_flags": {
              "aliases": [],
              "description": "The database flags passed to the instance at startup.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "name": {
                  "aliases": [],
                  "description": "The name of the flag. These flags are passed at instance startup, so include both server options and system variables for MySQL. Flags should be specified with underscores, not hyphens.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "value": {
                  "aliases": [],
                  "description": "The value of the flag. Booleans should be set to on for true and off for false. This field must be omitted if the flag doesn't take a value.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "ip_configuration": {
              "aliases": [],
              "description": "The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled for Second Generation instances.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "authorized_networks": {
                  "aliases": [],
                  "description": "The list of external networks that are allowed to connect to the instance using the IP. In CIDR notation, also known as 'slash' notation (e.g. 192.168.100.0/24).",
                  "type": "list",
                  "required": false,
                  "elements": "dict",
                  "suboptions": {
                    "expiration_time": {
                      "aliases": [],
                      "description": "The time when this access control entry expires in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "name": {
                      "aliases": [],
                      "description": "An optional label to identify this entry.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "value": {
                      "aliases": [],
                      "description": "The whitelisted value for the access control list. For example, to grant access to a client from an external IP (IPv4 or IPv6) address or subnet, use that address or subnet here.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "ipv4_enabled": {
                  "aliases": [],
                  "description": "Whether the instance should be assigned an IP address or not.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                },
                "require_ssl": {
                  "aliases": [],
                  "description": "Whether the mysqld should default to 'REQUIRE X509' for users connecting over IP.",
                  "type": "bool",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "tier": {
              "aliases": [],
              "description": "The tier or machine type for this instance, for example db-n1-standard-1. For MySQL instances, this field determines whether the instance is Second Generation (recommended) or First Generation.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "user_labels": {
              "aliases": [],
              "description": "User-provided labels, represented as a dictionary where each label is a single key value pair.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Instance"
    },
    "examples": "\n- name: create a instance\n  google.cloud.gcp_sql_instance:\n    name: \"{{resource_name}}-2\"\n    settings:\n      ip_configuration:\n        authorized_networks:\n        - name: google dns server\n          value: 8.8.8.8/32\n      tier: db-n1-standard-1\n    region: us-central1\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_sql_instance_info": {
    "doc": {
      "description": "Gather info for GCP Instance",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Instance"
    },
    "examples": "\n- name: get info on an instance\n  gcp_sql_instance_info:\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_sql_ssl_cert": {
    "doc": {
      "description": "Represents an SSL certificate created for a Cloud SQL instance. To use the SSL certificate you must have the SSL Client Certificate and the associated SSL Client Key. The Client Key can be downloaded only when the SSL certificate is created with the insert method.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "cert": {
          "aliases": [],
          "description": "PEM representation of the X.509 certificate.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "cert_serial_number": {
          "aliases": [],
          "description": "Serial number, as extracted from the certificate.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "common_name": {
          "aliases": [],
          "description": "User supplied name. Constrained to [a-zA-Z.-_ ]+.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "create_time": {
          "aliases": [],
          "description": "The time when the certificate was created in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "expiration_time": {
          "aliases": [],
          "description": "The time when the certificate expires in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance": {
          "aliases": [],
          "description": "The name of the Cloud SQL instance. This does not include the project ID.\nThis field represents a link to a Instance resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_sql_instance task and then set this instance field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "sha1_fingerprint": {
          "aliases": [],
          "description": "The SHA-1 of the certificate.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP SslCert"
    },
    "examples": "\n- name: create a instance\n  google.cloud.gcp_sql_instance:\n    name: \"{{resource_name}}-2\"\n    settings:\n      ip_configuration:\n        authorized_networks:\n        - name: google dns server\n          value: 8.8.8.8/32\n      tier: db-n1-standard-1\n    region: us-central1\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instance\n\n- name: create a SSL cert\n  google.cloud.gcp_sql_ssl_cert:\n    common_name: \"{{resource_name}}\"\n    instance: \"{{instance['name'}}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_sql_user": {
    "doc": {
      "description": "The Users resource represents a database user in a Cloud SQL instance.",
      "has_action": false,
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "host": {
          "aliases": [],
          "description": "The host name from which the user can connect. For insert operations, host defaults to an empty string. For update operations, host is specified as part of the request URL. The host name cannot be updated after insertion.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "instance": {
          "aliases": [],
          "description": "The name of the Cloud SQL instance. This does not include the project ID.\nThis field represents a link to a Instance resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_sql_instance task and then set this instance field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the user in the Cloud SQL instance.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "The password for the user.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP User"
    },
    "examples": "\n- name: create a instance\n  google.cloud.gcp_sql_instance:\n    name: \"{{resource_name}}-1\"\n    settings:\n      ip_configuration:\n        authorized_networks:\n        - name: google dns server\n          value: 8.8.8.8/32\n      tier: db-n1-standard-1\n    region: us-central1\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: instance\n\n- name: create a user\n  google.cloud.gcp_sql_user:\n    name: test-user\n    host: 10.1.2.3\n    password: secret-password\n    instance: \"{{ instance }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_sql_user_info": {
    "doc": {
      "description": "Gather info for GCP User",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "instance": {
          "aliases": [],
          "description": "The name of the Cloud SQL instance. This does not include the project ID.\nThis field represents a link to a Instance resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_sql_instance task and then set this instance field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP User"
    },
    "examples": "\n- name: get info on a user\n  gcp_sql_user_info:\n    instance: \"{{ instance }}\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  },
  "google.cloud.gcp_storage_bucket": {
    "doc": {
      "description": "The Buckets resource represents a bucket in Google Cloud Storage. There is a single global namespace shared by all buckets. For more information, see Bucket Name Requirements.\nBuckets contain objects which can be accessed by their own methods. In addition to the acl property, buckets contain bucketAccessControls, for use in fine-grained manipulation of an existing bucket's access controls.\nA bucket is always owned by the project team owners group.",
      "has_action": false,
      "options": {
        "acl": {
          "aliases": [],
          "description": "Access controls on the bucket.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "bucket": {
              "aliases": [],
              "description": "The name of the bucket.\nThis field represents a link to a Bucket resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_storage_bucket task and then set this bucket field to \"{{ name-of-resource }}\"",
              "type": "dict",
              "required": true,
              "suboptions": {}
            },
            "entity": {
              "aliases": [],
              "description": "The entity holding the permission, in one of the following forms: user-userId user-email group-groupId group-email domain-domain project-team-projectId allUsers allAuthenticatedUsers Examples: The user liz@example.com would be user-liz@example.com.\nThe group example@googlegroups.com would be group-example@googlegroups.com.\nTo refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "entity_id": {
              "aliases": [],
              "description": "The ID for the entity.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "project_team": {
              "aliases": [],
              "description": "The project team associated with the entity.",
              "type": "dict",
              "required": false,
              "suboptions": {
                "project_number": {
                  "aliases": [],
                  "description": "The project team associated with the entity.",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                },
                "team": {
                  "aliases": [],
                  "description": "The team.\nSome valid choices include: \"editors\", \"owners\", \"viewers\"",
                  "type": "str",
                  "required": false,
                  "suboptions": {}
                }
              }
            },
            "role": {
              "aliases": [],
              "description": "The access permission for the entity.\nSome valid choices include: \"OWNER\", \"READER\", \"WRITER\"",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "cors": {
          "aliases": [],
          "description": "The bucket's Cross-Origin Resource Sharing (CORS) configuration.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "max_age_seconds": {
              "aliases": [],
              "description": "The value, in seconds, to return in the Access-Control-Max-Age header used in preflight responses.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "method": {
              "aliases": [],
              "description": "The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: \"*\" is permitted in the list of methods, and means \"any method\".",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "origin": {
              "aliases": [],
              "description": "The list of Origins eligible to receive CORS response headers.\nNote: \"*\" is permitted in the list of origins, and means \"any Origin\".",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "response_header": {
              "aliases": [],
              "description": "The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            }
          }
        },
        "default_event_based_hold": {
          "aliases": [],
          "description": "Whether or not to automatically apply an eventBasedHold to new objects added to the bucket.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "default_object_acl": {
          "aliases": [],
          "description": "Default access controls to apply to new objects when no ACL is provided.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "bucket": {
              "aliases": [],
              "description": "The name of the bucket.\nThis field represents a link to a Bucket resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_storage_bucket task and then set this bucket field to \"{{ name-of-resource }}\"",
              "type": "dict",
              "required": true,
              "suboptions": {}
            },
            "entity": {
              "aliases": [],
              "description": "The entity holding the permission, in one of the following forms: * user-{{userId}} * user-{{email}} (such as \"user-liz@example.com\") * group-{{groupId}} * group-{{email}} (such as \"group-example@googlegroups.com\") * domain-{{domain}} (such as \"domain-example.com\") * project-team-{{projectId}} * allUsers * allAuthenticatedUsers .",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "object": {
              "aliases": [],
              "description": "The name of the object, if applied to an object.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "role": {
              "aliases": [],
              "description": "The access permission for the entity.\nSome valid choices include: \"OWNER\", \"READER\"",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "labels": {
          "aliases": [],
          "description": "Labels applied to this bucket. A list of key->value pairs.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "lifecycle": {
          "aliases": [],
          "description": "The bucket's lifecycle configuration.\nSee U(https://developers.google.com/storage/docs/lifecycle) for more information.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "rule": {
              "aliases": [],
              "description": "A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.",
              "type": "list",
              "required": false,
              "elements": "dict",
              "suboptions": {
                "action": {
                  "aliases": [],
                  "description": "The action to take.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "storage_class": {
                      "aliases": [],
                      "description": "Target storage class. Required iff the type of the action is SetStorageClass.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "type": {
                      "aliases": [],
                      "description": "Type of the action. Currently, only Delete and SetStorageClass are supported.\nSome valid choices include: \"Delete\", \"SetStorageClass\"",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                },
                "condition": {
                  "aliases": [],
                  "description": "The condition(s) under which the action will be taken.",
                  "type": "dict",
                  "required": false,
                  "suboptions": {
                    "age_days": {
                      "aliases": [],
                      "description": "Age of an object (in days). This condition is satisfied when an object reaches the specified age.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    },
                    "created_before": {
                      "aliases": [],
                      "description": "A date in RFC 3339 format with only the date part (for instance, \"2013-01-15\"). This condition is satisfied when an object is created before midnight of the specified date in UTC.",
                      "type": "str",
                      "required": false,
                      "suboptions": {}
                    },
                    "is_live": {
                      "aliases": [],
                      "description": "Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects.",
                      "type": "bool",
                      "required": false,
                      "suboptions": {}
                    },
                    "matches_storage_class": {
                      "aliases": [],
                      "description": "Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, ARCHIVE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.",
                      "type": "list",
                      "required": false,
                      "elements": "str",
                      "suboptions": {}
                    },
                    "num_newer_versions": {
                      "aliases": [],
                      "description": "Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.",
                      "type": "int",
                      "required": false,
                      "suboptions": {}
                    }
                  }
                }
              }
            }
          }
        },
        "location": {
          "aliases": [],
          "description": "The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Defaults to US. See the developer's guide for the authoritative list.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "logging": {
          "aliases": [],
          "description": "The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "log_bucket": {
              "aliases": [],
              "description": "The destination bucket where the current bucket's logs should be placed.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "log_object_prefix": {
              "aliases": [],
              "description": "A prefix for log object names.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "metageneration": {
          "aliases": [],
          "description": "The metadata generation of this bucket.",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the bucket.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "owner": {
          "aliases": [],
          "description": "The owner of the bucket. This is always the project team's owner group.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "entity": {
              "aliases": [],
              "description": "The entity, in the form project-owner-projectId.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "predefined_default_object_acl": {
          "aliases": [],
          "description": "Apply a predefined set of default object access controls to this bucket.\nAcceptable values are: - \"authenticatedRead\": Object owner gets OWNER access, and allAuthenticatedUsers get READER access.\n- \"bucketOwnerFullControl\": Object owner gets OWNER access, and project team owners get OWNER access.\n- \"bucketOwnerRead\": Object owner gets OWNER access, and project team owners get READER access.\n- \"private\": Object owner gets OWNER access.\n- \"projectPrivate\": Object owner gets OWNER access, and project team members get access according to their roles.\n- \"publicRead\": Object owner gets OWNER access, and allUsers get READER access.\nSome valid choices include: \"authenticatedRead\", \"bucketOwnerFullControl\", \"bucketOwnerRead\", \"private\", \"projectPrivate\", \"publicRead\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "storage_class": {
          "aliases": [],
          "description": "The bucket's default storage class, used whenever no storageClass is specified for a newly-created object. This defines how objects in the bucket are stored and determines the SLA and the cost of storage.\nValues include MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, ARCHIVE, and DURABLE_REDUCED_AVAILABILITY. If this value is not specified when the bucket is created, it will default to STANDARD. For more information, see storage classes.\nSome valid choices include: \"MULTI_REGIONAL\", \"REGIONAL\", \"STANDARD\", \"NEARLINE\", \"COLDLINE\", \"ARCHIVE\", \"DURABLE_REDUCED_AVAILABILITY\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "versioning": {
          "aliases": [],
          "description": "The bucket's versioning configuration.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "enabled": {
              "aliases": [],
              "description": "While set to true, versioning is fully enabled for this bucket.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "website": {
          "aliases": [],
          "description": "The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "main_page_suffix": {
              "aliases": [],
              "description": "If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "not_found_page": {
              "aliases": [],
              "description": "If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Bucket"
    },
    "examples": "\n- name: create a bucket\n  google.cloud.gcp_storage_bucket:\n    name: ansible-storage-module\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_storage_bucket_access_control": {
    "doc": {
      "description": "The BucketAccessControls resource represents the Access Control Lists (ACLs) for buckets within Google Cloud Storage. ACLs let you specify who has access to your data and to what extent.\nThere are three roles that can be assigned to an entity: READERs can get the bucket, though no acl property will be returned, and list the bucket's objects. WRITERs are READERs, and they can insert objects into the bucket and delete the bucket's objects. OWNERs are WRITERs, and they can get the acl property of a bucket, update a bucket, and call all BucketAccessControls methods on the bucket. For more information, see Access Control, with the caveat that this API uses READER, WRITER, and OWNER instead of READ, WRITE, and FULL_CONTROL.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/storage/docs/json_api/v1/bucketAccessControls)\nOfficial Documentation: U(https://cloud.google.com/storage/docs/access-control/lists)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "bucket": {
          "aliases": [],
          "description": "The name of the bucket.\nThis field represents a link to a Bucket resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_storage_bucket task and then set this bucket field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "entity": {
          "aliases": [],
          "description": "The entity holding the permission, in one of the following forms: user-userId user-email group-groupId group-email domain-domain project-team-projectId allUsers allAuthenticatedUsers Examples: The user liz@example.com would be user-liz@example.com.\nThe group example@googlegroups.com would be group-example@googlegroups.com.\nTo refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role": {
          "aliases": [],
          "description": "The access permission for the entity.\nSome valid choices include: \"OWNER\", \"READER\", \"WRITER\"",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP BucketAccessControl"
    },
    "examples": "\n- name: create a bucket\n  google.cloud.gcp_storage_bucket:\n    name: \"{{ resource_name }}\"\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: bucket\n\n- name: create a bucket access control\n  google.cloud.gcp_storage_bucket_access_control:\n    bucket: \"{{ bucket }}\"\n    entity: user-alexstephen@google.com\n    role: WRITER\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_storage_default_object_acl": {
    "doc": {
      "description": "The DefaultObjectAccessControls resources represent the Access Control Lists (ACLs) applied to a new object within a Google Cloud Storage bucket when no ACL was provided for that object. ACLs let you specify who has access to your bucket contents and to what extent.\nThere are two roles that can be assigned to an entity: READERs can get an object, though the acl property will not be revealed.\nOWNERs are READERs, and they can get the acl property, update an object, and call all objectAccessControls methods on the object. The owner of an object is always an OWNER.\nFor more information, see Access Control, with the caveat that this API uses READER and OWNER instead of READ and FULL_CONTROL.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/storage/docs/json_api/v1/defaultObjectAccessControls)\nOfficial Documentation: U(https://cloud.google.com/storage/docs/access-control/create-manage-lists)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "bucket": {
          "aliases": [],
          "description": "The name of the bucket.\nThis field represents a link to a Bucket resource in GCP. It can be specified in two ways. First, you can place a dictionary with key 'name' and value of your resource's name Alternatively, you can add `register: name-of-resource` to a gcp_storage_bucket task and then set this bucket field to \"{{ name-of-resource }}\"",
          "type": "dict",
          "required": true,
          "suboptions": {}
        },
        "entity": {
          "aliases": [],
          "description": "The entity holding the permission, in one of the following forms: * user-{{userId}} * user-{{email}} (such as \"user-liz@example.com\") * group-{{groupId}} * group-{{email}} (such as \"group-example@googlegroups.com\") * domain-{{domain}} (such as \"domain-example.com\") * project-team-{{projectId}} * allUsers * allAuthenticatedUsers .",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "object": {
          "aliases": [],
          "description": "The name of the object, if applied to an object.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "role": {
          "aliases": [],
          "description": "The access permission for the entity.\nSome valid choices include: \"OWNER\", \"READER\"",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP DefaultObjectACL"
    },
    "examples": "\n- name: create a bucket\n  google.cloud.gcp_storage_bucket:\n    name: \"{{ resource_name }}\"\n    project: \"{{ gcp_project }}\"\n    auth_kind: \"{{ gcp_cred_kind }}\"\n    service_account_file: \"{{ gcp_cred_file }}\"\n    state: present\n  register: bucket\n\n- name: create a default object acl\n  google.cloud.gcp_storage_default_object_acl:\n    bucket: \"{{ bucket }}\"\n    entity: OWNER:user-alexstephen@google.com\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_storage_object": {
    "doc": {
      "description": "Upload or download a file from a GCS bucket.",
      "has_action": false,
      "options": {
        "action": {
          "aliases": [],
          "description": "The actions to be taken on this object.\nYou can download the object, upload the object, or delete it.",
          "type": "str",
          "required": false,
          "choices": [
            "download",
            "upload",
            "delete"
          ],
          "suboptions": {}
        },
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "bucket": {
          "aliases": [],
          "description": "The name of the bucket.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dest": {
          "aliases": [],
          "description": "Destination location of file (may be local machine or cloud depending on action). Cloud location need to be urlencoded including slashes.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "src": {
          "aliases": [],
          "description": "Source location of file (may be local machine or cloud depending on action). Cloud locations need to be urlencoded including slashes.",
          "type": "path",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0",
        "google-cloud-storage >= 1.2..0"
      ],
      "short_description": "Creates a GCP Object"
    },
    "examples": "\n- name: create a object\n  google.cloud.gcp_storage_object:\n    action: download\n    bucket: ansible-bucket\n    src: modules.zip\n    dest: \"~/modules.zip\"\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_tpu_node": {
    "doc": {
      "description": "A Cloud TPU instance.",
      "has_action": false,
      "notes": "API Reference: U(https://cloud.google.com/tpu/docs/reference/rest/v1/projects.locations.nodes)\nOfficial Documentation: U(https://cloud.google.com/tpu/docs/)\nfor authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "accelerator_type": {
          "aliases": [],
          "description": "The type of hardware accelerators associated with this node.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "cidr_block": {
          "aliases": [],
          "description": "The CIDR block that the TPU node will use when selecting an IP address. This CIDR block must be a /29 block; the Compute Engine networks API forbids a smaller block, and using a larger block would be wasteful (a node can only consume one IP address).\nErrors will occur if the CIDR block has already been used for a currently existing TPU node, the CIDR block conflicts with any subnetworks in the user's provided network, or the provided network is peered with another network that is using that CIDR block.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "The user-supplied description of the TPU. Maximum of 512 characters.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "labels": {
          "aliases": [],
          "description": "Resource labels to represent user provided metadata.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The immutable name of the TPU.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network": {
          "aliases": [],
          "description": "The name of a network to peer the TPU node to. It must be a preexisting Compute Engine network inside of the project on which this API has been activated. If none is provided, \"default\" will be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scheduling_config": {
          "aliases": [],
          "description": "Sets the scheduling options for this TPU instance.",
          "type": "dict",
          "required": false,
          "suboptions": {
            "preemptible": {
              "aliases": [],
              "description": "Defines whether the TPU instance is preemptible.",
              "type": "bool",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the given object should exist in GCP",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tensorflow_version": {
          "aliases": [],
          "description": "The version of Tensorflow running in the Node.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "use_service_networking": {
          "aliases": [],
          "description": "Whether the VPC peering for the node is set up through Service Networking API.\nThe VPC Peering should be set up before provisioning the node. If this field is set, cidr_block field should not be specified. If the network that you want to peer the TPU Node to is a Shared VPC network, the node must be created with this this field enabled.",
          "default": "false",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "The GCP location for the TPU. If it is not provided, the provider zone is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Creates a GCP Node"
    },
    "examples": "\n- name: create a node\n  google.cloud.gcp_tpu_node:\n    name: test_object\n    zone: us-central1-b\n    accelerator_type: v3-8\n    tensorflow_version: '1.11'\n    cidr_block: 10.2.0.0/29\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n    state: present\n"
  },
  "google.cloud.gcp_tpu_node_info": {
    "doc": {
      "description": "Gather info for GCP Node",
      "has_action": false,
      "notes": "for authentication, you can set service_account_file using the C(gcp_service_account_file) env variable.\nfor authentication, you can set service_account_contents using the C(GCP_SERVICE_ACCOUNT_CONTENTS) env variable.\nFor authentication, you can set service_account_email using the C(GCP_SERVICE_ACCOUNT_EMAIL) env variable.\nFor authentication, you can set auth_kind using the C(GCP_AUTH_KIND) env variable.\nFor authentication, you can set scopes using the C(GCP_SCOPES) env variable.\nEnvironment variables values will only be used if the playbook values are not set.\nThe I(service_account_email) and I(service_account_file) options are mutually exclusive.",
      "options": {
        "auth_kind": {
          "aliases": [],
          "description": "The type of credential used.",
          "type": "str",
          "required": true,
          "choices": [
            "application",
            "machineaccount",
            "serviceaccount"
          ],
          "suboptions": {}
        },
        "env_type": {
          "aliases": [],
          "description": "Specifies which Ansible environment you're running this module within.\nThis should not be set unless you know what you're doing.\nThis only alters the User Agent string for any API requests.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "project": {
          "aliases": [],
          "description": "The Google Cloud Platform project to use.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "scopes": {
          "aliases": [],
          "description": "Array of scopes to be used",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "service_account_contents": {
          "aliases": [],
          "description": "The contents of a Service Account JSON file, either in a dictionary or as a JSON string that represents it.",
          "type": "jsonarg",
          "required": false,
          "suboptions": {}
        },
        "service_account_email": {
          "aliases": [],
          "description": "An optional service account email address if machineaccount is selected and the user does not wish to use the default email.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "service_account_file": {
          "aliases": [],
          "description": "The path of a Service Account JSON file if serviceaccount is selected as type.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "zone": {
          "aliases": [],
          "description": "The GCP location for the TPU. If it is not provided, the provider zone is used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python >= 2.6",
        "requests >= 2.18.4",
        "google-auth >= 1.3.0"
      ],
      "short_description": "Gather info for GCP Node"
    },
    "examples": "\n- name: get info on a node\n  gcp_tpu_node_info:\n    zone: us-central1-b\n    project: test_project\n    auth_kind: serviceaccount\n    service_account_file: \"/tmp/auth.pem\"\n"
  }
}