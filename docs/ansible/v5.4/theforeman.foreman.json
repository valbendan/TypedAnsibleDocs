{
  "theforeman.foreman.activation_key": {
    "doc": {
      "description": "Create and manage activation keys",
      "has_action": false,
      "options": {
        "auto_attach": {
          "aliases": [],
          "description": "Set Auto-Attach on or off",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "content_overrides": {
          "aliases": [],
          "description": "List of content overrides that include label and override state ('enabled', 'disabled' or 'default')",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "label": {
              "aliases": [],
              "description": "Label of the content override",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "override": {
              "aliases": [],
              "description": "Override value",
              "type": "str",
              "required": true,
              "choices": [
                "enabled",
                "disabled",
                "default"
              ],
              "suboptions": {}
            }
          }
        },
        "content_view": {
          "aliases": [],
          "description": "Name of the content view",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the activation key",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "host_collections": {
          "aliases": [],
          "description": "List of host collections to add to activation key",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "lifecycle_environment": {
          "aliases": [],
          "description": "Name of the lifecycle environment",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "max_hosts": {
          "aliases": [],
          "description": "Maximum number of registered content hosts.\nRequired if I(unlimited_hosts=false)",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the activation key",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "new_name": {
          "aliases": [],
          "description": "Name of the new activation key when state == copied",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Organization that the entity is in",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "purpose_addons": {
          "aliases": [],
          "description": "Sets the system purpose add-ons",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "purpose_role": {
          "aliases": [],
          "description": "Sets the system purpose role",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "purpose_usage": {
          "aliases": [],
          "description": "Sets the system purpose usage",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "release_version": {
          "aliases": [],
          "description": "Set the content release version",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "service_level": {
          "aliases": [],
          "description": "Set the service level",
          "type": "str",
          "required": false,
          "choices": [
            "Self-Support",
            "Standard",
            "Premium"
          ],
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the Activation Key\nIf C(copied) the key will be copied to a new one with I(new_name) as the name and all other fields left untouched\nC(present_with_defaults) will ensure the entity exists, but won't update existing ones",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "present_with_defaults",
            "absent",
            "copied"
          ],
          "suboptions": {}
        },
        "subscriptions": {
          "aliases": [],
          "description": "List of subscriptions that include either Name, Pool ID, or Upstream Pool ID.\nPool IDs are preferred since Names and Upstream Pool IDs are not guaranteed to be unique. The module will fail if it finds more than one match.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the Subscription to be added.\nMutually exclusive with I(pool_id) and I(upstream_pool_id).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "pool_id": {
              "aliases": [],
              "description": "Pool ID of the Subscription to be added.\nMutually exclusive with I(name) and I(upstream_pool_id).\nAlso named C(Candlepin Id) in the CSV export of the subscriptions,\nit is as well the C(UUID) as output by C(hammer subscription list).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "upstream_pool_id": {
              "aliases": [],
              "description": "Upstream Pool ID of the Subscription to be added.\nMutually exclusive with I(name) and I(pool_id).\nAlso named C(Master Pools) in the Red Hat Portal.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "unlimited_hosts": {
          "aliases": [],
          "description": "Can the activation key have unlimited hosts",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Activation Keys",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create client activation key\"\n  theforeman.foreman.activation_key:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"Clients\"\n    organization: \"Default Organization\"\n    lifecycle_environment: \"Library\"\n    content_view: 'client content view'\n    host_collections:\n        - rhel7-servers\n        - rhel7-production\n    subscriptions:\n      - pool_id: \"8a88e9826db22df5016dd018abdd029b\"\n      - pool_id: \"8a88e9826db22df5016dd01a23270344\"\n      - name: \"Red Hat Enterprise Linux\"\n    content_overrides:\n        - label: rhel-7-server-optional-rpms\n          override: enabled\n    auto_attach: False\n    release_version: 7Server\n    service_level: Standard\n"
  },
  "theforeman.foreman.architecture": {
    "doc": {
      "description": "Create, update, and delete Architectures",
      "has_action": false,
      "options": {
        "name": {
          "aliases": [],
          "description": "Name of architecture",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "operatingsystems": {
          "aliases": [],
          "description": "List of operating systems the entity should be assigned to.\nOperating systems are looked up by their title which is composed as \"<name> <major>.<minor>\".\nYou can omit the version part as long as you only have one operating system by that name.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "updated_name": {
          "aliases": [],
          "description": "New architecture name. When this parameter is set, the module will not be idempotent.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Architectures",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create an Architecture\"\n  theforeman.foreman.architecture:\n    name: \"i386\"\n    operatingsystems:\n      - \"TestOS1\"\n      - \"TestOS2\"\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: \"Update an Architecture\"\n  theforeman.foreman.architecture:\n    name: \"i386\"\n    operatingsystems:\n      - \"TestOS3\"\n      - \"TestOS4\"\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: \"Delete an Architecture\"\n  theforeman.foreman.architecture:\n    name: \"i386\"\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: absent\n"
  },
  "theforeman.foreman.auth_source_ldap": {
    "doc": {
      "description": "Create, update, and delete LDAP authentication sources",
      "has_action": false,
      "options": {
        "account": {
          "aliases": [],
          "description": "Account name to use when accessing the LDAP server.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "account_password": {
          "aliases": [],
          "description": "Account password to use when accessing the LDAP server.\nRequired when using I(onthefly_register).\nWhen this parameter is set, the module will not be idempotent.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "attr_firstname": {
          "aliases": [],
          "description": "Attribute containing first name.\nRequired when using I(onthefly_register).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "attr_lastname": {
          "aliases": [],
          "description": "Attribute containing last name.\nRequired when using I(onthefly_register).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "attr_login": {
          "aliases": [],
          "description": "Attribute containing login ID.\nRequired when using I(onthefly_register).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "attr_mail": {
          "aliases": [],
          "description": "Attribute containing email address.\nRequired when using I(onthefly_register).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "attr_photo": {
          "aliases": [],
          "description": "Attribute containing user photo",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "base_dn": {
          "aliases": [],
          "description": "The base DN to use when searching.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "groups_base": {
          "aliases": [],
          "description": "Base DN where groups reside.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "host": {
          "aliases": [],
          "description": "The hostname of the LDAP server",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ldap_filter": {
          "aliases": [],
          "description": "Filter to apply to LDAP searches",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "locations": {
          "aliases": [],
          "description": "List of locations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the LDAP authentication source",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "onthefly_register": {
          "aliases": [],
          "description": "Whether or not to register users on the fly.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "organizations": {
          "aliases": [],
          "description": "List of organizations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "port": {
          "aliases": [],
          "description": "The port number of the LDAP server",
          "default": "389",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "server_type": {
          "aliases": [],
          "description": "Type of the LDAP server",
          "type": "str",
          "required": false,
          "choices": [
            "free_ipa",
            "active_directory",
            "posix"
          ],
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "tls": {
          "aliases": [],
          "description": "Whether or not to use TLS when contacting the LDAP server.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "use_netgroups": {
          "aliases": [],
          "description": "Whether to use NIS netgroups instead of posix groups, not valid for I(server_type=active_directory)",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "usergroup_sync": {
          "aliases": [],
          "description": "Whether or not to sync external user groups on login",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage LDAP Authentication Sources",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: LDAP Authentication source\n  theforeman.foreman.auth_source_ldap:\n    name: \"Example LDAP\"\n    host: \"ldap.example.org\"\n    server_url: \"https://foreman.example.com\"\n    locations:\n      - \"Uppsala\"\n    organizations:\n      - \"Sweden\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: LDAP Authentication with automatic registration\n  theforeman.foreman.auth_source_ldap:\n    name: \"Example LDAP\"\n    host: \"ldap.example.org\"\n    onthefly_register: True\n    account: uid=ansible,cn=sysaccounts,cn=etc,dc=example,dc=com\n    account_password: secret\n    base_dn: dc=example,dc=com\n    groups_base: cn=groups,cn=accounts, dc=example,dc=com\n    server_type: free_ipa\n    attr_login: uid\n    attr_firstname: givenName\n    attr_lastname: sn\n    attr_mail: mail\n    attr_photo: jpegPhoto\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n"
  },
  "theforeman.foreman.bookmark": {
    "doc": {
      "description": "Manage Bookmark Entities",
      "has_action": false,
      "options": {
        "controller": {
          "aliases": [],
          "description": "Controller for the bookmark",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the bookmark",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "public": {
          "aliases": [],
          "description": "Make bookmark available for all users",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "query": {
          "aliases": [],
          "description": "Query of the bookmark",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity\nC(present_with_defaults) will ensure the entity exists, but won't update existing ones",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "present_with_defaults",
            "absent"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Bookmarks",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create a Bookmark\"\n  theforeman.foreman.bookmark:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"recent\"\n    controller: \"job_invocations\"\n    query: \"started_at > '24 hours ago'\"\n    state: present_with_defaults\n\n- name: \"Update a Bookmark\"\n  theforeman.foreman.bookmark:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"recent\"\n    controller: \"job_invocations\"\n    query: \"started_at > '12 hours ago'\"\n    state: present\n\n- name: \"Delete a Bookmark\"\n  theforeman.foreman.bookmark:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"recent\"\n    controller: \"job_invocations\"\n    state: absent\n"
  },
  "theforeman.foreman.compute_attribute": {
    "doc": {
      "description": "Manage Compute Attributes\nThis beta version can create, and update compute attributes",
      "has_action": false,
      "options": {
        "compute_profile": {
          "aliases": [],
          "description": "Name of compute profile",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "compute_resource": {
          "aliases": [],
          "description": "Name of compute resource",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vm_attrs": {
          "aliases": [
            "vm_attributes"
          ],
          "description": "Hash containing the data of vm_attrs",
          "type": "dict",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Compute Attributes",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create compute attribute\"\n  theforeman.foreman.compute_attribute:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    compute_profile: \"Test Compute Profile\"\n    compute_resource: \"Test Compute Resource\"\n    vm_attrs:\n      memory_mb: '2048'\n      cpu: '2'\n    state: present\n\n- name: \"Update compute attribute\"\n  theforeman.foreman.compute_attribute:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    compute_profile: \"Test Compute Profile\"\n    compute_resource: \"Test Compute Resource\"\n    vm_attrs:\n      memory_mb: '1024'\n      cpu: '1'\n    state: present\n"
  },
  "theforeman.foreman.compute_profile": {
    "doc": {
      "description": "Create, update, and delete Compute Profiles",
      "has_action": false,
      "options": {
        "compute_attributes": {
          "aliases": [],
          "description": "Compute attributes related to this compute profile. Some of these attributes are specific to the underlying compute resource type",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "compute_resource": {
              "aliases": [],
              "description": "Name of the compute resource the attribute should be for",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "vm_attrs": {
              "aliases": [
                "vm_attributes"
              ],
              "description": "Hash containing the data of vm_attrs",
              "type": "dict",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "name": {
          "aliases": [],
          "description": "compute profile name",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "updated_name": {
          "aliases": [],
          "description": "new compute profile name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Compute Profiles",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: compute profile\n  theforeman.foreman.compute_profile:\n    name: example_compute_profile\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: another compute profile\n  theforeman.foreman.compute_profile:\n    name: another_example_compute_profile\n    compute_attributes:\n    - compute_resource: ovirt_compute_resource1\n      vm_attrs:\n        cluster: 'a96d44a4-f14a-1015-82c6-f80354acdf01'\n        template: 'c88af4b7-a24a-453b-9ac2-bc647ca2ef99'\n        instance_type: 'cb8927e7-a404-40fb-a6c1-06cbfc92e077'\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: compute profile2\n  theforeman.foreman.compute_profile:\n    name: example_compute_profile2\n    compute_attributes:\n    - compute_resource: ovirt_compute_resource01\n      vm_attrs:\n        cluster: a96d44a4-f14a-1015-82c6-f80354acdf01\n        cores: 1\n        sockets: 1\n        memory: 1073741824\n        ha: 0\n        interfaces_attributes:\n          0:\n            name: \"\"\n            network: 390666e1-dab3-4c99-9f96-006b2e2fd801\n            interface: virtio\n        volumes_attributes:\n          0:\n            size_gb: 16\n            storage_domain: 19c50090-1ab4-4023-a63f-75ee1018ed5e\n            preallocate: '1'\n            wipe_after_delete: '0'\n            interface: virtio_scsi\n            bootable: 'true'\n    - compute_resource: libvirt_compute_resource03\n      vm_attrs:\n        cpus: 1\n        memory: 2147483648\n        nics_attributes:\n          0:\n            type: bridge\n            bridge: \"\"\n            model: virtio\n        volumes_attributes:\n          0:\n            pool_name: default\n            capacity: 16G\n            allocation: 16G\n            format_type: raw\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: Remove compute profile\n  theforeman.foreman.compute_profile:\n    name: example_compute_profile2\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: absent\n"
  },
  "theforeman.foreman.compute_resource": {
    "doc": {
      "description": "Create, update, and delete Compute Resources",
      "has_action": false,
      "options": {
        "description": {
          "aliases": [],
          "description": "compute resource description",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "locations": {
          "aliases": [],
          "description": "List of locations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "compute resource name",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "organizations": {
          "aliases": [],
          "description": "List of organizations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider": {
          "aliases": [],
          "description": "Compute resource provider. Required if I(state=present_with_defaults).",
          "type": "str",
          "required": false,
          "choices": [
            "vmware",
            "libvirt",
            "ovirt",
            "proxmox",
            "EC2",
            "AzureRm",
            "GCE"
          ],
          "suboptions": {}
        },
        "provider_params": {
          "aliases": [],
          "description": "Parameter specific to compute resource provider. Required if I(state=present_with_defaults).",
          "type": "dict",
          "required": false,
          "suboptions": {
            "app_ident": {
              "aliases": [],
              "description": "AzureRM client id",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "caching_enabled": {
              "aliases": [],
              "description": "enable caching for I(provider=vmware)",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "cloud": {
              "aliases": [],
              "description": "cloud for I(provider=AzureRm)",
              "type": "str",
              "required": false,
              "choices": [
                "azure",
                "azureusgovernment",
                "azurechina",
                "azuregermancloud"
              ],
              "version_added": "2.1.0",
              "suboptions": {}
            },
            "datacenter": {
              "aliases": [],
              "description": "Datacenter the compute resource is in, not valid for I(provider=libvirt)",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "display_type": {
              "aliases": [],
              "description": "Display type to use for the remote console, only valid for I(provider=libvirt)",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "email": {
              "aliases": [],
              "description": "Email for I(provider=GCE)",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "key_path": {
              "aliases": [],
              "description": "Certificate path for I(provider=GCE)",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "keyboard_layout": {
              "aliases": [],
              "description": "Default VNC Keyboard for I(provider=ovirt)",
              "type": "str",
              "required": false,
              "choices": [
                "ar",
                "da",
                "de",
                "de-ch",
                "en-gb",
                "en-us",
                "es",
                "et",
                "fi",
                "fo",
                "fr",
                "fr-be",
                "fr-ca",
                "fr-ch",
                "hr",
                "hu",
                "is",
                "it",
                "ja",
                "lt",
                "lv",
                "mk",
                "nl",
                "nl-be",
                "no",
                "pl",
                "pt",
                "pt-br",
                "ru",
                "sl",
                "sv",
                "th",
                "tr"
              ],
              "version_added": "2.0.0",
              "suboptions": {}
            },
            "ovirt_quota": {
              "aliases": [],
              "description": "oVirt quota ID, only valid for I(provider=ovirt)",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Password for the compute resource connection, not valid for I(provider=libvirt)",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "project": {
              "aliases": [],
              "description": "Project id for I(provider=GCE)",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "public_key": {
              "aliases": [],
              "description": "X509 Certification Authorities, only valid for I(provider=ovirt)",
              "type": "str",
              "required": false,
              "version_added": "2.0.0",
              "suboptions": {}
            },
            "region": {
              "aliases": [],
              "description": "AWS region, AZURE region",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "set_console_password": {
              "aliases": [],
              "description": "Set a randomly generated password on the display connection for I(provider=vmware) and I(provider=libvirt)",
              "type": "bool",
              "required": false,
              "version_added": "2.0.0",
              "suboptions": {}
            },
            "ssl_verify_peer": {
              "aliases": [],
              "description": "verify ssl from provider I(provider=proxmox)",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "sub_id": {
              "aliases": [],
              "description": "Subscription ID for I(provider=AzureRm)",
              "type": "str",
              "required": false,
              "version_added": "2.1.0",
              "suboptions": {}
            },
            "tenant": {
              "aliases": [],
              "description": "AzureRM tenant",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "url": {
              "aliases": [],
              "description": "URL of the compute resource",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "use_v4": {
              "aliases": [],
              "description": "Use oVirt API v4, only valid for I(provider=ovirt)",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "user": {
              "aliases": [],
              "description": "Username for the compute resource connection, not valid for I(provider=libvirt)",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "zone": {
              "aliases": [],
              "description": "zone for I(provider=GCE)",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity\nC(present_with_defaults) will ensure the entity exists, but won't update existing ones",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "present_with_defaults",
            "absent"
          ],
          "suboptions": {}
        },
        "updated_name": {
          "aliases": [],
          "description": "new compute resource name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Compute Resources",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create livirt compute resource\n  theforeman.foreman.compute_resource:\n    name: example_compute_resource\n    locations:\n      - Munich\n    organizations:\n      - ACME\n    provider: libvirt\n    provider_params:\n      url: libvirt.example.com\n      display_type: vnc\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: Update libvirt compute resource\n  theforeman.foreman.compute_resource:\n    name: example_compute_resource\n    description: updated compute resource\n    locations:\n      - Munich\n    organizations:\n      - ACME\n    provider: libvirt\n    provider_params:\n      url: libvirt.example.com\n      display_type: vnc\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: Delete libvirt compute resource\n  theforeman.foreman.compute_resource:\n    name: example_compute_resource\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: absent\n\n- name: Create vmware compute resource\n  theforeman.foreman.compute_resource:\n    name: example_compute_resource\n    locations:\n      - Munich\n    organizations:\n      - ACME\n    provider: vmware\n    provider_params:\n      caching_enabled: false\n      url: vsphere.example.com\n      user: admin\n      password: secret\n      datacenter: ax01\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: Create ovirt compute resource\n  theforeman.foreman.compute_resource:\n    name: ovirt_compute_resource\n    locations:\n      - France/Toulouse\n    organizations:\n      - Example Org\n    provider: ovirt\n    provider_params:\n      url: ovirt.example.com\n      user: ovirt-admin@example.com\n      password: ovirtsecret\n      datacenter: aa92fb54-0736-4066-8fa8-b8b9e3bd75ac\n      ovirt_quota: 24868ab9-c2a1-47c3-87e7-706f17d215ac\n      use_v4: true\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: Create proxmox compute resource\n  theforeman.foreman.compute_resource:\n    name: proxmox_compute_resource\n    locations:\n      - Munich\n    organizations:\n      - ACME\n    provider: proxmox\n    provider_params:\n      url: https://proxmox.example.com:8006/api2/json\n      user: root@pam\n      password: secretpassword\n      ssl_verify_peer: true\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: create EC2 compute resource\n  theforeman.foreman.compute_resource:\n    name: EC2_compute_resource\n    description: EC2\n    locations:\n      - AWS\n    organizations:\n      - ACME\n    provider: EC2\n    provider_params:\n      user: AWS_ACCESS_KEY\n      password: AWS_SECRET_KEY\n      region: eu-west-1\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: create Azure compute resource\n  theforeman.foreman.compute_resource:\n    name: AzureRm_compute_resource\n    description: AzureRm\n    locations:\n      - Azure\n    organizations:\n      - ACME\n    provider: AzureRm\n    provider_params:\n      sub_id: SUBSCRIPTION_ID\n      tenant: TENANT_ID\n      app_ident: CLIENT_ID\n      password: CLIENT_SECRET\n      region: westeurope\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: create GCE compute resource\n  theforeman.foreman.compute_resource:\n    name: GCE compute resource\n    description: Google Cloud Engine\n    locations:\n      - GCE\n    organizations:\n      - ACME\n    provider: GCE\n    provider_params:\n      project: orcharhino\n      email: myname@atix.de\n      key_path: \"/usr/share/foreman/gce_orcharhino_key.json\"\n      zone: europe-west3-b\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n"
  },
  "theforeman.foreman.config_group": {
    "doc": {
      "description": "Create, update, and delete (Puppet) config groups",
      "has_action": false,
      "options": {
        "name": {
          "aliases": [],
          "description": "The config group name",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "puppetclasses": {
          "aliases": [],
          "description": "List of puppet classes to include in this group",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "updated_name": {
          "aliases": [],
          "description": "New config group name. When this parameter is set, the module will not be idempotent.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage (Puppet) Config Groups",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: create new config group\n  theforeman.foreman.config_group:\n    name: \"My config group\"\n    puppetclasses:\n      - ntp\n      - mymodule::myclass\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n"
  },
  "theforeman.foreman.content_credential": {
    "doc": {
      "description": "Create and manage content credentials",
      "has_action": false,
      "options": {
        "content": {
          "aliases": [],
          "description": "Content of the content credential",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "content_type": {
          "aliases": [],
          "description": "Type of credential",
          "type": "str",
          "required": true,
          "choices": [
            "gpg_key",
            "cert"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the content credential",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Organization that the entity is in",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Content Credentials",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create katello client GPG key\"\n  theforeman.foreman.content_credential:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"RPM-GPG-KEY-my-repo\"\n    content_type: gpg_key\n    organization: \"Default Organization\"\n    content: \"{{ lookup('file', 'RPM-GPG-KEY-my-repo') }}\"\n"
  },
  "theforeman.foreman.content_upload": {
    "doc": {
      "description": "Allows the upload of content to a repository",
      "has_action": false,
      "notes": "Currently only uploading to deb, RPM & file repositories is supported\nFor anything but file repositories, a supporting library must be installed. See Requirements.",
      "options": {
        "organization": {
          "aliases": [],
          "description": "Organization that the entity is in",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "product": {
          "aliases": [],
          "description": "Product to which the repository lives in",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "repository": {
          "aliases": [],
          "description": "Repository to upload file in to",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "src": {
          "aliases": [
            "file"
          ],
          "description": "File to upload",
          "type": "path",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "python-debian (For deb Package upload)",
        "requests",
        "rpm (For rpm upload)"
      ],
      "short_description": "Upload content to a repository",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Upload my.rpm\"\n  theforeman.foreman.content_upload:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    src: \"my.rpm\"\n    repository: \"Build RPMs\"\n    product: \"My Product\"\n    organization: \"Default Organization\"\n"
  },
  "theforeman.foreman.content_view": {
    "doc": {
      "description": "Create and manage content views",
      "has_action": false,
      "options": {
        "auto_publish": {
          "aliases": [],
          "description": "Auto publish composite view when a new version of a component content view is created.\nAlso note auto publish will only happen when the component is marked \"latest\".",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "components": {
          "aliases": [],
          "description": "List of content views to includes content_view and either version or latest.\nIgnored if I(composite=False).",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "content_view": {
              "aliases": [],
              "description": "Content View name to be added to the Composite Content View",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "content_view_version": {
              "aliases": [
                "version"
              ],
              "description": "Version of the Content View to add",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "latest": {
              "aliases": [],
              "description": "Always use the latest Content View Version",
              "default": "False",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "composite": {
          "aliases": [],
          "description": "A composite view contains other content views.",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the Content View",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the Content View",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Organization that the entity is in",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "repositories": {
          "aliases": [],
          "description": "List of repositories that include name and product.\nCannot be combined with I(composite=True).",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the Repository to be added",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "product": {
              "aliases": [],
              "description": "Product of the Repository to be added",
              "type": "str",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "solve_dependencies": {
          "aliases": [],
          "description": "Solve RPM dependencies by default on Content View publish",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity\nC(present_with_defaults) will ensure the entity exists, but won't update existing ones",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "present_with_defaults",
            "absent"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Content Views",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create or update Fedora content view\"\n  theforeman.foreman.content_view:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"Fedora CV\"\n    organization: \"My Cool new Organization\"\n    repositories:\n      - name: 'Fedora 26'\n        product: 'Fedora'\n\n- name: \"Create a composite content view\"\n  theforeman.foreman.content_view:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"Fedora CCV\"\n    organization: \"My Cool new Organization\"\n    composite: true\n    auto_publish: true\n    components:\n      - content_view: Fedora CV\n        content_view_version: 1.0\n      - content_view: Internal CV\n        latest: true\n"
  },
  "theforeman.foreman.content_view_filter": {
    "doc": {
      "description": "Create and manage content View filters",
      "has_action": false,
      "options": {
        "architecture": {
          "aliases": [],
          "description": "package architecture",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "content_view": {
          "aliases": [],
          "description": "Name of the content view",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "date_type": {
          "aliases": [],
          "description": "Search using the 'Issued On' or 'Updated On'\nOnly valid on I(filter_type=erratum).",
          "default": "updated",
          "type": "str",
          "required": false,
          "choices": [
            "issued",
            "updated"
          ],
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the Content View Filter",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "end_date": {
          "aliases": [],
          "description": "erratum end date (YYYY-MM-DD)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "errata_id": {
          "aliases": [],
          "description": "erratum id",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filter_state": {
          "aliases": [],
          "description": "State of the content view filter",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "filter_type": {
          "aliases": [],
          "description": "Content view filter type",
          "type": "str",
          "required": true,
          "choices": [
            "rpm",
            "package_group",
            "erratum",
            "docker"
          ],
          "suboptions": {}
        },
        "inclusion": {
          "aliases": [],
          "description": "Create an include filter",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "max_version": {
          "aliases": [],
          "description": "package maximum version",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "min_version": {
          "aliases": [],
          "description": "package minimum version",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the Content View Filter",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Organization that the entity is in",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "original_packages": {
          "aliases": [],
          "description": "Include all RPMs with no errata",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "repositories": {
          "aliases": [],
          "description": "List of repositories that include name and product\nAn empty Array means all current and future repositories",
          "default": "[]",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {}
        },
        "rule_name": {
          "aliases": [
            "package_name",
            "package_group",
            "tag"
          ],
          "description": "Content view filter rule name or package name\nIf omitted, the value of I(name) will be used if necessary",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "rule_state": {
          "aliases": [],
          "description": "State of the content view filter rule",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "start_date": {
          "aliases": [],
          "description": "erratum start date (YYYY-MM-DD)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "types": {
          "aliases": [],
          "description": "erratum types (enhancement, bugfix, security)",
          "default": "['bugfix', 'enhancement', 'security']",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "package version",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Content View Filters",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Exclude csh\n  theforeman.foreman.content_view_filter:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"package filter 1\"\n    organization: \"Default Organization\"\n    content_view: Web Servers\n    filter_type: \"rpm\"\n    package_name: tcsh\n\n- name: Include newer csh versions\n  theforeman.foreman.content_view_filter:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"package filter 1\"\n    organization: \"Default Organization\"\n    content_view: Web Servers\n    filter_type: \"rpm\"\n    package_name: tcsh\n    min_version: 6.20.00\n    inclusion: True\n"
  },
  "theforeman.foreman.content_view_info": {
    "doc": {
      "description": "Fetch information about Content Views",
      "has_action": false,
      "options": {
        "location": {
          "aliases": [],
          "description": "Label of the Location to scope the search for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource to fetch information for.\nMutually exclusive with I(search).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Name of the Organization to scope the search for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "search": {
          "aliases": [],
          "description": "Search query to use\nIf None, and I(name) is not set, all resources are returned.\nMutually exclusive with I(name).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Fetch information about Content Views",
      "version_added": "2.1.0"
    },
    "examples": "\n- name: \"Show a content_view\"\n  theforeman.foreman.content_view_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"CentOS 8\"\n\n- name: \"Show all content_views with name CentOS 8\"\n  theforeman.foreman.content_view_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    search: 'name = \"CentOS 8\"'\n"
  },
  "theforeman.foreman.content_view_version": {
    "doc": {
      "description": "Publish, Promote or Remove a Content View Version",
      "has_action": false,
      "notes": "You cannot use this to remove a Content View Version from a Lifecycle environment, you should promote another version first.\nFor idempotency you must specify either C(version) or C(current_lifecycle_environment).",
      "options": {
        "content_view": {
          "aliases": [],
          "description": "Name of the content view",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "current_lifecycle_environment": {
          "aliases": [],
          "description": "The lifecycle environment that is already associated with the content view version\nHelpful for promoting a content view version",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the Content View Version",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force_promote": {
          "aliases": [
            "force"
          ],
          "description": "Force content view promotion and bypass lifecycle environment restriction",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "force_yum_metadata_regeneration": {
          "aliases": [],
          "description": "Force metadata regeneration when performing Publish and Promote tasks",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "lifecycle_environments": {
          "aliases": [],
          "description": "The lifecycle environments the Content View Version should be in.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Organization that the entity is in",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "version": {
          "aliases": [],
          "description": "The content view version number (i.e. 1.0)",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Content View Versions",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Ensure content view version 2.0 is in Test & Pre Prod\"\n  theforeman.foreman.content_view_version:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    content_view: \"CV 1\"\n    organization: \"Default Organization\"\n    version: \"2.0\"\n    lifecycle_environments:\n      - Test\n      - Pre Prod\n\n- name: \"Ensure content view version in Test is also in Pre Prod\"\n  theforeman.foreman.content_view_version:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    content_view: \"CV 1\"\n    organization: \"Default Organization\"\n    current_lifecycle_environment: Test\n    lifecycle_environments:\n      - Pre Prod\n\n- name: \"Publish a content view, not idempotent\"\n  theforeman.foreman.content_view_version:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    content_view: \"CV 1\"\n    organization: \"Default Organization\"\n\n- name: \"Publish a content view and promote that version to Library & Dev, not idempotent\"\n  theforeman.foreman.content_view_version:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    content_view: \"CV 1\"\n    organization: \"Default Organization\"\n    lifecycle_environments:\n      - Library\n      - Dev\n\n- name: \"Ensure content view version 1.0 doesn't exist\"\n  theforeman.foreman.content_view_version:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    content_view: \"Web Servers\"\n    organization: \"Default Organization\"\n    version: \"1.0\"\n    state: absent\n\n# Obtain information about a Content View and its versions\n- name: find all CVs\n  theforeman.foreman.resource_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    organization: \"Default Organization\"\n    resource: content_views\n    search: 'name=\"Example Content\"'\n  register: example_content\n\n# Obtain more details about all versions of a specific Content View\n- name: \"find content view versions of {{ cv_id }}\"\n  theforeman.foreman.resource_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    organization: \"Default Organization\"\n    resource: content_view_versions\n    params:\n      content_view_id: \"{{ example_content.resources[0].id }}\"\n  register: version_information\n"
  },
  "theforeman.foreman.content_view_version_info": {
    "doc": {
      "description": "Fetch information about Content Views",
      "has_action": false,
      "options": {
        "content_view": {
          "aliases": [],
          "description": "Content View to which the Version belongs",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Label of the Location to scope the search for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Name of the Organization to scope the search for.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "search": {
          "aliases": [],
          "description": "Search query to use\nIf None, all resources are returned.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Fetch information about Content Views",
      "version_added": "2.1.0"
    },
    "examples": "\n- name: \"Show a content view version\"\n  theforeman.foreman.content_view_version_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    content_view: \"CentOS 8 View\"\n    search: 'version = \"4.0\"'\n\n- name: \"Show all content view_versions for a content view\"\n  theforeman.foreman.content_view_version_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    content_view: \"CentOS 8 View\"\n"
  },
  "theforeman.foreman.domain": {
    "doc": {
      "description": "Create, update, and delete Domains",
      "has_action": false,
      "options": {
        "description": {
          "aliases": [
            "fullname"
          ],
          "description": "Full name describing the domain",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dns_proxy": {
          "aliases": [
            "dns"
          ],
          "description": "DNS proxy to use within this domain for managing A records",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "locations": {
          "aliases": [],
          "description": "List of locations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The full DNS domain name",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "organizations": {
          "aliases": [],
          "description": "List of organizations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "parameters": {
          "aliases": [],
          "description": "Domain specific host parameters",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the parameter",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "parameter_type": {
              "aliases": [],
              "description": "Type of the parameter",
              "default": "string",
              "type": "str",
              "required": false,
              "choices": [
                "string",
                "boolean",
                "integer",
                "real",
                "array",
                "hash",
                "yaml",
                "json"
              ],
              "suboptions": {}
            },
            "value": {
              "aliases": [],
              "description": "Value of the parameter",
              "type": "raw",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "updated_name": {
          "aliases": [],
          "description": "New domain name. When this parameter is set, the module will not be idempotent.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Domains",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: domain\n  theforeman.foreman.domain:\n    name: \"example.org\"\n    description: \"Example Domain\"\n    locations:\n      - \"Munich\"\n    organizations:\n      - \"ACME\"\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n"
  },
  "theforeman.foreman.domain_info": {
    "doc": {
      "description": "Fetch information about Domains",
      "has_action": false,
      "options": {
        "location": {
          "aliases": [],
          "description": "Label of the Location to scope the search for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource to fetch information for.\nMutually exclusive with I(search).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Name of the Organization to scope the search for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "search": {
          "aliases": [],
          "description": "Search query to use\nIf None, and I(name) is not set, all resources are returned.\nMutually exclusive with I(name).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Fetch information about Domains",
      "version_added": "2.1.0"
    },
    "examples": "\n- name: \"Show a domain\"\n  theforeman.foreman.domain_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"example.com\"\n\n- name: \"Show all domains with domain example.com\"\n  theforeman.foreman.domain_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    search: \"name = example.com\"\n"
  },
  "theforeman.foreman.external_usergroup": {
    "doc": {
      "description": "Create, update, and delete external user groups",
      "has_action": false,
      "options": {
        "auth_source": {
          "aliases": [
            "auth_source_ldap"
          ],
          "description": "Name of the authentication source to be used for this group",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the group",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "usergroup": {
          "aliases": [],
          "description": "Name of the linked usergroup",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage External User Groups",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create an external user group\n  theforeman.foreman.external_usergroup:\n    name: test\n    auth_source: \"My LDAP server\"\n    usergroup: \"Internal Usergroup\"\n    state: present\n- name: Link a group from FreeIPA\n  theforeman.foreman.external_usergroup:\n    name: ipa_users\n    auth_source: \"External\"\n    usergroup: \"Internal Usergroup\"\n    state: present\n"
  },
  "theforeman.foreman.global_parameter": {
    "doc": {
      "description": "Manage Global Parameter Entities",
      "has_action": false,
      "notes": "The I(parameter_type) only has an effect on Foreman >= 1.22",
      "options": {
        "hidden_value": {
          "aliases": [],
          "description": "Whether the value should be hidden in the GUI",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the Global Parameter",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parameter_type": {
          "aliases": [],
          "description": "Type of value",
          "default": "string",
          "type": "str",
          "required": false,
          "choices": [
            "string",
            "boolean",
            "integer",
            "real",
            "array",
            "hash",
            "yaml",
            "json"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity\nC(present_with_defaults) will ensure the entity exists, but won't update existing ones",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "present_with_defaults",
            "absent"
          ],
          "suboptions": {}
        },
        "updated_name": {
          "aliases": [],
          "description": "New name of the Global Parameter. When this parameter is set, the module will not be idempotent.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "value": {
          "aliases": [],
          "description": "Value of the Global Parameter",
          "type": "raw",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Global Parameters",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create a Global Parameter\"\n  theforeman.foreman.global_parameter:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"TheAnswer\"\n    value: \"42\"\n    state: present_with_defaults\n\n- name: \"Update a Global Parameter\"\n  theforeman.foreman.global_parameter:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"TheAnswer\"\n    value: \"43\"\n    state: present\n\n- name: \"Delete a Global Parameter\"\n  theforeman.foreman.global_parameter:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"TheAnswer\"\n    state: absent\n"
  },
  "theforeman.foreman.hardware_model": {
    "doc": {
      "description": "Manage hardware models",
      "has_action": false,
      "options": {
        "hardware_model": {
          "aliases": [],
          "description": "The class of CPU supplied in this machine.\nThis is primarily used by Sparc Solaris builds and can be left blank for other architectures.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "info": {
          "aliases": [],
          "description": "General description of the hardware model",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the hardware model",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vendor_class": {
          "aliases": [],
          "description": "The class of the machine as reported by the OpenBoot PROM.\nThis is primarily used by Solaris SPARC builds and can be left blank for other architectures.",
          "type": "str",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Hardware Models",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create ACME Laptop model\"\n  theforeman.foreman.hardware_model:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"acme laptop\"\n    info: \"this is the acme laptop\"\n    state: present\n"
  },
  "theforeman.foreman.host": {
    "doc": {
      "description": "Create, update, and delete Hosts",
      "has_action": false,
      "options": {
        "activation_keys": {
          "aliases": [],
          "description": "Activation Keys used for deployment.\nComma separated list.\nOnly available for Katello installations.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "architecture": {
          "aliases": [],
          "description": "Architecture name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "build": {
          "aliases": [],
          "description": "Whether or not to setup build context for the host",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "comment": {
          "aliases": [],
          "description": "Comment about the host.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "compute_attributes": {
          "aliases": [],
          "description": "Additional compute resource specific attributes.\nWhen this parameter is set, the module will not be idempotent.\nWhen you provide a I(cluster) here and I(compute_resource) is set, the cluster id will be automatically looked up.",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "compute_profile": {
          "aliases": [],
          "description": "Compute profile name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "compute_resource": {
          "aliases": [],
          "description": "Compute resource name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "config_groups": {
          "aliases": [],
          "description": "Config groups list",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "content_source": {
          "aliases": [],
          "description": "Content source.\nOnly available for Katello installations.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "content_view": {
          "aliases": [],
          "description": "Content view.\nOnly available for Katello installations.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "domain": {
          "aliases": [],
          "description": "Domain name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enabled": {
          "aliases": [],
          "description": "Include this host within reporting",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "environment": {
          "aliases": [],
          "description": "Puppet environment name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "hostgroup": {
          "aliases": [],
          "description": "Name of related hostgroup.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "image": {
          "aliases": [],
          "description": "The image to use when I(provision_method=image).\nThe I(compute_resource) parameter is required to find the correct image.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interfaces_attributes": {
          "aliases": [],
          "description": "Additional interfaces specific attributes.",
          "type": "list",
          "required": false,
          "elements": "dict",
          "version_added": "1.5.0",
          "suboptions": {
            "attached_devices": {
              "aliases": [],
              "description": "Identifiers of attached interfaces, e.g. ['eth1', 'eth2'].\nFor bond interfaces those are the slaves.\nOnly for bond and bridges interfaces.",
              "type": "list",
              "required": false,
              "elements": "str",
              "suboptions": {}
            },
            "attached_to": {
              "aliases": [],
              "description": "Identifier of the interface to which this interface belongs, e.g. eth1.\nOnly for virtual interfaces.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "bond_options": {
              "aliases": [],
              "description": "Space separated options, e.g. miimon=100.\nOnly for bond interfaces.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "compute_attributes": {
              "aliases": [],
              "description": "Additional compute resource specific attributes for the interface.\nWhen this parameter is set, the module will not be idempotent.\nWhen you provide a I(network) here and I(compute_resource) is set, the network id will be automatically looked up.\nOn oVirt/RHV I(cluster) is required in the hosts I(compute_attributes) for the lookup to work.",
              "type": "dict",
              "required": false,
              "suboptions": {}
            },
            "domain": {
              "aliases": [],
              "description": "Domain name\nRequired for primary interfaces on managed hosts.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "identifier": {
              "aliases": [],
              "description": "Device identifier, e.g. eth0 or eth1.1\nYou need to set one of I(identifier), I(name) or I(mac) to be able to update existing interfaces and make execution idempotent.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "ip": {
              "aliases": [],
              "description": "IPv4 address of interface",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "ip6": {
              "aliases": [],
              "description": "IPv6 address of interface",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "mac": {
              "aliases": [],
              "description": "MAC address of interface. Required for managed interfaces on bare metal.\nPlease include leading zeros and separate nibbles by colons, otherwise the execution will not be idempotent.\nExample EE:BB:01:02:03:04\nYou need to set one of I(identifier), I(name) or I(mac) to be able to update existing interfaces and make execution idempotent.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "managed": {
              "aliases": [],
              "description": "Should this interface be managed via DHCP and DNS smart proxy and should it be configured during provisioning?",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "mode": {
              "aliases": [],
              "description": "Bond mode of the interface.\nOnly for bond interfaces.",
              "type": "str",
              "required": false,
              "choices": [
                "balance-rr",
                "active-backup",
                "balance-xor",
                "broadcast",
                "802.3ad",
                "balance-tlb",
                "balance-alb"
              ],
              "suboptions": {}
            },
            "mtu": {
              "aliases": [],
              "description": "MTU, this attribute has precedence over the subnet MTU.",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "Interface's DNS name\nYou need to set one of I(identifier), I(name) or I(mac) to be able to update existing interfaces and make execution idempotent.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "password": {
              "aliases": [],
              "description": "Password for BMC authentication.\nOnly for BMC interfaces.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "primary": {
              "aliases": [],
              "description": "Should this interface be used for constructing the FQDN of the host?\nEach managed hosts needs to have one primary interface.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "provider": {
              "aliases": [],
              "description": "Interface provider, e.g. IPMI.\nOnly for BMC interfaces.",
              "type": "str",
              "required": false,
              "choices": [
                "IPMI",
                "Redfish",
                "SSH"
              ],
              "suboptions": {}
            },
            "provision": {
              "aliases": [],
              "description": "Should this interface be used for TFTP of PXELinux (or SSH for image-based hosts)?\nEach managed hosts needs to have one provision interface.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "subnet": {
              "aliases": [],
              "description": "IPv4 Subnet name",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "subnet6": {
              "aliases": [],
              "description": "IPv6 Subnet name",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "tag": {
              "aliases": [],
              "description": "VLAN tag, this attribute has precedence over the subnet VLAN ID.\nOnly for virtual interfaces.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "type": {
              "aliases": [],
              "description": "Interface type.",
              "type": "str",
              "required": false,
              "choices": [
                "interface",
                "bmc",
                "bond",
                "bridge"
              ],
              "suboptions": {}
            },
            "username": {
              "aliases": [],
              "description": "Username for BMC authentication.\nOnly for BMC interfaces.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "virtual": {
              "aliases": [],
              "description": "Alias or VLAN device",
              "type": "bool",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "ip": {
          "aliases": [],
          "description": "IP address of the primary interface of the host.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "kickstart_repository": {
          "aliases": [],
          "description": "Kickstart repository name.\nYou need to provide this to use the \"Synced Content\" feature.\nMutually exclusive with I(medium).\nOnly available for Katello installations.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lifecycle_environment": {
          "aliases": [],
          "description": "Lifecycle environment.\nOnly available for Katello installations.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Name of related location",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mac": {
          "aliases": [],
          "description": "MAC address of the primary interface of the host.\nPlease include leading zeros and separate nibbles by colons, otherwise the execution will not be idempotent.\nExample EE:BB:01:02:03:04",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "managed": {
          "aliases": [],
          "description": "Whether a host is managed or unmanaged.\nForced to true when I(build=true)",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "medium": {
          "aliases": [
            "media"
          ],
          "description": "Medium name\nMutually exclusive with I(kickstart_repository).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Fully Qualified Domain Name of host",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "openscap_proxy": {
          "aliases": [],
          "description": "OpenSCAP proxy name.\nOnly available when the OpenSCAP plugin is installed.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "operatingsystem": {
          "aliases": [],
          "description": "Operating systems are looked up by their title which is composed as \"<name> <major>.<minor>\".\nYou can omit the version part as long as you only have one operating system by that name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Name of related organization",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "owner": {
          "aliases": [],
          "description": "Owner (user) of the host.\nUsers are looked up by their C(login).\nMutually exclusive with I(owner_group).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "owner_group": {
          "aliases": [],
          "description": "Owner (user group) of the host.\nMutually excluside with I(owner).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "parameters": {
          "aliases": [],
          "description": "Entity domain specific host parameters",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the parameter",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "parameter_type": {
              "aliases": [],
              "description": "Type of the parameter",
              "default": "string",
              "type": "str",
              "required": false,
              "choices": [
                "string",
                "boolean",
                "integer",
                "real",
                "array",
                "hash",
                "yaml",
                "json"
              ],
              "suboptions": {}
            },
            "value": {
              "aliases": [],
              "description": "Value of the parameter",
              "type": "raw",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provision_method": {
          "aliases": [],
          "description": "The method used to provision the host.\nI(provision_method=bootdisk) is only available if the bootdisk plugin is installed.",
          "type": "str",
          "required": false,
          "choices": [
            "build",
            "image",
            "bootdisk"
          ],
          "suboptions": {}
        },
        "ptable": {
          "aliases": [],
          "description": "Partition table name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "puppet_ca_proxy": {
          "aliases": [],
          "description": "Puppet CA proxy name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "puppet_proxy": {
          "aliases": [],
          "description": "Puppet server proxy name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "puppetclasses": {
          "aliases": [],
          "description": "List of puppet classes to include in this host group. Must exist for hostgroup's puppet environment.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "pxe_loader": {
          "aliases": [],
          "description": "PXE Bootloader",
          "type": "str",
          "required": false,
          "choices": [
            "PXELinux BIOS",
            "PXELinux UEFI",
            "Grub UEFI",
            "Grub2 BIOS",
            "Grub2 ELF",
            "Grub2 UEFI",
            "Grub2 UEFI SecureBoot",
            "Grub2 UEFI HTTP",
            "Grub2 UEFI HTTPS",
            "Grub2 UEFI HTTPS SecureBoot",
            "iPXE Embedded",
            "iPXE UEFI HTTP",
            "iPXE Chain BIOS",
            "iPXE Chain UEFI",
            "None"
          ],
          "suboptions": {}
        },
        "realm": {
          "aliases": [],
          "description": "Realm name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "root_pass": {
          "aliases": [],
          "description": "Root password.\nWill result in the entity always being updated, as the current password cannot be retrieved.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnet": {
          "aliases": [],
          "description": "IPv4 Subnet name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subnet6": {
          "aliases": [],
          "description": "IPv6 Subnet name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Hosts",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create a host\"\n  theforeman.foreman.host:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"new_host\"\n    hostgroup: my_hostgroup\n    state: present\n\n- name: \"Create a host with build context\"\n  theforeman.foreman.host:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"new_host\"\n    hostgroup: my_hostgroup\n    build: true\n    state: present\n\n- name: \"Create an unmanaged host\"\n  theforeman.foreman.host:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"new_host\"\n    managed: false\n    state: present\n\n- name: \"Create a VM with 2 CPUs and 4GB RAM\"\n  theforeman.foreman.host:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"new_host\"\n    compute_attributes:\n      cpus: 2\n      memory_mb: 4096\n    state: present\n\n- name: \"Create a VM and start it after creation\"\n  theforeman.foreman.host:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"new_host\"\n    compute_attributes:\n      start: \"1\"\n    state: present\n\n- name: \"Create a VM on specific ovirt network\"\n  theforeman.foreman.host:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"new_host\"\n    interfaces_attributes:\n    - type: \"interface\"\n      compute_attributes:\n        name: \"nic1\"\n        network: \"969efbe6-f9e0-4383-a19a-a7ee65ad5007\"\n        interface: \"virtio\"\n    state: present\n\n- name: \"Create a VM with 2 NICs on specific ovirt networks\"\n  theforeman.foreman.host:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"new_host\"\n    interfaces_attributes:\n    - type: \"interface\"\n      primary: true\n      compute_attributes:\n        name: \"nic1\"\n        network: \"969efbe6-f9e0-4383-a19a-a7ee65ad5007\"\n        interface: \"virtio\"\n    - type: \"interface\"\n      name: \"new_host_nic2\"\n      managed: true\n      compute_attributes:\n        name: \"nic2\"\n        network: \"969efbe6-f9e0-4383-a19a-a7ee65ad5008\"\n        interface: \"e1000\"\n    state: present\n\n- name: \"Delete a host\"\n  theforeman.foreman.host:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"new_host\"\n    state: absent\n"
  },
  "theforeman.foreman.host_collection": {
    "doc": {
      "description": "Create and Manage host collections",
      "has_action": false,
      "options": {
        "description": {
          "aliases": [],
          "description": "Description of the host collection",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the host collection",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Organization that the entity is in",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "updated_name": {
          "aliases": [],
          "description": "New name of the host collection. When this parameter is set, the module will not be idempotent.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Host Collections",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create Foo host collection\"\n  theforeman.foreman.host_collection:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"Foo\"\n    description: \"Foo host collection for Foo servers\"\n    organization: \"My Cool new Organization\"\n    state: present\n"
  },
  "theforeman.foreman.host_errata_info": {
    "doc": {
      "description": "Fetch information about Host Errata",
      "has_action": false,
      "options": {
        "content_view": {
          "aliases": [],
          "description": "Calculate Applicable Errata based on a particular Content View.\nRequired together with I(lifecycle_environment).\nIf this is set, I(organization) also needs to be set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "host": {
          "aliases": [],
          "description": "Name of the host to fetch errata for.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "lifecycle_environment": {
          "aliases": [],
          "description": "Calculate Applicable Errata based on a particular Lifecycle Environment.\nRequired together with I(content_view).\nIf this is set, I(organization) also needs to be set.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "location": {
          "aliases": [],
          "description": "Label of the Location to scope the search for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Name of the Organization to scope the search for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "search": {
          "aliases": [],
          "description": "Search query to use\nIf None, all resources are returned.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Fetch information about Host Errata",
      "version_added": "2.1.0"
    },
    "examples": "\n- name: \"List installable errata for host\"\n  theforeman.foreman.host_errata_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    host: \"host.example.com\"\n\n- name: \"List applicable errata for host\"\n  theforeman.foreman.host_errata_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    organization: \"Default Organization\"\n    host: \"host.example.com\"\n    lifecycle_environment: \"Library\"\n    content_view: \"Default Organization View\"\n"
  },
  "theforeman.foreman.host_info": {
    "doc": {
      "description": "Fetch information about Hosts",
      "has_action": false,
      "options": {
        "location": {
          "aliases": [],
          "description": "Label of the Location to scope the search for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource to fetch information for.\nMutually exclusive with I(search).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Name of the Organization to scope the search for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "search": {
          "aliases": [],
          "description": "Search query to use\nIf None, and I(name) is not set, all resources are returned.\nMutually exclusive with I(name).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Fetch information about Hosts",
      "version_added": "2.0.0"
    },
    "examples": "\n- name: \"Show a host\"\n  theforeman.foreman.host_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"host.example.com\"\n\n- name: \"Show all hosts with domain example.com\"\n  theforeman.foreman.host_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    search: \"domain = example.com\"\n"
  },
  "theforeman.foreman.host_power": {
    "doc": {
      "description": "Manage power state of a host\nThis beta version can start and stop an existing foreman host and question the current power state.",
      "has_action": false,
      "options": {
        "name": {
          "aliases": [
            "hostname"
          ],
          "description": "Name (FQDN) of the host",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Desired power state",
          "default": "state",
          "type": "str",
          "required": false,
          "choices": [
            "on",
            "start",
            "off",
            "stop",
            "soft",
            "reboot",
            "cycle",
            "reset",
            "state",
            "status"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Power State of Hosts",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Switch a host on\"\n  theforeman.foreman.host_power:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    hostname: \"test-host.domain.test\"\n    state: on\n\n- name: \"Switch a host off\"\n  theforeman.foreman.host_power:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    hostname: \"test-host.domain.test\"\n    state: off\n\n- name: \"Query host power state\"\n  theforeman.foreman.host_power:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    hostname: \"test-host.domain.test\"\n    state: state\n    register: result\n- debug:\n    msg: \"Host power state is {{ result.power_state }}\"\n\n\n"
  },
  "theforeman.foreman.hostgroup": {
    "doc": {
      "description": "Create, update, and delete Hostgroups",
      "has_action": false,
      "options": {
        "activation_keys": {
          "aliases": [],
          "description": "Activation Keys used for deployment.\nComma separated list.\nOnly available for Katello installations.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ansible_roles": {
          "aliases": [],
          "description": "A list of ansible roles to associate with the hostgroup.\nThe foreman-ansible plugin must be installed to use this parameter.",
          "type": "list",
          "required": false,
          "elements": "str",
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "architecture": {
          "aliases": [],
          "description": "Architecture name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "compute_profile": {
          "aliases": [],
          "description": "Compute profile name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "compute_resource": {
          "aliases": [],
          "description": "Compute resource name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "config_groups": {
          "aliases": [],
          "description": "Config groups list",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "content_source": {
          "aliases": [],
          "description": "Content source.\nOnly available for Katello installations.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "content_view": {
          "aliases": [],
          "description": "Content view.\nOnly available for Katello installations.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of hostgroup",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "domain": {
          "aliases": [],
          "description": "Domain name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "environment": {
          "aliases": [],
          "description": "Puppet environment name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "kickstart_repository": {
          "aliases": [],
          "description": "Kickstart repository name.\nYou need to provide this to use the \"Synced Content\" feature.\nMutually exclusive with I(medium).\nOnly available for Katello installations.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lifecycle_environment": {
          "aliases": [],
          "description": "Lifecycle environment.\nOnly available for Katello installations.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "locations": {
          "aliases": [],
          "description": "List of locations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "medium": {
          "aliases": [
            "media"
          ],
          "description": "Medium name\nMutually exclusive with I(kickstart_repository).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of hostgroup",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "openscap_proxy": {
          "aliases": [],
          "description": "OpenSCAP proxy name.\nOnly available when the OpenSCAP plugin is installed.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "operatingsystem": {
          "aliases": [],
          "description": "Operating systems are looked up by their title which is composed as \"<name> <major>.<minor>\".\nYou can omit the version part as long as you only have one operating system by that name.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Organization for scoped resources attached to the hostgroup.\nOnly used for Katello installations.\nThis organization will implicitly be added to the I(organizations) parameter if needed.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "organizations": {
          "aliases": [],
          "description": "List of organizations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "parameters": {
          "aliases": [],
          "description": "Hostgroup specific host parameters",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the parameter",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "parameter_type": {
              "aliases": [],
              "description": "Type of the parameter",
              "default": "string",
              "type": "str",
              "required": false,
              "choices": [
                "string",
                "boolean",
                "integer",
                "real",
                "array",
                "hash",
                "yaml",
                "json"
              ],
              "suboptions": {}
            },
            "value": {
              "aliases": [],
              "description": "Value of the parameter",
              "type": "raw",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "parent": {
          "aliases": [],
          "description": "Hostgroup parent name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ptable": {
          "aliases": [],
          "description": "Partition table name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "puppet_ca_proxy": {
          "aliases": [],
          "description": "Puppet CA proxy name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "puppet_proxy": {
          "aliases": [],
          "description": "Puppet server proxy name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "puppetclasses": {
          "aliases": [],
          "description": "List of puppet classes to include in this host group. Must exist for hostgroup's puppet environment.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "pxe_loader": {
          "aliases": [],
          "description": "PXE Bootloader",
          "type": "str",
          "required": false,
          "choices": [
            "PXELinux BIOS",
            "PXELinux UEFI",
            "Grub UEFI",
            "Grub2 BIOS",
            "Grub2 ELF",
            "Grub2 UEFI",
            "Grub2 UEFI SecureBoot",
            "Grub2 UEFI HTTP",
            "Grub2 UEFI HTTPS",
            "Grub2 UEFI HTTPS SecureBoot",
            "iPXE Embedded",
            "iPXE UEFI HTTP",
            "iPXE Chain BIOS",
            "iPXE Chain UEFI",
            "None"
          ],
          "suboptions": {}
        },
        "realm": {
          "aliases": [],
          "description": "Realm name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "root_pass": {
          "aliases": [],
          "description": "Root password.\nWill result in the entity always being updated, as the current password cannot be retrieved.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "subnet": {
          "aliases": [],
          "description": "IPv4 Subnet name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "subnet6": {
          "aliases": [],
          "description": "IPv6 Subnet name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "updated_name": {
          "aliases": [],
          "description": "New name of hostgroup. When this parameter is set, the module will not be idempotent.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Hostgroups",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create a Hostgroup\"\n  theforeman.foreman.hostgroup:\n    name: \"new_hostgroup\"\n    architecture: \"architecture_name\"\n    operatingsystem: \"operatingsystem_name\"\n    medium: \"media_name\"\n    ptable: \"Partition_table_name\"\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: \"Update a Hostgroup\"\n  theforeman.foreman.hostgroup:\n    name: \"new_hostgroup\"\n    architecture: \"updated_architecture_name\"\n    operatingsystem: \"updated_operatingsystem_name\"\n    organizations:\n      - Org One\n      - Org Two\n    locations:\n      - Loc One\n      - Loc Two\n      - Loc One/Nested loc\n    medium: \"updated_media_name\"\n    ptable: \"updated_Partition_table_name\"\n    root_pass: \"password\"\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: \"My nested hostgroup\"\n  theforeman.foreman.hostgroup:\n    parent: \"new_hostgroup\"\n    name: \"my nested hostgroup\"\n\n- name: \"My hostgroup with some proxies\"\n  theforeman.foreman.hostgroup:\n    name: \"my hostgroup\"\n    environment: production\n    puppet_proxy: puppet-proxy.example.com\n    puppet_ca_proxy: puppet-proxy.example.com\n    openscap_proxy: openscap-proxy.example.com\n\n- name: \"My katello related hostgroup\"\n  theforeman.foreman.hostgroup:\n    organization: \"My Org\"\n    name: \"kt hostgroup\"\n    content_source: capsule.example.com\n    lifecycle_environment: \"Production\"\n    content_view: \"My content view\"\n    parameters:\n      - name: \"kt_activation_keys\"\n        value: \"my_prod_ak\"\n\n- name: \"Delete a Hostgroup\"\n  theforeman.foreman.hostgroup:\n    name: \"new_hostgroup\"\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: absent\n"
  },
  "theforeman.foreman.http_proxy": {
    "doc": {
      "description": "Create, update, and delete HTTP Proxies",
      "has_action": false,
      "options": {
        "locations": {
          "aliases": [],
          "description": "List of locations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The HTTP Proxy name",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "organizations": {
          "aliases": [],
          "description": "List of organizations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "proxy_password": {
          "aliases": [],
          "description": "Password used to authenticate with the HTTP Proxy\nWhen this parameter is set, the module will not be idempotent.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "proxy_username": {
          "aliases": [],
          "description": "Username used to authenticate with the HTTP Proxy",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "URL of the HTTP Proxy\nRequired when creating a new HTTP Proxy.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage HTTP Proxies",
      "version_added": "1.1.0"
    },
    "examples": "\n- name: create example.org proxy\n  theforeman.foreman.http_proxy:\n    name: \"example.org\"\n    url: \"http://example.org:3128\"\n    locations:\n      - \"Munich\"\n    organizations:\n      - \"ACME\"\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n"
  },
  "theforeman.foreman.image": {
    "doc": {
      "description": "Create, update, and delete Images",
      "has_action": false,
      "options": {
        "architecture": {
          "aliases": [],
          "description": "architecture of the image",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "compute_resource": {
          "aliases": [],
          "description": "Compute resource the image is assigned to",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "image_password": {
          "aliases": [],
          "description": "Password that is used to login into the operating system",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "image_username": {
          "aliases": [],
          "description": "Username that is used to login into the operating system",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Image name",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "operatingsystem": {
          "aliases": [],
          "description": "Operating systems are looked up by their title which is composed as \"<name> <major>.<minor>\".\nYou can omit the version part as long as you only have one operating system by that name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "user_data": {
          "aliases": [],
          "description": "Image supports user_data",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "uuid": {
          "aliases": [
            "image_uuid"
          ],
          "description": "UUID or Marketplace URN of the operatingsystem image",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Images",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: create Image for EC2\n  image:\n     name: CentOS\n     image_uuid: \"ami-0ff760d16d9497662\"\n     image_username: \"centos\"\n     operatingsystem: \"CentOS 7\"\n     compute_resource: \"AWS\"\n     architecture: \"x86_64\"\n"
  },
  "theforeman.foreman.installation_medium": {
    "doc": {
      "description": "Create, update, and delete Installation Media",
      "has_action": false,
      "options": {
        "locations": {
          "aliases": [],
          "description": "List of locations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The full installation medium name.\nThe special name \"*\" (only possible as parameter) is used to perform bulk actions (modify, delete) on all existing partition tables.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "operatingsystems": {
          "aliases": [],
          "description": "List of operating systems the entity should be assigned to.\nOperating systems are looked up by their title which is composed as \"<name> <major>.<minor>\".\nYou can omit the version part as long as you only have one operating system by that name.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "organizations": {
          "aliases": [],
          "description": "List of organizations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "os_family": {
          "aliases": [],
          "description": "The OS family the template shall be assigned with.\nIf no os_family is set but a operatingsystem, the value will be derived from it.",
          "type": "str",
          "required": false,
          "choices": [
            "AIX",
            "Altlinux",
            "Archlinux",
            "Coreos",
            "Debian",
            "Freebsd",
            "Gentoo",
            "Junos",
            "NXOS",
            "Rancheros",
            "Redhat",
            "Solaris",
            "Suse",
            "Windows",
            "Xenserver"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "path": {
          "aliases": [],
          "description": "Path to the installation medium",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity\nC(present_with_defaults) will ensure the entity exists, but won't update existing ones",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "present_with_defaults",
            "absent"
          ],
          "suboptions": {}
        },
        "updated_name": {
          "aliases": [],
          "description": "New full installation medium name. When this parameter is set, the module will not be idempotent.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Installation Media",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: create new debian medium\n  theforeman.foreman.installation_medium:\n    name: \"wheezy\"\n    locations:\n      - \"Munich\"\n    organizations:\n      - \"ACME\"\n    operatingsystems:\n      - \"Debian\"\n    path: \"http://debian.org/mirror/\"\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n"
  },
  "theforeman.foreman.job_invocation": {
    "doc": {
      "description": "Invoke and schedule Remote Execution Jobs",
      "has_action": false,
      "options": {
        "bookmark": {
          "aliases": [],
          "description": "Bookmark to infer the search query from",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "command": {
          "aliases": [],
          "description": "Command to be executed on host. Required for command templates",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "concurrency_control": {
          "aliases": [],
          "description": "Control concurrency level and distribution over time",
          "type": "dict",
          "required": false,
          "suboptions": {
            "concurrency_level": {
              "aliases": [],
              "description": "Maximum jobs to be executed at once",
              "type": "int",
              "required": false,
              "suboptions": {}
            },
            "time_span": {
              "aliases": [],
              "description": "Distribute tasks over given number of seconds",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "execution_timeout_interval": {
          "aliases": [],
          "description": "Override the timeout interval from the template for this invocation only",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "inputs": {
          "aliases": [],
          "description": "Inputs to use",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "job_template": {
          "aliases": [],
          "description": "Job template to execute",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "randomized_ordering": {
          "aliases": [],
          "description": "Whether to order the selected hosts randomly",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "recurrence": {
          "aliases": [],
          "description": "Schedule a recurring job",
          "type": "dict",
          "required": false,
          "suboptions": {
            "cron_line": {
              "aliases": [],
              "description": "How often the job should occur, in the cron format",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "end_time": {
              "aliases": [],
              "description": "Perform no more executions after this time",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "max_iteration": {
              "aliases": [],
              "description": "Repeat a maximum of N times",
              "type": "int",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "scheduling": {
          "aliases": [],
          "description": "Schedule the job to start at a later time",
          "type": "dict",
          "required": false,
          "suboptions": {
            "start_at": {
              "aliases": [],
              "description": "Schedule the job for a future time",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "start_before": {
              "aliases": [],
              "description": "Indicates that the action should be cancelled if it cannot be started before this time.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "search_query": {
          "aliases": [],
          "description": "Search query to identify hosts",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ssh": {
          "aliases": [],
          "description": "ssh related options",
          "type": "dict",
          "required": false,
          "suboptions": {
            "effective_user": {
              "aliases": [],
              "description": "What user should be used to run the script (using sudo-like mechanisms)\nDefaults to a template parameter or global setting",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "targeting_type": {
          "aliases": [],
          "description": "Dynamic query updates the search results before execution (useful for scheduled jobs)",
          "default": "static_query",
          "type": "str",
          "required": false,
          "choices": [
            "static_query",
            "dynamic_query"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Invoke Remote Execution Jobs",
      "version_added": "1.4.0"
    },
    "examples": "\n\n- name: \"Run remote command on a single host once\"\n  job_invocation:\n    search_query: \"name ^ (foreman.example.com)\"\n    command: 'ls'\n    job_template: \"Run Command - SSH Default\"\n    ssh:\n      effective_user: \"tester\"\n\n- name: \"Run ansible command on active hosts once a day\"\n  job_invocation:\n    bookmark: 'active'\n    command: 'pwd'\n    job_template: \"Run Command - Ansible Default\"\n    recurrence:\n      cron_line: \"30 2 * * *\"\n    concurrency_control:\n      concurrency_level: 2\n"
  },
  "theforeman.foreman.job_template": {
    "doc": {
      "description": "Manage Remote Execution Job Templates",
      "has_action": false,
      "options": {
        "audit_comment": {
          "aliases": [],
          "description": "Content of the audit comment field",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description_format": {
          "aliases": [],
          "description": "description of the job template. Template inputs can be referenced.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "file_name": {
          "aliases": [],
          "description": "The path of a template file, that shall be imported.\nEither this or I(template) is required as a source for the Job Template \"content\".",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "job_category": {
          "aliases": [],
          "description": "The category the template should be assigend to",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "locations": {
          "aliases": [],
          "description": "List of locations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "locked": {
          "aliases": [],
          "description": "Determines whether the template shall be locked",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Job Template.\nIf omited, will be determined from the C(name) header of the template or the filename (in that order).\nThe special value \"*\" can be used to perform bulk actions (modify, delete) on all existing templates.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "organizations": {
          "aliases": [],
          "description": "List of organizations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provider_type": {
          "aliases": [],
          "description": "Determines via which provider the template shall be executed",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "snippet": {
          "aliases": [],
          "description": "Determines whether the template shall be a snippet",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity\nC(present_with_defaults) will ensure the entity exists, but won't update existing ones",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "present_with_defaults",
            "absent"
          ],
          "suboptions": {}
        },
        "template": {
          "aliases": [],
          "description": "The content of the Job Template.\nEither this or I(file_name) is required as a source for the Job Template \"content\".",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "template_inputs": {
          "aliases": [],
          "description": "The template inputs used in the Job Template",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "advanced": {
              "aliases": [],
              "description": "Template Input is advanced",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "description": {
              "aliases": [],
              "description": "description of the Template Input",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "fact_name": {
              "aliases": [],
              "description": "Fact name to use.\nRequired when I(input_type=fact).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "input_type": {
              "aliases": [],
              "description": "input type",
              "type": "str",
              "required": true,
              "choices": [
                "user",
                "fact",
                "variable",
                "puppet_parameter"
              ],
              "suboptions": {}
            },
            "name": {
              "aliases": [],
              "description": "name of the Template Input",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "options": {
              "aliases": [],
              "description": "Template values for user inputs. Must be an array of any type.",
              "type": "list",
              "required": false,
              "elements": "raw",
              "suboptions": {}
            },
            "puppet_class_name": {
              "aliases": [],
              "description": "Puppet class name.\nRequired when I(input_type=puppet_parameter).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "puppet_parameter_name": {
              "aliases": [],
              "description": "Puppet parameter name.\nRequired when I(input_type=puppet_parameter).",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "required": {
              "aliases": [],
              "description": "Is the input required",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "resource_type": {
              "aliases": [],
              "description": "Type of the resource",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "value_type": {
              "aliases": [],
              "description": "Type of the value",
              "type": "str",
              "required": false,
              "choices": [
                "plain",
                "search",
                "date"
              ],
              "suboptions": {}
            },
            "variable_name": {
              "aliases": [],
              "description": "Variable name to use.\nRequired when I(input_type=variable).",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Job Templates",
      "version_added": "1.0.0"
    },
    "examples": "\n\n- name: \"Create a Job Template inline\"\n  theforeman.foreman.job_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: A New Job Template\n    state: present\n    template: |\n      <%#\n          name: A Job Template\n      %>\n      rm -rf <%= input(\"toDelete\") %>\n    template_inputs:\n      - name: toDelete\n        input_type: user\n    locations:\n    - Gallifrey\n    organizations:\n    - TARDIS INC\n\n- name: \"Create a Job Template from a file\"\n  theforeman.foreman.job_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: a new job template\n    file_name: timeywimey_template.erb\n    template_inputs:\n      - name: a new template input\n        input_type: user\n    state: present\n    locations:\n    - Gallifrey\n    organizations:\n    - TARDIS INC\n\n- name: \"remove a job template's template inputs\"\n  theforeman.foreman.job_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: a new job template\n    template_inputs: []\n    state: present\n    locations:\n    - Gallifrey\n    organizations:\n    - TARDIS INC\n\n- name: \"Delete a Job Template\"\n  theforeman.foreman.job_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: timeywimey\n    state: absent\n\n- name: \"Create a Job Template from a file and modify with parameter(s)\"\n  theforeman.foreman.job_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    file_name: timeywimey_template.erb\n    name: Wibbly Wobbly Template\n    state: present\n    locations:\n    - Gallifrey\n    organizations:\n    - TARDIS INC\n\n# Providing a name in this case wouldn't be very sensible.\n# Alternatively make use of with_filetree to parse recursively with filter.\n- name: Parsing a directory of Job templates\n  theforeman.foreman.job_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    file_name: \"{{ item }}\"\n    state: present\n    locations:\n    - SKARO\n    organizations:\n    - DALEK INC\n    with_fileglob:\n     - \"./arsenal_templates/*.erb\"\n\n# If the templates are stored locally and the ansible module is executed on a remote host\n- name: Ensure latest version of all your Job Templates\n  theforeman.foreman.job_template:\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n    template: '{{ lookup(\"file\", item.src) }}'\n  with_filetree: '/path/to/job/templates'\n  when: item.state == 'file'\n\n\n# with name set to \"*\" bulk actions can be performed\n- name: \"Delete *ALL* Job Templates\"\n  theforeman.foreman.job_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"*\"\n    state: absent\n\n- name: \"Assign all Job Templates to the same organization(s)\"\n  theforeman.foreman.job_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"*\"\n    state: present\n    organizations:\n    - DALEK INC\n    - sky.net\n    - Doc Brown's garage\n\n"
  },
  "theforeman.foreman.lifecycle_environment": {
    "doc": {
      "description": "Create and manage lifecycle environments",
      "has_action": false,
      "options": {
        "description": {
          "aliases": [],
          "description": "Description of the lifecycle environment",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "label": {
          "aliases": [],
          "description": "Label of the lifecycle environment. This field cannot be updated.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the lifecycle environment",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Organization that the entity is in",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "prior": {
          "aliases": [],
          "description": "Name of the parent lifecycle environment",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Lifecycle Environments",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Add a production lifecycle environment\"\n  theforeman.foreman.lifecycle_environment:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"Production\"\n    label: \"production\"\n    organization: \"Default Organization\"\n    prior: \"Library\"\n    description: \"The production environment\"\n    state: \"present\"\n"
  },
  "theforeman.foreman.location": {
    "doc": {
      "description": "Manage Locations",
      "has_action": false,
      "options": {
        "name": {
          "aliases": [],
          "description": "Name of the Location",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "organizations": {
          "aliases": [],
          "description": "List of organizations the location should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "parameters": {
          "aliases": [],
          "description": "Entity domain specific host parameters",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the parameter",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "parameter_type": {
              "aliases": [],
              "description": "Type of the parameter",
              "default": "string",
              "type": "str",
              "required": false,
              "choices": [
                "string",
                "boolean",
                "integer",
                "real",
                "array",
                "hash",
                "yaml",
                "json"
              ],
              "suboptions": {}
            },
            "value": {
              "aliases": [],
              "description": "Value of the parameter",
              "type": "raw",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "parent": {
          "aliases": [],
          "description": "Title of a parent Location for nesting",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Locations",
      "version_added": "1.0.0"
    },
    "examples": "\n# Create a simple location\n- name: \"Create CI Location\"\n  theforeman.foreman.location:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"My Cool New Location\"\n    organizations:\n      - \"Default Organization\"\n    state: present\n\n# Create a nested location\n- name: \"Create Nested CI Location\"\n  theforeman.foreman.location:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"My Nested location\"\n    parent: \"My Cool New Location\"\n    state: present\n\n# Create a new nested location with parent included in name\n- name: \"Create New Nested Location\"\n  theforeman.foreman.location:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"My Cool New Location/New nested location\"\n    state: present\n\n# Move a nested location to another parent\n- name: \"Create Nested CI Location\"\n  theforeman.foreman.location:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"My Cool New Location/New nested location\"\n    parent: \"My Cool New Location/My Nested location\"\n    state: present\n"
  },
  "theforeman.foreman.operatingsystem": {
    "doc": {
      "description": "Manage Operating Systems",
      "has_action": false,
      "options": {
        "architectures": {
          "aliases": [],
          "description": "architectures, the operating system can be installed on",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the Operating System",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "major": {
          "aliases": [],
          "description": "major version of the Operating System",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "media": {
          "aliases": [],
          "description": "list of installation media",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "minor": {
          "aliases": [],
          "description": "minor version of the Operating System",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the Operating System",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "os_family": {
          "aliases": [
            "family"
          ],
          "description": "Distribution family of the Operating System",
          "type": "str",
          "required": false,
          "choices": [
            "AIX",
            "Altlinux",
            "Archlinux",
            "Coreos",
            "Debian",
            "Freebsd",
            "Gentoo",
            "Junos",
            "NXOS",
            "Rancheros",
            "Redhat",
            "Solaris",
            "Suse",
            "Windows",
            "Xenserver"
          ],
          "suboptions": {}
        },
        "parameters": {
          "aliases": [],
          "description": "Operating System specific host parameters",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the parameter",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "parameter_type": {
              "aliases": [],
              "description": "Type of the parameter",
              "default": "string",
              "type": "str",
              "required": false,
              "choices": [
                "string",
                "boolean",
                "integer",
                "real",
                "array",
                "hash",
                "yaml",
                "json"
              ],
              "suboptions": {}
            },
            "value": {
              "aliases": [],
              "description": "Value of the parameter",
              "type": "raw",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password_hash": {
          "aliases": [],
          "description": "hashing algorithm for passwd",
          "type": "str",
          "required": false,
          "choices": [
            "MD5",
            "SHA256",
            "SHA512",
            "Base64",
            "Base64-Windows"
          ],
          "suboptions": {}
        },
        "provisioning_templates": {
          "aliases": [],
          "description": "List of provisioning templates that are associated with the operating system.\nSpecify the full list of template names you want to associate with your OS.\nFor example [\"Kickstart default\", \"Kickstart default finish\", \"Kickstart default iPXE\", \"custom\"].\nAfter specifying the template associations, you can set the default association in\nthe M(theforeman.foreman.os_default_template) module.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "ptables": {
          "aliases": [],
          "description": "list of partitioning tables",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "release_name": {
          "aliases": [],
          "description": "Release name of the operating system (recommended for debian)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity\nC(present_with_defaults) will ensure the entity exists, but won't update existing ones",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "present_with_defaults",
            "absent"
          ],
          "suboptions": {}
        },
        "updated_name": {
          "aliases": [],
          "description": "New operating system name. When this parameter is set, the module will not be idempotent.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Operating Systems",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create an Operating System\"\n  theforeman.foreman.operatingsystem:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: Debian\n    release_name: stretch\n    family: Debian\n    major: 9\n    parameters:\n      - name: additional-packages\n        value: python vim\n    state: present\n\n- name: \"Ensure existence of an Operating System (provide default values)\"\n  theforeman.foreman.operatingsystem:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: Centos\n    family: Redhat\n    major: 7\n    password_hash: SHA256\n    state: present_with_defaults\n\n- name: \"Delete an Operating System\"\n  theforeman.foreman.operatingsystem:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: Debian\n    family: Debian\n    major: 9\n    state: absent\n"
  },
  "theforeman.foreman.organization": {
    "doc": {
      "description": "Manage Organizations",
      "has_action": false,
      "options": {
        "description": {
          "aliases": [],
          "description": "Description of the Organization",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "label": {
          "aliases": [],
          "description": "Label of the Organization",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the Organization",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parameters": {
          "aliases": [],
          "description": "Entity domain specific host parameters",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the parameter",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "parameter_type": {
              "aliases": [],
              "description": "Type of the parameter",
              "default": "string",
              "type": "str",
              "required": false,
              "choices": [
                "string",
                "boolean",
                "integer",
                "real",
                "array",
                "hash",
                "yaml",
                "json"
              ],
              "suboptions": {}
            },
            "value": {
              "aliases": [],
              "description": "Value of the parameter",
              "type": "raw",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Organizations",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create CI Organization\"\n  theforeman.foreman.organization:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"My Cool New Organization\"\n    state: present\n"
  },
  "theforeman.foreman.os_default_template": {
    "doc": {
      "description": "Manage OSDefaultTemplate Entities",
      "has_action": false,
      "options": {
        "operatingsystem": {
          "aliases": [],
          "description": "Operating systems are looked up by their title which is composed as \"<name> <major>.<minor>\".\nYou can omit the version part as long as you only have one operating system by that name.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "provisioning_template": {
          "aliases": [],
          "description": "name of provisioning template",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity\nC(present_with_defaults) will ensure the entity exists, but won't update existing ones",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "present_with_defaults",
            "absent"
          ],
          "suboptions": {}
        },
        "template_kind": {
          "aliases": [],
          "description": "name of the template kind",
          "type": "str",
          "required": true,
          "choices": [
            "Bootdisk",
            "cloud-init",
            "finish",
            "iPXE",
            "job_template",
            "kexec",
            "POAP",
            "provision",
            "ptable",
            "PXEGrub",
            "PXEGrub2",
            "PXELinux",
            "registration",
            "script",
            "user_data",
            "ZTP"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Default Template Associations To Operating Systems",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create an Association\"\n  theforeman.foreman.os_default_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    operatingsystem: \"CoolOS\"\n    template_kind: \"finish\"\n    provisioning_template: \"CoolOS finish\"\n    state: present\n\n- name: \"Delete an Association\"\n  theforeman.foreman.os_default_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    operatingsystem: \"CoolOS\"\n    template_kind: \"finish\"\n    state: absent\n"
  },
  "theforeman.foreman.partition_table": {
    "doc": {
      "description": "Manage Partition Table Templates",
      "has_action": false,
      "options": {
        "file_name": {
          "aliases": [],
          "description": "The path of a template file, that shall be imported.\nEither this or I(layout) is required as a source for the Partition Template \"content\".",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "layout": {
          "aliases": [],
          "description": "The content of the Partitioning Table Template\nEither this or I(file_name) is required as a source for the Partition Template \"content\".",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "locations": {
          "aliases": [],
          "description": "List of locations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "locked": {
          "aliases": [],
          "description": "Determines whether the template shall be locked",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Partition Table.\nIf omited, will be determined from the C(name) header of the template or the filename (in that order).\nThe special value \"*\" can be used to perform bulk actions (modify, delete) on all existing Partition Tables.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "organizations": {
          "aliases": [],
          "description": "List of organizations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "os_family": {
          "aliases": [],
          "description": "The OS family the template shall be assigned with.",
          "type": "str",
          "required": false,
          "choices": [
            "AIX",
            "Altlinux",
            "Archlinux",
            "Coreos",
            "Debian",
            "Freebsd",
            "Gentoo",
            "Junos",
            "NXOS",
            "Rancheros",
            "Redhat",
            "Solaris",
            "Suse",
            "Windows",
            "Xenserver"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity\nC(present_with_defaults) will ensure the entity exists, but won't update existing ones",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "present_with_defaults",
            "absent"
          ],
          "suboptions": {}
        },
        "updated_name": {
          "aliases": [],
          "description": "New name of the template. When this parameter is set, the module will not be idempotent.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Partition Table Templates",
      "version_added": "1.0.0"
    },
    "examples": "\n\n# Keep in mind, that in this case, the inline parameters will be overwritten\n- name: \"Create a Partition Table inline\"\n  theforeman.foreman.partition_table:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: A New Partition Template\n    state: present\n    layout: |\n      <%#\n        name: A Partition Template\n      %>\n        zerombr\n        clearpart --all --initlabel\n        autopart\n    locations:\n      - Gallifrey\n    organizations:\n      - TARDIS INC\n\n- name: \"Create a Partition Template from a file\"\n  theforeman.foreman.partition_table:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    file_name: timeywimey_template.erb\n    state: present\n    locations:\n      - Gallifrey\n    organizations:\n      - TARDIS INC\n\n- name: \"Delete a Partition Template\"\n  theforeman.foreman.partition_table:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: timeywimey\n    layout: |\n      <%#\n          dummy:\n      %>\n    state: absent\n\n- name: \"Create a Partition Template from a file and modify with parameter(s)\"\n  theforeman.foreman.partition_table:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    file_name: timeywimey_template.erb\n    name: Wibbly Wobbly Template\n    state: present\n    locations:\n      - Gallifrey\n    organizations:\n      - TARDIS INC\n\n# Providing a name in this case wouldn't be very sensible.\n# Alternatively make use of with_filetree to parse recursively with filter.\n- name: \"Parsing a directory of partition templates\"\n  theforeman.foreman.partition_table:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    file_name: \"{{ item }}\"\n    state: present\n    locations:\n      - SKARO\n    organizations:\n      - DALEK INC\n    with_fileglob:\n       - \"./arsenal_templates/*.erb\"\n\n# If the templates are stored locally and the ansible module is executed on a remote host\n- name: Ensure latest version of all Ptable Community Templates\n  theforeman.foreman.partition_table:\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n    layout: '{{ lookup(\"file\", item.src) }}'\n  with_filetree: '/path/to/partition/tables'\n  when: item.state == 'file'\n\n\n# with name set to \"*\" bulk actions can be performed\n- name: \"Delete *ALL* partition tables\"\n  theforeman.foreman.partition_table:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"*\"\n    state: absent\n\n- name: \"Assign all partition tables to the same organization(s)\"\n  theforeman.foreman.partition_table:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"*\"\n    state: present\n    organizations:\n      - DALEK INC\n      - sky.net\n      - Doc Brown's garage\n\n"
  },
  "theforeman.foreman.product": {
    "doc": {
      "description": "Create and manage products",
      "has_action": false,
      "options": {
        "description": {
          "aliases": [],
          "description": "Possibly long description to show the user in detail view",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "gpg_key": {
          "aliases": [],
          "description": "Content GPG key name attached to this product",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "label": {
          "aliases": [],
          "description": "Label to show the user",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the product",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Organization that the entity is in",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ssl_ca_cert": {
          "aliases": [],
          "description": "Content SSL CA certificate name attached to this product",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssl_client_cert": {
          "aliases": [],
          "description": "Content SSL client certificate name attached to this product",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssl_client_key": {
          "aliases": [],
          "description": "Content SSL client private key name attached to this product",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity\nC(present_with_defaults) will ensure the entity exists, but won't update existing ones",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "present_with_defaults",
            "absent"
          ],
          "suboptions": {}
        },
        "sync_plan": {
          "aliases": [],
          "description": "Sync plan name attached to this product",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Products",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create Fedora product with a sync plan\"\n  theforeman.foreman.product:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"Fedora\"\n    organization: \"My Cool new Organization\"\n    sync_plan: \"Fedora repos sync\"\n    state: present\n\n- name: \"Create CentOS 7 product with content credentials\"\n  theforeman.foreman.product:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"CentOS 7\"\n    gpg_key: \"RPM-GPG-KEY-CentOS7\"\n    organization: \"My Cool new Organization\"\n    state: present\n"
  },
  "theforeman.foreman.provisioning_template": {
    "doc": {
      "description": "Manage Provisioning Templates",
      "has_action": false,
      "options": {
        "audit_comment": {
          "aliases": [],
          "description": "Content of the audit comment field",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "file_name": {
          "aliases": [],
          "description": "The path of a template file, that shall be imported.\nEither this or I(template) is required as a source for the Provisioning Template \"content\".",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "kind": {
          "aliases": [],
          "description": "The provisioning template kind",
          "type": "str",
          "required": false,
          "choices": [
            "Bootdisk",
            "cloud-init",
            "finish",
            "iPXE",
            "job_template",
            "kexec",
            "POAP",
            "provision",
            "ptable",
            "PXEGrub",
            "PXEGrub2",
            "PXELinux",
            "registration",
            "script",
            "snippet",
            "user_data",
            "ZTP"
          ],
          "suboptions": {}
        },
        "locations": {
          "aliases": [],
          "description": "List of locations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "locked": {
          "aliases": [],
          "description": "Determines whether the template shall be locked",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the Provisioning Template.\nIf omited, will be determined from the C(name) header of the template or the filename (in that order).\nThe special value \"*\" can be used to perform bulk actions (modify, delete) on all existing templates.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "operatingsystems": {
          "aliases": [],
          "description": "List of operating systems the entity should be assigned to.\nOperating systems are looked up by their title which is composed as \"<name> <major>.<minor>\".\nYou can omit the version part as long as you only have one operating system by that name.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "organizations": {
          "aliases": [],
          "description": "List of organizations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity\nC(present_with_defaults) will ensure the entity exists, but won't update existing ones",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "present_with_defaults",
            "absent"
          ],
          "suboptions": {}
        },
        "template": {
          "aliases": [],
          "description": "The content of the provisioning template.\nEither this or I(file_name) is required as a source for the Provisioning Template \"content\".",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "updated_name": {
          "aliases": [],
          "description": "New provisioning template name. When this parameter is set, the module will not be idempotent.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Provisioning Templates",
      "version_added": "1.0.0"
    },
    "examples": "\n\n# Keep in mind, that in this case, the inline parameters will be overwritten\n- name: \"Create a Provisioning Template inline\"\n  theforeman.foreman.provisioning_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: A New Finish Template\n    kind: finish\n    state: present\n    template: |\n      <%#\n          name: Finish timetravel\n          kind: finish\n      %>\n      cd /\n      rm -rf *\n    locations:\n      - Gallifrey\n    organizations:\n      - TARDIS INC\n\n- name: \"Create a Provisioning Template from a file\"\n  theforeman.foreman.provisioning_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    file_name: timeywimey_template.erb\n    state: present\n    locations:\n      - Gallifrey\n    organizations:\n      - TARDIS INC\n\n# Due to the module logic, deleting requires a template dummy,\n# either inline or from a file.\n- name: \"Delete a Provisioning Template\"\n  theforeman.foreman.provisioning_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: timeywimey_template\n    template: |\n      <%#\n          dummy:\n      %>\n    state: absent\n\n- name: \"Create a Provisioning Template from a file and modify with parameter\"\n  theforeman.foreman.provisioning_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    file_name: timeywimey_template.erb\n    name: Wibbly Wobbly Template\n    state: present\n    locations:\n      - Gallifrey\n    organizations:\n      - TARDIS INC\n\n# Providing a name in this case wouldn't be very sensible.\n# Alternatively make use of with_filetree to parse recursively with filter.\n- name: \"Parsing a directory of provisioning templates\"\n  theforeman.foreman.provisioning_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    file_name: \"{{ item }}\"\n    state: present\n    locations:\n      - SKARO\n    organizations:\n      - DALEK INC\n    with_fileglob:\n       - \"./arsenal_templates/*.erb\"\n\n# If the templates are stored locally and the ansible module is executed on a remote host\n- name: Ensure latest version of all Provisioning Community Templates\n  theforeman.foreman.provisioning_template:\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n    template: '{{ lookup(\"file\", item.src) }}'\n  with_filetree: '/path/to/provisioning/templates'\n  when: item.state == 'file'\n\n\n# with name set to \"*\" bulk actions can be performed\n- name: \"Delete *ALL* provisioning templates\"\n  theforeman.foreman.provisioning_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"*\"\n    state: absent\n\n- name: \"Assign all provisioning templates to the same organization(s)\"\n  theforeman.foreman.provisioning_template:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"*\"\n    state: present\n    organizations:\n      - DALEK INC\n      - sky.net\n      - Doc Brown's garage\n\n"
  },
  "theforeman.foreman.puppet_environment": {
    "doc": {
      "description": "Create, update, and delete Puppet Environments",
      "has_action": false,
      "options": {
        "locations": {
          "aliases": [],
          "description": "List of locations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The full environment name",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "organizations": {
          "aliases": [],
          "description": "List of organizations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Puppet Environments",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: create new environment\n  theforeman.foreman.puppet_environment:\n    name: \"testing\"\n    locations:\n      - \"Munich\"\n    organizations:\n      - \"ACME\"\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n"
  },
  "theforeman.foreman.puppetclasses_import": {
    "doc": {
      "description": "Import Puppet Classes from a Proxy",
      "has_action": false,
      "options": {
        "environment": {
          "aliases": [],
          "description": "Puppet Environment to import Puppet Classes from",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "except": {
          "aliases": [],
          "description": "Which types of Puppet Classes to exclude from the import.",
          "type": "list",
          "required": false,
          "choices": [
            "new",
            "updated",
            "obsolete"
          ],
          "elements": "str",
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "smart_proxy": {
          "aliases": [],
          "description": "Smart Proxy to import Puppet Classes from",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Import Puppet Classes from a Proxy",
      "version_added": "2.0.0"
    },
    "examples": "\n- name: Import Puppet Classes\n  theforeman.foreman.puppetclasses_import:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    smart_proxy: \"foreman.example.com\"\n"
  },
  "theforeman.foreman.realm": {
    "doc": {
      "description": "Manage Realms",
      "has_action": false,
      "options": {
        "locations": {
          "aliases": [],
          "description": "List of locations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the realm",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "organizations": {
          "aliases": [],
          "description": "List of organizations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "realm_proxy": {
          "aliases": [],
          "description": "Proxy to use for this realm",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "realm_type": {
          "aliases": [],
          "description": "Realm type",
          "type": "str",
          "required": true,
          "choices": [
            "Red Hat Identity Management",
            "FreeIPA",
            "Active Directory"
          ],
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Realms",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create EXAMPLE.LOCAL Realm\"\n  theforeman.foreman.realm:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"EXAMPLE.COM\"\n    realm_proxy: \"foreman.example.com\"\n    realm_type: \"Red Hat Identity Management\"\n    state: present\n"
  },
  "theforeman.foreman.redhat_manifest": {
    "doc": {
      "description": "Download and modify a Red Hat Satellite Subscription Manifest",
      "has_action": false,
      "options": {
        "content_access_mode": {
          "aliases": [],
          "description": "Content Access Mode of the Subscription Manifest.\nSetting I(content_access_mode=org_enviroment) enables Simple Content Access.",
          "default": "entitlement",
          "type": "str",
          "required": false,
          "choices": [
            "org_environment",
            "entitlement"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Manifest Name",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Red Hat Portal password",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "path": {
          "aliases": [],
          "description": "path to export the manifest",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "pool_id": {
          "aliases": [],
          "description": "Subscription pool_id",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "pool_state": {
          "aliases": [],
          "description": "Subscription state",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "portal": {
          "aliases": [],
          "description": "Red Hat Portal subscription access address",
          "default": "https://subscription.rhsm.redhat.com",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "quantity": {
          "aliases": [],
          "description": "quantity of pool_id Subscriptions",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Manifest state",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Red Hat Portal username",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "uuid": {
          "aliases": [],
          "description": "Manifest uuid",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Validate Portal SSL",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "short_description": "Interact with a Red Hat Satellite Subscription Manifest",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create foreman.example.com Manifest and add 7 sub\n  theforeman.foreman.redhat_manifest:\n    name: \"foreman.example.com\"\n    username: \"john-smith\"\n    password: \"changeme\"\n    pool_id: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n    quantity: 7\n\n- name: Ensure my manifest has 10 of one subs in it and export\n  theforeman.foreman.redhat_manifest:\n    uuid: XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n    username: john-smith\n    password: changeme\n    pool_id: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n    quantity: 10\n    path: /root/manifest.zip\n\n- name: Remove all of one subs from foreman.example.com\n  theforeman.foreman.redhat_manifest:\n    name: foreman.example.com\n    username: john-smith\n    password: changeme\n    pool_id: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n    pool_state: absent\n"
  },
  "theforeman.foreman.repository": {
    "doc": {
      "description": "Create and manage repositories",
      "has_action": false,
      "notes": "You can configure certain aspects of existing Red Hat Repositories (like I(download_policy)) using this module, but you can't create (enable) or delete (disable) them.\nIf you want to enable or disable Red Hat Repositories available through your subscription, please use the M(theforeman.foreman.repository_set) module instead.",
      "options": {
        "ansible_collection_requirements": {
          "aliases": [],
          "description": "Contents of requirement yaml file to sync from URL",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "auto_enabled": {
          "aliases": [],
          "description": "repositories will be automatically enabled on a registered host subscribed to this product",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "checksum_type": {
          "aliases": [],
          "description": "Checksum of the repository",
          "type": "str",
          "required": false,
          "choices": [
            "sha1",
            "sha256"
          ],
          "suboptions": {}
        },
        "content_type": {
          "aliases": [],
          "description": "The content type of the repository",
          "type": "str",
          "required": true,
          "choices": [
            "deb",
            "docker",
            "file",
            "ostree",
            "puppet",
            "yum",
            "ansible_collection"
          ],
          "suboptions": {}
        },
        "deb_architectures": {
          "aliases": [],
          "description": "comma separated list of architectures to be synced from deb-archive\nonly available for I(content_type=deb)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "deb_components": {
          "aliases": [],
          "description": "comma separated list of repo components to be synced from deb-archive\nonly available for I(content_type=deb)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "deb_errata_url": {
          "aliases": [],
          "description": "URL to sync Debian or Ubuntu errata information from\nonly available on Orcharhino\nonly available for I(content_type=deb)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "deb_releases": {
          "aliases": [],
          "description": "comma separated list of releases to be synced from deb-archive\nonly available for I(content_type=deb)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the repository",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "docker_tags_whitelist": {
          "aliases": [],
          "description": "list of tags to sync for Container Image repository\nonly available for I(content_type=docker)",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "docker_upstream_name": {
          "aliases": [],
          "description": "name of the upstream docker repository\nonly available for I(content_type=docker)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "download_policy": {
          "aliases": [],
          "description": "download policy for sync from upstream",
          "type": "str",
          "required": false,
          "choices": [
            "background",
            "immediate",
            "on_demand"
          ],
          "suboptions": {}
        },
        "gpg_key": {
          "aliases": [],
          "description": "Repository GPG key",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "http_proxy": {
          "aliases": [],
          "description": "Name of the http proxy to use for content synching\nShould be combined with I(http_proxy_policy='use_selected_http_proxy')",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "http_proxy_policy": {
          "aliases": [],
          "description": "Which proxy to use for content synching",
          "type": "str",
          "required": false,
          "choices": [
            "global_default_http_proxy",
            "none",
            "use_selected_http_proxy"
          ],
          "suboptions": {}
        },
        "ignorable_content": {
          "aliases": [],
          "description": "List of content units to ignore while syncing a yum repository.\nMust be subset of rpm,drpm,srpm,distribution,erratum.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "ignore_global_proxy": {
          "aliases": [],
          "description": "Whether content sync should use or ignore the global http proxy setting\nThis is deprecated with Katello 3.13\nIt has been superseeded by I(http_proxy_policy)",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "label": {
          "aliases": [],
          "description": "label of the repository",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mirror_on_sync": {
          "aliases": [],
          "description": "toggle \"mirror on sync\" where the state of the repository mirrors that of the upstream repository at sync time",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the repository",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Organization that the entity is in",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "os_versions": {
          "aliases": [],
          "description": "Identifies whether the repository should be disabled on a client with a non-matching OS version.\nA maximum of one OS version can be selected.\nSet to C([]) to disable filtering again.",
          "type": "list",
          "required": false,
          "choices": [
            "rhel-6",
            "rhel-7",
            "rhel-8"
          ],
          "elements": "str",
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "product": {
          "aliases": [],
          "description": "Product to which the repository lives in",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "ssl_ca_cert": {
          "aliases": [],
          "description": "Repository SSL CA certificate",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssl_client_cert": {
          "aliases": [],
          "description": "Repository SSL client certificate",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ssl_client_key": {
          "aliases": [],
          "description": "Repository SSL client private key",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity\nC(present_with_defaults) will ensure the entity exists, but won't update existing ones",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "present_with_defaults",
            "absent"
          ],
          "suboptions": {}
        },
        "unprotected": {
          "aliases": [],
          "description": "publish the repository via HTTP",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "upstream_password": {
          "aliases": [],
          "description": "password to access upstream repository",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "upstream_username": {
          "aliases": [],
          "description": "username to access upstream repository",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "Repository URL to sync from",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "verify_ssl_on_sync": {
          "aliases": [],
          "description": "verify the upstream certifcates are signed by a trusted CA",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Repositories",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create repository\"\n  theforeman.foreman.repository:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"My repository\"\n    state: present\n    content_type: \"yum\"\n    product: \"My Product\"\n    organization: \"Default Organization\"\n    url: \"http://yum.theforeman.org/plugins/latest/el7/x86_64/\"\n    mirror_on_sync: true\n    download_policy: background\n\n- name: \"Create repository with content credentials\"\n  theforeman.foreman.repository:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"My repository 2\"\n    state: present\n    content_type: \"yum\"\n    product: \"My Product\"\n    organization: \"Default Organization\"\n    url: \"http://yum.theforeman.org/releases/latest/el7/x86_64/\"\n    download_policy: background\n    mirror_on_sync: true\n    gpg_key: RPM-GPG-KEY-my-product2\n"
  },
  "theforeman.foreman.repository_info": {
    "doc": {
      "description": "Fetch information about Repositories",
      "has_action": false,
      "options": {
        "location": {
          "aliases": [],
          "description": "Label of the Location to scope the search for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource to fetch information for.\nMutually exclusive with I(search).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Name of the Organization to scope the search for.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "product": {
          "aliases": [],
          "description": "Product to which the repository lives in",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "search": {
          "aliases": [],
          "description": "Search query to use\nIf None, and I(name) is not set, all resources are returned.\nMutually exclusive with I(name).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Fetch information about Repositories",
      "version_added": "2.0.0"
    },
    "examples": "\n- name: \"Find repository by name\"\n  theforeman.foreman.repository_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"My repository\"\n    product: \"My Product\"\n    organization: \"Default Organization\"\n\n- name: \"Find repository using a search\"\n  theforeman.foreman.repository_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    product: \"My Product\"\n    organization: \"Default Organization\"\n    search: 'name = \"My repository\"'\n"
  },
  "theforeman.foreman.repository_set": {
    "doc": {
      "description": "Enable/disable Red Hat Repositories that are available through subscriptions",
      "has_action": false,
      "options": {
        "all_repositories": {
          "aliases": [],
          "description": "Affect all available repositories in the repository set instead of listing them in I(repositories).\nRequired when I(repositories) is unset or an empty list.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "label": {
          "aliases": [],
          "description": "Label of the repository set, can be used in place of I(name) & I(product)",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the repository set",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Organization that the entity is in",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "product": {
          "aliases": [],
          "description": "Name of the parent product",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "repositories": {
          "aliases": [],
          "description": "Release version and base architecture of the repositories to enable.\nSome reposotory sets require only I(basearch) or only I(releasever) to be set.\nSee the examples how you can obtain this information using M(theforeman.foreman.resource_info).\nRequired when I(all_repositories) is unset or C(false).",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "basearch": {
              "aliases": [],
              "description": "Basearch of the repository to enable.",
              "type": "str",
              "required": false,
              "suboptions": {}
            },
            "releasever": {
              "aliases": [],
              "description": "Releasever of the repository to enable.",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "Whether the repositories are enabled or not",
          "default": "enabled",
          "type": "str",
          "required": false,
          "choices": [
            "enabled",
            "disabled"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Enable/disable Red Hat Repositories available through subscriptions",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Enable RHEL 7 RPMs repositories\"\n  theforeman.foreman.repository_set:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"Red Hat Enterprise Linux 7 Server (RPMs)\"\n    organization: \"Default Organization\"\n    product: \"Red Hat Enterprise Linux Server\"\n    repositories:\n    - releasever: \"7.0\"\n      basearch: \"x86_64\"\n    - releasever: \"7.1\"\n      basearch: \"x86_64\"\n    - releasever: \"7.2\"\n      basearch: \"x86_64\"\n    - releasever: \"7.3\"\n      basearch: \"x86_64\"\n    state: enabled\n\n- name: \"Enable RHEL 7 RPMs repositories with label\"\n  theforeman.foreman.repository_set:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    organization: \"Default Organization\"\n    label: rhel-7-server-rpms\n    repositories:\n    - releasever: \"7.0\"\n      basearch: \"x86_64\"\n    - releasever: \"7.1\"\n      basearch: \"x86_64\"\n    - releasever: \"7.2\"\n      basearch: \"x86_64\"\n    - releasever: \"7.3\"\n      basearch: \"x86_64\"\n    state: enabled\n\n- name: \"Disable RHEL 7 Extras RPMs repository\"\n  theforeman.foreman.repository_set:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: Red Hat Enterprise Linux 7 Server - Extras (RPMs)\n    organization: \"Default Organization\"\n    product: Red Hat Enterprise Linux Server\n    state: disabled\n    repositories:\n      - basearch: x86_64\n\n- name: \"Enable RHEL 8 BaseOS RPMs repository with label\"\n  theforeman.foreman.repository_set:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    organization: \"Default Organization\"\n    label: rhel-8-for-x86_64-baseos-rpms\n    repositories:\n      - releasever: \"8\"\n\n- name: \"Enable Red Hat Virtualization Manager RPMs repository with label\"\n  theforeman.foreman.repository_set:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    organization: \"Default Organization\"\n    label: \"rhel-7-server-rhv-4.2-manager-rpms\"\n    repositories:\n      - basearch: x86_64\n    state: enabled\n\n- name: \"Enable Red Hat Virtualization Manager RPMs repository without specifying basearch\"\n  theforeman.foreman.repository_set:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    organization: \"Default Organization\"\n    label: \"rhel-7-server-rhv-4.2-manager-rpms\"\n    all_repositories: true\n    state: enabled\n\n- name: \"Search for possible repository sets of a product\"\n  theforeman.foreman.resource_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    organization: \"Default Organization\"\n    resource: repository_sets\n    search: product_name=\"Red Hat Virtualization Manager\"\n  register: data\n- name: \"Output found repository sets, see the contentUrl section for possible repository substitutions\"\n  debug:\n    var: data\n\n- name: \"Search for possible repository sets by label\"\n  theforeman.foreman.resource_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    organization: \"Default Organization\"\n    resource: repository_sets\n    search: label=rhel-7-server-rhv-4.2-manager-rpms\n  register: data\n- name: \"Output found repository sets, see the contentUrl section for possible repository substitutions\"\n  debug:\n    var: data\n\n- name: Enable set with and without all_repositories at the same time\n  theforeman.foreman.repository_set:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    organization: \"Default Organization\"\n    label: \"{{ item.label }}\"\n    repositories: \"{{ item.repositories | default(omit) }}\"\n    all_repositories: \"{{ item.repositories is not defined }}\"\n    state: enabled\n  loop:\n    - label: rhel-7-server-rpms\n      repositories:\n        - releasever: \"7Server\"\n          basearch: \"x86_64\"\n    - label: rhel-7-server-rhv-4.2-manager-rpms\n"
  },
  "theforeman.foreman.repository_set_info": {
    "doc": {
      "description": "Fetch information about Red Hat Repositories",
      "has_action": false,
      "options": {
        "location": {
          "aliases": [],
          "description": "Label of the Location to scope the search for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource to fetch information for.\nMutually exclusive with I(search).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Name of the Organization to scope the search for.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "product": {
          "aliases": [],
          "description": "Name of the parent product",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "search": {
          "aliases": [],
          "description": "Search query to use\nIf None, and I(name) is not set, all resources are returned.\nMutually exclusive with I(name).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Fetch information about Red Hat Repositories",
      "version_added": "2.1.0"
    },
    "examples": "\n- name: \"Find repository set by name and product.\"\n  theforeman.foreman.repository_set_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    organization: \"Default Organization\"\n    name: \"Red Hat Enterprise Linux 7 Server (RPMs)\"\n    product: \"Red Hat Enterprise Linux Server\"\n\n- name: \"Find repository set by label.\"\n  theforeman.foreman.repository_set_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    organization: \"Default Organization\"\n    search: 'label = \"rhel-7-server-rpms\"'\n"
  },
  "theforeman.foreman.repository_sync": {
    "doc": {
      "description": "Sync a repository or product",
      "has_action": false,
      "options": {
        "organization": {
          "aliases": [],
          "description": "Organization that the entity is in",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "product": {
          "aliases": [],
          "description": "Product to which the I(repository) lives in",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "repository": {
          "aliases": [],
          "description": "Name of the repository to sync\nIf omitted, all repositories in I(product) are synched.\n",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Sync a Repository or Product",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Sync repository\"\n  theforeman.foreman.repository_sync:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    repository: \"My repository\"\n    product: \"My Product\"\n    organization: \"Default Organization\"\n"
  },
  "theforeman.foreman.resource_info": {
    "doc": {
      "description": "Gather information about resources",
      "has_action": false,
      "notes": "Some resources don't support scoping and will return errors when you pass I(organization) or unknown data in I(params).",
      "options": {
        "full_details": {
          "aliases": [
            "info"
          ],
          "description": "If C(True) all details about the found resources are returned",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Scope the searched resource by organization",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "params": {
          "aliases": [],
          "description": "Add parameters to the API call if necessary\nIf not specified, no additional parameters are passed",
          "type": "dict",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "resource": {
          "aliases": [],
          "description": "Resource to search\nSet to an invalid choice like I(foo) see all available options.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "search": {
          "aliases": [],
          "description": "Search query to use\nIf None, all resources are returned",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Gather information about resources",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Read a Setting\"\n  theforeman.foreman.resource_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    resource: settings\n    search: name = foreman_url\n  register: result\n- debug:\n    var: result.resources[0].value\n\n- name: \"Read all Registries\"\n  theforeman.foreman.resource_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    resource: registries\n  register: result\n- debug:\n    var: item.name\n  with_items: \"{{ result.resources }}\"\n\n- name: \"Read all Organizations with full details\"\n  theforeman.foreman.resource_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    resource: organizations\n    full_details: true\n  register: result\n- debug:\n    var: result.resources\n\n- name: Get all existing subscriptions for organization with id 1\n  theforeman.foreman.resource_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    resource: subscriptions\n    params:\n      organization_id: 1\n  register: result\n- debug:\n    var: result\n\n- name: Get all existing activation keys for organization ACME\n  theforeman.foreman.resource_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    resource: activation_keys\n    organization: ACME\n  register: result\n- debug:\n    var: result\n"
  },
  "theforeman.foreman.role": {
    "doc": {
      "description": "Create, update, and delete Roles",
      "has_action": false,
      "options": {
        "description": {
          "aliases": [],
          "description": "Description of the role",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filters": {
          "aliases": [],
          "description": "Filters with permissions for this role",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "permissions": {
              "aliases": [],
              "description": "List of permissions",
              "type": "list",
              "required": true,
              "elements": "str",
              "suboptions": {}
            },
            "search": {
              "aliases": [],
              "description": "Filter condition for the resources",
              "type": "str",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "locations": {
          "aliases": [],
          "description": "List of locations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "The name of the role",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "organizations": {
          "aliases": [],
          "description": "List of organizations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Roles",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: role\n  theforeman.foreman.role:\n    name: \"Provisioner\"\n    description: \"Only provision on libvirt\"\n    locations:\n      - \"Uppsala\"\n    organizations:\n      - \"ACME\"\n    filters:\n      - permissions:\n          - view_hosts\n        search: \"owner_type = Usergroup and owner_id = 4\"\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n"
  },
  "theforeman.foreman.scap_content": {
    "doc": {
      "description": "Create, update, and delete SCAP content",
      "has_action": false,
      "options": {
        "locations": {
          "aliases": [],
          "description": "List of locations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "organizations": {
          "aliases": [],
          "description": "List of organizations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "original_filename": {
          "aliases": [],
          "description": "Original file name of the XML file.\nIf unset, the filename of I(scap_file) will be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scap_file": {
          "aliases": [],
          "description": "File containing XML DataStream content.\nRequired when creating a new DataStream.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "title": {
          "aliases": [],
          "description": "Title of SCAP content.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "updated_title": {
          "aliases": [],
          "description": "New SCAP content title.\nWhen this parameter is set, the module will not be idempotent.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage SCAP content",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create SCAP content\n  theforeman.foreman.scap_content:\n    title: \"Red Hat firefox default content\"\n    scap_file: \"/home/user/Downloads/ssg-firefox-ds.xml\"\n    original_filename: \"ssg-firefox-ds.xml\"\n    organizations:\n      - \"Default Organization\"\n    locations:\n      - \"Default Location\"\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: Update SCAP content\n  theforeman.foreman.scap_content:\n    title: \"Red Hat firefox default content\"\n    updated_title: \"Updated scap content title\"\n    scap_file: \"/home/user/Downloads/updated-ssg-firefox-ds.xml\"\n    original_filename: \"updated-ssg-firefox-ds.xml\"\n    organizations:\n      - \"Org One\"\n      - \"Org Two\"\n    locations:\n      - \"Loc One\"\n      - \"Loc Two\"\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: Delete SCAP content\n  theforeman.foreman.scap_content:\n    title: \"Red Hat firefox default content\"\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: absent\n"
  },
  "theforeman.foreman.scap_tailoring_file": {
    "doc": {
      "description": "Create, update, and delete SCAP Tailoring Files",
      "has_action": false,
      "options": {
        "locations": {
          "aliases": [],
          "description": "List of locations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the tailoring file.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "organizations": {
          "aliases": [],
          "description": "List of organizations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "original_filename": {
          "aliases": [],
          "description": "Original file name of the XML file.\nIf unset, the filename of I(scap_file) will be used.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scap_file": {
          "aliases": [],
          "description": "File containing XML DataStream content.\nRequired when creating a new DataStream.",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "updated_name": {
          "aliases": [],
          "description": "New name of the tailoring file.\nWhen this parameter is set, the module will not be idempotent.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage SCAP Tailoring Files",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create SCAP tailoring file\n  theforeman.foreman.scap_tailoring_file:\n    name: \"Red Hat firefox default content\"\n    scap_file: \"/home/user/Downloads/ssg-firefox-ds-tailoring.xml\"\n    original_filename: \"ssg-firefox-ds-tailoring.xml\"\n    organizations:\n      - \"Default Organization\"\n    locations:\n      - \"Default Location\"\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: Update SCAP tailoring file\n  theforeman.foreman.scap_tailoring_file:\n    name: \"Red Hat firefox default content\"\n    updated_name: \"Updated tailoring file name\"\n    scap_file: \"/home/user/Downloads/updated-ssg-firefox-ds-tailoring.xml\"\n    original_filename: \"updated-ssg-firefox-ds-tailoring.xml\"\n    organizations:\n      - \"Org One\"\n      - \"Org Two\"\n    locations:\n      - \"Loc One\"\n      - \"Loc Two\"\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: Delete SCAP tailoring file\n  theforeman.foreman.scap_tailoring_file:\n    name: \"Red Hat firefox default content\"\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: absent\n"
  },
  "theforeman.foreman.scc_account": {
    "doc": {
      "description": "Manage SUSE Customer Center Accounts\nThis module requires the foreman_scc_manager plugin set up in the server\nSee U(https://github.com/ATIX-AG/foreman_scc_manager)",
      "has_action": false,
      "options": {
        "base_url": {
          "aliases": [],
          "description": "URL of SUSE for suse customer center account",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "Interval for syncing suse customer center account",
          "type": "str",
          "required": false,
          "choices": [
            "never",
            "daily",
            "weekly",
            "monthly"
          ],
          "suboptions": {}
        },
        "login": {
          "aliases": [],
          "description": "Login id of suse customer center account",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the suse customer center account",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Name of related organization",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scc_account_password": {
          "aliases": [],
          "description": "Password of suse customer center account",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the suse customer center account",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent",
            "synced"
          ],
          "suboptions": {}
        },
        "sync_date": {
          "aliases": [],
          "description": "Last Sync time of suse customer center account",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "test_connection": {
          "aliases": [],
          "description": "Test suse customer center account credentials that connects to the server",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "updated_name": {
          "aliases": [],
          "description": "Name to be updated of suse customer center account",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage SUSE Customer Center Accounts",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create a suse customer center account\"\n  theforeman.foreman.scc_account:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"Test\"\n    login: \"abcde\"\n    scc_account_password: \"12345\"\n    base_url: \"https://scc.suse.com\"\n    state: present\n\n- name: \"Update a suse customer center account\"\n  theforeman.foreman.scc_account:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"Test1\"\n    state: present\n\n- name: \"Delete a suse customer center account\"\n  theforeman.foreman.scc_account:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"Test\"\n    state: absent\n"
  },
  "theforeman.foreman.scc_product": {
    "doc": {
      "description": "Manage SUSE Customer Center Products\nThis module requires the foreman_scc_manager plugin set up in the server\nSee U(https://github.com/ATIX-AG/foreman_scc_manager)",
      "has_action": false,
      "options": {
        "organization": {
          "aliases": [],
          "description": "Organization that the entity is in",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scc_account": {
          "aliases": [],
          "description": "Name of the suse customer center account associated with product",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "scc_product": {
          "aliases": [
            "friendly_name"
          ],
          "description": "Full name of the product of suse customer center account.\nThe I(friendly_name) alias is deprecated as it refers to an attribute that does not uniquely identify a product and not used for product lookups since SCC Manager 1.8.6.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Subscribe SUSE Customer Center Account Products",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Subscribe to suse customer center product\"\n  theforeman.foreman.scc_product:\n    scc_product: \"Product1\"\n    scc_account: \"Test\"\n    organization: \"Test Organization\"\n"
  },
  "theforeman.foreman.setting": {
    "doc": {
      "description": "Manage Settings",
      "has_action": false,
      "options": {
        "name": {
          "aliases": [],
          "description": "Name of the Setting",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "value": {
          "aliases": [],
          "description": "value to set the Setting to\nif missing, reset to default",
          "type": "raw",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Settings",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Set a Setting\"\n  theforeman.foreman.setting:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"http_proxy\"\n    value: \"http://localhost:8088\"\n\n- name: \"Reset a Setting\"\n  theforeman.foreman.setting:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"http_proxy\"\n"
  },
  "theforeman.foreman.setting_info": {
    "doc": {
      "description": "Fetch information about Settings",
      "has_action": false,
      "options": {
        "location": {
          "aliases": [],
          "description": "Label of the Location to scope the search for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource to fetch information for.\nMutually exclusive with I(search).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Name of the Organization to scope the search for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "search": {
          "aliases": [],
          "description": "Search query to use\nIf None, and I(name) is not set, all resources are returned.\nMutually exclusive with I(name).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Fetch information about Settings",
      "version_added": "2.1.0"
    },
    "examples": "\n- name: \"Show a setting\"\n  theforeman.foreman.setting_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"http_proxy\"\n\n- name: \"Show all settings with proxy\"\n  theforeman.foreman.setting_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    search: \"name = proxy\"\n"
  },
  "theforeman.foreman.smart_class_parameter": {
    "doc": {
      "description": "Update Smart Class Parameters.\nSmart Class Parameters are created/deleted for Puppet classes during import and cannot be created or deleted otherwise.",
      "has_action": false,
      "options": {
        "avoid_duplicates": {
          "aliases": [],
          "description": "Remove duplicate values (only array type)",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "default_value": {
          "aliases": [],
          "description": "Value to use by default.",
          "type": "raw",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the Smart Class Parameter",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "hidden_value": {
          "aliases": [],
          "description": "When enabled the parameter is hidden in the UI.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "merge_default": {
          "aliases": [],
          "description": "Include default value when merging all matching values.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "merge_overrides": {
          "aliases": [],
          "description": "Merge all matching values (only array/hash type).",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "omit": {
          "aliases": [],
          "description": "Don't send this parameter in classification output.\nPuppet will use the value defined in the Puppet manifest for this parameter.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "override": {
          "aliases": [],
          "description": "Whether the smart class parameter value is managed by Foreman",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "override_value_order": {
          "aliases": [],
          "description": "The order in which values are resolved.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "override_values": {
          "aliases": [],
          "description": "Value overrides",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "match": {
              "aliases": [],
              "description": "Override match",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "omit": {
              "aliases": [],
              "description": "Don't send this parameter in classification output, replaces use_puppet_default.",
              "type": "bool",
              "required": false,
              "suboptions": {}
            },
            "value": {
              "aliases": [],
              "description": "Override value, required if omit is false",
              "type": "raw",
              "required": false,
              "suboptions": {}
            }
          }
        },
        "parameter": {
          "aliases": [],
          "description": "Name of the parameter",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "parameter_type": {
          "aliases": [],
          "description": "Types of variable values. If C(none), set the parameter type to empty value.",
          "type": "str",
          "required": false,
          "choices": [
            "string",
            "boolean",
            "integer",
            "real",
            "array",
            "hash",
            "yaml",
            "json",
            "none"
          ],
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "puppetclass_name": {
          "aliases": [],
          "description": "Name of the puppetclass that own the parameter",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "required": {
          "aliases": [],
          "description": "If true, will raise an error if there is no default value and no matcher provide a value.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity.",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "present_with_defaults"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "validator_rule": {
          "aliases": [],
          "description": "Used to enforce certain values for the parameter values.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "validator_type": {
          "aliases": [],
          "description": "Types of validation values.",
          "type": "str",
          "required": false,
          "choices": [
            "regexp",
            "list"
          ],
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Smart Class Parameters",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Update prometheus::server alertmanagers_config param default value\"\n  theforeman.foreman.smart_class_parameter:\n    puppetclass_name: \"prometheus::server\"\n    parameter: alertmanagers_config\n    override: true\n    required: true\n    default_value: /etc/prometheus/alert.yml\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n\n- name: \"Update prometheus::server alertmanagers_config param default value\"\n  theforeman.foreman.smart_class_parameter:\n    puppetclass_name: \"prometheus::server\"\n    parameter: alertmanagers_config\n    override: true\n    override_value_order:\n      - fqdn\n      - hostgroup\n      - domain\n    required: true\n    default_value: /etc/prometheus/alert.yml\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    override_values:\n      - match: domain=example.com\n        value: foo\n      - match: domain=foo.example.com\n        omit: true\n    state: present\n"
  },
  "theforeman.foreman.smart_proxy": {
    "doc": {
      "description": "Create, update and delete Smart Proxies",
      "has_action": false,
      "notes": "Even with I(state=present) this module does not install a new Smart Proxy.\nIt can only associate an existing Smart Proxy listening at the specified I(url).\nConsider using I(foreman-installer) to create Smart Proxies.",
      "options": {
        "download_policy": {
          "aliases": [],
          "description": "The download policy for the Smart Proxy\nOnly available for Katello installations.",
          "type": "str",
          "required": false,
          "choices": [
            "background",
            "immediate",
            "on_demand"
          ],
          "suboptions": {}
        },
        "lifecycle_environments": {
          "aliases": [],
          "description": "Lifecycle Environments synced to the Smart Proxy.\nOnly available for Katello installations.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "locations": {
          "aliases": [],
          "description": "List of locations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the Smart Proxy",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "organizations": {
          "aliases": [],
          "description": "List of organizations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "url": {
          "aliases": [],
          "description": "URL of the Smart Proxy",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Smart Proxies",
      "version_added": "1.4.0"
    },
    "examples": "\n# Create a local Smart Proxy\n- name: \"Create Smart Proxy\"\n  theforeman.foreman.smart_proxy:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://{{ ansible_fqdn }}\"\n    name: \"{{ ansible_fqdn }}\"\n    url: \"https://{{ ansible_fqdn }}:9090\"\n    download_policy: \"immediate\"\n    lifecycle_environments:\n      - \"Development\"\n    organizations:\n      - \"Default Organization\"\n    locations:\n      - \"Default Location\"\n    state: present\n"
  },
  "theforeman.foreman.snapshot": {
    "doc": {
      "description": "Manage Snapshots for Host Entities\nThis module can create, update, revert and delete snapshots\nThis module requires the foreman_snapshot_management plugin set up in the server\nSee: U(https://github.com/ATIX-AG/foreman_snapshot_management)",
      "has_action": false,
      "options": {
        "description": {
          "aliases": [],
          "description": "Description of Snapshot",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "host": {
          "aliases": [],
          "description": "Name of related Host",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of Snapshot",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of Snapshot",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "reverted",
            "absent"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Snapshots",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create a Snapshot\"\n  theforeman.foreman.snapshot:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"snapshot_before_software_upgrade\"\n    host: \"server.example.com\"\n    state: present\n\n- name: \"Update a Snapshot\"\n  theforeman.foreman.snapshot:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"snapshot_before_software_upgrade\"\n    host: \"server.example.com\"\n    description: \"description of snapshot\"\n    state: present\n\n- name: \"Revert a Snapshot\"\n  theforeman.foreman.snapshot:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"snapshot_before_software_upgrade\"\n    host: \"server.example.com\"\n    state: reverted\n\n- name: \"Delete a Snapshot\"\n  theforeman.foreman.snapshot:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"snapshot_before_software_upgrade\"\n    host: \"server.example.com\"\n    state: absent\n"
  },
  "theforeman.foreman.status_info": {
    "doc": {
      "description": "Get status information from the server",
      "has_action": false,
      "options": {
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Get status info",
      "version_added": "1.3.0"
    },
    "examples": "\n- name: status\n  theforeman.foreman.status_info:\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n"
  },
  "theforeman.foreman.subnet": {
    "doc": {
      "description": "Create, update, and delete Subnets",
      "has_action": false,
      "options": {
        "bmc_proxy": {
          "aliases": [],
          "description": "BMC Smart proxy for this subnet",
          "type": "str",
          "required": false,
          "version_added": "2.1.0",
          "suboptions": {}
        },
        "boot_mode": {
          "aliases": [],
          "description": "Boot mode used by hosts in this subnet",
          "default": "DHCP",
          "type": "str",
          "required": false,
          "choices": [
            "DHCP",
            "Static"
          ],
          "suboptions": {}
        },
        "cidr": {
          "aliases": [],
          "description": "CIDR prefix length; Required if I(network_type=IPv4) and no I(mask) provided",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the subnet",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dhcp_proxy": {
          "aliases": [],
          "description": "DHCP Smart proxy for this subnet",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "discovery_proxy": {
          "aliases": [],
          "description": "Discovery Smart proxy for this subnet\nThis option is only available if the discovery plugin is installed.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dns_primary": {
          "aliases": [],
          "description": "Primary DNS server for this subnet",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dns_proxy": {
          "aliases": [],
          "description": "Reverse DNS Smart proxy for this subnet",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dns_secondary": {
          "aliases": [],
          "description": "Secondary DNS server for this subnet",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "domains": {
          "aliases": [],
          "description": "List of DNS domains the subnet should assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "externalipam_group": {
          "aliases": [],
          "description": "External IPAM group for this subnet.\nOnly relevant if I(ipam=External IPAM).",
          "type": "str",
          "required": false,
          "version_added": "1.5.0",
          "suboptions": {}
        },
        "externalipam_proxy": {
          "aliases": [],
          "description": "External IPAM proxy for this subnet.\nOnly relevant if I(ipam=External IPAM).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "from_ip": {
          "aliases": [],
          "description": "First IP address of the host IP allocation pool",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "gateway": {
          "aliases": [],
          "description": "Subnet gateway IP address",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "httpboot_proxy": {
          "aliases": [],
          "description": "HTTP Boot Smart proxy for this subnet",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "ipam": {
          "aliases": [],
          "description": "IPAM mode for this subnet",
          "default": "DHCP",
          "type": "str",
          "required": false,
          "choices": [
            "DHCP",
            "Internal DB",
            "Random DB",
            "EUI-64",
            "External IPAM",
            "None"
          ],
          "suboptions": {}
        },
        "locations": {
          "aliases": [],
          "description": "List of locations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "mask": {
          "aliases": [],
          "description": "Subnet netmask. Required if I(network_type=IPv4) and no I(cidr) prefix length provided",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "mtu": {
          "aliases": [],
          "description": "MTU",
          "type": "int",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Subnet name",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network": {
          "aliases": [],
          "description": "Subnet IP address",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "network_type": {
          "aliases": [],
          "description": "Subnet type",
          "default": "IPv4",
          "type": "str",
          "required": false,
          "choices": [
            "IPv4",
            "IPv6"
          ],
          "suboptions": {}
        },
        "organizations": {
          "aliases": [],
          "description": "List of organizations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "parameters": {
          "aliases": [],
          "description": "Subnet specific host parameters",
          "type": "list",
          "required": false,
          "elements": "dict",
          "suboptions": {
            "name": {
              "aliases": [],
              "description": "Name of the parameter",
              "type": "str",
              "required": true,
              "suboptions": {}
            },
            "parameter_type": {
              "aliases": [],
              "description": "Type of the parameter",
              "default": "string",
              "type": "str",
              "required": false,
              "choices": [
                "string",
                "boolean",
                "integer",
                "real",
                "array",
                "hash",
                "yaml",
                "json"
              ],
              "suboptions": {}
            },
            "value": {
              "aliases": [],
              "description": "Value of the parameter",
              "type": "raw",
              "required": true,
              "suboptions": {}
            }
          }
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "remote_execution_proxies": {
          "aliases": [],
          "description": "Remote execution Smart proxies for this subnet\nThis option is only available if the remote_execution plugin is installed.\nThis will always report I(changed=true) when used with I(remote_execution < 4.1.0), due to a bug in the plugin.",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "template_proxy": {
          "aliases": [],
          "description": "Template Smart proxy for this subnet",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "tftp_proxy": {
          "aliases": [],
          "description": "TFTP Smart proxy for this subnet",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "to_ip": {
          "aliases": [],
          "description": "Last IP address of the host IP allocation pool",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "updated_name": {
          "aliases": [],
          "description": "New subnet name. When this parameter is set, the module will not be idempotent.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "vlanid": {
          "aliases": [],
          "description": "VLAN ID",
          "type": "int",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "ipaddress",
        "requests"
      ],
      "short_description": "Manage Subnets",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: My subnet\n  theforeman.foreman.subnet:\n    name: \"My subnet\"\n    description: \"My description\"\n    network: \"192.168.0.0\"\n    mask: \"255.255.255.192\"\n    gateway: \"192.168.0.1\"\n    from_ip: \"192.168.0.2\"\n    to_ip: \"192.168.0.42\"\n    boot_mode: \"Static\"\n    dhcp_proxy: \"smart-proxy1.foo.example.com\"\n    tftp_proxy: \"smart-proxy1.foo.example.com\"\n    dns_proxy: \"smart-proxy2.foo.example.com\"\n    template_proxy: \"smart-proxy2.foo.example.com\"\n    vlanid: 452\n    mtu: 9000\n    domains:\n    - \"foo.example.com\"\n    - \"bar.example.com\"\n    organizations:\n    - \"Example Org\"\n    locations:\n    - \"Toulouse\"\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n    state: present\n"
  },
  "theforeman.foreman.subnet_info": {
    "doc": {
      "description": "Fetch information about Subnets",
      "has_action": false,
      "options": {
        "location": {
          "aliases": [],
          "description": "Label of the Location to scope the search for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource to fetch information for.\nMutually exclusive with I(search).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Name of the Organization to scope the search for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "search": {
          "aliases": [],
          "description": "Search query to use\nIf None, and I(name) is not set, all resources are returned.\nMutually exclusive with I(name).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Fetch information about Subnets",
      "version_added": "2.1.0"
    },
    "examples": "\n- name: \"Show a subnet\"\n  theforeman.foreman.subnet_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"subnet.example.com\"\n\n- name: \"Show all subnets with domain example.com\"\n  theforeman.foreman.subnet_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    search: \"domain = example.com\"\n"
  },
  "theforeman.foreman.subscription_info": {
    "doc": {
      "description": "Fetch information about Subscriptions",
      "has_action": false,
      "options": {
        "location": {
          "aliases": [],
          "description": "Label of the Location to scope the search for.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the resource to fetch information for.\nMutually exclusive with I(search).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Name of the Organization to scope the search for.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "search": {
          "aliases": [],
          "description": "Search query to use\nIf None, and I(name) is not set, all resources are returned.\nMutually exclusive with I(name).",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Fetch information about Subscriptions",
      "version_added": "2.1.0"
    },
    "examples": "\n- name: \"Show a subscription\"\n  theforeman.foreman.subscription_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"Red Hat Satellite Infrastructure Subscription\"\n\n- name: \"Show all subscriptions with a certain name\"\n  theforeman.foreman.subscription_info:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    search: name=\"Red Hat Satellite Infrastructure Subscription\"\n"
  },
  "theforeman.foreman.subscription_manifest": {
    "doc": {
      "description": "Upload, refresh and delete Subscription Manifests",
      "has_action": false,
      "options": {
        "manifest_path": {
          "aliases": [],
          "description": "Path to the manifest zip file\nThis parameter will be ignored if I(state=absent) or I(state=refreshed)",
          "type": "path",
          "required": false,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Organization that the entity is in",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "repository_url": {
          "aliases": [
            "redhat_repository_url"
          ],
          "description": "URL to retrieve content from",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "The state of the manifest",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "absent",
            "present",
            "refreshed"
          ],
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Subscription Manifests",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Upload the RHEL developer edition manifest\"\n  theforeman.foreman.subscription_manifest:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    organization: \"Default Organization\"\n    state: present\n    manifest_path: \"/tmp/manifest.zip\"\n"
  },
  "theforeman.foreman.sync_plan": {
    "doc": {
      "description": "Manage sync plans",
      "has_action": false,
      "options": {
        "cron_expression": {
          "aliases": [],
          "description": "A cron expression as found in crontab files\nThis must be provided together with I(interval='custom cron').",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the sync plan",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "enabled": {
          "aliases": [],
          "description": "Whether the sync plan is active",
          "type": "bool",
          "required": true,
          "suboptions": {}
        },
        "interval": {
          "aliases": [],
          "description": "How often synchronization should run",
          "type": "str",
          "required": true,
          "choices": [
            "hourly",
            "daily",
            "weekly",
            "custom cron"
          ],
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the sync plan",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "organization": {
          "aliases": [],
          "description": "Organization that the entity is in",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "products": {
          "aliases": [],
          "description": "List of products to include in the sync plan",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity\nC(present_with_defaults) will ensure the entity exists, but won't update existing ones",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "present_with_defaults",
            "absent"
          ],
          "suboptions": {}
        },
        "sync_date": {
          "aliases": [],
          "description": "Start date and time of the first synchronization",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Sync Plans",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: \"Create or update weekly RHEL sync plan\"\n  theforeman.foreman.sync_plan:\n    username: \"admin\"\n    password: \"changeme\"\n    server_url: \"https://foreman.example.com\"\n    name: \"Weekly RHEL Sync\"\n    organization: \"Default Organization\"\n    interval: \"weekly\"\n    enabled: false\n    sync_date: \"2017-01-01 00:00:00 UTC\"\n    products:\n      - 'Red Hat Enterprise Linux Server'\n    state: present\n"
  },
  "theforeman.foreman.templates_import": {
    "doc": {
      "description": "Sync provisioning templates, report_templates, partition tables and job templates from external git repository or file system.\nBased on foreman_templates plugin U(https://github.com/theforeman/foreman_templates).",
      "has_action": false,
      "notes": "Due to a bug in the foreman_templates plugin, this module won't report C(changed=true) when the only change is the Organization/Location association of the imported templates. Please see U(https://projects.theforeman.org/issues/29534) for details.\nDefault values for all module options can be set using M(theforeman.foreman.setting) for TemplateSync category or on the settings page in WebUI.",
      "options": {
        "associate": {
          "aliases": [],
          "description": "Associate to Operatingsystems, Locations and Organizations based on metadata.",
          "type": "str",
          "required": false,
          "choices": [
            "always",
            "new",
            "never"
          ],
          "suboptions": {}
        },
        "branch": {
          "aliases": [],
          "description": "Branch of the I(repo). Only for git-based repositories.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "dirname": {
          "aliases": [],
          "description": "The directory within Git repo containing the templates.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "filter": {
          "aliases": [],
          "description": "Sync only templates with name matching this regular expression, after I(prefix) was applied.\nCase-insensitive, snippets are not filtered.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "force": {
          "aliases": [],
          "description": "Update templates that are locked.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "locations": {
          "aliases": [],
          "description": "List of locations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "lock": {
          "aliases": [],
          "description": "Lock imported templates.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "negate": {
          "aliases": [],
          "description": "Negate the filter condition.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "organizations": {
          "aliases": [],
          "description": "List of organizations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "prefix": {
          "aliases": [],
          "description": "Adds specified string to beginning of all imported templates that do not yet have that prefix.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "repo": {
          "aliases": [],
          "description": "Filesystem path or repo (with protocol), for example /tmp/dir or git://example.com/repo.git or https://example.com/repo.git.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "verbose": {
          "aliases": [],
          "description": "Add template reports to the output.",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Sync Templates from a repository",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Sync templates from git repo\n  theforeman.foreman.templates_import:\n    repo: https://github.com/theforeman/community-templates.git\n    branch: 1.24-stable\n    associate: new\n    server_url: \"https://foreman.example.com\"\n    username: \"admin\"\n    password: \"changeme\"\n"
  },
  "theforeman.foreman.user": {
    "doc": {
      "description": "Create, update, and delete users",
      "has_action": false,
      "options": {
        "admin": {
          "aliases": [],
          "description": "Whether or not the user is an administrator",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "auth_source": {
          "aliases": [],
          "description": "Authentication source where the user exists",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "default_location": {
          "aliases": [],
          "description": "The location that the user uses by default",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "default_organization": {
          "aliases": [],
          "description": "The organizxation that the user uses by default",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "description": {
          "aliases": [],
          "description": "Description of the user",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "firstname": {
          "aliases": [],
          "description": "First name of the user",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "lastname": {
          "aliases": [],
          "description": "Last name of the user",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "locale": {
          "aliases": [],
          "description": "The language locale for the user",
          "type": "str",
          "required": false,
          "choices": [
            "ca",
            "de",
            "en",
            "en_GB",
            "es",
            "fr",
            "gl",
            "it",
            "ja",
            "ko",
            "nl_NL",
            "pl",
            "pt_BR",
            "ru",
            "sv_SE",
            "zh_CN",
            "zh_TW"
          ],
          "suboptions": {}
        },
        "locations": {
          "aliases": [],
          "description": "List of locations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "login": {
          "aliases": [
            "name"
          ],
          "description": "Name of the user",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "mail": {
          "aliases": [],
          "description": "Email address of the user\nRequired when creating a new user",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "organizations": {
          "aliases": [],
          "description": "List of organizations the entity should be assigned to",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "roles": {
          "aliases": [],
          "description": "List of roles assigned to the user",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "timezone": {
          "aliases": [],
          "description": "Timezone for the user\nIf blank it will use the browser timezone.",
          "type": "str",
          "required": false,
          "choices": [
            "International Date Line West",
            "American Samoa",
            "Midway Island",
            "Hawaii",
            "Alaska",
            "Pacific Time (US & Canada)",
            "Tijuana",
            "Arizona",
            "Chihuahua",
            "Mazatlan",
            "Mountain Time (US & Canada)",
            "Central America",
            "Central Time (US & Canada)",
            "Guadalajara",
            "Mexico City",
            "Monterrey",
            "Saskatchewan",
            "Bogota",
            "Eastern Time (US & Canada)",
            "Indiana (East)",
            "Lima",
            "Quito",
            "Atlantic Time (Canada)",
            "Caracas",
            "Georgetown",
            "La Paz",
            "Puerto Rico",
            "Santiago",
            "Newfoundland",
            "Brasilia",
            "Buenos Aires",
            "Greenland",
            "Montevideo",
            "Mid-Atlantic",
            "Azores",
            "Cape Verde Is.",
            "Dublin",
            "Edinburgh",
            "Lisbon",
            "London",
            "Monrovia",
            "UTC",
            "Amsterdam",
            "Belgrade",
            "Berlin",
            "Bern",
            "Bratislava",
            "Brussels",
            "Budapest",
            "Casablanca",
            "Copenhagen",
            "Ljubljana",
            "Madrid",
            "Paris",
            "Prague",
            "Rome",
            "Sarajevo",
            "Skopje",
            "Stockholm",
            "Vienna",
            "Warsaw",
            "West Central Africa",
            "Zagreb",
            "Zurich",
            "Athens",
            "Bucharest",
            "Cairo",
            "Harare",
            "Helsinki",
            "Jerusalem",
            "Kaliningrad",
            "Kyiv",
            "Pretoria",
            "Riga",
            "Sofia",
            "Tallinn",
            "Vilnius",
            "Baghdad",
            "Istanbul",
            "Kuwait",
            "Minsk",
            "Moscow",
            "Nairobi",
            "Riyadh",
            "St. Petersburg",
            "Tehran",
            "Abu Dhabi",
            "Baku",
            "Muscat",
            "Samara",
            "Tbilisi",
            "Volgograd",
            "Yerevan",
            "Kabul",
            "Ekaterinburg",
            "Islamabad",
            "Karachi",
            "Tashkent",
            "Chennai",
            "Kolkata",
            "Mumbai",
            "New Delhi",
            "Sri Jayawardenepura",
            "Kathmandu",
            "Almaty",
            "Astana",
            "Dhaka",
            "Urumqi",
            "Rangoon",
            "Bangkok",
            "Hanoi",
            "Jakarta",
            "Krasnoyarsk",
            "Novosibirsk",
            "Beijing",
            "Chongqing",
            "Hong Kong",
            "Irkutsk",
            "Kuala Lumpur",
            "Perth",
            "Singapore",
            "Taipei",
            "Ulaanbaatar",
            "Osaka",
            "Sapporo",
            "Seoul",
            "Tokyo",
            "Yakutsk",
            "Adelaide",
            "Darwin",
            "Brisbane",
            "Canberra",
            "Guam",
            "Hobart",
            "Melbourne",
            "Port Moresby",
            "Sydney",
            "Vladivostok",
            "Magadan",
            "New Caledonia",
            "Solomon Is.",
            "Srednekolymsk",
            "Auckland",
            "Fiji",
            "Kamchatka",
            "Marshall Is.",
            "Wellington",
            "Chatham Is.",
            "Nuku'alofa",
            "Samoa",
            "Tokelau Is."
          ],
          "suboptions": {}
        },
        "user_password": {
          "aliases": [],
          "description": "Password for the user",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage Users",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a user\n  theforeman.foreman.user:\n    name: test\n    firstname: Test\n    lastname: Userson\n    mail: test.userson@example.com\n    description: Dr. Test Userson\n    admin: no\n    user_password: s3cret\n    default_location: Test Location\n    default_organization: Test Organization\n    auth_source: Internal\n    timezone: Stockholm\n    locale: sv_SE\n    roles:\n      - Manager\n    locations:\n      - Test Location\n    organizations:\n      - Test Organization\n    state: present\n\n- name: Update a user\n  theforeman.foreman.user:\n    name: test\n    firstname: Tester\n    state: present\n\n- name: Change password\n  theforeman.foreman.user:\n    name: test\n    user_password: newp@ss\n\n"
  },
  "theforeman.foreman.usergroup": {
    "doc": {
      "description": "Create, update, and delete user groups",
      "has_action": false,
      "options": {
        "admin": {
          "aliases": [],
          "description": "Whether or not the users in this group are administrators",
          "default": "False",
          "type": "bool",
          "required": false,
          "suboptions": {}
        },
        "name": {
          "aliases": [],
          "description": "Name of the group",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "password": {
          "aliases": [],
          "description": "Password of the user accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_PASSWORD) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "roles": {
          "aliases": [],
          "description": "List of roles assigned to the group",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "server_url": {
          "aliases": [],
          "description": "URL of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_SERVER_URL) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "state": {
          "aliases": [],
          "description": "State of the entity",
          "default": "present",
          "type": "str",
          "required": false,
          "choices": [
            "present",
            "absent"
          ],
          "suboptions": {}
        },
        "updated_name": {
          "aliases": [],
          "description": "New user group name. When this parameter is set, the module will not be idempotent.",
          "type": "str",
          "required": false,
          "suboptions": {}
        },
        "usergroups": {
          "aliases": [],
          "description": "List of other groups assigned to the group",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "username": {
          "aliases": [],
          "description": "Username accessing the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_USERNAME) will be used instead.",
          "type": "str",
          "required": true,
          "suboptions": {}
        },
        "users": {
          "aliases": [],
          "description": "List of users assigned to the group",
          "type": "list",
          "required": false,
          "elements": "str",
          "suboptions": {}
        },
        "validate_certs": {
          "aliases": [],
          "description": "Whether or not to verify the TLS certificates of the Foreman server.\nIf the value is not specified in the task, the value of environment variable C(FOREMAN_VALIDATE_CERTS) will be used instead.",
          "default": "True",
          "type": "bool",
          "required": false,
          "suboptions": {}
        }
      },
      "requirements": [
        "requests"
      ],
      "short_description": "Manage User Groups",
      "version_added": "1.0.0"
    },
    "examples": "\n- name: Create a user group\n  theforeman.foreman.usergroup:\n    name: test\n    admin: no\n    roles:\n      - Manager\n    users:\n      - myuser1\n      - myuser2\n    usergroups:\n      - mynestedgroup\n    state: present\n"
  }
}